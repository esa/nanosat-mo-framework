package esa.nmf.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject3.getObjectId();
        eventCOMObject0.setSource(objectId12);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject14 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject14.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier17 = null;
        eventCOMObject14.setNetworkZone(identifier17);
        org.ccsds.moims.mo.mal.structures.URI uRI19 = eventCOMObject14.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList20 = eventCOMObject14.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject21 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId22 = eventCOMObject21.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier23 = eventCOMObject21.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject24 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject24.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType29 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription30 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType29);
        eventCOMObject24.setObjType(objectType29);
        java.lang.Long long32 = eventCOMObject24.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId33 = eventCOMObject24.getObjectId();
        eventCOMObject21.setSource(objectId33);
        eventCOMObject14.setSource(objectId33);
        eventCOMObject0.setSource(objectId33);
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId12);
        org.junit.Assert.assertNull(uRI19);
        org.junit.Assert.assertNull(identifierList20);
        org.junit.Assert.assertNull(objectId22);
        org.junit.Assert.assertNull(identifier23);
        org.junit.Assert.assertNotNull(objectType29);
        org.junit.Assert.assertNotNull(subscription30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 4294967295L + "'", long32.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId33);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.math.BigInteger bigInteger2 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong3 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uLong3.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity7 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long8 = objectTypeHolderEntity7.getObjectType();
        boolean boolean9 = uLong3.equals((java.lang.Object) long8);
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter10 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = archiveSyncGenAdapter10.getLastKnownIndex();
        boolean boolean12 = uLong3.equals((java.lang.Object) archiveSyncGenAdapter10);
        try {
            binaryEncoder1.encodeNullableULong(uLong3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487879L + "'", long8.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        java.util.ListIterator<java.lang.Short> shortItor6 = shortList4.listIterator();
        int int7 = shortList4.size();
        java.lang.Class<?> wildcardClass8 = shortList4.getClass();
        shortList4.trimToSize();
        java.lang.Float[] floatArray13 = new java.lang.Float[] { 10.0f, 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList14 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList14, floatArray13);
        java.util.ListIterator<java.lang.Float> floatItor16 = floatList14.listIterator();
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder22 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = binaryDecoder22.decodeNullableUOctet();
        java.lang.Long long24 = uOctet23.getShortForm();
        int int25 = floatList14.indexOf((java.lang.Object) long24);
        floatList14.trimToSize();
        int int27 = shortList4.indexOf((java.lang.Object) floatList14);
        boolean boolean28 = shortList4.isEmpty();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(shortItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(floatItor16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 281474993487880L + "'", long24.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        java.lang.Integer int6 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList8 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor10 = uShortList8.listIterator((int) (byte) 0);
        java.lang.Integer int11 = uShortList8.getTypeShortForm();
        int int12 = floatList0.lastIndexOf((java.lang.Object) uShortList8);
        java.lang.String str13 = floatList0.toString();
        boolean boolean14 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator15 = floatList0.spliterator();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet22 = binaryDecoder21.decodeNullableUOctet();
        int int23 = floatList0.indexOf((java.lang.Object) binaryDecoder21);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI24 = binaryDecoder21.decodeURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-4) + "'", int6.equals((-4)));
        org.junit.Assert.assertNotNull(uShortItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-10) + "'", int11.equals((-10)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[]" + "'", str13.equals("[]"));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(floatSpliterator15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(uOctet22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) (short) -64);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = duration1.getAreaVersion();
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity5 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity(11, "[false]");
        boolean boolean6 = uOctet2.equals((java.lang.Object) 11);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        try {
            java.lang.Short short14 = binaryDecoder13.decodeShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        doubleList0.clear();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList0.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream3 = doubleList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList0.getServiceNumber();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime10 = binaryDecoder9.decodeFineTime();
        java.lang.Long long11 = binaryDecoder9.decodeLong();
        boolean boolean12 = doubleList0.equals((java.lang.Object) long11);
        try {
            java.lang.Double double14 = doubleList0.remove(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(doubleStream3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(fineTime10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-64L) + "'", long11.equals((-64L)));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        java.math.BigInteger bigInteger56 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong57 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger56);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = uLong57.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity61 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long62 = objectTypeHolderEntity61.getObjectType();
        boolean boolean63 = uLong57.equals((java.lang.Object) long62);
        boolean boolean64 = booleanList10.remove((java.lang.Object) uLong57);
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = uLong57.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList66 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int67 = uRIList66.getTypeShortForm();
        java.lang.Integer int68 = uRIList66.getTypeShortForm();
        java.lang.Object obj69 = uRIList66.clone();
        byte[] byteArray73 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder74 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray73);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder75 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray73);
        int int76 = uRIList66.lastIndexOf((java.lang.Object) binaryDecoder75);
        java.lang.Boolean boolean77 = binaryDecoder75.decodeBoolean();
        byte[] byteArray78 = binaryDecoder75.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Element element79 = uShort65.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder75);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI80 = binaryDecoder75.decodeURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 281474993487879L + "'", long62.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-18) + "'", int68.equals((-18)));
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77.equals(true));
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertNotNull(element79);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        short short8 = uOctet6.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = uOctet6.getServiceNumber();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = binaryDecoder15.decodeNullableUOctet();
        int int18 = binaryDecoder15.internalDecodeAttributeType((byte) 0);
        try {
            org.ccsds.moims.mo.mal.structures.Element element19 = uShort9.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short8 + "' != '" + (short) 127 + "'", short8 == (short) 127);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.stream();
        org.ccsds.moims.mo.mal.structures.OctetList octetList42 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean43 = strList35.retainAll((java.util.Collection<java.lang.Byte>) octetList42);
        java.lang.Double[] doubleArray45 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList46 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList46, doubleArray45);
        java.lang.Short[] shortArray50 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList51 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList51, shortArray50);
        java.util.ListIterator<java.lang.Short> shortItor53 = shortList51.listIterator();
        int int54 = doubleList46.indexOf((java.lang.Object) shortList51);
        doubleList46.trimToSize();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime56 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = fineTime56.getServiceNumber();
        java.lang.Long long58 = uShort57.getShortForm();
        int int59 = doubleList46.lastIndexOf((java.lang.Object) uShort57);
        boolean boolean60 = strList35.contains((java.lang.Object) int59);
        try {
            java.lang.String str63 = strList35.set((-5), "[0.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(shortItor53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(uShort57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 281474993487882L + "'", long58.equals(281474993487882L));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList7 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI11 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject9.setSourceURI(uRI11);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = uRI11.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = uRI11.getServiceNumber();
        uShortList7.add(0, uShort14);
        try {
            binaryEncoder1.encodeNullableUShort(uShort14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertNotNull(uShort14);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        int int10 = blob9.getLength();
        java.lang.String str11 = blob9.getURL();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = blob9.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList13 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int14 = uRIList13.size();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor15 = uRIList13.iterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = uRIList13.getAreaVersion();
        java.lang.Long long17 = uRIList13.getShortForm();
        boolean boolean18 = blob9.equals((java.lang.Object) long17);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(uRIItor15);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 281475010265070L + "'", long17.equals(281475010265070L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity(15, "[-1.0]");
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.Long long1 = fineTime0.getShortForm();
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) 100);
        byte byte7 = binaryEncoder3.internalEncodeAttributeType((byte) -1);
        try {
            fineTime0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281474993487889L + "'", long1.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 100 + "'", byte5 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7 == (byte) -1);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        java.math.BigInteger bigInteger56 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong57 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger56);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = uLong57.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity61 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long62 = objectTypeHolderEntity61.getObjectType();
        boolean boolean63 = uLong57.equals((java.lang.Object) long62);
        boolean boolean64 = booleanList10.remove((java.lang.Object) uLong57);
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = uLong57.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet66 = uLong57.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element67 = uOctet66.createElement();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 281474993487879L + "'", long62.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertNotNull(uOctet66);
        org.junit.Assert.assertNotNull(element67);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet0 = org.ccsds.moims.mo.mal.structures.IntegerList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = uOctet0.getServiceNumber();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime7 = binaryDecoder6.decodeFineTime();
        java.lang.Long long8 = binaryDecoder6.decodeLong();
        try {
            org.ccsds.moims.mo.mal.structures.Element element9 = uOctet0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet0);
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(fineTime7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-64L) + "'", long8.equals((-64L)));
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        java.math.BigInteger bigInteger18 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong19 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger18);
        java.lang.Integer int20 = uLong19.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element21 = uLong19.createElement();
        org.ccsds.moims.mo.mal.structures.Element element22 = uLong19.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = uLong19.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = uLong19.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element25 = binaryDecoder17.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort24);
        try {
            org.ccsds.moims.mo.mal.structures.Element element26 = doubleList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(bigInteger18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 14 + "'", int20.equals(14));
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(element25);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRI2.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRI2.getServiceNumber();
        java.lang.Long long6 = uShort5.getShortForm();
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487882L + "'", long6.equals(281474993487882L));
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeNullableURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element1 = floatList0.createElement();
        java.lang.Integer int2 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.OctetList octetList3 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = octetList3.getServiceNumber();
        java.lang.Integer int5 = octetList3.getTypeShortForm();
        boolean boolean6 = floatList0.equals((java.lang.Object) int5);
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime12 = binaryDecoder11.decodeFineTime();
        java.lang.Long long13 = binaryDecoder11.decodeLong();
        int int14 = floatList0.lastIndexOf((java.lang.Object) binaryDecoder11);
        try {
            java.lang.Double double15 = binaryDecoder11.decodeDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-4) + "'", int2.equals((-4)));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-7) + "'", int5.equals((-7)));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(fineTime12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-64L) + "'", long13.equals((-64L)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        byte byte6 = binaryEncoder4.internalEncodeAttributeType((byte) 100);
        byte byte8 = binaryEncoder4.internalEncodeAttributeType((byte) 10);
        try {
            duration1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 10 + "'", byte8 == (byte) 10);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.lang.Long[] longArray9 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList10 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList10, longArray9);
        java.lang.Object obj12 = longList10.clone();
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15, booleanArray14);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList31 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList31, byteArray30);
        boolean boolean34 = byteList31.add((java.lang.Byte) (byte) 100);
        boolean boolean35 = byteList22.addAll((java.util.Collection<java.lang.Byte>) byteList31);
        java.lang.Object obj36 = byteList22.clone();
        boolean boolean37 = booleanList15.contains((java.lang.Object) byteList22);
        boolean boolean38 = longList10.remove((java.lang.Object) boolean37);
        java.lang.Byte[] byteArray43 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList44 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList44, byteArray43);
        boolean boolean47 = byteList44.add((java.lang.Byte) (byte) 100);
        int int48 = longList10.lastIndexOf((java.lang.Object) byteList44);
        org.ccsds.moims.mo.mal.structures.OctetList octetList49 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = octetList49.getServiceNumber();
        boolean boolean51 = longList10.removeAll((java.util.Collection<java.lang.Byte>) octetList49);
        int int52 = longList10.size();
        org.ccsds.moims.mo.mal.structures.Identifier identifier53 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.Integer int54 = identifier53.getTypeShortForm();
        int int55 = longList10.lastIndexOf((java.lang.Object) identifier53);
        java.lang.String str56 = identifier53.getValue();
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 7 + "'", int52 == 7);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 6 + "'", int54.equals(6));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject3.getObjectId();
        eventCOMObject0.setSource(objectId12);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject14 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject14.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType19 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription20 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType19);
        eventCOMObject14.setObjType(objectType19);
        java.lang.Long long22 = eventCOMObject14.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId23 = eventCOMObject14.getObjectId();
        eventCOMObject0.setSource(objectId23);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList25 = eventCOMObject0.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject26 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI28 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject26.setSourceURI(uRI28);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet30 = uRI28.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = uRI28.getAreaNumber();
        eventCOMObject0.setSourceURI(uRI28);
        org.ccsds.moims.mo.mal.structures.Identifier identifier33 = eventCOMObject0.getNetworkZone();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId12);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 4294967295L + "'", long22.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId23);
        org.junit.Assert.assertNull(identifierList25);
        org.junit.Assert.assertNotNull(uOctet30);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNull(identifier33);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.URI uRI7 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = uRI7.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = uRI7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = uRI7.getAreaVersion();
        java.lang.Long long11 = uRI7.getShortForm();
        try {
            binaryEncoder1.encodeURI(uRI7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 281474993487890L + "'", long11.equals(281474993487890L));
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.util.ListIterator<java.lang.Double> doubleItor21 = doubleList2.listIterator(1);
        boolean boolean22 = doubleList2.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(doubleItor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, (int) (short) 100);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, 13);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong18 = binaryDecoder17.decodeNullableULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 13");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = doubleList0.getAreaVersion();
        java.lang.Integer int2 = uOctet1.getTypeShortForm();
        short short3 = uOctet1.getValue();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder5.internalEncodeAttributeType((byte) -1);
        byte byte11 = binaryEncoder5.internalEncodeAttributeType((byte) 1);
        try {
            uOctet1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2.equals(8));
        org.junit.Assert.assertTrue("'" + short3 + "' != '" + (short) 1 + "'", short3 == (short) 1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -1 + "'", byte9 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 1 + "'", byte11 == (byte) 1);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = integerList1.getAreaVersion();
        java.lang.Float[] floatArray17 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList18 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList18, floatArray17);
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList22 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList22, booleanArray21);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        boolean boolean42 = byteList29.addAll((java.util.Collection<java.lang.Byte>) byteList38);
        java.lang.Object obj43 = byteList29.clone();
        boolean boolean44 = booleanList22.contains((java.lang.Object) byteList29);
        int int45 = floatList18.lastIndexOf((java.lang.Object) booleanList22);
        java.lang.Float float47 = floatList18.remove(2);
        byte[] byteArray51 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder52 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray51);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder53 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray51);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet54 = binaryDecoder53.decodeNullableUOctet();
        int int55 = floatList18.lastIndexOf((java.lang.Object) binaryDecoder53);
        try {
            org.ccsds.moims.mo.mal.structures.Element element56 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + (-1.0f) + "'", float47.equals((-1.0f)));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertNotNull(uOctet54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
        uShortList2.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element6 = uOctet5.createElement();
        int int7 = uShortList2.indexOf((java.lang.Object) element6);
        boolean boolean8 = booleanList0.contains((java.lang.Object) uShortList2);
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        org.ccsds.moims.mo.mal.structures.OctetList octetList17 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = octetList17.getServiceNumber();
        boolean boolean19 = doubleList15.containsAll((java.util.Collection<java.lang.Byte>) octetList17);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray20 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList21 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList21, uShortArray20);
        uShortList21.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet24 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element25 = uOctet24.createElement();
        int int26 = uShortList21.indexOf((java.lang.Object) element25);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.lang.Long[] longArray39 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList40 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList40, longArray39);
        java.lang.Object obj42 = longList40.clone();
        int int43 = strList30.indexOf((java.lang.Object) longList40);
        java.util.ListIterator<java.lang.String> strItor44 = strList30.listIterator();
        java.lang.Short[] shortArray48 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList49 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList49, shortArray48);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray56 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList57 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList57, uRIArray56);
        java.lang.Byte[] byteArray63 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList64 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList64, byteArray63);
        boolean boolean67 = byteList64.add((java.lang.Byte) (byte) 100);
        boolean boolean68 = uRIList57.containsAll((java.util.Collection<java.lang.Byte>) byteList64);
        boolean boolean69 = strList54.containsAll((java.util.Collection<java.lang.Byte>) byteList64);
        boolean boolean70 = shortList49.contains((java.lang.Object) byteList64);
        boolean boolean71 = strList30.removeAll((java.util.Collection<java.lang.Byte>) byteList64);
        boolean boolean72 = uShortList21.containsAll((java.util.Collection<java.lang.Byte>) byteList64);
        int int73 = byteList64.size();
        boolean boolean74 = octetList17.containsAll((java.util.Collection<java.lang.Byte>) byteList64);
        org.ccsds.moims.mo.mal.structures.Element element75 = octetList17.createElement();
        boolean boolean76 = uShortList2.containsAll((java.util.Collection<java.lang.Byte>) octetList17);
        esa.mo.com.impl.util.HelperCOM helperCOM77 = new esa.mo.com.impl.util.HelperCOM();
        esa.mo.com.impl.util.HelperCOM helperCOM78 = new esa.mo.com.impl.util.HelperCOM();
        esa.mo.com.impl.util.HelperCOM helperCOM79 = new esa.mo.com.impl.util.HelperCOM();
        esa.mo.com.impl.util.HelperCOM helperCOM80 = new esa.mo.com.impl.util.HelperCOM();
        esa.mo.com.impl.util.HelperCOM helperCOM81 = new esa.mo.com.impl.util.HelperCOM();
        esa.mo.com.impl.util.HelperCOM[] helperCOMArray82 = new esa.mo.com.impl.util.HelperCOM[] { helperCOM77, helperCOM78, helperCOM79, helperCOM80, helperCOM81 };
        esa.mo.com.impl.util.HelperCOM[] helperCOMArray83 = octetList17.toArray(helperCOMArray82);
        org.junit.Assert.assertNotNull(uShortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(uShortArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uOctet24);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertNotNull(uRIArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 5 + "'", int73 == 5);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(element75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNotNull(helperCOMArray82);
        org.junit.Assert.assertNotNull(helperCOMArray83);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl2 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl3 = cOMServicesConsumer0.getArchiveSyncService();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl2);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl3);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeURI();
        org.ccsds.moims.mo.mal.structures.Element element7 = uRI6.createElement();
        java.lang.String str8 = uRI6.toString();
        org.ccsds.moims.mo.mal.structures.Element element9 = uRI6.createElement();
        java.lang.Integer int10 = uRI6.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        try {
            org.ccsds.moims.mo.mal.structures.Element element19 = uRI6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(uRI6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 18 + "'", int10.equals(18));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute13 = binaryDecoder9.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Unknown attribute type received: -1");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uInteger6.getAreaVersion();
        java.lang.Integer int8 = uInteger6.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element9 = uInteger6.createElement();
        java.io.OutputStream outputStream10 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder11 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream10);
        byte byte13 = binaryEncoder11.internalEncodeAttributeType((byte) 100);
        byte byte15 = binaryEncoder11.internalEncodeAttributeType((byte) -1);
        try {
            uInteger6.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 12 + "'", int8.equals(12));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 100 + "'", byte13 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -1 + "'", byte15 == (byte) -1);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.URI uRI7 = new org.ccsds.moims.mo.mal.structures.URI("0.0");
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = identifier8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = identifier8.getAreaVersion();
        boolean boolean11 = uRI7.equals((java.lang.Object) identifier8);
        try {
            binaryEncoder1.encodeIdentifier(identifier8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.ShortList shortList3 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList3.getAreaNumber();
        java.lang.Object[] objArray5 = shortList3.toArray();
        java.lang.Long long6 = shortList3.getShortForm();
        java.lang.Long long7 = shortList3.getShortForm();
        java.lang.Object[] objArray8 = shortList3.toArray();
        org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
        boolean boolean18 = byteList15.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        boolean boolean28 = byteList15.addAll((java.util.Collection<java.lang.Byte>) byteList24);
        java.lang.Object obj29 = byteList15.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream30 = byteList15.stream();
        boolean boolean31 = floatList9.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        byteList15.ensureCapacity((-4));
        byteList15.clear();
        boolean boolean35 = shortList3.retainAll((java.util.Collection<java.lang.Byte>) byteList15);
        boolean boolean36 = integerList1.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        java.lang.Integer int37 = integerList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList39 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob40 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean41 = blob40.isURLBased();
        byte[] byteArray45 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder46 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray45);
        org.ccsds.moims.mo.mal.structures.Element element47 = blob40.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder46);
        boolean boolean48 = integerList39.equals((java.lang.Object) binaryDecoder46);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet49 = integerList39.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList50 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int51 = uRIList50.getTypeShortForm();
        java.lang.Integer int52 = uRIList50.getTypeShortForm();
        java.lang.Object obj53 = uRIList50.clone();
        byte[] byteArray57 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder58 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray57);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder59 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray57);
        int int60 = uRIList50.lastIndexOf((java.lang.Object) binaryDecoder59);
        org.ccsds.moims.mo.mal.structures.Duration duration61 = binaryDecoder59.decodeDuration();
        int int62 = integerList39.lastIndexOf((java.lang.Object) binaryDecoder59);
        java.lang.Boolean boolean63 = binaryDecoder59.decodeNullableBoolean();
        java.lang.Double double64 = binaryDecoder59.decodeDouble();
        try {
            org.ccsds.moims.mo.mal.structures.Element element65 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265079L + "'", long6.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265079L + "'", long7.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-11) + "'", int37.equals((-11)));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(uOctet49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-18) + "'", int51.equals((-18)));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-18) + "'", int52.equals((-18)));
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63.equals(false));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64.equals(0.0d));
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.Duration duration7 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = duration7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = duration7.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList10 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray11 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList12, uRIArray11);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19, byteArray18);
        boolean boolean22 = byteList19.add((java.lang.Byte) (byte) 100);
        boolean boolean23 = uRIList12.containsAll((java.util.Collection<java.lang.Byte>) byteList19);
        byteList19.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean27 = longList10.removeAll((java.util.Collection<java.lang.Byte>) byteList19);
        boolean boolean28 = duration7.equals((java.lang.Object) longList10);
        org.ccsds.moims.mo.mal.structures.StringList stringList30 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = stringList30.getAreaNumber();
        java.lang.Integer int32 = stringList30.getTypeShortForm();
        boolean boolean33 = duration7.equals((java.lang.Object) stringList30);
        byte[] byteArray37 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder38 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray37);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder39 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray37);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet40 = binaryDecoder39.decodeNullableUOctet();
        java.lang.Long long41 = uOctet40.getShortForm();
        java.lang.Long long42 = uOctet40.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList43 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int44 = uRIList43.getTypeShortForm();
        java.lang.Integer int45 = uRIList43.getTypeShortForm();
        java.lang.Object obj46 = uRIList43.clone();
        byte[] byteArray50 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder51 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray50);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder52 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray50);
        int int53 = uRIList43.lastIndexOf((java.lang.Object) binaryDecoder52);
        org.ccsds.moims.mo.mal.structures.Duration duration54 = binaryDecoder52.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element55 = uOctet40.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder52);
        byte[] byteArray56 = binaryDecoder52.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder57 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray56);
        boolean boolean58 = duration7.equals((java.lang.Object) binaryDecoder57);
        try {
            binaryEncoder1.encodeNullableDuration(duration7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertNotNull(uRIArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-15) + "'", int32.equals((-15)));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertNotNull(uOctet40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 281474993487880L + "'", long41.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 281474993487880L + "'", long42.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-18) + "'", int44.equals((-18)));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-18) + "'", int45.equals((-18)));
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        boolean boolean3 = longList1.equals((java.lang.Object) 6);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime9 = binaryDecoder8.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList10 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int11 = uRIList10.size();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray22 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList23, uRIArray22);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        boolean boolean34 = uRIList23.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean35 = intList20.removeAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean36 = uRIList10.removeAll((java.util.Collection<java.lang.Byte>) byteList30);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder37 = binaryDecoder8.createListDecoder((java.util.List) byteList30);
        boolean boolean38 = longList1.retainAll((java.util.Collection<java.lang.Byte>) byteList30);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray39 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList40 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList40, uRIArray39);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        boolean boolean51 = uRIList40.containsAll((java.util.Collection<java.lang.Byte>) byteList47);
        int int53 = uRIList40.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray67 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList68 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList68, byteArray67);
        boolean boolean71 = byteList68.add((java.lang.Byte) (byte) 100);
        boolean boolean72 = byteList59.addAll((java.util.Collection<java.lang.Byte>) byteList68);
        int int74 = byteList68.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean75 = uRIList40.removeAll((java.util.Collection<java.lang.Byte>) byteList68);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.lang.Long[] longArray88 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList89 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList89, longArray88);
        java.lang.Object obj91 = longList89.clone();
        int int92 = strList79.indexOf((java.lang.Object) longList89);
        java.util.stream.Stream<java.lang.Long> longStream93 = longList89.parallelStream();
        boolean boolean94 = byteList68.remove((java.lang.Object) longList89);
        java.lang.Object[] objArray95 = longList89.toArray();
        boolean boolean96 = byteList30.contains((java.lang.Object) longList89);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(fineTime9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(uRIArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(mALListDecoder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(uRIArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80);
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(longStream93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", !boolean96);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableLong((java.lang.Long) 281474993487872L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = stringList1.getServiceNumber();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId4 = eventCOMObject3.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = eventCOMObject3.getNetworkZone();
        boolean boolean6 = stringList1.remove((java.lang.Object) eventCOMObject3);
        org.ccsds.moims.mo.mal.structures.Identifier identifier7 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = identifier7.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = identifier7.getAreaVersion();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13);
        org.ccsds.moims.mo.mal.structures.Blob blob19 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13, 14, 18);
        blob19.detach();
        boolean boolean21 = identifier7.equals((java.lang.Object) blob19);
        eventCOMObject3.setNetworkZone(identifier7);
        java.lang.Long long23 = eventCOMObject3.getObjId();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNull(objectId4);
        org.junit.Assert.assertNull(identifier5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNull(long23);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        int int46 = longList8.lastIndexOf((java.lang.Object) byteList42);
        org.ccsds.moims.mo.mal.structures.OctetList octetList47 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = octetList47.getServiceNumber();
        boolean boolean49 = longList8.removeAll((java.util.Collection<java.lang.Byte>) octetList47);
        byte[] byteArray53 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder54 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray53);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder55 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray53);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet56 = binaryDecoder55.decodeNullableUOctet();
        java.lang.Long long57 = uOctet56.getShortForm();
        java.lang.Long long58 = uOctet56.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList59 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int60 = uRIList59.getTypeShortForm();
        java.lang.Integer int61 = uRIList59.getTypeShortForm();
        java.lang.Object obj62 = uRIList59.clone();
        byte[] byteArray66 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray66);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder68 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray66);
        int int69 = uRIList59.lastIndexOf((java.lang.Object) binaryDecoder68);
        org.ccsds.moims.mo.mal.structures.Duration duration70 = binaryDecoder68.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element71 = uOctet56.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder68);
        byte[] byteArray72 = binaryDecoder68.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder73 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray72);
        try {
            org.ccsds.moims.mo.mal.structures.Element element74 = octetList47.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertNotNull(uOctet56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 281474993487880L + "'", long57.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 281474993487880L + "'", long58.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-18) + "'", int61.equals((-18)));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertNotNull(byteArray72);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
        uShortList2.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element6 = uOctet5.createElement();
        int int7 = uShortList2.indexOf((java.lang.Object) element6);
        boolean boolean8 = booleanList0.contains((java.lang.Object) uShortList2);
        uShortList2.ensureCapacity((int) (short) 0);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream11 = uShortList2.stream();
        org.ccsds.moims.mo.mal.structures.URI uRI13 = new org.ccsds.moims.mo.mal.structures.URI("0.0");
        org.ccsds.moims.mo.mal.structures.Identifier identifier14 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = identifier14.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = identifier14.getAreaVersion();
        boolean boolean17 = uRI13.equals((java.lang.Object) identifier14);
        int int18 = uShortList2.lastIndexOf((java.lang.Object) identifier14);
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger25 = binaryDecoder24.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = uInteger25.getServiceNumber();
        try {
            uShortList2.add(100, uShort26);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(uShortStream11);
        org.junit.Assert.assertNotNull(uOctet15);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(uInteger25);
        org.junit.Assert.assertNotNull(uShort26);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str1 = identifier0.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = identifier0.getAreaNumber();
        java.lang.Long long3 = identifier0.getShortForm();
        java.lang.Long long4 = identifier0.getShortForm();
        org.ccsds.moims.mo.mal.structures.Blob blob5 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.Element element12 = blob5.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
        boolean boolean13 = identifier0.equals((java.lang.Object) blob5);
        java.lang.String str14 = identifier0.toString();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487878L + "'", long3.equals(281474993487878L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487878L + "'", long4.equals(281474993487878L));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        int int13 = binaryDecoder10.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Identifier identifier15 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.Long long16 = identifier15.getShortForm();
        java.lang.String str17 = identifier15.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = identifier15.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element19 = binaryDecoder10.decodeElement((org.ccsds.moims.mo.mal.structures.Element) identifier15);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob20 = binaryDecoder10.decodeNullableBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281474993487878L + "'", long16.equals(281474993487878L));
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "[hi!, ]" + "'", str17.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(element19);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        java.lang.Long long4 = floatList0.getShortForm();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        java.lang.Object obj20 = longList18.clone();
        int int21 = strList8.indexOf((java.lang.Object) longList18);
        java.util.ListIterator<java.lang.String> strItor22 = strList8.listIterator();
        java.lang.Short[] shortArray26 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList27 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList27, shortArray26);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray34 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList35, uRIArray34);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        boolean boolean46 = uRIList35.containsAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean47 = strList32.containsAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean48 = shortList27.contains((java.lang.Object) byteList42);
        boolean boolean49 = strList8.removeAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean50 = strList8.isEmpty();
        int int51 = floatList0.indexOf((java.lang.Object) strList8);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray52 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList53 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList53, uShortArray52);
        uShortList53.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet56 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element57 = uOctet56.createElement();
        int int58 = uShortList53.indexOf((java.lang.Object) element57);
        boolean boolean60 = uShortList53.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor61 = uShortList53.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort62 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean63 = uShortList53.add(uShort62);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray64 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList65 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList65, uRIArray64);
        java.lang.Byte[] byteArray71 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList72 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList72, byteArray71);
        boolean boolean75 = byteList72.add((java.lang.Byte) (byte) 100);
        boolean boolean76 = uRIList65.containsAll((java.util.Collection<java.lang.Byte>) byteList72);
        boolean boolean77 = uShortList53.retainAll((java.util.Collection<java.lang.Byte>) byteList72);
        org.ccsds.moims.mo.mal.structures.OctetList octetList78 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = octetList78.getAreaVersion();
        boolean boolean80 = byteList72.addAll((java.util.Collection<java.lang.Byte>) octetList78);
        boolean boolean81 = floatList0.removeAll((java.util.Collection<java.lang.Byte>) octetList78);
        org.ccsds.moims.mo.mal.structures.URIList uRIList82 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int83 = uRIList82.getTypeShortForm();
        java.lang.Integer int84 = uRIList82.getTypeShortForm();
        java.lang.Object obj85 = uRIList82.clone();
        byte[] byteArray89 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder90 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder91 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        int int92 = uRIList82.lastIndexOf((java.lang.Object) binaryDecoder91);
        org.ccsds.moims.mo.mal.structures.Duration duration93 = binaryDecoder91.decodeDuration();
        java.lang.Byte byte94 = binaryDecoder91.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element95 = octetList78.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder91);
        try {
            java.lang.Boolean boolean96 = binaryDecoder91.decodeBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265084L + "'", long4.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(uRIArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uShortArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(uOctet56);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(uShortItor61);
        org.junit.Assert.assertNotNull(uShort62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(uRIArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uOctet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-18) + "'", int83.equals((-18)));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-18) + "'", int84.equals((-18)));
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertTrue("'" + byte94 + "' != '" + (byte) -1 + "'", byte94.equals((byte) -1));
        org.junit.Assert.assertNotNull(element95);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        java.math.BigInteger bigInteger56 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong57 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger56);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = uLong57.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity61 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long62 = objectTypeHolderEntity61.getObjectType();
        boolean boolean63 = uLong57.equals((java.lang.Object) long62);
        boolean boolean64 = booleanList10.remove((java.lang.Object) uLong57);
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = uLong57.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList66 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int67 = uRIList66.getTypeShortForm();
        java.lang.Integer int68 = uRIList66.getTypeShortForm();
        java.lang.Object obj69 = uRIList66.clone();
        byte[] byteArray73 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder74 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray73);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder75 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray73);
        int int76 = uRIList66.lastIndexOf((java.lang.Object) binaryDecoder75);
        java.lang.Boolean boolean77 = binaryDecoder75.decodeBoolean();
        byte[] byteArray78 = binaryDecoder75.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Element element79 = uShort65.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder75);
        try {
            org.ccsds.moims.mo.mal.structures.Time time80 = binaryDecoder75.decodeNullableTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 281474993487879L + "'", long62.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-18) + "'", int68.equals((-18)));
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77.equals(true));
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertNotNull(element79);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        boolean boolean3 = booleanList0.add((java.lang.Boolean) true);
        boolean boolean5 = booleanList0.remove((java.lang.Object) 281474993487884L);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray6 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList7 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList7, uRIArray6);
        java.lang.Byte[] byteArray13 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList14 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList14, byteArray13);
        boolean boolean17 = byteList14.add((java.lang.Byte) (byte) 100);
        boolean boolean18 = uRIList7.containsAll((java.util.Collection<java.lang.Byte>) byteList14);
        int int20 = uRIList7.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        boolean boolean38 = byteList35.add((java.lang.Byte) (byte) 100);
        boolean boolean39 = byteList26.addAll((java.util.Collection<java.lang.Byte>) byteList35);
        int int41 = byteList35.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean42 = uRIList7.removeAll((java.util.Collection<java.lang.Byte>) byteList35);
        java.lang.Byte byte44 = byteList35.get(0);
        boolean boolean45 = booleanList0.removeAll((java.util.Collection<java.lang.Byte>) byteList35);
        boolean boolean47 = booleanList0.add((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = booleanList0.set(1, (java.lang.Boolean) false);
        java.io.OutputStream outputStream51 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder52 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream51);
        byte byte54 = binaryEncoder52.internalEncodeAttributeType((byte) 100);
        byte byte56 = binaryEncoder52.internalEncodeAttributeType((byte) -1);
        byte byte58 = binaryEncoder52.internalEncodeAttributeType((byte) 1);
        try {
            booleanList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(uRIArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + byte44 + "' != '" + (byte) -1 + "'", byte44.equals((byte) -1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50.equals(false));
        org.junit.Assert.assertTrue("'" + byte54 + "' != '" + (byte) 100 + "'", byte54 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte56 + "' != '" + (byte) -1 + "'", byte56 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte58 + "' != '" + (byte) 1 + "'", byte58 == (byte) 1);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = null;
        try {
            binaryEncoder1.encodeNullableBlob(blob2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeInteger((java.lang.Integer) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeLong((java.lang.Long) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList((int) '4');
        java.lang.Float[] floatArray7 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList8 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList8, floatArray7);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12, booleanArray11);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19, byteArray18);
        boolean boolean22 = byteList19.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        boolean boolean32 = byteList19.addAll((java.util.Collection<java.lang.Byte>) byteList28);
        java.lang.Object obj33 = byteList19.clone();
        boolean boolean34 = booleanList12.contains((java.lang.Object) byteList19);
        int int35 = floatList8.lastIndexOf((java.lang.Object) booleanList12);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = byteList41.addAll((java.util.Collection<java.lang.Byte>) byteList50);
        java.lang.Object obj55 = byteList41.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream56 = byteList41.stream();
        boolean boolean57 = booleanList12.equals((java.lang.Object) byteList41);
        java.math.BigInteger bigInteger58 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong59 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger58);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet60 = uLong59.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity63 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long64 = objectTypeHolderEntity63.getObjectType();
        boolean boolean65 = uLong59.equals((java.lang.Object) long64);
        boolean boolean66 = booleanList12.remove((java.lang.Object) uLong59);
        org.ccsds.moims.mo.mal.structures.UShort uShort67 = uLong59.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList68 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int69 = uRIList68.getTypeShortForm();
        java.lang.Integer int70 = uRIList68.getTypeShortForm();
        java.lang.Object obj71 = uRIList68.clone();
        byte[] byteArray75 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder76 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray75);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder77 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray75);
        int int78 = uRIList68.lastIndexOf((java.lang.Object) binaryDecoder77);
        java.lang.Boolean boolean79 = binaryDecoder77.decodeBoolean();
        byte[] byteArray80 = binaryDecoder77.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Element element81 = uShort67.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder77);
        try {
            org.ccsds.moims.mo.mal.structures.Element element82 = longList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(byteStream56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(bigInteger58);
        org.junit.Assert.assertNotNull(uOctet60);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 281474993487879L + "'", long64.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(uShort67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-18) + "'", int69.equals((-18)));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-18) + "'", int70.equals((-18)));
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79.equals(true));
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertNotNull(element81);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Blob blob8 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5);
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = blob8.getServiceNumber();
        try {
            binaryEncoder1.encodeNullableBlob(blob8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(uShort9);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        stringList1.ensureCapacity((-15));
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = stringList1.getServiceNumber();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) -1);
        try {
            stringList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -1 + "'", byte8 == (byte) -1);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableShort((java.lang.Short) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.ccsds.moims.mo.mal.structures.URI uRI0 = new org.ccsds.moims.mo.mal.structures.URI();
        java.io.OutputStream outputStream1 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder2 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream1);
        byte byte4 = binaryEncoder2.internalEncodeAttributeType((byte) 100);
        byte byte6 = binaryEncoder2.internalEncodeAttributeType((byte) -1);
        try {
            uRI0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 100 + "'", byte4 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) -1 + "'", byte6 == (byte) -1);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeURI();
        org.ccsds.moims.mo.mal.structures.Element element7 = uRI6.createElement();
        java.lang.String str8 = uRI6.toString();
        org.ccsds.moims.mo.mal.structures.Element element9 = uRI6.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uRI6.getAreaNumber();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(uRI6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(uShort10);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.Element element1 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList0.getAreaNumber();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId4 = eventCOMObject3.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = eventCOMObject3.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject6.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType11 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription12 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType11);
        eventCOMObject6.setObjType(objectType11);
        java.lang.Long long14 = eventCOMObject6.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId15 = eventCOMObject6.getObjectId();
        eventCOMObject3.setSource(objectId15);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList17 = eventCOMObject3.getDomain();
        boolean boolean18 = uShort2.equals((java.lang.Object) eventCOMObject3);
        org.ccsds.moims.mo.mal.structures.FloatList floatList19 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int21 = floatList19.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int22 = floatList19.getTypeShortForm();
        boolean boolean23 = floatList19.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator24 = floatList19.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = floatList19.getServiceNumber();
        int int27 = floatList19.lastIndexOf((java.lang.Object) (-11));
        java.lang.String str28 = floatList19.toString();
        java.util.stream.Stream<java.lang.Float> floatStream29 = floatList19.stream();
        java.util.Iterator<java.lang.Float> floatItor30 = floatList19.iterator();
        java.util.stream.Stream<java.lang.Float> floatStream31 = floatList19.parallelStream();
        eventCOMObject3.setBody((org.ccsds.moims.mo.mal.structures.Element) floatList19);
        byte[] byteArray36 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray36);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder38 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray36);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet39 = binaryDecoder38.decodeNullableUOctet();
        java.lang.Long long40 = uOctet39.getShortForm();
        java.lang.Long long41 = uOctet39.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList42 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int43 = uRIList42.getTypeShortForm();
        java.lang.Integer int44 = uRIList42.getTypeShortForm();
        java.lang.Object obj45 = uRIList42.clone();
        byte[] byteArray49 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder50 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray49);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder51 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray49);
        int int52 = uRIList42.lastIndexOf((java.lang.Object) binaryDecoder51);
        org.ccsds.moims.mo.mal.structures.Duration duration53 = binaryDecoder51.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element54 = uOctet39.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder51);
        boolean boolean55 = floatList19.equals((java.lang.Object) element54);
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNull(objectId4);
        org.junit.Assert.assertNull(identifier5);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 4294967295L + "'", long14.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId15);
        org.junit.Assert.assertNull(identifierList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(floatSpliterator24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]" + "'", str28.equals("[]"));
        org.junit.Assert.assertNotNull(floatStream29);
        org.junit.Assert.assertNotNull(floatItor30);
        org.junit.Assert.assertNotNull(floatStream31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertNotNull(uOctet39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 281474993487880L + "'", long40.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 281474993487880L + "'", long41.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-18) + "'", int43.equals((-18)));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-18) + "'", int44.equals((-18)));
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeInteger((java.lang.Integer) 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("");
        dictionary0.resetFastNetwork();
        boolean boolean5 = dictionary0.exists((java.lang.Integer) (-11));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        eventCOMObject0.setObjType(objectType14);
        org.ccsds.moims.mo.com.structures.ObjectId objectId18 = eventCOMObject0.getObjectId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject19 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId20 = eventCOMObject19.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier21 = eventCOMObject19.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject22 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject22.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType27 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription28 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType27);
        eventCOMObject22.setObjType(objectType27);
        java.lang.Long long30 = eventCOMObject22.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId31 = eventCOMObject22.getObjectId();
        eventCOMObject19.setSource(objectId31);
        org.ccsds.moims.mo.mal.structures.Time time33 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int34 = time33.getTypeShortForm();
        eventCOMObject19.setTimestamp(time33);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet36 = time33.getAreaVersion();
        eventCOMObject0.setTimestamp(time33);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(objectId18);
        org.junit.Assert.assertNull(objectId20);
        org.junit.Assert.assertNull(identifier21);
        org.junit.Assert.assertNotNull(objectType27);
        org.junit.Assert.assertNotNull(subscription28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 4294967295L + "'", long30.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34.equals(16));
        org.junit.Assert.assertNotNull(uOctet36);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        doubleList1.ensureCapacity(52);
        doubleList1.clear();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = doubleList1.getAreaNumber();
        java.io.OutputStream outputStream16 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder17 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream16);
        byte byte19 = binaryEncoder17.internalEncodeAttributeType((byte) 100);
        byte byte21 = binaryEncoder17.internalEncodeAttributeType((byte) -1);
        byte byte23 = binaryEncoder17.internalEncodeAttributeType((byte) 1);
        try {
            doubleList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 100 + "'", byte19 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte21 + "' != '" + (byte) -1 + "'", byte21 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) 1 + "'", byte23 == (byte) 1);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject6.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType9 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject6.setObjType(objectType9);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.lang.Long[] longArray23 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList24 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList24, longArray23);
        java.lang.Object obj26 = longList24.clone();
        int int27 = strList14.indexOf((java.lang.Object) longList24);
        java.util.stream.Stream<java.lang.Long> longStream28 = longList24.parallelStream();
        longList24.add(2, (java.lang.Long) 281475010265070L);
        java.util.stream.Stream<java.lang.Long> longStream32 = longList24.parallelStream();
        org.ccsds.moims.mo.mal.structures.URI uRI34 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str35 = uRI34.toString();
        int int36 = longList24.indexOf((java.lang.Object) uRI34);
        eventCOMObject6.setSourceURI(uRI34);
        org.ccsds.moims.mo.mal.structures.UShort uShort38 = uRI34.getServiceNumber();
        try {
            binaryEncoder1.encodeNullableURI(uRI34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertNotNull(objectType9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(longStream28);
        org.junit.Assert.assertNotNull(longStream32);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "hi!" + "'", str35.equals("hi!"));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(uShort38);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean1 = blob0.isURLBased();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI8 = binaryDecoder6.decodeURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", !boolean1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl4 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl5 = cOMServicesConsumer0.getArchiveService();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl6 = cOMServicesConsumer0.getEventService();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl4);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl5);
        org.junit.Assert.assertNull(eventConsumerServiceImpl6);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime13 = binaryDecoder10.decodeFineTime();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.Element element19 = fineTime13.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Time time20 = binaryDecoder18.decodeNullableTime();
        try {
            java.lang.Integer int21 = binaryDecoder18.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(fineTime13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(time20);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeInteger((java.lang.Integer) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder5.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList11 = new org.ccsds.moims.mo.mal.structures.UShortList(16);
        java.lang.Integer int12 = uShortList11.getTypeShortForm();
        java.lang.Long long13 = uShortList11.getShortForm();
        uShortList11.clear();
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShortList11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-10) + "'", int12.equals((-10)));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 281475010265078L + "'", long13.equals(281475010265078L));
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = binaryDecoder13.decodeNullableUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        shortList0.ensureCapacity((int) (byte) 0);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity8 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str9 = networkHolderEntity8.getNetworkString();
        int int10 = shortList0.lastIndexOf((java.lang.Object) networkHolderEntity8);
        boolean boolean11 = shortList0.isEmpty();
        org.ccsds.moims.mo.mal.structures.Union union13 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Byte) (byte) 10);
        boolean boolean14 = shortList0.equals((java.lang.Object) union13);
        java.io.OutputStream outputStream15 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder16 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream15);
        byte byte18 = binaryEncoder16.internalEncodeAttributeType((byte) 100);
        try {
            union13.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[0, 10]" + "'", str9.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 100 + "'", byte18 == (byte) 100);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        int int20 = blob11.getOffset();
        java.lang.Integer int21 = blob11.getTypeShortForm();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21.equals(1));
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Float float6 = binaryDecoder5.decodeFloat();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = binaryDecoder5.decodeNullableUShort();
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = binaryDecoder5.decodeUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 7.0E-44f + "'", float6.equals(7.0E-44f));
        org.junit.Assert.assertNotNull(uShort7);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableString("0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.Element element13 = blob12.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = blob12.getAreaVersion();
        java.lang.Long long15 = blob12.getShortForm();
        org.ccsds.moims.mo.mal.structures.OctetList octetList16 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = octetList16.getAreaVersion();
        boolean boolean18 = blob12.equals((java.lang.Object) uOctet17);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487873L + "'", long15.equals(281474993487873L));
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        int int10 = blob9.getOffset();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = blob9.getAreaNumber();
        java.lang.Long long12 = blob9.getShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 18 + "'", int10 == 18);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281474993487873L + "'", long12.equals(281474993487873L));
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.ShortList shortList3 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList3.getAreaNumber();
        java.lang.Object[] objArray5 = shortList3.toArray();
        java.lang.Long long6 = shortList3.getShortForm();
        shortList3.ensureCapacity((int) (byte) 0);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity11 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str12 = networkHolderEntity11.getNetworkString();
        int int13 = shortList3.lastIndexOf((java.lang.Object) networkHolderEntity11);
        boolean boolean14 = integerList1.contains((java.lang.Object) shortList3);
        java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList19 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList19, shortArray18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = uRIList27.containsAll((java.util.Collection<java.lang.Byte>) byteList34);
        boolean boolean39 = strList24.containsAll((java.util.Collection<java.lang.Byte>) byteList34);
        boolean boolean40 = shortList19.contains((java.lang.Object) byteList34);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        boolean boolean59 = byteList46.addAll((java.util.Collection<java.lang.Byte>) byteList55);
        java.lang.Object obj60 = byteList46.clone();
        boolean boolean61 = shortList19.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean62 = byteList46.isEmpty();
        java.lang.Byte byte64 = byteList46.remove((int) (byte) 0);
        boolean boolean65 = integerList1.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet66 = integerList1.getAreaVersion();
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265079L + "'", long6.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[0, 10]" + "'", str12.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + byte64 + "' != '" + (byte) -1 + "'", byte64.equals((byte) -1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(uOctet66);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.math.BigInteger bigInteger2 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong3 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger2);
        java.lang.Integer int4 = uLong3.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element5 = uLong3.createElement();
        org.ccsds.moims.mo.mal.structures.Element element6 = uLong3.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uLong3.getAreaVersion();
        java.lang.String str8 = uOctet7.toString();
        try {
            binaryEncoder1.encodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uOctet7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 14 + "'", int4.equals(14));
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "1" + "'", str8.equals("1"));
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator34 = booleanList10.spliterator();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList43 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray45 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList46 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList46, uRIArray45);
        java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53, byteArray52);
        boolean boolean56 = byteList53.add((java.lang.Byte) (byte) 100);
        boolean boolean57 = uRIList46.containsAll((java.util.Collection<java.lang.Byte>) byteList53);
        boolean boolean58 = intList43.removeAll((java.util.Collection<java.lang.Byte>) byteList53);
        org.ccsds.moims.mo.mal.structures.Union union60 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        int int61 = byteList53.lastIndexOf((java.lang.Object) union60);
        boolean boolean62 = booleanList10.removeAll((java.util.Collection<java.lang.Byte>) byteList53);
        java.lang.String str63 = booleanList10.toString();
        booleanList10.clear();
        byte[] byteArray68 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder69 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray68);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder70 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray68);
        org.ccsds.moims.mo.mal.structures.Blob blob71 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray68);
        org.ccsds.moims.mo.mal.structures.Blob blob74 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray68, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder75 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray68);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger76 = binaryDecoder75.decodeUInteger();
        byte[] byteArray77 = binaryDecoder75.getRemainingEncodedData();
        boolean boolean78 = booleanList10.remove((java.lang.Object) byteArray77);
        boolean boolean79 = booleanList10.isEmpty();
        java.lang.String str80 = booleanList10.toString();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(booleanSpliterator34);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uRIArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "[false]" + "'", str63.equals("[false]"));
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertNotNull(uInteger76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "[]" + "'", str80.equals("[]"));
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList31 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList31, byteArray30);
        boolean boolean34 = byteList31.add((java.lang.Byte) (byte) 100);
        boolean boolean35 = byteList22.addAll((java.util.Collection<java.lang.Byte>) byteList31);
        java.lang.Object obj36 = byteList22.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream37 = byteList22.stream();
        boolean boolean38 = strList3.retainAll((java.util.Collection<java.lang.Byte>) byteList22);
        org.ccsds.moims.mo.mal.structures.OctetList octetList39 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean40 = strList3.containsAll((java.util.Collection<java.lang.Byte>) octetList39);
        boolean boolean42 = strList3.add("18446744073709551615");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter43 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger44 = archiveSyncGenAdapter43.getLastKnownIndex();
        boolean boolean45 = strList3.equals((java.lang.Object) uInteger44);
        org.ccsds.moims.mo.mal.structures.Element element46 = uInteger44.createElement();
        java.lang.String str47 = uInteger44.toString();
        java.io.OutputStream outputStream48 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder49 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream48);
        byte byte51 = binaryEncoder49.internalEncodeAttributeType((byte) 100);
        byte byte53 = binaryEncoder49.internalEncodeAttributeType((byte) -1);
        try {
            uInteger44.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(byteStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(uInteger44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "0" + "'", str47.equals("0"));
        org.junit.Assert.assertTrue("'" + byte51 + "' != '" + (byte) 100 + "'", byte51 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte53 + "' != '" + (byte) -1 + "'", byte53 == (byte) -1);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList((int) '#');
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList6 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList6, shortArray5);
        java.util.ListIterator<java.lang.Short> shortItor8 = shortList6.listIterator();
        int int9 = uRIList1.lastIndexOf((java.lang.Object) shortList6);
        org.ccsds.moims.mo.mal.structures.ShortList shortList10 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = shortList10.getAreaNumber();
        java.lang.Object[] objArray12 = shortList10.toArray();
        java.lang.Long long13 = shortList10.getShortForm();
        shortList10.ensureCapacity((int) (byte) 0);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity18 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str19 = networkHolderEntity18.getNetworkString();
        int int20 = shortList10.lastIndexOf((java.lang.Object) networkHolderEntity18);
        boolean boolean21 = uRIList1.contains((java.lang.Object) networkHolderEntity18);
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder26 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray25);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = binaryDecoder26.decodeNullableUOctet();
        int int28 = uRIList1.lastIndexOf((java.lang.Object) uOctet27);
        org.ccsds.moims.mo.mal.structures.URI uRI31 = new org.ccsds.moims.mo.mal.structures.URI("0.0");
        try {
            uRIList1.add(2, uRI31);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(shortItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 281475010265079L + "'", long13.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[0, 10]" + "'", str19.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime13 = binaryDecoder10.decodeFineTime();
        try {
            java.lang.Integer int14 = binaryDecoder10.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(fineTime13);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList4 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element5 = booleanList4.createElement();
        boolean boolean7 = booleanList4.add((java.lang.Boolean) true);
        boolean boolean9 = booleanList4.remove((java.lang.Object) 281474993487884L);
        booleanList4.clear();
        java.lang.Object obj11 = booleanList4.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = booleanList4.getAreaNumber();
        try {
            binaryEncoder1.encodeAttribute((org.ccsds.moims.mo.mal.structures.Attribute) uShort12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(uShort12);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList1.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream5 = doubleList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean7 = blob6.isURLBased();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        org.ccsds.moims.mo.mal.structures.Element element13 = blob6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
        boolean boolean14 = doubleList1.equals((java.lang.Object) element13);
        boolean boolean16 = doubleList1.add((java.lang.Double) 1.0d);
        org.ccsds.moims.mo.mal.MALDecoder mALDecoder17 = null;
        try {
            org.ccsds.moims.mo.mal.structures.Element element18 = doubleList1.decode(mALDecoder17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(doubleStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) '#');
        long long2 = archiveSyncGenAdapter1.noUpdatesReceivedForThisDuration();
        long long3 = archiveSyncGenAdapter1.noUpdatesReceivedForThisDuration();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger4 = archiveSyncGenAdapter1.getLastKnownIndex();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) 100);
        byte byte10 = binaryEncoder6.internalEncodeAttributeType((byte) -1);
        byte byte12 = binaryEncoder6.internalEncodeAttributeType((byte) 1);
        try {
            uInteger4.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1558616191843L + "'", long2 == 1558616191843L);
// flaky:         org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1558616191843L + "'", long3 == 1558616191843L);
        org.junit.Assert.assertNotNull(uInteger4);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 100 + "'", byte8 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -1 + "'", byte10 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 1 + "'", byte12 == (byte) 1);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject4.setSourceURI(uRI6);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = uRI6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = uRI6.getAreaNumber();
        try {
            binaryEncoder1.encodeURI(uRI6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(uShort9);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList2 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int3 = uRIList2.getTypeShortForm();
        java.lang.Integer int4 = uRIList2.getTypeShortForm();
        java.lang.Object obj5 = uRIList2.clone();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        int int12 = uRIList2.lastIndexOf((java.lang.Object) binaryDecoder11);
        java.lang.Boolean boolean13 = binaryDecoder11.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration14 = binaryDecoder11.decodeDuration();
        try {
            binaryEncoder1.encodeNullableDuration(duration14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13.equals(true));
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRIList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRIList0.getAreaNumber();
        uRIList0.clear();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream6 = uRIList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element7 = uRIList0.createElement();
        java.io.OutputStream outputStream8 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder9 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream8);
        byte byte11 = binaryEncoder9.internalEncodeAttributeType((byte) 100);
        try {
            uRIList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uRIStream6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 100 + "'", byte11 == (byte) 100);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.Object obj20 = doubleList2.clone();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList34 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList34, longArray33);
        java.lang.Object obj36 = longList34.clone();
        int int37 = strList24.indexOf((java.lang.Object) longList34);
        java.util.ListIterator<java.lang.String> strItor38 = strList24.listIterator();
        java.lang.String str39 = strList24.toString();
        java.lang.Object[] objArray40 = strList24.toArray();
        boolean boolean41 = doubleList2.contains((java.lang.Object) strList24);
        org.ccsds.moims.mo.mal.structures.URIList uRIList43 = new org.ccsds.moims.mo.mal.structures.URIList((int) '#');
        java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList48 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList48, shortArray47);
        java.util.ListIterator<java.lang.Short> shortItor50 = shortList48.listIterator();
        int int51 = uRIList43.lastIndexOf((java.lang.Object) shortList48);
        org.ccsds.moims.mo.mal.structures.ShortList shortList52 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = shortList52.getAreaNumber();
        java.lang.Object[] objArray54 = shortList52.toArray();
        java.lang.Long long55 = shortList52.getShortForm();
        shortList52.ensureCapacity((int) (byte) 0);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity60 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str61 = networkHolderEntity60.getNetworkString();
        int int62 = shortList52.lastIndexOf((java.lang.Object) networkHolderEntity60);
        boolean boolean63 = uRIList43.contains((java.lang.Object) networkHolderEntity60);
        boolean boolean64 = doubleList2.contains((java.lang.Object) boolean63);
        try {
            java.lang.Double double66 = doubleList2.get((-13));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[hi!, ]" + "'", str39.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(shortItor50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uShort53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 281475010265079L + "'", long55.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "[0, 10]" + "'", str61.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        eventCOMObject0.setObjType(objectType14);
        org.ccsds.moims.mo.mal.structures.Time time18 = eventCOMObject0.getTimestamp();
        org.ccsds.moims.mo.mal.structures.URI uRI19 = eventCOMObject0.getSourceURI();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNull(time18);
        org.junit.Assert.assertNull(uRI19);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Duration duration7 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = duration7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element9 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) duration7);
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder5.decodeUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(element9);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int1 = uRIList0.size();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList10 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray12 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList13, uRIArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        boolean boolean24 = uRIList13.containsAll((java.util.Collection<java.lang.Byte>) byteList20);
        boolean boolean25 = intList10.removeAll((java.util.Collection<java.lang.Byte>) byteList20);
        boolean boolean26 = uRIList0.removeAll((java.util.Collection<java.lang.Byte>) byteList20);
        byte[] byteArray30 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder31 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray30);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder32 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray30);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet33 = binaryDecoder32.decodeNullableUOctet();
        java.lang.Long long34 = uOctet33.getShortForm();
        short short35 = uOctet33.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort36 = uOctet33.getServiceNumber();
        int int37 = uRIList0.lastIndexOf((java.lang.Object) uShort36);
        org.ccsds.moims.mo.mal.structures.UShort uShort38 = uRIList0.getServiceNumber();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI40 = uRIList0.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(uRIArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertNotNull(uOctet33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 281474993487880L + "'", long34.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 127 + "'", short35 == (short) 127);
        org.junit.Assert.assertNotNull(uShort36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(uShort38);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeString("[0.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uInteger6.getAreaVersion();
        java.lang.Long long8 = uInteger6.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList10 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        int int12 = uShortList10.lastIndexOf((java.lang.Object) true);
        boolean boolean13 = uInteger6.equals((java.lang.Object) int12);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = uInteger6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = uInteger6.getServiceNumber();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487884L + "'", long8.equals(281474993487884L));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertNotNull(uShort15);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList3 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList3, intArray2);
        int int6 = intList3.lastIndexOf((java.lang.Object) 0.0f);
        java.util.ListIterator<java.lang.Integer> intItor8 = intList3.listIterator(0);
        boolean boolean9 = time0.equals((java.lang.Object) intList3);
        org.ccsds.moims.mo.mal.structures.URIList uRIList10 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int11 = uRIList10.getTypeShortForm();
        java.lang.Integer int12 = uRIList10.getTypeShortForm();
        java.lang.Object obj13 = uRIList10.clone();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        int int20 = uRIList10.lastIndexOf((java.lang.Object) binaryDecoder19);
        java.lang.Boolean boolean21 = binaryDecoder19.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Element element22 = time0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder19);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI23 = binaryDecoder19.decodeURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(intItor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-18) + "'", int12.equals((-18)));
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21.equals(true));
        org.junit.Assert.assertNotNull(element22);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Byte byte6 = binaryDecoder5.decodeOctet();
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong7 = binaryDecoder5.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Size must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6.equals((byte) 100));
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = duration1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList4 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        byteList13.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean21 = longList4.removeAll((java.util.Collection<java.lang.Byte>) byteList13);
        boolean boolean22 = duration1.equals((java.lang.Object) longList4);
        org.ccsds.moims.mo.mal.structures.StringList stringList24 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = stringList24.getAreaNumber();
        java.lang.Integer int26 = stringList24.getTypeShortForm();
        boolean boolean27 = duration1.equals((java.lang.Object) stringList24);
        byte[] byteArray31 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder32 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder33 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = binaryDecoder33.decodeNullableUOctet();
        java.lang.Long long35 = uOctet34.getShortForm();
        java.lang.Long long36 = uOctet34.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList37 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int38 = uRIList37.getTypeShortForm();
        java.lang.Integer int39 = uRIList37.getTypeShortForm();
        java.lang.Object obj40 = uRIList37.clone();
        byte[] byteArray44 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder45 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder46 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        int int47 = uRIList37.lastIndexOf((java.lang.Object) binaryDecoder46);
        org.ccsds.moims.mo.mal.structures.Duration duration48 = binaryDecoder46.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element49 = uOctet34.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder46);
        byte[] byteArray50 = binaryDecoder46.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder51 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray50);
        boolean boolean52 = duration1.equals((java.lang.Object) binaryDecoder51);
        try {
            org.ccsds.moims.mo.mal.structures.Time time53 = binaryDecoder51.decodeTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-15) + "'", int26.equals((-15)));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281474993487880L + "'", long35.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 281474993487880L + "'", long36.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-18) + "'", int38.equals((-18)));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-18) + "'", int39.equals((-18)));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        int int3 = booleanList0.indexOf((java.lang.Object) 281474993487875L);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray4 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList5, uShortArray4);
        uShortList5.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element9 = uOctet8.createElement();
        int int10 = uShortList5.indexOf((java.lang.Object) element9);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.lang.Long[] longArray23 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList24 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList24, longArray23);
        java.lang.Object obj26 = longList24.clone();
        int int27 = strList14.indexOf((java.lang.Object) longList24);
        java.util.ListIterator<java.lang.String> strItor28 = strList14.listIterator();
        java.lang.Short[] shortArray32 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList33 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList33, shortArray32);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray40 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList41, uRIArray40);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = uRIList41.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean53 = strList38.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean54 = shortList33.contains((java.lang.Object) byteList48);
        boolean boolean55 = strList14.removeAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean56 = uShortList5.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        int int57 = byteList48.size();
        java.util.stream.Stream<java.lang.Byte> byteStream58 = byteList48.parallelStream();
        boolean boolean59 = booleanList0.retainAll((java.util.Collection<java.lang.Byte>) byteList48);
        booleanList0.clear();
        java.util.stream.Stream<java.lang.Boolean> booleanStream61 = booleanList0.parallelStream();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject62 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId63 = eventCOMObject62.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType64 = eventCOMObject62.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject65 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI67 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject65.setSourceURI(uRI67);
        eventCOMObject62.setSourceURI(uRI67);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject70 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId71 = eventCOMObject70.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier72 = eventCOMObject70.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject73 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject73.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType78 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription79 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType78);
        eventCOMObject73.setObjType(objectType78);
        java.lang.Long long81 = eventCOMObject73.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId82 = eventCOMObject73.getObjectId();
        eventCOMObject70.setSource(objectId82);
        org.ccsds.moims.mo.mal.structures.Time time84 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int85 = time84.getTypeShortForm();
        eventCOMObject70.setTimestamp(time84);
        eventCOMObject62.setTimestamp(time84);
        org.ccsds.moims.mo.mal.structures.Identifier identifier88 = null;
        eventCOMObject62.setNetworkZone(identifier88);
        boolean boolean90 = booleanList0.equals((java.lang.Object) eventCOMObject62);
        org.ccsds.moims.mo.mal.structures.URI uRI92 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet93 = uRI92.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort94 = uRI92.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet95 = uRI92.getAreaVersion();
        java.lang.Long long96 = uRI92.getShortForm();
        eventCOMObject62.setSourceURI(uRI92);
        org.ccsds.moims.mo.mal.structures.Element element98 = eventCOMObject62.getBody();
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(uShortArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(uRIArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 5 + "'", int57 == 5);
        org.junit.Assert.assertNotNull(byteStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(booleanStream61);
        org.junit.Assert.assertNull(objectId63);
        org.junit.Assert.assertNull(objectType64);
        org.junit.Assert.assertNull(objectId71);
        org.junit.Assert.assertNull(identifier72);
        org.junit.Assert.assertNotNull(objectType78);
        org.junit.Assert.assertNotNull(subscription79);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 4294967295L + "'", long81.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 16 + "'", int85.equals(16));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertNotNull(uOctet93);
        org.junit.Assert.assertNotNull(uShort94);
        org.junit.Assert.assertNotNull(uOctet95);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 281474993487890L + "'", long96.equals(281474993487890L));
        org.junit.Assert.assertNull(element98);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int1 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element2 = time0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = time0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = time0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = time0.getAreaNumber();
        java.io.OutputStream outputStream6 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder7 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream6);
        byte byte9 = binaryEncoder7.internalEncodeAttributeType((byte) 100);
        byte byte11 = binaryEncoder7.internalEncodeAttributeType((byte) -1);
        try {
            time0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 16 + "'", int1.equals(16));
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -1 + "'", byte11 == (byte) -1);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = duration1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList4 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        byteList13.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean21 = longList4.removeAll((java.util.Collection<java.lang.Byte>) byteList13);
        boolean boolean22 = duration1.equals((java.lang.Object) longList4);
        org.ccsds.moims.mo.mal.structures.StringList stringList24 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = stringList24.getAreaNumber();
        java.lang.Integer int26 = stringList24.getTypeShortForm();
        boolean boolean27 = duration1.equals((java.lang.Object) stringList24);
        byte[] byteArray31 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder32 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder33 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = binaryDecoder33.decodeNullableUOctet();
        java.lang.Long long35 = uOctet34.getShortForm();
        java.lang.Long long36 = uOctet34.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList37 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int38 = uRIList37.getTypeShortForm();
        java.lang.Integer int39 = uRIList37.getTypeShortForm();
        java.lang.Object obj40 = uRIList37.clone();
        byte[] byteArray44 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder45 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder46 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        int int47 = uRIList37.lastIndexOf((java.lang.Object) binaryDecoder46);
        org.ccsds.moims.mo.mal.structures.Duration duration48 = binaryDecoder46.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element49 = uOctet34.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder46);
        byte[] byteArray50 = binaryDecoder46.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder51 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray50);
        boolean boolean52 = duration1.equals((java.lang.Object) binaryDecoder51);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob53 = binaryDecoder51.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-15) + "'", int26.equals((-15)));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281474993487880L + "'", long35.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 281474993487880L + "'", long36.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-18) + "'", int38.equals((-18)));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-18) + "'", int39.equals((-18)));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, (int) (byte) -1);
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute7 = binaryDecoder6.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.ccsds.moims.mo.mal.structures.UShort uShort0 = null;
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int2 = uRIList1.getTypeShortForm();
        java.lang.Integer int3 = uRIList1.getTypeShortForm();
        java.lang.Object obj4 = uRIList1.clone();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRIList1.getAreaVersion();
        java.lang.Integer int6 = uOctet5.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList8 = new org.ccsds.moims.mo.mal.structures.URIList((int) '#');
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList13 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList13, shortArray12);
        java.util.ListIterator<java.lang.Short> shortItor15 = shortList13.listIterator();
        int int16 = uRIList8.lastIndexOf((java.lang.Object) shortList13);
        org.ccsds.moims.mo.mal.structures.URIList uRIList17 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int18 = uRIList17.getTypeShortForm();
        java.lang.Integer int19 = uRIList17.getTypeShortForm();
        java.lang.Object obj20 = uRIList17.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream21 = uRIList17.stream();
        uRIList17.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = uRIList17.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = uShort23.getAreaNumber();
        boolean boolean25 = shortList13.equals((java.lang.Object) uShort23);
        try {
            org.ccsds.moims.mo.com.COMService cOMService26 = esa.mo.com.impl.util.HelperCOM.findCOMService(uShort0, uOctet5, uShort23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: NULL area argument");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6.equals(8));
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(shortItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-18) + "'", int18.equals((-18)));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-18) + "'", int19.equals((-18)));
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(uRIStream21);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.lang.Long long4 = doubleList1.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream5 = doubleList1.parallelStream();
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList13 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList13, shortArray12);
        java.util.ListIterator<java.lang.Short> shortItor15 = shortList13.listIterator();
        int int16 = doubleList8.indexOf((java.lang.Object) shortList13);
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean18 = blob17.isURLBased();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.Element element24 = blob17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
        boolean boolean25 = doubleList8.contains((java.lang.Object) blob17);
        java.util.ListIterator<java.lang.Double> doubleItor27 = doubleList8.listIterator(1);
        doubleList8.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray29 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList30, uShortArray29);
        uShortList30.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet33 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element34 = uOctet33.createElement();
        int int35 = uShortList30.indexOf((java.lang.Object) element34);
        boolean boolean37 = uShortList30.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor38 = uShortList30.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean40 = uShortList30.add(uShort39);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        boolean boolean59 = byteList46.addAll((java.util.Collection<java.lang.Byte>) byteList55);
        java.lang.Object obj60 = byteList46.clone();
        boolean boolean61 = uShortList30.removeAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean62 = doubleList8.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean63 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet64 = doubleList1.getAreaVersion();
        doubleList1.trimToSize();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265083L + "'", long4.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(shortItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(doubleItor27);
        org.junit.Assert.assertNotNull(uShortArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uOctet33);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertNotNull(uShortItor38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertNotNull(uOctet64);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        java.lang.Double double9 = binaryDecoder8.decodeNullableDouble();
        byte[] byteArray10 = binaryDecoder8.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray10);
        try {
            binaryEncoder1.directEncodeBytes(byteArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals((double) double9, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray10);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = uRIList58.getAreaNumber();
        java.lang.Integer int71 = uRIList58.getTypeShortForm();
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-18) + "'", int71.equals((-18)));
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        java.lang.Long long8 = uOctet6.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList9 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int10 = uRIList9.getTypeShortForm();
        java.lang.Integer int11 = uRIList9.getTypeShortForm();
        java.lang.Object obj12 = uRIList9.clone();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        int int19 = uRIList9.lastIndexOf((java.lang.Object) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Duration duration20 = binaryDecoder18.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element21 = uOctet6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        byte[] byteArray22 = binaryDecoder18.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        try {
            java.lang.Short short24 = binaryDecoder23.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(byteArray22);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList3 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream4 = uShortList3.parallelStream();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uShortList3.getAreaVersion();
        java.lang.Object[] objArray6 = uShortList3.toArray();
        boolean boolean7 = stringList1.equals((java.lang.Object) objArray6);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = stringList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int11 = floatList9.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int12 = floatList9.getTypeShortForm();
        boolean boolean13 = floatList9.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator14 = floatList9.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = floatList9.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = floatList9.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList9.getServiceNumber();
        byte[] byteArray21 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder22 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray21);
        org.ccsds.moims.mo.mal.structures.Element element23 = uShort17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder22);
        try {
            org.ccsds.moims.mo.mal.structures.Element element24 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder22);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortStream4);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-4) + "'", int12.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(floatSpliterator14);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(element23);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.Integer int9 = identifier8.getTypeShortForm();
        try {
            binaryEncoder1.encodeAttribute((org.ccsds.moims.mo.mal.structures.Attribute) identifier8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6 + "'", int9.equals(6));
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.stream();
        org.ccsds.moims.mo.mal.structures.OctetList octetList42 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean43 = strList35.retainAll((java.util.Collection<java.lang.Byte>) octetList42);
        java.io.OutputStream outputStream44 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder45 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream44);
        byte byte47 = binaryEncoder45.internalEncodeAttributeType((byte) 100);
        try {
            octetList42.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + byte47 + "' != '" + (byte) 100 + "'", byte47 == (byte) 100);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        int int14 = uRIList1.lastIndexOf((java.lang.Object) 0.0d);
        uRIList1.clear();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList17 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = integerList17.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.ShortList shortList19 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = shortList19.getAreaNumber();
        java.lang.Object[] objArray21 = shortList19.toArray();
        java.lang.Long long22 = shortList19.getShortForm();
        shortList19.ensureCapacity((int) (byte) 0);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity27 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str28 = networkHolderEntity27.getNetworkString();
        int int29 = shortList19.lastIndexOf((java.lang.Object) networkHolderEntity27);
        boolean boolean30 = integerList17.contains((java.lang.Object) shortList19);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList35 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList35, shortArray34);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean56 = shortList35.contains((java.lang.Object) byteList50);
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList62, byteArray61);
        boolean boolean65 = byteList62.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray70 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList71 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList71, byteArray70);
        boolean boolean74 = byteList71.add((java.lang.Byte) (byte) 100);
        boolean boolean75 = byteList62.addAll((java.util.Collection<java.lang.Byte>) byteList71);
        java.lang.Object obj76 = byteList62.clone();
        boolean boolean77 = shortList35.retainAll((java.util.Collection<java.lang.Byte>) byteList62);
        boolean boolean78 = byteList62.isEmpty();
        java.lang.Byte byte80 = byteList62.remove((int) (byte) 0);
        boolean boolean81 = integerList17.containsAll((java.util.Collection<java.lang.Byte>) byteList62);
        boolean boolean82 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList62);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(uOctet18);
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281475010265079L + "'", long22.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[0, 10]" + "'", str28.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + byte80 + "' != '" + (byte) -1 + "'", byte80.equals((byte) -1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) (-1L));
        java.lang.Integer int2 = duration1.getTypeShortForm();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Short short8 = binaryDecoder7.decodeNullableShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element9 = duration1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2.equals(3));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + short8 + "' != '" + (short) -64 + "'", short8.equals((short) -64));
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray1 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList2, uRIArray1);
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
        boolean boolean12 = byteList9.add((java.lang.Byte) (byte) 100);
        boolean boolean13 = uRIList2.containsAll((java.util.Collection<java.lang.Byte>) byteList9);
        byteList9.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean17 = longList0.removeAll((java.util.Collection<java.lang.Byte>) byteList9);
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = longList0.getServiceNumber();
        java.lang.Integer int19 = longList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = longList0.getAreaVersion();
        java.io.OutputStream outputStream21 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder22 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream21);
        byte byte24 = binaryEncoder22.internalEncodeAttributeType((byte) 100);
        byte byte26 = binaryEncoder22.internalEncodeAttributeType((byte) -1);
        byte byte28 = binaryEncoder22.internalEncodeAttributeType((byte) 1);
        try {
            uOctet20.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-13) + "'", int19.equals((-13)));
        org.junit.Assert.assertNotNull(uOctet20);
        org.junit.Assert.assertTrue("'" + byte24 + "' != '" + (byte) 100 + "'", byte24 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte26 + "' != '" + (byte) -1 + "'", byte26 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 1 + "'", byte28 == (byte) 1);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        boolean boolean3 = booleanList0.add((java.lang.Boolean) true);
        boolean boolean5 = booleanList0.remove((java.lang.Object) 281474993487884L);
        boolean boolean6 = booleanList0.isEmpty();
        java.lang.Float[] floatArray12 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList13 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList13, floatArray12);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Object obj38 = byteList24.clone();
        boolean boolean39 = booleanList17.contains((java.lang.Object) byteList24);
        int int40 = floatList13.lastIndexOf((java.lang.Object) booleanList17);
        java.lang.Float float42 = floatList13.remove(2);
        floatList13.ensureCapacity(7);
        int int45 = booleanList0.indexOf((java.lang.Object) floatList13);
        byte[] byteArray49 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder50 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray49);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder51 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray49);
        org.ccsds.moims.mo.mal.structures.Blob blob52 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray49);
        org.ccsds.moims.mo.mal.structures.Blob blob55 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray49, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder56 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray49);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder57 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray49);
        java.lang.Float float58 = binaryDecoder57.decodeFloat();
        java.lang.Boolean boolean59 = binaryDecoder57.decodeBoolean();
        java.lang.Float float60 = binaryDecoder57.decodeFloat();
        try {
            org.ccsds.moims.mo.mal.structures.Element element61 = booleanList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42.equals((-1.0f)));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 7.0E-44f + "'", float58.equals(7.0E-44f));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59.equals(true));
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 0.0f + "'", float60.equals(0.0f));
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableBoolean((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeInteger((java.lang.Integer) (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableLong((java.lang.Long) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "[-1, -1, -1, -1, 100]", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        strList12.clear();
        java.lang.String str15 = strList12.toString();
        try {
            org.ccsds.moims.mo.mal.MALListEncoder mALListEncoder16 = binaryEncoder1.createListEncoder((java.util.List) strList12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "[]" + "'", str15.equals("[]"));
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        org.ccsds.moims.mo.mal.structures.LongList longList56 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byteList65.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean73 = longList56.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean74 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byte[] byteArray78 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray78);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime80 = binaryDecoder79.decodeFineTime();
        boolean boolean81 = booleanList10.remove((java.lang.Object) fineTime80);
        org.ccsds.moims.mo.mal.MALEncoder mALEncoder82 = null;
        try {
            fineTime80.encode(mALEncoder82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertNotNull(fineTime80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean2 = dictionary0.exists((java.lang.Integer) 16);
        java.lang.Integer int4 = dictionary0.getWordId("[0, 10]");
        boolean boolean6 = dictionary0.exists("18446744073709551615");
        dictionary0.defineWord((java.lang.Integer) 12, "[true]");
        java.lang.Integer int11 = dictionary0.getWordId("[10]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4.equals(1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11.equals(2));
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList(12);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList1.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Integer int9 = binaryDecoder8.decodeInteger();
        org.ccsds.moims.mo.mal.structures.Element element10 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        try {
            org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder8.decodeTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9.equals(50));
        org.junit.Assert.assertNotNull(element10);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.String str18 = strList3.toString();
        org.ccsds.moims.mo.mal.structures.ShortList shortList19 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = shortList19.getAreaNumber();
        java.lang.Object[] objArray21 = shortList19.toArray();
        java.lang.Long long22 = shortList19.getShortForm();
        shortList19.ensureCapacity((int) (byte) 0);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity27 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str28 = networkHolderEntity27.getNetworkString();
        int int29 = shortList19.lastIndexOf((java.lang.Object) networkHolderEntity27);
        boolean boolean30 = shortList19.isEmpty();
        boolean boolean31 = strList3.remove((java.lang.Object) shortList19);
        strList3.ensureCapacity(0);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "[hi!, ]" + "'", str18.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281475010265079L + "'", long22.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[0, 10]" + "'", str28.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.Element element5 = eventCOMObject0.getBody();
        org.ccsds.moims.mo.mal.structures.Time time6 = eventCOMObject0.getTimestamp();
        java.lang.Long long7 = eventCOMObject0.getRelated();
        org.junit.Assert.assertNull(element5);
        org.junit.Assert.assertNull(time6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        int int77 = octetList18.size();
        java.lang.Integer int78 = octetList18.getTypeShortForm();
        octetList18.clear();
        java.lang.Integer int80 = octetList18.getTypeShortForm();
        java.io.OutputStream outputStream81 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder82 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream81);
        byte byte84 = binaryEncoder82.internalEncodeAttributeType((byte) 100);
        byte byte86 = binaryEncoder82.internalEncodeAttributeType((byte) -1);
        try {
            octetList18.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-7) + "'", int78.equals((-7)));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-7) + "'", int80.equals((-7)));
        org.junit.Assert.assertTrue("'" + byte84 + "' != '" + (byte) 100 + "'", byte84 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte86 + "' != '" + (byte) -1 + "'", byte86 == (byte) -1);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        java.io.InputStream inputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder1 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(inputStream0);
        try {
            java.lang.Integer int2 = binaryDecoder1.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        java.lang.Integer int1 = longList0.getTypeShortForm();
        java.io.InputStream inputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder3 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(inputStream2);
        try {
            org.ccsds.moims.mo.mal.structures.Element element4 = longList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-13) + "'", int1.equals((-13)));
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        int int46 = longList8.lastIndexOf((java.lang.Object) byteList42);
        org.ccsds.moims.mo.mal.structures.OctetList octetList47 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = octetList47.getServiceNumber();
        boolean boolean49 = longList8.removeAll((java.util.Collection<java.lang.Byte>) octetList47);
        int int50 = longList8.size();
        java.util.Iterator<java.lang.Long> longItor51 = longList8.iterator();
        boolean boolean52 = longList8.isEmpty();
        org.ccsds.moims.mo.mal.structures.Identifier identifier54 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.String str55 = identifier54.toString();
        org.ccsds.moims.mo.mal.structures.Identifier identifier56 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet57 = identifier56.getAreaVersion();
        java.lang.String str58 = identifier56.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort59 = identifier56.getAreaNumber();
        java.lang.Integer int60 = identifier56.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Identifier identifier61 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet62 = identifier61.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Identifier identifier63 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str64 = identifier63.toString();
        java.lang.Long long65 = identifier63.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort66 = identifier63.getAreaNumber();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject67 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject67.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType72 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription73 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType72);
        eventCOMObject67.setObjType(objectType72);
        org.ccsds.moims.mo.com.structures.ObjectId objectId75 = eventCOMObject67.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier76 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet77 = identifier76.getAreaVersion();
        java.lang.String str78 = identifier76.getValue();
        eventCOMObject67.setNetworkZone(identifier76);
        byte[] byteArray83 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder84 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray83);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime85 = binaryDecoder84.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.Element element86 = identifier76.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder84);
        org.ccsds.moims.mo.mal.structures.Identifier identifier87 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet88 = identifier87.getAreaVersion();
        java.lang.String str89 = identifier87.getValue();
        org.ccsds.moims.mo.mal.structures.Element element90 = identifier87.createElement();
        org.ccsds.moims.mo.mal.structures.Identifier[] identifierArray91 = new org.ccsds.moims.mo.mal.structures.Identifier[] { identifier54, identifier56, identifier61, identifier63, identifier76, identifier87 };
        try {
            org.ccsds.moims.mo.mal.structures.Identifier[] identifierArray92 = longList8.toArray(identifierArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 7 + "'", int50 == 7);
        org.junit.Assert.assertNotNull(longItor51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "[hi!, ]" + "'", str55.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(uOctet57);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        org.junit.Assert.assertNotNull(uShort59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 6 + "'", int60.equals(6));
        org.junit.Assert.assertNotNull(uOctet62);
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "" + "'", str64.equals(""));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 281474993487878L + "'", long65.equals(281474993487878L));
        org.junit.Assert.assertNotNull(uShort66);
        org.junit.Assert.assertNotNull(objectType72);
        org.junit.Assert.assertNotNull(subscription73);
        org.junit.Assert.assertNull(objectId75);
        org.junit.Assert.assertNotNull(uOctet77);
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertNotNull(fineTime85);
        org.junit.Assert.assertNotNull(element86);
        org.junit.Assert.assertNotNull(uOctet88);
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "" + "'", str89.equals(""));
        org.junit.Assert.assertNotNull(element90);
        org.junit.Assert.assertNotNull(identifierArray91);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime9 = binaryDecoder5.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        byte byte6 = binaryEncoder4.internalEncodeAttributeType((byte) 100);
        byte byte8 = binaryEncoder4.internalEncodeAttributeType((byte) -1);
        try {
            uRIList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -1 + "'", byte8 == (byte) -1);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        java.lang.Float[] floatArray2 = new java.lang.Float[] { 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList3 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList3, floatArray2);
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        int int15 = strList13.size();
        boolean boolean16 = doubleList8.equals((java.lang.Object) strList13);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.lang.Long[] longArray29 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList30 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList30, longArray29);
        java.lang.Object obj32 = longList30.clone();
        int int33 = strList20.indexOf((java.lang.Object) longList30);
        java.util.ListIterator<java.lang.String> strItor34 = strList20.listIterator();
        java.lang.Short[] shortArray38 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList39 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList39, shortArray38);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray46 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList47 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList47, uRIArray46);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        boolean boolean58 = uRIList47.containsAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean59 = strList44.containsAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean60 = shortList39.contains((java.lang.Object) byteList54);
        boolean boolean61 = strList20.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean62 = doubleList8.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean63 = floatList3.remove((java.lang.Object) byteList54);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList65 = new org.ccsds.moims.mo.mal.structures.UShortList(16);
        boolean boolean66 = floatList3.remove((java.lang.Object) uShortList65);
        byte[] byteArray70 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder71 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder72 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet73 = binaryDecoder72.decodeNullableUOctet();
        java.lang.Long long74 = uOctet73.getShortForm();
        short short75 = uOctet73.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort76 = uOctet73.getServiceNumber();
        java.lang.Integer int77 = uOctet73.getTypeShortForm();
        boolean boolean78 = uShortList65.equals((java.lang.Object) uOctet73);
        java.lang.Object[] objArray79 = uShortList65.toArray();
        org.ccsds.moims.mo.mal.structures.Identifier identifier81 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet82 = identifier81.getAreaVersion();
        java.lang.String str83 = identifier81.getValue();
        org.ccsds.moims.mo.mal.structures.Element element84 = identifier81.createElement();
        org.ccsds.moims.mo.mal.structures.Union union86 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Integer) 4);
        java.lang.Integer int87 = union86.getTypeShortForm();
        boolean boolean88 = identifier81.equals((java.lang.Object) union86);
        java.lang.Long long89 = identifier81.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort90 = identifier81.getAreaNumber();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort91 = uShortList65.set(10, uShort90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(uRIArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertNotNull(uOctet73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 281474993487880L + "'", long74.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short75 + "' != '" + (short) 127 + "'", short75 == (short) 127);
        org.junit.Assert.assertNotNull(uShort76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 8 + "'", int77.equals(8));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(uOctet82);
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
        org.junit.Assert.assertNotNull(element84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 11 + "'", int87.equals(11));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 281474993487878L + "'", long89.equals(281474993487878L));
        org.junit.Assert.assertNotNull(uShort90);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray4 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList5, uShortArray4);
        uShortList5.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element9 = uOctet8.createElement();
        int int10 = uShortList5.indexOf((java.lang.Object) element9);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.lang.Long[] longArray23 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList24 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList24, longArray23);
        java.lang.Object obj26 = longList24.clone();
        int int27 = strList14.indexOf((java.lang.Object) longList24);
        java.util.ListIterator<java.lang.String> strItor28 = strList14.listIterator();
        java.lang.Short[] shortArray32 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList33 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList33, shortArray32);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray40 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList41, uRIArray40);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = uRIList41.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean53 = strList38.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean54 = shortList33.contains((java.lang.Object) byteList48);
        boolean boolean55 = strList14.removeAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean56 = uShortList5.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean57 = integerList1.retainAll((java.util.Collection<java.lang.Byte>) byteList48);
        integerList1.ensureCapacity((-10));
        byte[] byteArray63 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder64 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray63);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder65 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray63);
        java.lang.Float float66 = binaryDecoder65.decodeFloat();
        java.lang.Byte byte67 = binaryDecoder65.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element68 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder65);
        java.lang.String str69 = integerList1.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = integerList1.getServiceNumber();
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShortArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(uRIArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 7.0E-44f + "'", float66.equals(7.0E-44f));
        org.junit.Assert.assertTrue("'" + byte67 + "' != '" + (byte) -1 + "'", byte67.equals((byte) -1));
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "[]" + "'", str69.equals("[]"));
        org.junit.Assert.assertNotNull(uShort70);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        java.lang.Double double11 = binaryDecoder10.decodeNullableDouble();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, 15);
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray12);
        try {
            binaryEncoder1.directEncodeBytes(byteArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals((double) double11, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime13 = binaryDecoder10.decodeFineTime();
        try {
            java.lang.String str14 = binaryDecoder10.decodeString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(fineTime13);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.math.BigInteger bigInteger2 = uLong1.getValue();
        org.ccsds.moims.mo.mal.structures.Element element3 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uLong1.getServiceNumber();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) -1);
        try {
            uLong1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -1 + "'", byte8 == (byte) -1);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime13 = binaryDecoder10.decodeFineTime();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.Element element19 = fineTime13.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Duration duration20 = binaryDecoder18.decodeNullableDuration();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(fineTime13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(duration20);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType3 = fastObjectType1.getObjectType((java.lang.Integer) (-64));
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: null");
        } catch (java.lang.Exception e) {
        }
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (-64), (-18));
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        try {
            java.lang.Boolean boolean14 = binaryDecoder13.decodeBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject12.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType17 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription18 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType17);
        eventCOMObject12.setObjType(objectType17);
        eventCOMObject3.setObjType(objectType17);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("18446744073709551615", objectType17);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList22 = fastObjectType1.getObjectTypeIds(objectType17);
        org.ccsds.moims.mo.com.structures.ObjectType objectType28 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(18, (int) 'a', (int) ' ', 8);
        org.ccsds.moims.mo.mal.structures.Subscription subscription29 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType28);
        try {
            org.ccsds.moims.mo.mal.structures.IntegerList integerList30 = fastObjectType1.getObjectTypeIds(objectType28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(integerList22);
        org.junit.Assert.assertNotNull(objectType28);
        org.junit.Assert.assertNotNull(subscription29);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder5.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uInteger9.getServiceNumber();
        java.lang.String str11 = uInteger9.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uInteger9.getAreaNumber();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "0" + "'", str11.equals("0"));
        org.junit.Assert.assertNotNull(uShort12);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        try {
            esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int7 = uRIList6.getTypeShortForm();
        java.lang.Integer int8 = uRIList6.getTypeShortForm();
        java.lang.Object obj9 = uRIList6.clone();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        int int16 = uRIList6.lastIndexOf((java.lang.Object) binaryDecoder15);
        org.ccsds.moims.mo.mal.structures.Duration duration17 = binaryDecoder15.decodeDuration();
        double double18 = duration17.getValue();
        try {
            binaryEncoder1.encodeNullableAttribute((org.ccsds.moims.mo.mal.structures.Attribute) duration17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-18) + "'", int7.equals((-18)));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2.47E-322d + "'", double18 == 2.47E-322d);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.ccsds.moims.mo.mal.MALService mALService0 = null;
        org.ccsds.moims.mo.mal.structures.Identifier identifier1 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = identifier1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = identifier1.getAreaVersion();
        java.lang.String str4 = identifier1.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = identifier1.getAreaNumber();
        org.ccsds.moims.mo.com.structures.ObjectType objectType6 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(mALService0, uShort5);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNull(objectType6);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uRI1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRI1.getServiceNumber();
        java.lang.Long long4 = uRI1.getShortForm();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Blob blob10 = binaryDecoder9.decodeBlob();
        try {
            org.ccsds.moims.mo.mal.structures.Element element11 = uRI1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487890L + "'", long4.equals(281474993487890L));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(blob10);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        java.math.BigInteger bigInteger4 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong5 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger4);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uLong5.getAreaVersion();
        java.math.BigInteger bigInteger7 = uLong5.getValue();
        org.ccsds.moims.mo.mal.structures.ULong uLong8 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger7);
        org.ccsds.moims.mo.mal.structures.ULong uLong9 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger7);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uLong9.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element11 = uLong9.createElement();
        try {
            binaryEncoder1.encodeNullableULong(uLong9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertNotNull(bigInteger4);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(bigInteger7);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(element11);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeLong((java.lang.Long) 281474993487885L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.Element element12 = uInteger11.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = uInteger11.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray14 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList15 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList15, uRIArray14);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        boolean boolean26 = uRIList15.containsAll((java.util.Collection<java.lang.Byte>) byteList22);
        byteList22.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean30 = uInteger11.equals((java.lang.Object) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = uInteger11.getAreaNumber();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertNotNull(uRIArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(uShort31);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        java.io.OutputStream outputStream12 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder13 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream12);
        byte byte15 = binaryEncoder13.internalEncodeAttributeType((byte) 100);
        byte byte17 = binaryEncoder13.internalEncodeAttributeType((byte) -1);
        byte byte19 = binaryEncoder13.internalEncodeAttributeType((byte) 1);
        try {
            uInteger11.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) 100 + "'", byte15 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) -1 + "'", byte17 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 1 + "'", byte19 == (byte) 1);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = blob9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int13 = floatList11.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int14 = floatList11.getTypeShortForm();
        boolean boolean15 = floatList11.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator16 = floatList11.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = floatList11.getServiceNumber();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = uShort19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        byte[] byteArray27 = binaryDecoder24.getRemainingEncodedData();
        try {
            java.lang.Byte byte28 = binaryDecoder24.decodeNullableOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-4) + "'", int14.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(floatSpliterator16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(byteArray27);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableBoolean((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean1 = blob0.isURLBased();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime8 = binaryDecoder6.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", !boolean1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Integer int8 = binaryDecoder7.decodeInteger();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder7.decodeUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element10 = uShortList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8.equals(50));
        org.junit.Assert.assertNotNull(uInteger9);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType1 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 1558616185365L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UOctet argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        java.lang.String str13 = binaryDecoder10.decodeString();
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob14 = binaryDecoder10.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.URI uRI4 = new org.ccsds.moims.mo.mal.structures.URI();
        try {
            binaryEncoder1.encodeNullableURI(uRI4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        boolean boolean3 = longList1.equals((java.lang.Object) 6);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = longList1.getAreaNumber();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) 100);
        byte byte10 = binaryEncoder6.internalEncodeAttributeType((byte) -1);
        try {
            uShort4.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 100 + "'", byte8 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -1 + "'", byte10 == (byte) -1);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(14);
        longList1.trimToSize();
        java.util.Iterator<java.lang.Long> longItor3 = longList1.iterator();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        java.lang.Short short9 = binaryDecoder8.decodeNullableShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element10 = longList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longItor3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + short9 + "' != '" + (short) -64 + "'", short9.equals((short) -64));
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray11 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList12, uRIArray11);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19, byteArray18);
        boolean boolean22 = byteList19.add((java.lang.Byte) (byte) 100);
        boolean boolean23 = uRIList12.containsAll((java.util.Collection<java.lang.Byte>) byteList19);
        boolean boolean24 = strList9.containsAll((java.util.Collection<java.lang.Byte>) byteList19);
        boolean boolean25 = shortList4.contains((java.lang.Object) byteList19);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList31 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList31, byteArray30);
        boolean boolean34 = byteList31.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
        boolean boolean43 = byteList40.add((java.lang.Byte) (byte) 100);
        boolean boolean44 = byteList31.addAll((java.util.Collection<java.lang.Byte>) byteList40);
        java.lang.Object obj45 = byteList31.clone();
        boolean boolean46 = shortList4.retainAll((java.util.Collection<java.lang.Byte>) byteList31);
        shortList4.clear();
        org.ccsds.moims.mo.mal.structures.URIList uRIList48 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int49 = uRIList48.getTypeShortForm();
        java.lang.Integer int50 = uRIList48.getTypeShortForm();
        java.lang.Object obj51 = uRIList48.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream52 = uRIList48.stream();
        boolean boolean53 = shortList4.equals((java.lang.Object) uRIStream52);
        java.lang.Short[] shortArray56 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList57 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList57, shortArray56);
        java.util.ListIterator<java.lang.Short> shortItor59 = shortList57.listIterator();
        java.lang.Double[] doubleArray65 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList66 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList66, doubleArray65);
        org.ccsds.moims.mo.mal.structures.OctetList octetList68 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = octetList68.getServiceNumber();
        boolean boolean70 = doubleList66.containsAll((java.util.Collection<java.lang.Byte>) octetList68);
        boolean boolean71 = shortList57.retainAll((java.util.Collection<java.lang.Byte>) octetList68);
        boolean boolean72 = shortList4.contains((java.lang.Object) shortList57);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject73 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId74 = eventCOMObject73.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier75 = eventCOMObject73.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject76 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject76.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType81 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription82 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType81);
        eventCOMObject76.setObjType(objectType81);
        java.lang.Long long84 = eventCOMObject76.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId85 = eventCOMObject76.getObjectId();
        eventCOMObject73.setSource(objectId85);
        int int87 = shortList57.indexOf((java.lang.Object) eventCOMObject73);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(uRIArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-18) + "'", int49.equals((-18)));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-18) + "'", int50.equals((-18)));
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(uRIStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertNotNull(shortItor59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertNotNull(uShort69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertNull(objectId74);
        org.junit.Assert.assertNull(identifier75);
        org.junit.Assert.assertNotNull(objectType81);
        org.junit.Assert.assertNotNull(subscription82);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 4294967295L + "'", long84.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(16);
        java.lang.Integer int2 = uShortList1.getTypeShortForm();
        java.lang.Long long3 = uShortList1.getShortForm();
        uShortList1.clear();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) 100);
        byte byte10 = binaryEncoder6.internalEncodeAttributeType((byte) -1);
        try {
            uShortList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-10) + "'", int2.equals((-10)));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265078L + "'", long3.equals(281475010265078L));
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 100 + "'", byte8 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -1 + "'", byte10 == (byte) -1);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Float float12 = binaryDecoder11.decodeFloat();
        java.lang.Boolean boolean13 = binaryDecoder11.decodeBoolean();
        java.lang.Float float14 = binaryDecoder11.decodeFloat();
        try {
            java.lang.Float float15 = binaryDecoder11.decodeFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 7.0E-44f + "'", float12.equals(7.0E-44f));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13.equals(true));
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14.equals(0.0f));
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str1 = identifier0.toString();
        java.lang.Integer int2 = identifier0.getTypeShortForm();
        java.lang.String str3 = identifier0.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = identifier0.getAreaVersion();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) 100);
        byte byte10 = binaryEncoder6.internalEncodeAttributeType((byte) 10);
        try {
            uOctet4.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 6 + "'", int2.equals(6));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 100 + "'", byte8 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 10 + "'", byte10 == (byte) 10);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 1);
        java.util.Iterator<java.lang.Double> doubleItor2 = doubleList1.iterator();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        byte byte6 = binaryEncoder4.internalEncodeAttributeType((byte) 100);
        byte byte8 = binaryEncoder4.internalEncodeAttributeType((byte) -1);
        byte byte10 = binaryEncoder4.internalEncodeAttributeType((byte) 1);
        try {
            doubleList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(doubleItor2);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -1 + "'", byte8 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 1 + "'", byte10 == (byte) 1);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        doubleList2.ensureCapacity((-1));
        doubleList2.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream15 = doubleList2.parallelStream();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity18 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        int int19 = doubleList2.lastIndexOf((java.lang.Object) objectTypeHolderEntity18);
        java.lang.Long long20 = objectTypeHolderEntity18.getObjectType();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(doubleStream15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 281474993487879L + "'", long20.equals(281474993487879L));
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeOctet((java.lang.Byte) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.lang.Long long4 = doubleList1.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream5 = doubleList1.parallelStream();
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList13 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList13, shortArray12);
        java.util.ListIterator<java.lang.Short> shortItor15 = shortList13.listIterator();
        int int16 = doubleList8.indexOf((java.lang.Object) shortList13);
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean18 = blob17.isURLBased();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.Element element24 = blob17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
        boolean boolean25 = doubleList8.contains((java.lang.Object) blob17);
        java.util.ListIterator<java.lang.Double> doubleItor27 = doubleList8.listIterator(1);
        doubleList8.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray29 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList30, uShortArray29);
        uShortList30.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet33 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element34 = uOctet33.createElement();
        int int35 = uShortList30.indexOf((java.lang.Object) element34);
        boolean boolean37 = uShortList30.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor38 = uShortList30.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean40 = uShortList30.add(uShort39);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        boolean boolean59 = byteList46.addAll((java.util.Collection<java.lang.Byte>) byteList55);
        java.lang.Object obj60 = byteList46.clone();
        boolean boolean61 = uShortList30.removeAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean62 = doubleList8.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean63 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet64 = doubleList1.getAreaVersion();
        short short65 = uOctet64.getValue();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265083L + "'", long4.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(shortItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(doubleItor27);
        org.junit.Assert.assertNotNull(uShortArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uOctet33);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertNotNull(uShortItor38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertNotNull(uOctet64);
        org.junit.Assert.assertTrue("'" + short65 + "' != '" + (short) 1 + "'", short65 == (short) 1);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.Identifier identifier4 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = identifier4.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = identifier4.getAreaVersion();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.Blob blob13 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray10);
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray10, 14, 18);
        blob16.detach();
        boolean boolean18 = identifier4.equals((java.lang.Object) blob16);
        java.lang.String str19 = identifier4.getValue();
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        org.ccsds.moims.mo.com.structures.ObjectType objectType3 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487878L);
        java.lang.Long long4 = esa.mo.com.impl.util.HelperCOM.generateSubKey(objectType3);
        try {
            java.lang.Integer int5 = fastObjectType1.getObjectTypeId(objectType3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(objectType3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487878L + "'", long4.equals(281474993487878L));
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.ShortList shortList3 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList3.getAreaNumber();
        java.lang.Object[] objArray5 = shortList3.toArray();
        java.lang.Long long6 = shortList3.getShortForm();
        java.lang.Long long7 = shortList3.getShortForm();
        java.lang.Object[] objArray8 = shortList3.toArray();
        org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
        boolean boolean18 = byteList15.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        boolean boolean28 = byteList15.addAll((java.util.Collection<java.lang.Byte>) byteList24);
        java.lang.Object obj29 = byteList15.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream30 = byteList15.stream();
        boolean boolean31 = floatList9.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        byteList15.ensureCapacity((-4));
        byteList15.clear();
        boolean boolean35 = shortList3.retainAll((java.util.Collection<java.lang.Byte>) byteList15);
        boolean boolean36 = integerList1.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        java.lang.Long long37 = integerList1.getShortForm();
        integerList1.ensureCapacity(65535);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList41 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort42 = doubleList41.getAreaNumber();
        java.lang.Object obj43 = doubleList41.clone();
        byte[] byteArray47 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder48 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray47);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder49 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray47);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet50 = binaryDecoder49.decodeNullableUOctet();
        int int51 = doubleList41.lastIndexOf((java.lang.Object) binaryDecoder49);
        byte[] byteArray52 = binaryDecoder49.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder53 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray52);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder55 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray52, (int) (short) 100);
        try {
            org.ccsds.moims.mo.mal.structures.Element element56 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265079L + "'", long6.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265079L + "'", long7.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 281475010265077L + "'", long37.equals(281475010265077L));
        org.junit.Assert.assertNotNull(uShort42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(uOctet50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(byteArray52);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        java.lang.String str3 = duration1.toString();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Blob blob10 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray7);
        org.ccsds.moims.mo.mal.structures.Blob blob13 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray7, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger15 = binaryDecoder14.decodeUInteger();
        byte[] byteArray16 = binaryDecoder14.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = duration1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet19 = duration1.getAreaVersion();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0.0" + "'", str3.equals("0.0"));
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uInteger15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(uOctet19);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Duration duration23 = binaryDecoder21.decodeDuration();
        int int24 = integerList1.lastIndexOf((java.lang.Object) binaryDecoder21);
        java.lang.Short short25 = binaryDecoder21.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob26 = binaryDecoder21.decodeNullableBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + short25 + "' != '" + (short) -64 + "'", short25.equals((short) -64));
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Short short11 = binaryDecoder9.decodeNullableShort();
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob12 = binaryDecoder9.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + short11 + "' != '" + (short) -64 + "'", short11.equals((short) -64));
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = binaryDecoder9.decodeUShort();
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong14 = binaryDecoder9.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(uShort13);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder5.decodeNullableUInteger();
        try {
            java.lang.String str10 = binaryDecoder5.decodeNullableString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uInteger9);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        java.lang.Integer int6 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList8 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor10 = uShortList8.listIterator((int) (byte) 0);
        java.lang.Integer int11 = uShortList8.getTypeShortForm();
        int int12 = floatList0.lastIndexOf((java.lang.Object) uShortList8);
        java.lang.String str13 = floatList0.toString();
        boolean boolean14 = floatList0.isEmpty();
        java.io.OutputStream outputStream15 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder16 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream15);
        try {
            floatList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-4) + "'", int6.equals((-4)));
        org.junit.Assert.assertNotNull(uShortItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-10) + "'", int11.equals((-10)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[]" + "'", str13.equals("[]"));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, (int) (short) 100);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, 13);
        java.math.BigInteger bigInteger18 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong19 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger18);
        java.lang.String str20 = uLong19.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet21 = uLong19.getAreaVersion();
        java.lang.Long long22 = uLong19.getShortForm();
        try {
            org.ccsds.moims.mo.mal.structures.Element element23 = binaryDecoder17.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uLong19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 13");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(bigInteger18);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "18446744073709551615" + "'", str20.equals("18446744073709551615"));
        org.junit.Assert.assertNotNull(uOctet21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281474993487886L + "'", long22.equals(281474993487886L));
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        boolean boolean18 = strList3.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        java.util.Iterator<java.lang.String> strItor19 = strList3.iterator();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer20 = new esa.mo.com.impl.util.COMServicesConsumer();
        cOMServicesConsumer20.closeConnections();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl22 = cOMServicesConsumer20.getEventService();
        boolean boolean23 = strList3.contains((java.lang.Object) cOMServicesConsumer20);
        java.util.ListIterator<java.lang.String> strItor24 = strList3.listIterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNull(eventConsumerServiceImpl22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(strItor24);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeInteger((java.lang.Integer) 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        java.math.BigInteger bigInteger14 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong15 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger14);
        java.lang.Integer int16 = uLong15.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element17 = uLong15.createElement();
        org.ccsds.moims.mo.mal.structures.Element element18 = uLong15.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet19 = uLong15.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = uLong15.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element21 = binaryDecoder13.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort20);
        try {
            binaryEncoder1.encodeUShort(uShort20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(bigInteger14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 14 + "'", int16.equals(14));
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(uOctet19);
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertNotNull(element21);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject12.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType17 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription18 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType17);
        eventCOMObject12.setObjType(objectType17);
        eventCOMObject3.setObjType(objectType17);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("18446744073709551615", objectType17);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList22 = fastObjectType1.getObjectTypeIds(objectType17);
        try {
            fastObjectType1.resetFastObjectType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(integerList22);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = uRIList26.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean38 = strList23.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean39 = doubleList2.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.String str40 = doubleList2.toString();
        try {
            java.util.List<java.lang.Double> doubleList43 = doubleList2.subList(16, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[0.0]" + "'", str40.equals("[0.0]"));
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        java.util.ListIterator<java.lang.Short> shortItor6 = shortList4.listIterator();
        int int7 = shortList4.size();
        java.lang.Class<?> wildcardClass8 = shortList4.getClass();
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = shortList9.getAreaNumber();
        java.lang.Object[] objArray11 = shortList9.toArray();
        java.lang.Long long12 = shortList9.getShortForm();
        java.lang.Object[] objArray13 = shortList9.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = shortList9.getServiceNumber();
        java.lang.Integer int15 = shortList9.getTypeShortForm();
        int int16 = shortList4.indexOf((java.lang.Object) shortList9);
        org.ccsds.moims.mo.mal.structures.StringList stringList18 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int19 = stringList18.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = stringList18.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray21 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList22, uRIArray21);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        boolean boolean42 = byteList29.addAll((java.util.Collection<java.lang.Byte>) byteList38);
        int int44 = byteList38.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean45 = uRIList22.retainAll((java.util.Collection<java.lang.Byte>) byteList38);
        int int46 = stringList18.lastIndexOf((java.lang.Object) uRIList22);
        java.lang.Long long47 = stringList18.getShortForm();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList49 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = doubleList49.getAreaNumber();
        java.lang.Object obj51 = doubleList49.clone();
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder56 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray55);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder57 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray55);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = binaryDecoder57.decodeNullableUOctet();
        int int59 = doubleList49.lastIndexOf((java.lang.Object) binaryDecoder57);
        java.util.stream.Stream<java.lang.Double> doubleStream60 = doubleList49.stream();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer61 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl62 = cOMServicesConsumer61.getArchiveService();
        cOMServicesConsumer61.closeConnections();
        cOMServicesConsumer61.closeConnections();
        boolean boolean65 = doubleList49.contains((java.lang.Object) cOMServicesConsumer61);
        boolean boolean66 = stringList18.contains((java.lang.Object) boolean65);
        java.lang.String str67 = stringList18.toString();
        int int68 = shortList4.lastIndexOf((java.lang.Object) stringList18);
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = stringList18.getAreaNumber();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(shortItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281475010265079L + "'", long12.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-9) + "'", int15.equals((-9)));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-15) + "'", int19.equals((-15)));
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertNotNull(uRIArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 281475010265073L + "'", long47.equals(281475010265073L));
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(doubleStream60);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "[]" + "'", str67.equals("[]"));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(uShort69);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        java.lang.Double double6 = binaryDecoder5.decodeNullableDouble();
        boolean boolean7 = octetList0.remove((java.lang.Object) binaryDecoder5);
        try {
            java.lang.Float float8 = binaryDecoder5.decodeFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals((double) double6, Double.NaN, 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.math.BigInteger bigInteger6 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong7 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger6);
        java.lang.Integer int8 = uLong7.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element9 = uLong7.createElement();
        org.ccsds.moims.mo.mal.structures.Element element10 = uLong7.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = uLong7.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uLong7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element13 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort12);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort14 = binaryDecoder5.decodeNullableUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 14 + "'", int8.equals(14));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(element13);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = blob12.getAreaNumber();
        byte[] byteArray14 = blob12.getValue();
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14);
        org.ccsds.moims.mo.mal.structures.LongList longList16 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray17 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList18 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList18, uRIArray17);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        boolean boolean29 = uRIList18.containsAll((java.util.Collection<java.lang.Byte>) byteList25);
        byteList25.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean33 = longList16.removeAll((java.util.Collection<java.lang.Byte>) byteList25);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = longList16.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet35 = uOctet34.getAreaVersion();
        boolean boolean36 = blob15.equals((java.lang.Object) uOctet35);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(uRIArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertNotNull(uOctet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.ShortList shortList2 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = shortList2.getAreaNumber();
        java.lang.Object[] objArray4 = shortList2.toArray();
        java.lang.Long long5 = shortList2.getShortForm();
        java.lang.Long long6 = shortList2.getShortForm();
        java.lang.Object[] objArray7 = shortList2.toArray();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = shortList2.getAreaVersion();
        java.util.stream.Stream<java.lang.Short> shortStream9 = shortList2.parallelStream();
        try {
            binaryEncoder1.encodeElement((org.ccsds.moims.mo.mal.structures.Element) shortList2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265079L + "'", long5.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265079L + "'", long6.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(shortStream9);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.URIList uRIList8 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int9 = uRIList8.getTypeShortForm();
        java.lang.Integer int10 = uRIList8.getTypeShortForm();
        java.lang.Object obj11 = uRIList8.clone();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        int int18 = uRIList8.lastIndexOf((java.lang.Object) binaryDecoder17);
        java.lang.Boolean boolean19 = binaryDecoder17.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration20 = binaryDecoder17.decodeDuration();
        java.lang.Integer int21 = duration20.getTypeShortForm();
        try {
            binaryEncoder1.encodeDuration(duration20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-18) + "'", int9.equals((-18)));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19.equals(true));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21.equals(3));
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        org.ccsds.moims.mo.mal.structures.ULong uLong7 = binaryDecoder5.decodeNullableULong();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration8 = binaryDecoder5.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertNull(uLong7);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeURI();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute7 = binaryDecoder4.decodeNullableAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(uRI6);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList1.getAreaNumber();
        java.lang.Object[] objArray3 = shortList1.toArray();
        boolean boolean4 = floatList0.remove((java.lang.Object) shortList1);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList18 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList18, booleanArray17);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = byteList25.addAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.lang.Object obj39 = byteList25.clone();
        boolean boolean40 = booleanList18.contains((java.lang.Object) byteList25);
        boolean boolean41 = longList13.remove((java.lang.Object) boolean40);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray47 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList48 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList48, uRIArray47);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        boolean boolean59 = uRIList48.containsAll((java.util.Collection<java.lang.Byte>) byteList55);
        boolean boolean60 = strList45.containsAll((java.util.Collection<java.lang.Byte>) byteList55);
        int int61 = longList13.lastIndexOf((java.lang.Object) boolean60);
        java.lang.Object obj62 = longList13.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList63 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int64 = uRIList63.getTypeShortForm();
        java.lang.Integer int65 = uRIList63.getTypeShortForm();
        java.lang.Object obj66 = uRIList63.clone();
        byte[] byteArray70 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder71 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder72 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        int int73 = uRIList63.lastIndexOf((java.lang.Object) binaryDecoder72);
        boolean boolean74 = longList13.remove((java.lang.Object) uRIList63);
        boolean boolean76 = longList13.add((java.lang.Long) 281475010265078L);
        boolean boolean77 = shortList1.remove((java.lang.Object) 281475010265078L);
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = shortList1.getAreaNumber();
        java.util.stream.Stream<java.lang.Short> shortStream79 = shortList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet80 = shortList1.getAreaVersion();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(uRIArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-18) + "'", int64.equals((-18)));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-18) + "'", int65.equals((-18)));
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertNotNull(uShort78);
        org.junit.Assert.assertNotNull(shortStream79);
        org.junit.Assert.assertNotNull(uOctet80);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray2 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList3, uRIArray2);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList10 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList10, byteArray9);
        boolean boolean13 = byteList10.add((java.lang.Byte) (byte) 100);
        boolean boolean14 = uRIList3.containsAll((java.util.Collection<java.lang.Byte>) byteList10);
        int int16 = uRIList3.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList31 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList31, byteArray30);
        boolean boolean34 = byteList31.add((java.lang.Byte) (byte) 100);
        boolean boolean35 = byteList22.addAll((java.util.Collection<java.lang.Byte>) byteList31);
        int int37 = byteList31.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean38 = uRIList3.removeAll((java.util.Collection<java.lang.Byte>) byteList31);
        int int39 = uShortList1.indexOf((java.lang.Object) uRIList3);
        java.io.OutputStream outputStream40 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder41 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream40);
        byte byte43 = binaryEncoder41.internalEncodeAttributeType((byte) 100);
        byte byte45 = binaryEncoder41.internalEncodeAttributeType((byte) 10);
        try {
            uShortList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + byte43 + "' != '" + (byte) 100 + "'", byte43 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte45 + "' != '" + (byte) 10 + "'", byte45 == (byte) 10);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeLong((java.lang.Long) 281474993487878L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableBoolean((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger12 = binaryDecoder11.decodeUInteger();
        java.lang.Float[] floatArray18 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList19 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList19, floatArray18);
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList23 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList23, booleanArray22);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        boolean boolean43 = byteList30.addAll((java.util.Collection<java.lang.Byte>) byteList39);
        java.lang.Object obj44 = byteList30.clone();
        boolean boolean45 = booleanList23.contains((java.lang.Object) byteList30);
        int int46 = floatList19.lastIndexOf((java.lang.Object) booleanList23);
        boolean boolean47 = floatList19.isEmpty();
        boolean boolean48 = uInteger12.equals((java.lang.Object) boolean47);
        try {
            binaryEncoder1.encodeUInteger(uInteger12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(uInteger12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.URIList uRIList4 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int5 = uRIList4.size();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor6 = uRIList4.iterator();
        java.lang.Long[] longArray14 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList15 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList15, longArray14);
        java.lang.Object obj17 = longList15.clone();
        java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList20 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList20, booleanArray19);
        java.lang.Byte[] byteArray26 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList27 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList27, byteArray26);
        boolean boolean30 = byteList27.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray35 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList36 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList36, byteArray35);
        boolean boolean39 = byteList36.add((java.lang.Byte) (byte) 100);
        boolean boolean40 = byteList27.addAll((java.util.Collection<java.lang.Byte>) byteList36);
        java.lang.Object obj41 = byteList27.clone();
        boolean boolean42 = booleanList20.contains((java.lang.Object) byteList27);
        boolean boolean43 = longList15.remove((java.lang.Object) boolean42);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray49 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList50 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList50, uRIArray49);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
        boolean boolean60 = byteList57.add((java.lang.Byte) (byte) 100);
        boolean boolean61 = uRIList50.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean62 = strList47.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        int int63 = longList15.lastIndexOf((java.lang.Object) boolean62);
        java.lang.Object obj64 = longList15.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList65 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int66 = uRIList65.getTypeShortForm();
        java.lang.Integer int67 = uRIList65.getTypeShortForm();
        java.lang.Object obj68 = uRIList65.clone();
        byte[] byteArray72 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder73 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray72);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder74 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray72);
        int int75 = uRIList65.lastIndexOf((java.lang.Object) binaryDecoder74);
        boolean boolean76 = longList15.remove((java.lang.Object) uRIList65);
        org.ccsds.moims.mo.mal.structures.UShort uShort77 = uRIList65.getAreaNumber();
        boolean boolean78 = uRIList4.equals((java.lang.Object) uShort77);
        try {
            binaryEncoder1.encodeNullableUShort(uShort77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(uRIItor6);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(uRIArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-18) + "'", int66.equals((-18)));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertNotNull(uShort77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = uRIList26.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean38 = strList23.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean39 = doubleList2.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.String str40 = doubleList2.toString();
        java.util.stream.Stream<java.lang.Double> doubleStream41 = doubleList2.stream();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[0.0]" + "'", str40.equals("[0.0]"));
        org.junit.Assert.assertNotNull(doubleStream41);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) (-11));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("[-1.0]");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList2 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = integerList2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = integerList2.getAreaNumber();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Element element10 = uShort4.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
        java.lang.Float float11 = binaryDecoder9.decodeFloat();
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = uRI1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertEquals((float) float11, Float.NaN, 0);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.String str20 = blob11.getURL();
        org.ccsds.moims.mo.mal.structures.Element element21 = blob11.createElement();
        int int22 = blob11.getOffset();
        java.lang.String str23 = blob11.getURL();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Long[] longArray25 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList26 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList26, longArray25);
        java.lang.Object obj28 = longList26.clone();
        int int29 = strList3.lastIndexOf((java.lang.Object) longList26);
        java.lang.Object obj30 = longList26.clone();
        org.ccsds.moims.mo.mal.structures.ShortList shortList31 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.Element element32 = shortList31.createElement();
        org.ccsds.moims.mo.mal.structures.FloatList floatList33 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element34 = floatList33.createElement();
        java.lang.Integer int35 = floatList33.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.ShortList shortList36 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = shortList36.getAreaNumber();
        java.lang.Object[] objArray38 = shortList36.toArray();
        java.lang.Long long39 = shortList36.getShortForm();
        java.lang.Long long40 = shortList36.getShortForm();
        java.lang.Object[] objArray41 = shortList36.toArray();
        org.ccsds.moims.mo.mal.structures.FloatList floatList42 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
        boolean boolean60 = byteList57.add((java.lang.Byte) (byte) 100);
        boolean boolean61 = byteList48.addAll((java.util.Collection<java.lang.Byte>) byteList57);
        java.lang.Object obj62 = byteList48.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream63 = byteList48.stream();
        boolean boolean64 = floatList42.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        byteList48.ensureCapacity((-4));
        byteList48.clear();
        boolean boolean68 = shortList36.retainAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean69 = floatList33.removeAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean70 = shortList31.retainAll((java.util.Collection<java.lang.Byte>) byteList48);
        int int71 = longList26.lastIndexOf((java.lang.Object) shortList31);
        java.lang.Long long72 = shortList31.getShortForm();
        byte[] byteArray76 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder77 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder78 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76);
        java.lang.Integer int79 = binaryDecoder78.decodeInteger();
        org.ccsds.moims.mo.mal.structures.ULong uLong80 = binaryDecoder78.decodeNullableULong();
        try {
            org.ccsds.moims.mo.mal.structures.Element element81 = shortList31.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-4) + "'", int35.equals((-4)));
        org.junit.Assert.assertNotNull(uShort37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 281475010265079L + "'", long39.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 281475010265079L + "'", long40.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(byteStream63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 281475010265079L + "'", long72.equals(281475010265079L));
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 50 + "'", int79.equals(50));
        org.junit.Assert.assertNull(uLong80);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20, shortArray19);
        java.util.ListIterator<java.lang.Short> shortItor22 = shortList20.listIterator();
        int int23 = doubleList15.indexOf((java.lang.Object) shortList20);
        org.ccsds.moims.mo.mal.structures.Blob blob24 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean25 = blob24.isURLBased();
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.Element element31 = blob24.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder30);
        boolean boolean32 = doubleList15.contains((java.lang.Object) blob24);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray38 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList39, uRIArray38);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        boolean boolean50 = uRIList39.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean51 = strList36.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean52 = doubleList15.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55, doubleArray54);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList60 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList60, shortArray59);
        java.util.ListIterator<java.lang.Short> shortItor62 = shortList60.listIterator();
        int int63 = doubleList55.indexOf((java.lang.Object) shortList60);
        org.ccsds.moims.mo.mal.structures.Blob blob64 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean65 = blob64.isURLBased();
        byte[] byteArray69 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder70 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray69);
        org.ccsds.moims.mo.mal.structures.Element element71 = blob64.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder70);
        boolean boolean72 = doubleList55.contains((java.lang.Object) blob64);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray78 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList79 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList79, uRIArray78);
        java.lang.Byte[] byteArray85 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList86 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList86, byteArray85);
        boolean boolean89 = byteList86.add((java.lang.Byte) (byte) 100);
        boolean boolean90 = uRIList79.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean91 = strList76.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean92 = doubleList55.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean93 = doubleList15.removeAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean94 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList86);
        java.lang.Object obj95 = doubleList1.clone();
        java.util.Collection<java.lang.Byte> byteCollection96 = null;
        try {
            boolean boolean97 = doubleList1.removeAll(byteCollection96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(shortItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uRIArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(shortItor62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uRIArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = new org.ccsds.moims.mo.mal.structures.UOctet((short) 100);
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) -1);
        try {
            uOctet1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        strList3.ensureCapacity(16);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI10 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject8.setSourceURI(uRI10);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = uRI10.getAreaVersion();
        boolean boolean13 = strList3.contains((java.lang.Object) uRI10);
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = uRI10.getAreaNumber();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(uShort14);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = binaryDecoder5.decodeUShort();
        java.lang.Integer int10 = uShort9.getTypeShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10.equals(10));
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uInteger6.getAreaVersion();
        java.lang.Long long8 = uInteger6.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList10 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        int int12 = uShortList10.lastIndexOf((java.lang.Object) true);
        boolean boolean13 = uInteger6.equals((java.lang.Object) int12);
        java.lang.Integer int14 = uInteger6.getTypeShortForm();
        java.io.OutputStream outputStream15 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder16 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream15);
        byte byte18 = binaryEncoder16.internalEncodeAttributeType((byte) 100);
        try {
            uInteger6.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487884L + "'", long8.equals(281474993487884L));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14.equals(12));
        org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 100 + "'", byte18 == (byte) 100);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("");
        dictionary0.defineWord((java.lang.Integer) (-2), "");
        try {
            java.lang.String str7 = dictionary0.getWord((java.lang.Integer) 52);
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: The word for the id: 52 is unknown!");
        } catch (java.lang.Exception e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableString("0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element1 = floatList0.createElement();
        java.lang.Integer int2 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.OctetList octetList3 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = octetList3.getServiceNumber();
        java.lang.Integer int5 = octetList3.getTypeShortForm();
        boolean boolean6 = floatList0.equals((java.lang.Object) int5);
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime12 = binaryDecoder11.decodeFineTime();
        java.lang.Long long13 = binaryDecoder11.decodeLong();
        int int14 = floatList0.lastIndexOf((java.lang.Object) binaryDecoder11);
        try {
            java.lang.Byte byte15 = binaryDecoder11.decodeNullableOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-4) + "'", int2.equals((-4)));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-7) + "'", int5.equals((-7)));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(fineTime12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-64L) + "'", long13.equals((-64L)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.Union union9 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        boolean boolean16 = union9.equals((java.lang.Object) byteArray13);
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13);
        boolean boolean18 = blob17.isURLBased();
        try {
            binaryEncoder1.encodeNullableBlob(blob17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList4 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray5 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList6, uShortArray5);
        uShortList6.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element10 = uOctet9.createElement();
        int int11 = uShortList6.indexOf((java.lang.Object) element10);
        boolean boolean12 = booleanList4.contains((java.lang.Object) uShortList6);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = booleanList4.getAreaNumber();
        try {
            binaryEncoder1.encodeNullableUShort(uShort13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(uShortArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(uShort13);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        boolean boolean19 = byteList16.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        boolean boolean29 = byteList16.addAll((java.util.Collection<java.lang.Byte>) byteList25);
        int int31 = byteList25.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean32 = longList8.containsAll((java.util.Collection<java.lang.Byte>) byteList25);
        byte[] byteArray36 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray36);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder38 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray36);
        org.ccsds.moims.mo.mal.structures.Blob blob39 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray36);
        org.ccsds.moims.mo.mal.structures.Blob blob42 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray36, 14, 18);
        boolean boolean43 = longList8.equals((java.lang.Object) 18);
        try {
            java.lang.Long long46 = longList8.set((-10), (java.lang.Long) 281474993487876L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator34 = booleanList10.spliterator();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList43 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray45 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList46 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList46, uRIArray45);
        java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53, byteArray52);
        boolean boolean56 = byteList53.add((java.lang.Byte) (byte) 100);
        boolean boolean57 = uRIList46.containsAll((java.util.Collection<java.lang.Byte>) byteList53);
        boolean boolean58 = intList43.removeAll((java.util.Collection<java.lang.Byte>) byteList53);
        org.ccsds.moims.mo.mal.structures.Union union60 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        int int61 = byteList53.lastIndexOf((java.lang.Object) union60);
        boolean boolean62 = booleanList10.removeAll((java.util.Collection<java.lang.Byte>) byteList53);
        java.lang.String str63 = booleanList10.toString();
        booleanList10.clear();
        byte[] byteArray68 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder69 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray68);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder70 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray68);
        org.ccsds.moims.mo.mal.structures.Blob blob71 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray68);
        org.ccsds.moims.mo.mal.structures.Blob blob74 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray68, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder75 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray68);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger76 = binaryDecoder75.decodeUInteger();
        byte[] byteArray77 = binaryDecoder75.getRemainingEncodedData();
        boolean boolean78 = booleanList10.remove((java.lang.Object) byteArray77);
        java.lang.Object obj79 = null;
        int int80 = booleanList10.lastIndexOf(obj79);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(booleanSpliterator34);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uRIArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "[false]" + "'", str63.equals("[false]"));
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertNotNull(uInteger76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.ULong uLong14 = binaryDecoder13.decodeNullableULong();
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = binaryDecoder13.decodeUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNull(uLong14);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) 2.47E-322d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter(5);
        java.util.ArrayList<byte[]> byteArrayList2 = archiveSyncGenAdapter1.getReceivedChunks();
        long long3 = archiveSyncGenAdapter1.noUpdatesReceivedForThisDuration();
        org.junit.Assert.assertNotNull(byteArrayList2);
// flaky:         org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1558616195204L + "'", long3 == 1558616195204L);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = stringList1.getAreaNumber();
        java.lang.Integer int3 = stringList1.getTypeShortForm();
        java.lang.Long long4 = stringList1.getShortForm();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        int int19 = uRIList6.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = byteList25.addAll((java.util.Collection<java.lang.Byte>) byteList34);
        int int40 = byteList34.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean41 = uRIList6.removeAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.lang.Double[] doubleArray47 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList48 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList48, doubleArray47);
        org.ccsds.moims.mo.mal.structures.OctetList octetList50 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = octetList50.getServiceNumber();
        boolean boolean52 = doubleList48.containsAll((java.util.Collection<java.lang.Byte>) octetList50);
        boolean boolean53 = uRIList6.retainAll((java.util.Collection<java.lang.Byte>) octetList50);
        java.lang.Object obj54 = uRIList6.clone();
        org.ccsds.moims.mo.mal.structures.Time time55 = new org.ccsds.moims.mo.mal.structures.Time();
        int int56 = uRIList6.indexOf((java.lang.Object) time55);
        long long57 = time55.getValue();
        java.lang.Integer int58 = time55.getTypeShortForm();
        byte[] byteArray62 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder63 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray62);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder64 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray62);
        java.lang.Byte byte65 = binaryDecoder64.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element66 = time55.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder64);
        try {
            org.ccsds.moims.mo.mal.structures.Element element67 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-15) + "'", int3.equals((-15)));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265073L + "'", long4.equals(281475010265073L));
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 16 + "'", int58.equals(16));
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + byte65 + "' != '" + (byte) 100 + "'", byte65.equals((byte) 100));
        org.junit.Assert.assertNotNull(element66);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList(12);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList1.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Integer int9 = binaryDecoder8.decodeInteger();
        org.ccsds.moims.mo.mal.structures.Element element10 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute11 = binaryDecoder8.decodeNullableAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9.equals(50));
        org.junit.Assert.assertNotNull(element10);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder5.decodeNullableUInteger();
        java.lang.Long long10 = uInteger9.getShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487884L + "'", long10.equals(281474993487884L));
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        org.ccsds.moims.mo.com.structures.ObjectId objectId8 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = identifier9.getAreaVersion();
        java.lang.String str11 = identifier9.getValue();
        eventCOMObject0.setNetworkZone(identifier9);
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime18 = binaryDecoder17.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.Element element19 = identifier9.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        try {
            java.lang.Boolean boolean20 = binaryDecoder17.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertNull(objectId8);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(fineTime18);
        org.junit.Assert.assertNotNull(element19);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.Identifier identifier6 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = identifier6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = identifier6.getAreaVersion();
        java.lang.String str9 = identifier6.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = identifier6.getAreaNumber();
        try {
            binaryEncoder1.encodeNullableUShort(uShort10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(uShort10);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element5 = doubleList1.createElement();
        java.io.OutputStream outputStream6 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder7 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream6);
        byte byte9 = binaryEncoder7.internalEncodeAttributeType((byte) 100);
        try {
            doubleList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int7 = uRIList6.getTypeShortForm();
        java.lang.Integer int8 = uRIList6.getTypeShortForm();
        java.lang.Object obj9 = uRIList6.clone();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = uRIList6.getAreaVersion();
        try {
            binaryEncoder1.encodeAttribute((org.ccsds.moims.mo.mal.structures.Attribute) uOctet10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-18) + "'", int7.equals((-18)));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(uOctet10);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.stream.Stream<java.lang.Long> longStream17 = longList13.parallelStream();
        longList13.add(2, (java.lang.Long) 281475010265070L);
        java.util.stream.Stream<java.lang.Long> longStream21 = longList13.parallelStream();
        org.ccsds.moims.mo.mal.structures.URI uRI23 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str24 = uRI23.toString();
        int int25 = longList13.indexOf((java.lang.Object) uRI23);
        org.ccsds.moims.mo.mal.structures.URIList uRIList26 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int27 = uRIList26.getTypeShortForm();
        java.lang.Integer int28 = uRIList26.getTypeShortForm();
        java.lang.Object obj29 = uRIList26.clone();
        byte[] byteArray33 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder34 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder35 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        int int36 = uRIList26.lastIndexOf((java.lang.Object) binaryDecoder35);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet37 = binaryDecoder35.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Element element38 = uRI23.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(longStream17);
        org.junit.Assert.assertNotNull(longStream21);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-18) + "'", int27.equals((-18)));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-18) + "'", int28.equals((-18)));
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(uOctet37);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int1 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element2 = time0.createElement();
        java.lang.Integer int3 = time0.getTypeShortForm();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            time0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 16 + "'", int1.equals(16));
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 16 + "'", int3.equals(16));
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = stringList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element4 = stringList1.createElement();
        org.ccsds.moims.mo.mal.structures.Element element5 = stringList1.createElement();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        java.lang.Byte byte12 = binaryDecoder11.decodeOctet();
        java.lang.Short short13 = binaryDecoder11.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element14 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 100 + "'", byte12.equals((byte) 100));
        org.junit.Assert.assertTrue("'" + short13 + "' != '" + (short) -64 + "'", short13.equals((short) -64));
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        uShortList1.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element5 = uOctet4.createElement();
        int int6 = uShortList1.indexOf((java.lang.Object) element5);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator7 = uShortList1.spliterator();
        uShortList1.clear();
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Integer int10 = shortList9.getTypeShortForm();
        byte[] byteArray14 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        org.ccsds.moims.mo.mal.structures.Blob blob16 = binaryDecoder15.decodeBlob();
        boolean boolean17 = shortList9.equals((java.lang.Object) blob16);
        org.ccsds.moims.mo.mal.structures.ShortList shortList18 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = shortList18.getAreaNumber();
        java.lang.Object[] objArray20 = shortList18.toArray();
        java.lang.Long long21 = shortList18.getShortForm();
        shortList18.ensureCapacity((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray24 = new org.ccsds.moims.mo.mal.structures.ShortList[] { shortList9, shortList18 };
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray25 = uShortList1.toArray(shortListArray24);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder31 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet32 = binaryDecoder31.decodeNullableUOctet();
        java.lang.Long long33 = uOctet32.getShortForm();
        int int34 = uShortList1.lastIndexOf((java.lang.Object) uOctet32);
        org.ccsds.moims.mo.mal.structures.ShortList shortList35 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.Element element36 = shortList35.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = shortList35.getAreaNumber();
        java.lang.Long long38 = shortList35.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = shortList35.getAreaNumber();
        boolean boolean40 = uShortList1.remove((java.lang.Object) uShort39);
        try {
            java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor42 = uShortList1.listIterator((-64));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -64");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(uShortSpliterator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-9) + "'", int10.equals((-9)));
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(blob16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 281475010265079L + "'", long21.equals(281475010265079L));
        org.junit.Assert.assertNotNull(shortListArray24);
        org.junit.Assert.assertNotNull(shortListArray25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(uOctet32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 281474993487880L + "'", long33.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(uShort37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 281475010265079L + "'", long38.equals(281475010265079L));
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        try {
            fastObjectType1.resetFastObjectType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList6 = eventCOMObject0.getDomain();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = eventCOMObject0.getNetworkZone();
        org.ccsds.moims.mo.mal.structures.Element element9 = eventCOMObject0.getBody();
        org.ccsds.moims.mo.mal.structures.Time time10 = eventCOMObject0.getTimestamp();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(identifierList6);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertNull(identifier8);
        org.junit.Assert.assertNull(element9);
        org.junit.Assert.assertNull(time10);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger5 = binaryDecoder4.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime6 = binaryDecoder4.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger5);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("");
        dictionary0.defineWord((java.lang.Integer) (-2), "");
        boolean boolean7 = dictionary0.exists((java.lang.Integer) 1);
        java.lang.Integer int9 = dictionary0.getWordId("[hi!, ]");
        java.lang.Integer int11 = dictionary0.getWordId("1");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9.equals(2));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11.equals(3));
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.Long long6 = identifier5.getShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList7 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element8 = booleanList7.createElement();
        int int10 = booleanList7.indexOf((java.lang.Object) 281474993487875L);
        boolean boolean11 = identifier5.equals((java.lang.Object) int10);
        java.lang.Integer int12 = identifier5.getTypeShortForm();
        java.lang.String str13 = identifier5.toString();
        try {
            binaryEncoder1.encodeIdentifier(identifier5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487878L + "'", long6.equals(281474993487878L));
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 6 + "'", int12.equals(6));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[hi!, ]" + "'", str13.equals("[hi!, ]"));
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        java.lang.Long long4 = shortList0.getShortForm();
        java.lang.Object[] objArray5 = shortList0.toArray();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = shortList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList7 = new org.ccsds.moims.mo.mal.structures.LongList();
        java.util.Iterator<java.lang.Long> longItor8 = longList7.iterator();
        org.ccsds.moims.mo.mal.structures.LongList longList9 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        boolean boolean21 = byteList18.add((java.lang.Byte) (byte) 100);
        boolean boolean22 = uRIList11.containsAll((java.util.Collection<java.lang.Byte>) byteList18);
        byteList18.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean26 = longList9.removeAll((java.util.Collection<java.lang.Byte>) byteList18);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = longList9.getAreaVersion();
        java.util.ListIterator<java.lang.Long> longItor28 = longList9.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList30 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        boolean boolean32 = longList30.equals((java.lang.Object) 6);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        boolean boolean51 = byteList38.addAll((java.util.Collection<java.lang.Byte>) byteList47);
        java.lang.Object obj52 = byteList38.clone();
        boolean boolean53 = longList30.containsAll((java.util.Collection<java.lang.Byte>) byteList38);
        org.ccsds.moims.mo.mal.structures.LongList[] longListArray54 = new org.ccsds.moims.mo.mal.structures.LongList[] { longList7, longList9, longList30 };
        org.ccsds.moims.mo.mal.structures.LongList[] longListArray55 = shortList0.toArray(longListArray54);
        java.lang.Object obj56 = shortList0.clone();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet57 = shortList0.getAreaVersion();
        java.io.OutputStream outputStream58 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder59 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream58);
        try {
            shortList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265079L + "'", long4.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(longItor8);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertNotNull(longItor28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(longListArray54);
        org.junit.Assert.assertNotNull(longListArray55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(uOctet57);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("[false]");
        boolean boolean4 = dictionary0.exists("hi!");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        org.ccsds.moims.mo.com.structures.ObjectType objectType3 = null;
        eventCOMObject0.setObjType(objectType3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject6.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = eventCOMObject6.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        java.lang.Long long17 = eventCOMObject9.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId18 = eventCOMObject9.getObjectId();
        eventCOMObject6.setSource(objectId18);
        org.ccsds.moims.mo.com.structures.ObjectId objectId20 = eventCOMObject6.getObjectId();
        eventCOMObject0.setSource(objectId20);
        java.lang.Long long22 = eventCOMObject0.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject23 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId24 = eventCOMObject23.getSource();
        org.ccsds.moims.mo.mal.structures.URI uRI25 = eventCOMObject23.getSourceURI();
        org.ccsds.moims.mo.mal.structures.Identifier identifier26 = eventCOMObject23.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject27 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId28 = eventCOMObject27.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType30 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject27.setObjType(objectType30);
        eventCOMObject23.setObjType(objectType30);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList33 = eventCOMObject23.getDomain();
        org.ccsds.moims.mo.com.structures.ObjectId objectId34 = eventCOMObject23.getObjectId();
        eventCOMObject0.setSource(objectId34);
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertNull(identifier8);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 4294967295L + "'", long17.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId18);
        org.junit.Assert.assertNotNull(objectId20);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(objectId24);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertNull(identifier26);
        org.junit.Assert.assertNull(objectId28);
        org.junit.Assert.assertNotNull(objectType30);
        org.junit.Assert.assertNull(identifierList33);
        org.junit.Assert.assertNotNull(objectId34);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList5 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = doubleList5.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = doubleList5.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = doubleList5.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream9 = doubleList5.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob10 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean11 = blob10.isURLBased();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        org.ccsds.moims.mo.mal.structures.Element element17 = blob10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
        boolean boolean18 = doubleList5.equals((java.lang.Object) element17);
        boolean boolean19 = integerList1.contains((java.lang.Object) element17);
        java.util.Spliterator<java.lang.Integer> intSpliterator20 = integerList1.spliterator();
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(doubleStream9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(intSpliterator20);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger12 = binaryDecoder11.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = uInteger12.getAreaVersion();
        try {
            binaryEncoder1.encodeNullableUInteger(uInteger12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(uInteger12);
        org.junit.Assert.assertNotNull(uOctet13);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList5 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = doubleList5.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = doubleList5.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = doubleList5.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream9 = doubleList5.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob10 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean11 = blob10.isURLBased();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        org.ccsds.moims.mo.mal.structures.Element element17 = blob10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
        boolean boolean18 = doubleList5.equals((java.lang.Object) element17);
        boolean boolean19 = integerList1.contains((java.lang.Object) element17);
        try {
            integerList1.add((-15), (java.lang.Integer) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -15, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(doubleStream9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime13 = binaryDecoder10.decodeFineTime();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.Element element19 = fineTime13.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Time time20 = binaryDecoder18.decodeNullableTime();
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime21 = binaryDecoder18.decodeNullableFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(fineTime13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(time20);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int7 = uRIList6.getTypeShortForm();
        java.lang.Integer int8 = uRIList6.getTypeShortForm();
        java.lang.Object obj9 = uRIList6.clone();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        int int16 = uRIList6.lastIndexOf((java.lang.Object) binaryDecoder15);
        org.ccsds.moims.mo.mal.structures.Time time17 = binaryDecoder15.decodeTime();
        org.ccsds.moims.mo.mal.structures.Element element18 = time17.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = time17.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = uShort19.getAreaVersion();
        try {
            binaryEncoder1.encodeUOctet(uOctet20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-18) + "'", int7.equals((-18)));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(time17);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(uOctet20);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.String str18 = strList3.toString();
        java.util.ListIterator<java.lang.String> strItor20 = strList3.listIterator(0);
        java.lang.Float[] floatArray26 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList27 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList27, floatArray26);
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList31 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList31, booleanArray30);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        boolean boolean51 = byteList38.addAll((java.util.Collection<java.lang.Byte>) byteList47);
        java.lang.Object obj52 = byteList38.clone();
        boolean boolean53 = booleanList31.contains((java.lang.Object) byteList38);
        int int54 = floatList27.lastIndexOf((java.lang.Object) booleanList31);
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator55 = booleanList31.spliterator();
        boolean boolean56 = strList3.remove((java.lang.Object) booleanList31);
        boolean boolean57 = strList3.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream58 = strList3.stream();
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity61 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity(2, "[-1, -1, -1, -1, 100]");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity64 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((int) (byte) 0, "hi!");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity67 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((int) (byte) 0, "hi!");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity70 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((-2), "[hi!, ]");
        java.lang.String str71 = providerURIHolderEntity70.getProviderURIString();
        java.lang.String str72 = providerURIHolderEntity70.getProviderURIString();
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity[] providerURIHolderEntityArray73 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity[] { providerURIHolderEntity61, providerURIHolderEntity64, providerURIHolderEntity67, providerURIHolderEntity70 };
        try {
            esa.mo.com.impl.archive.entities.ProviderURIHolderEntity[] providerURIHolderEntityArray74 = strList3.toArray(providerURIHolderEntityArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "[hi!, ]" + "'", str18.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(strItor20);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(booleanSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "[hi!, ]" + "'", str71.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "[hi!, ]" + "'", str72.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(providerURIHolderEntityArray73);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.Element element7 = uInteger6.createElement();
        org.ccsds.moims.mo.mal.structures.FloatList floatList8 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int10 = floatList8.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int11 = floatList8.getTypeShortForm();
        boolean boolean12 = floatList8.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator13 = floatList8.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = floatList8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = floatList8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = floatList8.getServiceNumber();
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = uShort16.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Element element23 = uInteger6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime24 = binaryDecoder21.decodeNullableFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(floatSpliterator13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element23);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.lang.Object obj22 = longList20.clone();
        int int23 = strList10.indexOf((java.lang.Object) longList20);
        java.util.ListIterator<java.lang.String> strItor24 = strList10.listIterator();
        java.lang.String str25 = strList10.toString();
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList29 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList29, doubleArray28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        int int36 = strList34.size();
        boolean boolean37 = doubleList29.equals((java.lang.Object) strList34);
        boolean boolean38 = strList10.remove((java.lang.Object) strList34);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder39 = binaryDecoder5.createListDecoder((java.util.List) strList34);
        java.util.stream.Stream<java.lang.String> strStream40 = strList34.parallelStream();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[hi!, ]" + "'", str25.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(mALListDecoder39);
        org.junit.Assert.assertNotNull(strStream40);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Long[] longArray25 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList26 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList26, longArray25);
        java.lang.Object obj28 = longList26.clone();
        int int29 = strList3.lastIndexOf((java.lang.Object) longList26);
        java.util.stream.Stream<java.lang.String> strStream30 = strList3.stream();
        java.util.Spliterator<java.lang.String> strSpliterator31 = strList3.spliterator();
        java.util.stream.Stream<java.lang.String> strStream32 = strList3.stream();
        byte[] byteArray36 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray36);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder39 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray36, 6);
        boolean boolean40 = strList3.remove((java.lang.Object) binaryDecoder39);
        try {
            java.lang.Float float41 = binaryDecoder39.decodeNullableFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Short) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = union1.getAreaNumber();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        org.ccsds.moims.mo.mal.structures.URI uRI8 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element9 = uRI8.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI5, uRI8 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Double[] doubleArray18 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList19 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList19, doubleArray18);
        org.ccsds.moims.mo.mal.structures.OctetList octetList21 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = octetList21.getServiceNumber();
        boolean boolean23 = doubleList19.containsAll((java.util.Collection<java.lang.Byte>) octetList21);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray24 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25, uShortArray24);
        uShortList25.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet28 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element29 = uOctet28.createElement();
        int int30 = uShortList25.indexOf((java.lang.Object) element29);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.lang.Long[] longArray43 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList44 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList44, longArray43);
        java.lang.Object obj46 = longList44.clone();
        int int47 = strList34.indexOf((java.lang.Object) longList44);
        java.util.ListIterator<java.lang.String> strItor48 = strList34.listIterator();
        java.lang.Short[] shortArray52 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList53 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList53, shortArray52);
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray60 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList61 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList61, uRIArray60);
        java.lang.Byte[] byteArray67 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList68 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList68, byteArray67);
        boolean boolean71 = byteList68.add((java.lang.Byte) (byte) 100);
        boolean boolean72 = uRIList61.containsAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean73 = strList58.containsAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean74 = shortList53.contains((java.lang.Object) byteList68);
        boolean boolean75 = strList34.removeAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean76 = uShortList25.containsAll((java.util.Collection<java.lang.Byte>) byteList68);
        int int77 = byteList68.size();
        boolean boolean78 = octetList21.containsAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean79 = uRIList11.retainAll((java.util.Collection<java.lang.Byte>) octetList21);
        java.lang.Integer int80 = octetList21.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort81 = octetList21.getAreaNumber();
        java.util.Iterator<java.lang.Byte> byteItor82 = octetList21.iterator();
        java.util.ListIterator<java.lang.Byte> byteItor83 = octetList21.listIterator();
        boolean boolean84 = union1.equals((java.lang.Object) octetList21);
        java.util.ListIterator<java.lang.Byte> byteItor85 = octetList21.listIterator();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uShortArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(uOctet28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(uRIArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-7) + "'", int80.equals((-7)));
        org.junit.Assert.assertNotNull(uShort81);
        org.junit.Assert.assertNotNull(byteItor82);
        org.junit.Assert.assertNotNull(byteItor83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertNotNull(byteItor85);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.Long long6 = identifier5.getShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList7 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element8 = booleanList7.createElement();
        int int10 = booleanList7.indexOf((java.lang.Object) 281474993487875L);
        boolean boolean11 = identifier5.equals((java.lang.Object) int10);
        java.lang.Long long12 = identifier5.getShortForm();
        java.lang.Integer int13 = identifier5.getTypeShortForm();
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487878L + "'", long6.equals(281474993487878L));
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281474993487878L + "'", long12.equals(281474993487878L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 6 + "'", int13.equals(6));
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Short short11 = binaryDecoder9.decodeNullableShort();
        try {
            java.lang.String str12 = binaryDecoder9.decodeNullableString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + short11 + "' != '" + (short) -64 + "'", short11.equals((short) -64));
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uInteger6.getAreaVersion();
        java.lang.Integer int8 = uInteger6.getTypeShortForm();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        java.lang.Long long14 = binaryDecoder13.decodeNullableLong();
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = uInteger6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 12 + "'", int8.equals(12));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-64L) + "'", long14.equals((-64L)));
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = identifier2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = identifier2.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList5 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int6 = uRIList5.size();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor7 = uRIList5.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = uRIList5.getServiceNumber();
        int int9 = uRIList5.size();
        boolean boolean10 = identifier2.equals((java.lang.Object) int9);
        org.ccsds.moims.mo.mal.structures.LongList longList11 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray12 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList13, uRIArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        boolean boolean24 = uRIList13.containsAll((java.util.Collection<java.lang.Byte>) byteList20);
        byteList20.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean28 = longList11.removeAll((java.util.Collection<java.lang.Byte>) byteList20);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet29 = longList11.getAreaVersion();
        boolean boolean30 = identifier2.equals((java.lang.Object) uOctet29);
        try {
            binaryEncoder1.encodeIdentifier(identifier2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(uRIItor7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uRIArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(uOctet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator34 = booleanList10.spliterator();
        boolean boolean36 = booleanList10.add((java.lang.Boolean) false);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray37 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList38 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList38, uShortArray37);
        uShortList38.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element42 = uOctet41.createElement();
        int int43 = uShortList38.indexOf((java.lang.Object) element42);
        boolean boolean45 = uShortList38.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor46 = uShortList38.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort47 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean48 = uShortList38.add(uShort47);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray49 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList50 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList50, uRIArray49);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
        boolean boolean60 = byteList57.add((java.lang.Byte) (byte) 100);
        boolean boolean61 = uRIList50.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean62 = uShortList38.retainAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean63 = booleanList10.remove((java.lang.Object) boolean62);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject64 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject64.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier67 = null;
        eventCOMObject64.setNetworkZone(identifier67);
        org.ccsds.moims.mo.mal.structures.URI uRI69 = eventCOMObject64.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList70 = eventCOMObject64.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject71 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId72 = eventCOMObject71.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier73 = eventCOMObject71.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject74 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject74.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType79 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription80 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType79);
        eventCOMObject74.setObjType(objectType79);
        java.lang.Long long82 = eventCOMObject74.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId83 = eventCOMObject74.getObjectId();
        eventCOMObject71.setSource(objectId83);
        eventCOMObject64.setSource(objectId83);
        org.ccsds.moims.mo.com.structures.ObjectId objectId86 = eventCOMObject64.getSource();
        int int87 = booleanList10.indexOf((java.lang.Object) objectId86);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(booleanSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(uShortArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(uShortItor46);
        org.junit.Assert.assertNotNull(uShort47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(uRIArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertNull(uRI69);
        org.junit.Assert.assertNull(identifierList70);
        org.junit.Assert.assertNull(objectId72);
        org.junit.Assert.assertNull(identifier73);
        org.junit.Assert.assertNotNull(objectType79);
        org.junit.Assert.assertNotNull(subscription80);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 4294967295L + "'", long82.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId83);
        org.junit.Assert.assertNotNull(objectId86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.ccsds.moims.mo.mal.structures.ULong uLong0 = new org.ccsds.moims.mo.mal.structures.ULong();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = uLong0.getAreaVersion();
        java.math.BigInteger bigInteger2 = uLong0.getValue();
        java.math.BigInteger bigInteger3 = uLong0.getValue();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder5.internalEncodeAttributeType((byte) -1);
        byte byte11 = binaryEncoder5.internalEncodeAttributeType((byte) 1);
        try {
            uLong0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -1 + "'", byte9 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 1 + "'", byte11 == (byte) 1);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        java.util.ListIterator<java.lang.Short> shortItor6 = shortList4.listIterator();
        int int7 = shortList4.size();
        java.lang.Class<?> wildcardClass8 = shortList4.getClass();
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = shortList9.getAreaNumber();
        java.lang.Object[] objArray11 = shortList9.toArray();
        java.lang.Long long12 = shortList9.getShortForm();
        java.lang.Object[] objArray13 = shortList9.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = shortList9.getServiceNumber();
        java.lang.Integer int15 = shortList9.getTypeShortForm();
        int int16 = shortList4.indexOf((java.lang.Object) shortList9);
        org.ccsds.moims.mo.mal.structures.StringList stringList18 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int19 = stringList18.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = stringList18.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray21 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList22, uRIArray21);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        boolean boolean42 = byteList29.addAll((java.util.Collection<java.lang.Byte>) byteList38);
        int int44 = byteList38.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean45 = uRIList22.retainAll((java.util.Collection<java.lang.Byte>) byteList38);
        int int46 = stringList18.lastIndexOf((java.lang.Object) uRIList22);
        java.lang.Long long47 = stringList18.getShortForm();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList49 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = doubleList49.getAreaNumber();
        java.lang.Object obj51 = doubleList49.clone();
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder56 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray55);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder57 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray55);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = binaryDecoder57.decodeNullableUOctet();
        int int59 = doubleList49.lastIndexOf((java.lang.Object) binaryDecoder57);
        java.util.stream.Stream<java.lang.Double> doubleStream60 = doubleList49.stream();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer61 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl62 = cOMServicesConsumer61.getArchiveService();
        cOMServicesConsumer61.closeConnections();
        cOMServicesConsumer61.closeConnections();
        boolean boolean65 = doubleList49.contains((java.lang.Object) cOMServicesConsumer61);
        boolean boolean66 = stringList18.contains((java.lang.Object) boolean65);
        java.lang.String str67 = stringList18.toString();
        int int68 = shortList4.lastIndexOf((java.lang.Object) stringList18);
        java.lang.Long long69 = stringList18.getShortForm();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(shortItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281475010265079L + "'", long12.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-9) + "'", int15.equals((-9)));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-15) + "'", int19.equals((-15)));
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertNotNull(uRIArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 281475010265073L + "'", long47.equals(281475010265073L));
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(doubleStream60);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "[]" + "'", str67.equals("[]"));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 281475010265073L + "'", long69.equals(281475010265073L));
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = binaryDecoder13.decodeNullableUOctet();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(uOctet14);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element1 = floatList0.createElement();
        java.util.stream.Stream<java.lang.Float> floatStream2 = floatList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = floatList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList4 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element5 = booleanList4.createElement();
        int int7 = booleanList4.lastIndexOf((java.lang.Object) 281474993487878L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = booleanList4.getAreaVersion();
        boolean boolean9 = floatList0.contains((java.lang.Object) booleanList4);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = booleanList4.getServiceNumber();
        java.lang.Object obj11 = null;
        int int12 = booleanList4.lastIndexOf(obj11);
        java.io.OutputStream outputStream13 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder14 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream13);
        byte byte16 = binaryEncoder14.internalEncodeAttributeType((byte) 100);
        byte byte18 = binaryEncoder14.internalEncodeAttributeType((byte) 10);
        try {
            booleanList4.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(floatStream2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 100 + "'", byte16 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 10 + "'", byte18 == (byte) 10);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) 'a');
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        org.ccsds.moims.mo.mal.structures.OctetList octetList10 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = octetList10.getServiceNumber();
        boolean boolean12 = doubleList8.containsAll((java.util.Collection<java.lang.Byte>) octetList10);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray13 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList14 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList14, uShortArray13);
        uShortList14.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element18 = uOctet17.createElement();
        int int19 = uShortList14.indexOf((java.lang.Object) element18);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.lang.Long[] longArray32 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList33 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList33, longArray32);
        java.lang.Object obj35 = longList33.clone();
        int int36 = strList23.indexOf((java.lang.Object) longList33);
        java.util.ListIterator<java.lang.String> strItor37 = strList23.listIterator();
        java.lang.Short[] shortArray41 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList42 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList42, shortArray41);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray49 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList50 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList50, uRIArray49);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
        boolean boolean60 = byteList57.add((java.lang.Byte) (byte) 100);
        boolean boolean61 = uRIList50.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean62 = strList47.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean63 = shortList42.contains((java.lang.Object) byteList57);
        boolean boolean64 = strList23.removeAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean65 = uShortList14.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        int int66 = byteList57.size();
        boolean boolean67 = octetList10.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean68 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) octetList10);
        org.ccsds.moims.mo.mal.structures.OctetList octetList69 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = octetList69.getServiceNumber();
        boolean boolean71 = doubleList1.removeAll((java.util.Collection<java.lang.Byte>) octetList69);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject72 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId73 = eventCOMObject72.getSource();
        java.lang.Long long74 = eventCOMObject72.getObjId();
        boolean boolean75 = doubleList1.contains((java.lang.Object) long74);
        doubleList1.ensureCapacity((-64));
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(uShortArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(uRIArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertNull(objectId73);
        org.junit.Assert.assertNull(long74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-5), "true");
        java.lang.String str3 = networkHolderEntity2.getNetworkString();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "true" + "'", str3.equals("true"));
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder5.decodeNullableUInteger();
        try {
            java.lang.Long long10 = binaryDecoder5.decodeLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uInteger9);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        boolean boolean3 = uRIList0.isEmpty();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray9 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList10, uRIArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        boolean boolean21 = uRIList10.containsAll((java.util.Collection<java.lang.Byte>) byteList17);
        boolean boolean22 = strList7.containsAll((java.util.Collection<java.lang.Byte>) byteList17);
        java.util.Iterator<java.lang.String> strItor23 = strList7.iterator();
        int int24 = uRIList0.indexOf((java.lang.Object) strList7);
        org.ccsds.moims.mo.mal.structures.URIList uRIList25 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int26 = uRIList25.getTypeShortForm();
        java.lang.Integer int27 = uRIList25.getTypeShortForm();
        java.lang.Object obj28 = uRIList25.clone();
        byte[] byteArray32 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder33 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray32);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder34 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray32);
        int int35 = uRIList25.lastIndexOf((java.lang.Object) binaryDecoder34);
        java.lang.Boolean boolean36 = binaryDecoder34.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration37 = binaryDecoder34.decodeDuration();
        java.lang.Integer int38 = duration37.getTypeShortForm();
        java.lang.Long long39 = duration37.getShortForm();
        int int40 = uRIList0.lastIndexOf((java.lang.Object) duration37);
        byte[] byteArray44 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder45 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime46 = binaryDecoder45.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.Element element47 = duration37.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder45);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(uRIArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-18) + "'", int26.equals((-18)));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-18) + "'", int27.equals((-18)));
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36.equals(true));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38.equals(3));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 281474993487875L + "'", long39.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertNotNull(fineTime46);
        org.junit.Assert.assertNotNull(element47);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.lang.Float[] floatArray7 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList8 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList8, floatArray7);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12, booleanArray11);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19, byteArray18);
        boolean boolean22 = byteList19.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        boolean boolean32 = byteList19.addAll((java.util.Collection<java.lang.Byte>) byteList28);
        java.lang.Object obj33 = byteList19.clone();
        boolean boolean34 = booleanList12.contains((java.lang.Object) byteList19);
        int int35 = floatList8.lastIndexOf((java.lang.Object) booleanList12);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = byteList41.addAll((java.util.Collection<java.lang.Byte>) byteList50);
        java.lang.Object obj55 = byteList41.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream56 = byteList41.stream();
        boolean boolean57 = booleanList12.equals((java.lang.Object) byteList41);
        java.math.BigInteger bigInteger58 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong59 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger58);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet60 = uLong59.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity63 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long64 = objectTypeHolderEntity63.getObjectType();
        boolean boolean65 = uLong59.equals((java.lang.Object) long64);
        boolean boolean66 = booleanList12.remove((java.lang.Object) uLong59);
        org.ccsds.moims.mo.mal.structures.UShort uShort67 = uLong59.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet68 = uLong59.getAreaVersion();
        try {
            binaryEncoder1.encodeNullableAttribute((org.ccsds.moims.mo.mal.structures.Attribute) uLong59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(byteStream56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(bigInteger58);
        org.junit.Assert.assertNotNull(uOctet60);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 281474993487879L + "'", long64.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(uShort67);
        org.junit.Assert.assertNotNull(uOctet68);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType2 = eventCOMObject0.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        eventCOMObject0.setSourceURI(uRI5);
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity10 = new esa.mo.com.impl.archive.entities.DomainHolderEntity((int) '4', "[0, 10]");
        java.lang.String str11 = domainHolderEntity10.getDomainString();
        boolean boolean12 = uRI5.equals((java.lang.Object) str11);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = org.ccsds.moims.mo.mal.structures.BooleanList.AREA_SHORT_FORM;
        boolean boolean14 = uRI5.equals((java.lang.Object) uShort13);
        java.lang.Integer int15 = uRI5.getTypeShortForm();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(objectType2);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[0, 10]" + "'", str11.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 18 + "'", int15.equals(18));
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = stringList1.getAreaNumber();
        java.lang.Integer int3 = stringList1.getTypeShortForm();
        java.lang.Long long4 = stringList1.getShortForm();
        stringList1.clear();
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int7 = uRIList6.getTypeShortForm();
        java.lang.Integer int8 = uRIList6.getTypeShortForm();
        java.lang.Object obj9 = uRIList6.clone();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        int int16 = uRIList6.lastIndexOf((java.lang.Object) binaryDecoder15);
        org.ccsds.moims.mo.mal.structures.Time time17 = binaryDecoder15.decodeTime();
        org.ccsds.moims.mo.mal.structures.Element element18 = time17.createElement();
        boolean boolean19 = stringList1.remove((java.lang.Object) element18);
        java.io.OutputStream outputStream20 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder21 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream20);
        byte byte23 = binaryEncoder21.internalEncodeAttributeType((byte) -1);
        try {
            stringList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-15) + "'", int3.equals((-15)));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265073L + "'", long4.equals(281475010265073L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-18) + "'", int7.equals((-18)));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(time17);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) -1 + "'", byte23 == (byte) -1);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Element element2 = eventCOMObject0.getBody();
        java.lang.Long long3 = eventCOMObject0.getRelated();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(element2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
        java.util.ListIterator<java.lang.Short> shortItor5 = shortList3.listIterator();
        java.util.stream.Stream<java.lang.Short> shortStream6 = shortList3.parallelStream();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.lang.Object obj22 = longList20.clone();
        int int23 = strList10.indexOf((java.lang.Object) longList20);
        java.util.ListIterator<java.lang.String> strItor24 = strList10.listIterator();
        java.lang.Short[] shortArray28 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList29 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList29, shortArray28);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray36 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList37 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList37, uRIArray36);
        java.lang.Byte[] byteArray43 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList44 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList44, byteArray43);
        boolean boolean47 = byteList44.add((java.lang.Byte) (byte) 100);
        boolean boolean48 = uRIList37.containsAll((java.util.Collection<java.lang.Byte>) byteList44);
        boolean boolean49 = strList34.containsAll((java.util.Collection<java.lang.Byte>) byteList44);
        boolean boolean50 = shortList29.contains((java.lang.Object) byteList44);
        boolean boolean51 = strList10.removeAll((java.util.Collection<java.lang.Byte>) byteList44);
        boolean boolean52 = strList10.isEmpty();
        java.lang.Byte[] byteArray57 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList58 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList58, byteArray57);
        boolean boolean61 = byteList58.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray66 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList67 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList67, byteArray66);
        boolean boolean70 = byteList67.add((java.lang.Byte) (byte) 100);
        boolean boolean71 = byteList58.addAll((java.util.Collection<java.lang.Byte>) byteList67);
        java.lang.Object obj72 = byteList58.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream73 = byteList58.stream();
        boolean boolean74 = strList10.removeAll((java.util.Collection<java.lang.Byte>) byteList58);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList76 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort77 = doubleList76.getAreaNumber();
        java.lang.Object obj78 = doubleList76.clone();
        byte[] byteArray82 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder83 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray82);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder84 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray82);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet85 = binaryDecoder84.decodeNullableUOctet();
        int int86 = doubleList76.lastIndexOf((java.lang.Object) binaryDecoder84);
        byte[] byteArray87 = binaryDecoder84.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder88 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray87);
        int int89 = byteList58.lastIndexOf((java.lang.Object) byteArray87);
        boolean boolean90 = shortList3.removeAll((java.util.Collection<java.lang.Byte>) byteList58);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(shortItor5);
        org.junit.Assert.assertNotNull(shortStream6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(uRIArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(byteStream73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(uShort77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertNotNull(uOctet85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableLong((java.lang.Long) 281474993487882L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        stringList1.ensureCapacity((-15));
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        java.lang.Integer int10 = binaryDecoder9.decodeInteger();
        java.lang.Double double11 = binaryDecoder9.decodeDouble();
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10.equals(50));
        org.junit.Assert.assertEquals((double) double11, Double.NaN, 0);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeNullableString("[]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.lang.Long[] longArray16 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList17 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList17, longArray16);
        java.lang.Object obj19 = longList17.clone();
        int int20 = strList7.indexOf((java.lang.Object) longList17);
        java.util.ListIterator<java.lang.String> strItor21 = strList7.listIterator();
        java.lang.Short[] shortArray25 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList26 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList26, shortArray25);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray33 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList34, uRIArray33);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        boolean boolean45 = uRIList34.containsAll((java.util.Collection<java.lang.Byte>) byteList41);
        boolean boolean46 = strList31.containsAll((java.util.Collection<java.lang.Byte>) byteList41);
        boolean boolean47 = shortList26.contains((java.lang.Object) byteList41);
        boolean boolean48 = strList7.removeAll((java.util.Collection<java.lang.Byte>) byteList41);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList63 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList63, byteArray62);
        boolean boolean66 = byteList63.add((java.lang.Byte) (byte) 100);
        boolean boolean67 = byteList54.addAll((java.util.Collection<java.lang.Byte>) byteList63);
        boolean boolean68 = byteList41.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        org.ccsds.moims.mo.mal.structures.URI uRI70 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet71 = uRI70.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort72 = uRI70.getServiceNumber();
        byte[] byteArray76 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder77 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76, 6);
        boolean boolean80 = uShort72.equals((java.lang.Object) binaryDecoder79);
        int int81 = byteList63.indexOf((java.lang.Object) boolean80);
        boolean boolean82 = floatList0.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        try {
            java.util.List<java.lang.Byte> byteList85 = byteList63.subList(16, (-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(16) > toIndex(-2)");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(uRIArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertNotNull(uOctet71);
        org.junit.Assert.assertNotNull(uShort72);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType3 = fastObjectType1.getObjectType((java.lang.Integer) 15);
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: null");
        } catch (java.lang.Exception e) {
        }
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Float float7 = binaryDecoder5.decodeNullableFloat();
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger8 = binaryDecoder5.decodeUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.0f + "'", float7.equals(0.0f));
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("[false]");
        dictionary0.resetFastNetwork();
        java.lang.Integer int5 = dictionary0.getWordId("[-1, -1, -1, -1, 100]");
        dictionary0.defineWord((java.lang.Integer) 15, "0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5.equals(1));
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.Element element1 = eventCOMObject0.getBody();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Blob blob8 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger13 = binaryDecoder12.decodeUInteger();
        int int15 = binaryDecoder12.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Identifier identifier17 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.Long long18 = identifier17.getShortForm();
        java.lang.String str19 = identifier17.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = identifier17.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element21 = binaryDecoder12.decodeElement((org.ccsds.moims.mo.mal.structures.Element) identifier17);
        eventCOMObject0.setNetworkZone(identifier17);
        java.lang.Long[] longArray30 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList31 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList31, longArray30);
        java.lang.Object obj33 = longList31.clone();
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36, booleanArray35);
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList43 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList43, byteArray42);
        boolean boolean46 = byteList43.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray51 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList52 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList52, byteArray51);
        boolean boolean55 = byteList52.add((java.lang.Byte) (byte) 100);
        boolean boolean56 = byteList43.addAll((java.util.Collection<java.lang.Byte>) byteList52);
        java.lang.Object obj57 = byteList43.clone();
        boolean boolean58 = booleanList36.contains((java.lang.Object) byteList43);
        boolean boolean59 = longList31.remove((java.lang.Object) boolean58);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        int int69 = longList31.lastIndexOf((java.lang.Object) byteList65);
        java.util.ListIterator<java.lang.Long> longItor70 = longList31.listIterator();
        org.ccsds.moims.mo.mal.structures.Time time72 = new org.ccsds.moims.mo.mal.structures.Time((long) (-5));
        int int73 = longList31.indexOf((java.lang.Object) time72);
        org.ccsds.moims.mo.mal.structures.URI uRI75 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element76 = uRI75.createElement();
        java.lang.String str77 = uRI75.toString();
        java.lang.Long long78 = uRI75.getShortForm();
        boolean boolean79 = time72.equals((java.lang.Object) uRI75);
        eventCOMObject0.setSourceURI(uRI75);
        java.lang.Long long81 = eventCOMObject0.getObjId();
        org.junit.Assert.assertNull(element1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(uInteger13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 281474993487878L + "'", long18.equals(281474993487878L));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[hi!, ]" + "'", str19.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(longItor70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "hi!" + "'", str77.equals("hi!"));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 281474993487890L + "'", long78.equals(281474993487890L));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertNull(long81);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        try {
            uShort1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.stream.Stream<java.lang.Long> longStream17 = longList13.parallelStream();
        longList13.add(2, (java.lang.Long) 281475010265070L);
        esa.mo.com.impl.sync.Dictionary dictionary21 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean23 = dictionary21.exists((java.lang.Integer) 16);
        java.lang.Integer int25 = dictionary21.getWordId("");
        int int26 = longList13.indexOf((java.lang.Object) "");
        java.util.ListIterator<java.lang.Long> longItor28 = longList13.listIterator(0);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(longStream17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25.equals(1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(longItor28);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Byte byte7 = binaryDecoder5.decodeOctet();
        java.lang.Integer int8 = binaryDecoder5.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration9 = binaryDecoder5.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7.equals((byte) -1));
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject12.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType17 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription18 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType17);
        eventCOMObject12.setObjType(objectType17);
        eventCOMObject3.setObjType(objectType17);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("18446744073709551615", objectType17);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList22 = fastObjectType1.getObjectTypeIds(objectType17);
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType24 = fastObjectType1.getObjectType((java.lang.Integer) 6);
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: null");
        } catch (java.lang.Exception e) {
        }
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(integerList22);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (-64), (-18));
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, 52);
        try {
            java.lang.Double double15 = binaryDecoder14.decodeNullableDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        uShortList1.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element5 = uOctet4.createElement();
        int int6 = uShortList1.indexOf((java.lang.Object) element5);
        org.ccsds.moims.mo.mal.structures.FloatList floatList7 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element8 = floatList7.createElement();
        java.util.stream.Stream<java.lang.Float> floatStream9 = floatList7.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = floatList7.getServiceNumber();
        boolean boolean11 = uShortList1.add(uShort10);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId13 = eventCOMObject12.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier14 = eventCOMObject12.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject15 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject15.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType20 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType20);
        eventCOMObject15.setObjType(objectType20);
        java.lang.Long long23 = eventCOMObject15.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId24 = eventCOMObject15.getObjectId();
        eventCOMObject12.setSource(objectId24);
        org.ccsds.moims.mo.mal.structures.Element element26 = null;
        eventCOMObject12.setBody(element26);
        boolean boolean28 = uShortList1.remove((java.lang.Object) eventCOMObject12);
        org.ccsds.moims.mo.mal.structures.Identifier identifier29 = eventCOMObject12.getNetworkZone();
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(floatStream9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNull(objectId13);
        org.junit.Assert.assertNull(identifier14);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 4294967295L + "'", long23.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNull(identifier29);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.lang.Integer int2 = uLong1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uLong1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uLong1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uLong1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uLong1.getAreaNumber();
        java.io.OutputStream outputStream8 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder9 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream8);
        try {
            uShort7.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 14 + "'", int2.equals(14));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(uShort7);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity2 = new esa.mo.com.impl.archive.entities.DomainHolderEntity((int) '4', "[0, 10]");
        int int3 = domainHolderEntity2.getId();
        java.lang.String str4 = domainHolderEntity2.getDomainString();
        java.lang.String str5 = domainHolderEntity2.getDomainString();
        java.lang.String str6 = domainHolderEntity2.getDomainString();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "[0, 10]" + "'", str4.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[0, 10]" + "'", str5.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "[0, 10]" + "'", str6.equals("[0, 10]"));
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        org.ccsds.moims.mo.mal.structures.LongList longList56 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byteList65.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean73 = longList56.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean74 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byte[] byteArray78 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray78);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime80 = binaryDecoder79.decodeFineTime();
        boolean boolean81 = booleanList10.remove((java.lang.Object) fineTime80);
        java.lang.Long long82 = fineTime80.getShortForm();
        java.io.OutputStream outputStream83 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder84 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream83);
        byte byte86 = binaryEncoder84.internalEncodeAttributeType((byte) 100);
        byte byte88 = binaryEncoder84.internalEncodeAttributeType((byte) -1);
        byte byte90 = binaryEncoder84.internalEncodeAttributeType((byte) 1);
        try {
            fineTime80.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertNotNull(fineTime80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 281474993487889L + "'", long82.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + byte86 + "' != '" + (byte) 100 + "'", byte86 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte88 + "' != '" + (byte) -1 + "'", byte88 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte90 + "' != '" + (byte) 1 + "'", byte90 == (byte) 1);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        java.lang.Double double11 = binaryDecoder10.decodeNullableDouble();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray12, 18, (int) ' ');
        java.lang.String str16 = blob15.getURL();
        try {
            binaryEncoder1.encodeNullableBlob(blob15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals((double) double11, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Duration duration13 = binaryDecoder9.decodeDuration();
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger14 = binaryDecoder9.decodeNullableUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(duration13);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList13 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList13, shortArray12);
        java.util.ListIterator<java.lang.Short> shortItor15 = shortList13.listIterator();
        int int16 = doubleList8.indexOf((java.lang.Object) shortList13);
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean18 = blob17.isURLBased();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.Element element24 = blob17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
        boolean boolean25 = doubleList8.contains((java.lang.Object) blob17);
        int int26 = blob17.getOffset();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = blob17.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime28 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.String str29 = fineTime28.toString();
        boolean boolean30 = blob17.equals((java.lang.Object) fineTime28);
        long long31 = fineTime28.getValue();
        try {
            binaryEncoder1.encodeFineTime(fineTime28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(shortItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "0" + "'", str29.equals("0"));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int2 = stringList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        java.lang.Integer int4 = stringList1.getTypeShortForm();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) 100);
        try {
            stringList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-15) + "'", int2.equals((-15)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-15) + "'", int4.equals((-15)));
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 100 + "'", byte8 == (byte) 100);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Long) 4294967295L);
        java.lang.Integer int2 = union1.getTypeShortForm();
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        boolean boolean21 = byteList8.addAll((java.util.Collection<java.lang.Byte>) byteList17);
        java.lang.Object obj22 = byteList8.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream23 = byteList8.stream();
        java.lang.Object[] objArray24 = byteList8.toArray();
        java.util.Spliterator<java.lang.Byte> byteSpliterator25 = byteList8.spliterator();
        boolean boolean26 = union1.equals((java.lang.Object) byteList8);
        java.io.OutputStream outputStream27 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder28 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream27);
        byte byte30 = binaryEncoder28.internalEncodeAttributeType((byte) 100);
        try {
            union1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 13 + "'", int2.equals(13));
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(byteStream23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(byteSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + byte30 + "' != '" + (byte) 100 + "'", byte30 == (byte) 100);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) 'a');
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        org.ccsds.moims.mo.mal.structures.OctetList octetList10 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = octetList10.getServiceNumber();
        boolean boolean12 = doubleList8.containsAll((java.util.Collection<java.lang.Byte>) octetList10);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray13 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList14 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList14, uShortArray13);
        uShortList14.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element18 = uOctet17.createElement();
        int int19 = uShortList14.indexOf((java.lang.Object) element18);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.lang.Long[] longArray32 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList33 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList33, longArray32);
        java.lang.Object obj35 = longList33.clone();
        int int36 = strList23.indexOf((java.lang.Object) longList33);
        java.util.ListIterator<java.lang.String> strItor37 = strList23.listIterator();
        java.lang.Short[] shortArray41 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList42 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList42, shortArray41);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray49 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList50 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList50, uRIArray49);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
        boolean boolean60 = byteList57.add((java.lang.Byte) (byte) 100);
        boolean boolean61 = uRIList50.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean62 = strList47.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean63 = shortList42.contains((java.lang.Object) byteList57);
        boolean boolean64 = strList23.removeAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean65 = uShortList14.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        int int66 = byteList57.size();
        boolean boolean67 = octetList10.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean68 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) octetList10);
        org.ccsds.moims.mo.mal.structures.OctetList octetList69 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = octetList69.getServiceNumber();
        boolean boolean71 = doubleList1.removeAll((java.util.Collection<java.lang.Byte>) octetList69);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject72 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId73 = eventCOMObject72.getSource();
        java.lang.Long long74 = eventCOMObject72.getObjId();
        boolean boolean75 = doubleList1.contains((java.lang.Object) long74);
        java.lang.Object obj76 = doubleList1.clone();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(uShortArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(uRIArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertNull(objectId73);
        org.junit.Assert.assertNull(long74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.Object obj20 = doubleList2.clone();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList34 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList34, longArray33);
        java.lang.Object obj36 = longList34.clone();
        int int37 = strList24.indexOf((java.lang.Object) longList34);
        java.util.ListIterator<java.lang.String> strItor38 = strList24.listIterator();
        java.lang.String str39 = strList24.toString();
        java.lang.Object[] objArray40 = strList24.toArray();
        boolean boolean41 = doubleList2.contains((java.lang.Object) strList24);
        org.ccsds.moims.mo.mal.structures.FloatList floatList42 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int44 = floatList42.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int45 = floatList42.getTypeShortForm();
        boolean boolean46 = floatList42.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator47 = floatList42.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = floatList42.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = floatList42.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = floatList42.getServiceNumber();
        int int51 = doubleList2.lastIndexOf((java.lang.Object) uShort50);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[hi!, ]" + "'", str39.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-4) + "'", int45.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(floatSpliterator47);
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertNotNull(uShort49);
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        java.lang.Long long8 = uOctet6.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList9 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int10 = uRIList9.getTypeShortForm();
        java.lang.Integer int11 = uRIList9.getTypeShortForm();
        java.lang.Object obj12 = uRIList9.clone();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        int int19 = uRIList9.lastIndexOf((java.lang.Object) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Duration duration20 = binaryDecoder18.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element21 = uOctet6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        byte[] byteArray22 = binaryDecoder18.getRemainingEncodedData();
        try {
            java.lang.Float float23 = binaryDecoder18.decodeNullableFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(byteArray22);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray1 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList2, uRIArray1);
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
        boolean boolean12 = byteList9.add((java.lang.Byte) (byte) 100);
        boolean boolean13 = uRIList2.containsAll((java.util.Collection<java.lang.Byte>) byteList9);
        byteList9.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean17 = longList0.removeAll((java.util.Collection<java.lang.Byte>) byteList9);
        org.ccsds.moims.mo.mal.structures.FloatList floatList18 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Object obj38 = byteList24.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream39 = byteList24.stream();
        boolean boolean40 = floatList18.containsAll((java.util.Collection<java.lang.Byte>) byteList24);
        org.ccsds.moims.mo.mal.structures.UShort uShort41 = floatList18.getAreaNumber();
        java.util.stream.Stream<java.lang.Float> floatStream42 = floatList18.stream();
        boolean boolean43 = longList0.contains((java.lang.Object) floatList18);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.lang.Long[] longArray56 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList57 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList57, longArray56);
        java.lang.Object obj59 = longList57.clone();
        int int60 = strList47.indexOf((java.lang.Object) longList57);
        java.lang.Byte[] byteArray65 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList66 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList66, byteArray65);
        boolean boolean69 = byteList66.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray74 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList75 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList75, byteArray74);
        boolean boolean78 = byteList75.add((java.lang.Byte) (byte) 100);
        boolean boolean79 = byteList66.addAll((java.util.Collection<java.lang.Byte>) byteList75);
        java.lang.Object obj80 = byteList66.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream81 = byteList66.stream();
        boolean boolean82 = strList47.retainAll((java.util.Collection<java.lang.Byte>) byteList66);
        org.ccsds.moims.mo.mal.structures.OctetList octetList83 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean84 = strList47.containsAll((java.util.Collection<java.lang.Byte>) octetList83);
        boolean boolean85 = longList0.containsAll((java.util.Collection<java.lang.Byte>) octetList83);
        byte[] byteArray89 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder90 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet91 = binaryDecoder90.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Element element92 = longList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(byteStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(uShort41);
        org.junit.Assert.assertNotNull(floatStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(byteStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertNotNull(uOctet91);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        org.ccsds.moims.mo.com.structures.ObjectType objectType3 = null;
        eventCOMObject0.setObjType(objectType3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject6.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = eventCOMObject6.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        java.lang.Long long17 = eventCOMObject9.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId18 = eventCOMObject9.getObjectId();
        eventCOMObject6.setSource(objectId18);
        org.ccsds.moims.mo.mal.structures.Time time20 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int21 = time20.getTypeShortForm();
        eventCOMObject6.setTimestamp(time20);
        eventCOMObject0.setTimestamp(time20);
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertNull(identifier8);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 4294967295L + "'", long17.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 16 + "'", int21.equals(16));
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        doubleList2.ensureCapacity((-1));
        doubleList2.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream15 = doubleList2.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob("[hi!, ]".getBytes());
        int int18 = doubleList2.lastIndexOf((java.lang.Object) blob17);
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = blob17.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = blob17.getAreaNumber();
        java.lang.Long long21 = blob17.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList22 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int23 = uRIList22.getTypeShortForm();
        java.lang.Integer int24 = uRIList22.getTypeShortForm();
        java.lang.Object obj25 = uRIList22.clone();
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder31 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        int int32 = uRIList22.lastIndexOf((java.lang.Object) binaryDecoder31);
        org.ccsds.moims.mo.mal.structures.Duration duration33 = binaryDecoder31.decodeDuration();
        java.lang.Byte byte34 = binaryDecoder31.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Time time35 = binaryDecoder31.decodeNullableTime();
        try {
            org.ccsds.moims.mo.mal.structures.Element element36 = blob17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder31);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(doubleStream15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 281474993487873L + "'", long21.equals(281474993487873L));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-18) + "'", int23.equals((-18)));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-18) + "'", int24.equals((-18)));
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + byte34 + "' != '" + (byte) -1 + "'", byte34.equals((byte) -1));
        org.junit.Assert.assertNull(time35);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) (-18));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList10 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = doubleList10.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = doubleList10.getAreaNumber();
        java.lang.Integer int13 = doubleList10.getTypeShortForm();
        java.util.Spliterator<java.lang.Double> doubleSpliterator14 = doubleList10.spliterator();
        org.ccsds.moims.mo.mal.structures.Element element15 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) doubleList10);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob16 = binaryDecoder5.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13.equals((-5)));
        org.junit.Assert.assertNotNull(doubleSpliterator14);
        org.junit.Assert.assertNotNull(element15);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("");
        dictionary0.defineWord((java.lang.Integer) (-2), "");
        boolean boolean7 = dictionary0.exists((java.lang.Integer) 1);
        boolean boolean9 = dictionary0.exists("[-1, 0, 100]");
        java.lang.Integer int11 = dictionary0.getWordId("[281474993487878, 100, -1, 100, 1, 1, 1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11.equals(2));
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeOctet((java.lang.Byte) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject6.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = eventCOMObject6.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        java.lang.Long long17 = eventCOMObject9.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId18 = eventCOMObject9.getObjectId();
        eventCOMObject6.setSource(objectId18);
        org.ccsds.moims.mo.mal.structures.Time time20 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int21 = time20.getTypeShortForm();
        eventCOMObject6.setTimestamp(time20);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = time20.getAreaVersion();
        java.lang.String str24 = time20.toString();
        eventCOMObject0.setTimestamp(time20);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray26 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList27, uShortArray26);
        uShortList27.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet30 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element31 = uOctet30.createElement();
        int int32 = uShortList27.indexOf((java.lang.Object) element31);
        boolean boolean34 = uShortList27.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor35 = uShortList27.iterator();
        boolean boolean36 = time20.equals((java.lang.Object) uShortList27);
        boolean boolean38 = uShortList27.equals((java.lang.Object) 1);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertNull(identifier8);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 4294967295L + "'", long17.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 16 + "'", int21.equals(16));
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "0" + "'", str24.equals("0"));
        org.junit.Assert.assertNotNull(uShortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(uOctet30);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertNotNull(uShortItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
        uShortList2.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element6 = uOctet5.createElement();
        int int7 = uShortList2.indexOf((java.lang.Object) element6);
        boolean boolean8 = booleanList0.contains((java.lang.Object) uShortList2);
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray12);
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray12, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger20 = binaryDecoder19.decodeUInteger();
        byte[] byteArray21 = binaryDecoder19.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime22 = binaryDecoder19.decodeFineTime();
        byte[] byteArray26 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder27 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray26);
        org.ccsds.moims.mo.mal.structures.Element element28 = fineTime22.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder27);
        try {
            org.ccsds.moims.mo.mal.structures.Element element29 = booleanList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(uInteger20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(fineTime22);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertNotNull(element28);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob9 = binaryDecoder5.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Size must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("");
        dictionary0.resetFastNetwork();
        java.lang.Integer int5 = dictionary0.getWordId("[0, 10]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5.equals(1));
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.Identifier identifier4 = null;
        try {
            binaryEncoder1.encodeIdentifier(identifier4);
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Null value supplied in a non-nullable field");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 10.0d, (-1.0d), 100.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
        doubleList5.ensureCapacity(52);
        org.ccsds.moims.mo.mal.structures.URIList uRIList9 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int10 = uRIList9.getTypeShortForm();
        java.lang.Integer int11 = uRIList9.getTypeShortForm();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger18 = binaryDecoder17.decodeUInteger();
        java.lang.Byte byte19 = binaryDecoder17.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element20 = uRIList9.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean21 = doubleList5.contains((java.lang.Object) uRIList9);
        java.lang.Object obj22 = doubleList5.clone();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(uInteger18);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) -1 + "'", byte19.equals((byte) -1));
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Duration duration23 = binaryDecoder21.decodeDuration();
        int int24 = integerList1.lastIndexOf((java.lang.Object) binaryDecoder21);
        try {
            java.lang.Integer int26 = integerList1.get(65535);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 65535, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity2 = new esa.mo.com.impl.archive.entities.DomainHolderEntity(11, "0.0");
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = binaryDecoder10.decodeNullableUOctet();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(uOctet12);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray8 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList9, uRIArray8);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        boolean boolean19 = byteList16.add((java.lang.Byte) (byte) 100);
        boolean boolean20 = uRIList9.containsAll((java.util.Collection<java.lang.Byte>) byteList16);
        int int22 = uRIList9.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = byteList28.addAll((java.util.Collection<java.lang.Byte>) byteList37);
        int int43 = byteList37.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean44 = uRIList9.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Double[] doubleArray50 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList51 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList51, doubleArray50);
        org.ccsds.moims.mo.mal.structures.OctetList octetList53 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = octetList53.getServiceNumber();
        boolean boolean55 = doubleList51.containsAll((java.util.Collection<java.lang.Byte>) octetList53);
        boolean boolean56 = uRIList9.retainAll((java.util.Collection<java.lang.Byte>) octetList53);
        java.lang.Object obj57 = uRIList9.clone();
        org.ccsds.moims.mo.mal.structures.Time time58 = new org.ccsds.moims.mo.mal.structures.Time();
        int int59 = uRIList9.indexOf((java.lang.Object) time58);
        long long60 = time58.getValue();
        org.ccsds.moims.mo.mal.structures.Element element61 = time58.createElement();
        try {
            binaryEncoder1.encodeNullableTime(time58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(uRIArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(element61);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        java.lang.Float float9 = binaryDecoder7.decodeFloat();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration10 = binaryDecoder7.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertEquals((float) float9, Float.NaN, 0);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        stringList1.ensureCapacity((-15));
        java.lang.Float[] floatArray9 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList10 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList10, floatArray9);
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14, booleanArray13);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        boolean boolean24 = byteList21.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        boolean boolean34 = byteList21.addAll((java.util.Collection<java.lang.Byte>) byteList30);
        java.lang.Object obj35 = byteList21.clone();
        boolean boolean36 = booleanList14.contains((java.lang.Object) byteList21);
        int int37 = floatList10.lastIndexOf((java.lang.Object) booleanList14);
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator38 = booleanList14.spliterator();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList47 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray49 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList50 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList50, uRIArray49);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
        boolean boolean60 = byteList57.add((java.lang.Byte) (byte) 100);
        boolean boolean61 = uRIList50.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean62 = intList47.removeAll((java.util.Collection<java.lang.Byte>) byteList57);
        org.ccsds.moims.mo.mal.structures.Union union64 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        int int65 = byteList57.lastIndexOf((java.lang.Object) union64);
        boolean boolean66 = booleanList14.removeAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean67 = stringList1.equals((java.lang.Object) boolean66);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet68 = stringList1.getAreaVersion();
        java.util.ListIterator<java.lang.String> strItor69 = stringList1.listIterator();
        java.io.OutputStream outputStream70 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder71 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream70);
        try {
            stringList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(booleanSpliterator38);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(uRIArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertNotNull(uOctet68);
        org.junit.Assert.assertNotNull(strItor69);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        boolean boolean3 = booleanList0.add((java.lang.Boolean) true);
        boolean boolean5 = booleanList0.remove((java.lang.Object) 281474993487884L);
        boolean boolean6 = booleanList0.isEmpty();
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator7 = booleanList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = booleanList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element9 = booleanList0.createElement();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13, (int) (byte) -1);
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = booleanList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(booleanSpliterator7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(byteArray13);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder5.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uInteger9.getServiceNumber();
        java.lang.Integer int11 = uInteger9.getTypeShortForm();
        java.lang.Integer int12 = uInteger9.getTypeShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 12 + "'", int11.equals(12));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 12 + "'", int12.equals(12));
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeFloat((java.lang.Float) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        java.lang.Integer int70 = uRIList58.getTypeShortForm();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator71 = uRIList58.spliterator();
        java.lang.Object obj72 = uRIList58.clone();
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-18) + "'", int70.equals((-18)));
        org.junit.Assert.assertNotNull(uRISpliterator71);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Float float6 = binaryDecoder5.decodeFloat();
        java.lang.Byte byte7 = binaryDecoder5.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Blob blob8 = binaryDecoder5.decodeNullableBlob();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration9 = binaryDecoder5.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 7.0E-44f + "'", float6.equals(7.0E-44f));
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7.equals((byte) -1));
        org.junit.Assert.assertNotNull(blob8);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, 18);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime8 = binaryDecoder7.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 18");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        org.ccsds.moims.mo.mal.structures.Time time9 = binaryDecoder7.decodeNullableTime();
        org.ccsds.moims.mo.mal.structures.Element element10 = time9.createElement();
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(time9);
        org.junit.Assert.assertNotNull(element10);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = identifier0.getAreaVersion();
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { Double.NaN, 1.0d, (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        doubleList6.ensureCapacity((int) ' ');
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.lang.Long[] longArray22 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList23 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList23, longArray22);
        java.lang.Object obj25 = longList23.clone();
        int int26 = strList13.indexOf((java.lang.Object) longList23);
        java.util.ListIterator<java.lang.String> strItor27 = strList13.listIterator();
        java.lang.Short[] shortArray31 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList32 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList32, shortArray31);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray39 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList40 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList40, uRIArray39);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        boolean boolean51 = uRIList40.containsAll((java.util.Collection<java.lang.Byte>) byteList47);
        boolean boolean52 = strList37.containsAll((java.util.Collection<java.lang.Byte>) byteList47);
        boolean boolean53 = shortList32.contains((java.lang.Object) byteList47);
        boolean boolean54 = strList13.removeAll((java.util.Collection<java.lang.Byte>) byteList47);
        java.lang.Byte[] byteArray59 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList60 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList60, byteArray59);
        boolean boolean63 = byteList60.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray68 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList69 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList69, byteArray68);
        boolean boolean72 = byteList69.add((java.lang.Byte) (byte) 100);
        boolean boolean73 = byteList60.addAll((java.util.Collection<java.lang.Byte>) byteList69);
        boolean boolean74 = byteList47.containsAll((java.util.Collection<java.lang.Byte>) byteList69);
        boolean boolean75 = doubleList6.equals((java.lang.Object) byteList69);
        java.lang.Double[] doubleArray81 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList82 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList82, doubleArray81);
        org.ccsds.moims.mo.mal.structures.OctetList octetList84 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort85 = octetList84.getServiceNumber();
        boolean boolean86 = doubleList82.containsAll((java.util.Collection<java.lang.Byte>) octetList84);
        boolean boolean87 = doubleList6.retainAll((java.util.Collection<java.lang.Byte>) octetList84);
        boolean boolean88 = identifier0.equals((java.lang.Object) octetList84);
        try {
            java.lang.Object obj90 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) identifier0, "-5");
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchFieldException; message: -5");
        } catch (java.lang.NoSuchFieldException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertNotNull(uRIArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83);
        org.junit.Assert.assertNotNull(uShort85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        boolean boolean8 = union1.equals((java.lang.Object) byteArray5);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5, 0, 14);
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5, 16, (int) (short) 100);
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5, 5, (int) (byte) 100);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        org.ccsds.moims.mo.mal.structures.UShort uShort41 = blob7.getServiceNumber();
        org.ccsds.moims.mo.mal.MALDecoder mALDecoder42 = null;
        try {
            org.ccsds.moims.mo.mal.structures.Element element43 = uShort41.decode(mALDecoder42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(uShort41);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int1 = booleanList0.getTypeShortForm();
        java.util.stream.Stream<java.lang.Boolean> booleanStream2 = booleanList0.stream();
        boolean boolean3 = booleanList0.isEmpty();
        java.util.stream.Stream<java.lang.Boolean> booleanStream4 = booleanList0.stream();
        org.ccsds.moims.mo.mal.structures.LongList longList5 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray6 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList7 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList7, uRIArray6);
        java.lang.Byte[] byteArray13 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList14 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList14, byteArray13);
        boolean boolean17 = byteList14.add((java.lang.Byte) (byte) 100);
        boolean boolean18 = uRIList7.containsAll((java.util.Collection<java.lang.Byte>) byteList14);
        byteList14.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean22 = longList5.removeAll((java.util.Collection<java.lang.Byte>) byteList14);
        boolean boolean23 = booleanList0.containsAll((java.util.Collection<java.lang.Byte>) byteList14);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray24 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList25, uRIArray24);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator27 = uRIList25.spliterator();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject28 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject28.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType33 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription34 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType33);
        eventCOMObject28.setObjType(objectType33);
        int int36 = uRIList25.indexOf((java.lang.Object) eventCOMObject28);
        uRIList25.clear();
        int int38 = booleanList0.lastIndexOf((java.lang.Object) uRIList25);
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList41 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        int int44 = intList41.lastIndexOf((java.lang.Object) 0.0f);
        int int46 = intList41.lastIndexOf((java.lang.Object) (-1));
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.lang.Long[] longArray59 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList60 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList60, longArray59);
        java.lang.Object obj62 = longList60.clone();
        int int63 = strList50.indexOf((java.lang.Object) longList60);
        java.lang.Byte[] byteArray68 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList69 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList69, byteArray68);
        boolean boolean72 = byteList69.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray77 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList78 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList78, byteArray77);
        boolean boolean81 = byteList78.add((java.lang.Byte) (byte) 100);
        boolean boolean82 = byteList69.addAll((java.util.Collection<java.lang.Byte>) byteList78);
        java.lang.Object obj83 = byteList69.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream84 = byteList69.stream();
        boolean boolean85 = strList50.retainAll((java.util.Collection<java.lang.Byte>) byteList69);
        boolean boolean86 = intList41.removeAll((java.util.Collection<java.lang.Byte>) byteList69);
        byteList69.trimToSize();
        boolean boolean88 = booleanList0.retainAll((java.util.Collection<java.lang.Byte>) byteList69);
        boolean boolean89 = byteList69.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2) + "'", int1.equals((-2)));
        org.junit.Assert.assertNotNull(booleanStream2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(booleanStream4);
        org.junit.Assert.assertNotNull(uRIArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uRIArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(uRISpliterator27);
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(byteStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject6.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = eventCOMObject6.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        java.lang.Long long17 = eventCOMObject9.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId18 = eventCOMObject9.getObjectId();
        eventCOMObject6.setSource(objectId18);
        org.ccsds.moims.mo.mal.structures.Time time20 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int21 = time20.getTypeShortForm();
        eventCOMObject6.setTimestamp(time20);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = time20.getAreaVersion();
        java.lang.String str24 = time20.toString();
        eventCOMObject0.setTimestamp(time20);
        java.io.OutputStream outputStream26 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder27 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream26);
        byte byte29 = binaryEncoder27.internalEncodeAttributeType((byte) 100);
        try {
            time20.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertNull(identifier8);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 4294967295L + "'", long17.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 16 + "'", int21.equals(16));
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "0" + "'", str24.equals("0"));
        org.junit.Assert.assertTrue("'" + byte29 + "' != '" + (byte) 100 + "'", byte29 == (byte) 100);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray11 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList12, uRIArray11);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19, byteArray18);
        boolean boolean22 = byteList19.add((java.lang.Byte) (byte) 100);
        boolean boolean23 = uRIList12.containsAll((java.util.Collection<java.lang.Byte>) byteList19);
        boolean boolean24 = strList9.containsAll((java.util.Collection<java.lang.Byte>) byteList19);
        boolean boolean25 = shortList4.contains((java.lang.Object) byteList19);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = uRIList27.containsAll((java.util.Collection<java.lang.Byte>) byteList34);
        boolean boolean39 = byteList34.isEmpty();
        boolean boolean40 = shortList4.containsAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.lang.String str41 = shortList4.toString();
        shortList4.clear();
        java.util.stream.Stream<java.lang.Short> shortStream43 = shortList4.parallelStream();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject44 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject44.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType49 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription50 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType49);
        eventCOMObject44.setObjType(objectType49);
        java.lang.Long long52 = eventCOMObject44.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId53 = eventCOMObject44.getObjectId();
        eventCOMObject44.setRelated((java.lang.Long) 281474993487873L);
        int int56 = shortList4.indexOf((java.lang.Object) 281474993487873L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(uRIArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "[-1, 0, 100]" + "'", str41.equals("[-1, 0, 100]"));
        org.junit.Assert.assertNotNull(shortStream43);
        org.junit.Assert.assertNotNull(objectType49);
        org.junit.Assert.assertNotNull(subscription50);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 4294967295L + "'", long52.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList6 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList6, byteArray5);
        boolean boolean9 = byteList6.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
        boolean boolean18 = byteList15.add((java.lang.Byte) (byte) 100);
        boolean boolean19 = byteList6.addAll((java.util.Collection<java.lang.Byte>) byteList15);
        java.lang.Object obj20 = byteList6.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream21 = byteList6.stream();
        boolean boolean22 = floatList0.containsAll((java.util.Collection<java.lang.Byte>) byteList6);
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = floatList0.getServiceNumber();
        boolean boolean24 = floatList0.isEmpty();
        java.io.OutputStream outputStream25 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder26 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream25);
        byte byte28 = binaryEncoder26.internalEncodeAttributeType((byte) -1);
        try {
            floatList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) -1 + "'", byte28 == (byte) -1);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        java.lang.Integer int6 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList8 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor10 = uShortList8.listIterator((int) (byte) 0);
        java.lang.Integer int11 = uShortList8.getTypeShortForm();
        int int12 = floatList0.lastIndexOf((java.lang.Object) uShortList8);
        java.lang.String str13 = floatList0.toString();
        boolean boolean14 = floatList0.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList17 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean19 = blob18.isURLBased();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = blob18.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        boolean boolean26 = integerList17.equals((java.lang.Object) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = integerList17.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList28 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int29 = uRIList28.getTypeShortForm();
        java.lang.Integer int30 = uRIList28.getTypeShortForm();
        java.lang.Object obj31 = uRIList28.clone();
        byte[] byteArray35 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        int int38 = uRIList28.lastIndexOf((java.lang.Object) binaryDecoder37);
        org.ccsds.moims.mo.mal.structures.Duration duration39 = binaryDecoder37.decodeDuration();
        int int40 = integerList17.lastIndexOf((java.lang.Object) binaryDecoder37);
        java.lang.Boolean boolean41 = binaryDecoder37.decodeNullableBoolean();
        org.ccsds.moims.mo.mal.structures.Element element42 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder37);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong43 = binaryDecoder37.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-4) + "'", int6.equals((-4)));
        org.junit.Assert.assertNotNull(uShortItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-10) + "'", int11.equals((-10)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[]" + "'", str13.equals("[]"));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-18) + "'", int29.equals((-18)));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-18) + "'", int30.equals((-18)));
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41.equals(false));
        org.junit.Assert.assertNotNull(element42);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.Float float7 = binaryDecoder5.decodeNullableFloat();
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger8 = binaryDecoder5.decodeNullableUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.0f + "'", float7.equals(0.0f));
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        esa.mo.com.impl.archive.db.COMObjectEntityPK cOMObjectEntityPK3 = esa.mo.com.impl.archive.entities.COMObjectEntity.generatePK((java.lang.Integer) (-18), (java.lang.Integer) 0, (java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(cOMObjectEntityPK3);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject6.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = eventCOMObject6.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        java.lang.Long long17 = eventCOMObject9.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId18 = eventCOMObject9.getObjectId();
        eventCOMObject6.setSource(objectId18);
        org.ccsds.moims.mo.mal.structures.Time time20 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int21 = time20.getTypeShortForm();
        eventCOMObject6.setTimestamp(time20);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = time20.getAreaVersion();
        java.lang.String str24 = time20.toString();
        eventCOMObject0.setTimestamp(time20);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList26 = eventCOMObject0.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject29 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject29.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType34 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription35 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType34);
        eventCOMObject29.setObjType(objectType34);
        java.lang.Long long37 = eventCOMObject29.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId38 = eventCOMObject29.getObjectId();
        org.ccsds.moims.mo.com.structures.ObjectType objectType41 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription42 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType41);
        eventCOMObject29.setObjType(objectType41);
        org.ccsds.moims.mo.mal.structures.Subscription subscription44 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("0", objectType41);
        org.ccsds.moims.mo.mal.structures.Subscription subscription45 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("1", objectType41);
        eventCOMObject0.setObjType(objectType41);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertNull(identifier8);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 4294967295L + "'", long17.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 16 + "'", int21.equals(16));
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "0" + "'", str24.equals("0"));
        org.junit.Assert.assertNull(identifierList26);
        org.junit.Assert.assertNotNull(objectType34);
        org.junit.Assert.assertNotNull(subscription35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 4294967295L + "'", long37.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId38);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertNotNull(subscription42);
        org.junit.Assert.assertNotNull(subscription44);
        org.junit.Assert.assertNotNull(subscription45);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 1);
        java.util.Iterator<java.lang.Double> doubleItor2 = doubleList1.iterator();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray3 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList4 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList4, uRIArray3);
        java.lang.Byte[] byteArray10 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList11, byteArray10);
        boolean boolean14 = byteList11.add((java.lang.Byte) (byte) 100);
        boolean boolean15 = uRIList4.containsAll((java.util.Collection<java.lang.Byte>) byteList11);
        int int17 = uRIList4.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList23 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList23, byteArray22);
        boolean boolean26 = byteList23.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        boolean boolean36 = byteList23.addAll((java.util.Collection<java.lang.Byte>) byteList32);
        int int38 = byteList32.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean39 = uRIList4.removeAll((java.util.Collection<java.lang.Byte>) byteList32);
        java.lang.Double[] doubleArray45 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList46 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList46, doubleArray45);
        org.ccsds.moims.mo.mal.structures.OctetList octetList48 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = octetList48.getServiceNumber();
        boolean boolean50 = doubleList46.containsAll((java.util.Collection<java.lang.Byte>) octetList48);
        boolean boolean51 = uRIList4.retainAll((java.util.Collection<java.lang.Byte>) octetList48);
        java.lang.Object obj52 = uRIList4.clone();
        org.ccsds.moims.mo.mal.structures.Time time53 = new org.ccsds.moims.mo.mal.structures.Time();
        int int54 = uRIList4.indexOf((java.lang.Object) time53);
        long long55 = time53.getValue();
        java.lang.Integer int56 = time53.getTypeShortForm();
        byte[] byteArray60 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder61 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray60);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder62 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray60);
        java.lang.Byte byte63 = binaryDecoder62.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element64 = time53.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder62);
        try {
            org.ccsds.moims.mo.mal.structures.Element element65 = doubleList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleItor2);
        org.junit.Assert.assertNotNull(uRIArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(uShort49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 16 + "'", int56.equals(16));
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertTrue("'" + byte63 + "' != '" + (byte) 100 + "'", byte63.equals((byte) 100));
        org.junit.Assert.assertNotNull(element64);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.Identifier identifier6 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str7 = identifier6.toString();
        java.lang.Integer int8 = identifier6.getTypeShortForm();
        java.lang.String str9 = identifier6.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = identifier6.getAreaVersion();
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6 + "'", int8.equals(6));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(uOctet10);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = binaryDecoder9.decodeNullableUOctet();
        try {
            java.lang.Short short12 = binaryDecoder9.decodeShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uOctet11);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject0.getObjectId();
        org.ccsds.moims.mo.mal.structures.Identifier identifier10 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = identifier10.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = identifier10.getAreaVersion();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Blob blob19 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray16);
        org.ccsds.moims.mo.mal.structures.Blob blob22 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray16, 14, 18);
        blob22.detach();
        boolean boolean24 = identifier10.equals((java.lang.Object) blob22);
        eventCOMObject0.setNetworkZone(identifier10);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId9);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        int int14 = uRIList1.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        int int35 = byteList29.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean36 = uRIList1.removeAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList43 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList43, doubleArray42);
        org.ccsds.moims.mo.mal.structures.OctetList octetList45 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = octetList45.getServiceNumber();
        boolean boolean47 = doubleList43.containsAll((java.util.Collection<java.lang.Byte>) octetList45);
        boolean boolean48 = uRIList1.retainAll((java.util.Collection<java.lang.Byte>) octetList45);
        java.lang.Object obj49 = uRIList1.clone();
        org.ccsds.moims.mo.mal.structures.Time time50 = new org.ccsds.moims.mo.mal.structures.Time();
        int int51 = uRIList1.indexOf((java.lang.Object) time50);
        long long52 = time50.getValue();
        java.lang.Integer int53 = time50.getTypeShortForm();
        byte[] byteArray57 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder58 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray57);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder59 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray57);
        java.lang.Byte byte60 = binaryDecoder59.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element61 = time50.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder59);
        try {
            java.lang.Byte byte62 = binaryDecoder59.decodeOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 16 + "'", int53.equals(16));
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertTrue("'" + byte60 + "' != '" + (byte) 100 + "'", byte60.equals((byte) 100));
        org.junit.Assert.assertNotNull(element61);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        java.lang.Double double13 = binaryDecoder12.decodeNullableDouble();
        byte[] byteArray14 = binaryDecoder12.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14, 18, (int) ' ');
        int int18 = blob17.getLength();
        byte[] byteArray19 = blob17.getValue();
        try {
            binaryEncoder1.directEncodeBytes(byteArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals((double) double13, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNotNull(byteArray19);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableShort((java.lang.Short) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) 7.0E-44f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        org.ccsds.moims.mo.mal.structures.Time time9 = binaryDecoder7.decodeTime();
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime10 = binaryDecoder7.decodeNullableFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(time9);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject0.getObjectId();
        org.ccsds.moims.mo.com.structures.ObjectType objectType12 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription13 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType12);
        eventCOMObject0.setObjType(objectType12);
        java.lang.Long long15 = eventCOMObject0.getRelated();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList16 = eventCOMObject0.getDomain();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId9);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertNotNull(subscription13);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNull(identifierList16);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        java.lang.Long long4 = floatList0.getShortForm();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        java.lang.Object obj20 = longList18.clone();
        int int21 = strList8.indexOf((java.lang.Object) longList18);
        java.util.ListIterator<java.lang.String> strItor22 = strList8.listIterator();
        java.lang.Short[] shortArray26 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList27 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList27, shortArray26);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray34 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList35, uRIArray34);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        boolean boolean46 = uRIList35.containsAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean47 = strList32.containsAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean48 = shortList27.contains((java.lang.Object) byteList42);
        boolean boolean49 = strList8.removeAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean50 = strList8.isEmpty();
        int int51 = floatList0.indexOf((java.lang.Object) strList8);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray52 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList53 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList53, uShortArray52);
        uShortList53.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet56 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element57 = uOctet56.createElement();
        int int58 = uShortList53.indexOf((java.lang.Object) element57);
        boolean boolean60 = uShortList53.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor61 = uShortList53.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort62 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean63 = uShortList53.add(uShort62);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray64 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList65 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList65, uRIArray64);
        java.lang.Byte[] byteArray71 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList72 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList72, byteArray71);
        boolean boolean75 = byteList72.add((java.lang.Byte) (byte) 100);
        boolean boolean76 = uRIList65.containsAll((java.util.Collection<java.lang.Byte>) byteList72);
        boolean boolean77 = uShortList53.retainAll((java.util.Collection<java.lang.Byte>) byteList72);
        org.ccsds.moims.mo.mal.structures.OctetList octetList78 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = octetList78.getAreaVersion();
        boolean boolean80 = byteList72.addAll((java.util.Collection<java.lang.Byte>) octetList78);
        boolean boolean81 = floatList0.removeAll((java.util.Collection<java.lang.Byte>) octetList78);
        org.ccsds.moims.mo.mal.structures.URIList uRIList82 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int83 = uRIList82.getTypeShortForm();
        java.lang.Integer int84 = uRIList82.getTypeShortForm();
        java.lang.Object obj85 = uRIList82.clone();
        byte[] byteArray89 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder90 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder91 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        int int92 = uRIList82.lastIndexOf((java.lang.Object) binaryDecoder91);
        org.ccsds.moims.mo.mal.structures.Duration duration93 = binaryDecoder91.decodeDuration();
        java.lang.Byte byte94 = binaryDecoder91.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element95 = octetList78.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder91);
        try {
            org.ccsds.moims.mo.mal.structures.Time time96 = binaryDecoder91.decodeTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265084L + "'", long4.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(uRIArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uShortArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(uOctet56);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(uShortItor61);
        org.junit.Assert.assertNotNull(uShort62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(uRIArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uOctet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-18) + "'", int83.equals((-18)));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-18) + "'", int84.equals((-18)));
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertTrue("'" + byte94 + "' != '" + (byte) -1 + "'", byte94.equals((byte) -1));
        org.junit.Assert.assertNotNull(element95);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRIList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRIList0.getAreaNumber();
        uRIList0.clear();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream6 = uRIList0.parallelStream();
        java.lang.Long[] longArray24 = new java.lang.Long[] { 281474993487886L, 281474993487875L, 281475010265070L, (-1L), 281474993487887L, 281475010265086L, 281475010265084L, 1L, 1558616164233L, 100L, 281474993487882L, 281474993487876L, 281474993487888L, 281474993487886L, 281474993487878L, 281474993487885L, 1558616163157L };
        java.util.ArrayList<java.lang.Long> longList25 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList25, longArray24);
        java.util.List<java.lang.Long> longList29 = longList25.subList(6, 13);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime30 = new org.ccsds.moims.mo.mal.structures.FineTime();
        byte[] byteArray34 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder35 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray34);
        java.lang.Double double36 = binaryDecoder35.decodeNullableDouble();
        byte[] byteArray37 = binaryDecoder35.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob38 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray37);
        boolean boolean39 = fineTime30.equals((java.lang.Object) blob38);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet40 = fineTime30.getAreaVersion();
        int int41 = longList25.lastIndexOf((java.lang.Object) fineTime30);
        int int42 = uRIList0.lastIndexOf((java.lang.Object) longList25);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uRIStream6);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(longList29);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals((double) double36, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(uOctet40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime4 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = fineTime4.getAreaNumber();
        java.lang.String str6 = fineTime4.toString();
        java.lang.Long long7 = fineTime4.getShortForm();
        try {
            binaryEncoder1.encodeFineTime(fineTime4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "0" + "'", str6.equals("0"));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487889L + "'", long7.equals(281474993487889L));
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, 6);
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration7 = binaryDecoder6.decodeDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        doubleList1.clear();
        int int13 = doubleList1.size();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        int int46 = longList8.lastIndexOf((java.lang.Object) byteList42);
        java.util.ListIterator<java.lang.Long> longItor47 = longList8.listIterator();
        org.ccsds.moims.mo.mal.structures.Time time49 = new org.ccsds.moims.mo.mal.structures.Time((long) (-5));
        int int50 = longList8.indexOf((java.lang.Object) time49);
        java.lang.Long long51 = time49.getShortForm();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.lang.Long[] longArray64 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList65 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList65, longArray64);
        java.lang.Object obj67 = longList65.clone();
        int int68 = strList55.indexOf((java.lang.Object) longList65);
        java.lang.Byte[] byteArray73 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList74 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList74, byteArray73);
        boolean boolean77 = byteList74.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray82 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList83 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList83, byteArray82);
        boolean boolean86 = byteList83.add((java.lang.Byte) (byte) 100);
        boolean boolean87 = byteList74.addAll((java.util.Collection<java.lang.Byte>) byteList83);
        java.lang.Object obj88 = byteList74.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream89 = byteList74.stream();
        boolean boolean90 = strList55.retainAll((java.util.Collection<java.lang.Byte>) byteList74);
        org.ccsds.moims.mo.mal.structures.OctetList octetList91 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean92 = strList55.containsAll((java.util.Collection<java.lang.Byte>) octetList91);
        boolean boolean94 = strList55.add("18446744073709551615");
        boolean boolean95 = time49.equals((java.lang.Object) boolean94);
        org.ccsds.moims.mo.mal.structures.UShort uShort96 = time49.getServiceNumber();
        java.io.OutputStream outputStream97 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder98 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream97);
        try {
            time49.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(longItor47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 281474993487888L + "'", long51.equals(281474993487888L));
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(byteStream89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", !boolean95);
        org.junit.Assert.assertNotNull(uShort96);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl2 = cOMServicesConsumer0.getArchiveService();
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl2);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uLong1.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity5 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long6 = objectTypeHolderEntity5.getObjectType();
        boolean boolean7 = uLong1.equals((java.lang.Object) long6);
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter8 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = archiveSyncGenAdapter8.getLastKnownIndex();
        boolean boolean10 = uLong1.equals((java.lang.Object) archiveSyncGenAdapter8);
        java.util.ArrayList<byte[]> byteArrayList11 = archiveSyncGenAdapter8.getReceivedChunks();
        long long12 = archiveSyncGenAdapter8.noUpdatesReceivedForThisDuration();
        boolean boolean13 = archiveSyncGenAdapter8.transactionCompleted();
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487879L + "'", long6.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(byteArrayList11);
// flaky:         org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1558616198358L + "'", long12 == 1558616198358L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Float float35 = floatList6.remove(2);
        byte[] byteArray39 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder41 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet42 = binaryDecoder41.decodeNullableUOctet();
        int int43 = floatList6.lastIndexOf((java.lang.Object) binaryDecoder41);
        org.ccsds.moims.mo.mal.structures.Union union45 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        java.lang.Long long46 = union45.getShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList47 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element48 = booleanList47.createElement();
        boolean boolean50 = booleanList47.add((java.lang.Boolean) true);
        boolean boolean52 = booleanList47.remove((java.lang.Object) 281474993487884L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet53 = booleanList47.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Union union55 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        int int56 = booleanList47.lastIndexOf((java.lang.Object) (-1.0d));
        org.ccsds.moims.mo.mal.structures.UOctet uOctet57 = booleanList47.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = booleanList47.getServiceNumber();
        java.lang.Object obj59 = booleanList47.clone();
        boolean boolean60 = union45.equals((java.lang.Object) booleanList47);
        org.ccsds.moims.mo.mal.structures.UShort uShort61 = booleanList47.getAreaNumber();
        try {
            org.ccsds.moims.mo.mal.structures.Element element62 = binaryDecoder41.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) booleanList47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + (-1.0f) + "'", float35.equals((-1.0f)));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(uOctet42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 281474993487874L + "'", long46.equals(281474993487874L));
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(uOctet53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(uOctet57);
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(uShort61);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.io.OutputStream outputStream7 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder8 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream7);
        byte byte10 = binaryEncoder8.internalEncodeAttributeType((byte) 100);
        byte byte12 = binaryEncoder8.internalEncodeAttributeType((byte) -1);
        try {
            uInteger6.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 100 + "'", byte10 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12 == (byte) -1);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.lang.Long[] longArray16 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList17 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList17, longArray16);
        java.lang.Object obj19 = longList17.clone();
        int int20 = strList7.indexOf((java.lang.Object) longList17);
        java.util.ListIterator<java.lang.String> strItor21 = strList7.listIterator();
        java.lang.Short[] shortArray25 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList26 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList26, shortArray25);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray33 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList34, uRIArray33);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        boolean boolean45 = uRIList34.containsAll((java.util.Collection<java.lang.Byte>) byteList41);
        boolean boolean46 = strList31.containsAll((java.util.Collection<java.lang.Byte>) byteList41);
        boolean boolean47 = shortList26.contains((java.lang.Object) byteList41);
        boolean boolean48 = strList7.removeAll((java.util.Collection<java.lang.Byte>) byteList41);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList63 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList63, byteArray62);
        boolean boolean66 = byteList63.add((java.lang.Byte) (byte) 100);
        boolean boolean67 = byteList54.addAll((java.util.Collection<java.lang.Byte>) byteList63);
        boolean boolean68 = byteList41.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        org.ccsds.moims.mo.mal.structures.URI uRI70 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet71 = uRI70.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort72 = uRI70.getServiceNumber();
        byte[] byteArray76 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder77 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76, 6);
        boolean boolean80 = uShort72.equals((java.lang.Object) binaryDecoder79);
        int int81 = byteList63.indexOf((java.lang.Object) boolean80);
        boolean boolean82 = floatList0.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        floatList0.ensureCapacity(0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(uRIArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertNotNull(uOctet71);
        org.junit.Assert.assertNotNull(uShort72);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int7 = uRIList6.getTypeShortForm();
        java.lang.Integer int8 = uRIList6.getTypeShortForm();
        java.lang.Object obj9 = uRIList6.clone();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = uRIList6.getAreaVersion();
        java.lang.Integer int11 = uOctet10.getTypeShortForm();
        try {
            binaryEncoder1.encodeUOctet(uOctet10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-18) + "'", int7.equals((-18)));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11.equals(8));
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime1 = new org.ccsds.moims.mo.mal.structures.FineTime(281474993487888L);
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) 100);
        try {
            fineTime1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 100 + "'", byte5 == (byte) 100);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.lang.Integer int2 = uLong1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.Element element4 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uLong1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element6 = uLong1.createElement();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        java.lang.Double double12 = binaryDecoder11.decodeNullableDouble();
        byte[] byteArray13 = binaryDecoder11.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob14 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13, (int) (short) 1);
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = uLong1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 14 + "'", int2.equals(14));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals((double) double12, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray13);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        boolean boolean8 = union1.equals((java.lang.Object) byteArray5);
        try {
            java.lang.Integer int9 = union1.getIntegerValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Double cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) '#');
        org.ccsds.moims.mo.mal.structures.UInteger uInteger2 = archiveSyncGenAdapter1.getLastKnownIndex();
        long long3 = uInteger2.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uInteger2.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element5 = uInteger2.createElement();
        java.lang.String str6 = uInteger2.toString();
        org.junit.Assert.assertNotNull(uInteger2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "0" + "'", str6.equals("0"));
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        try {
            java.lang.Double double7 = binaryDecoder4.decodeDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType2 = eventCOMObject0.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        eventCOMObject0.setSourceURI(uRI5);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject8.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier10 = eventCOMObject8.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject11 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject11.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType16 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription17 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType16);
        eventCOMObject11.setObjType(objectType16);
        java.lang.Long long19 = eventCOMObject11.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId20 = eventCOMObject11.getObjectId();
        eventCOMObject8.setSource(objectId20);
        org.ccsds.moims.mo.mal.structures.Time time22 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int23 = time22.getTypeShortForm();
        eventCOMObject8.setTimestamp(time22);
        eventCOMObject0.setTimestamp(time22);
        org.ccsds.moims.mo.mal.structures.Identifier identifier26 = null;
        eventCOMObject0.setNetworkZone(identifier26);
        org.ccsds.moims.mo.mal.structures.URI uRI28 = eventCOMObject0.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject29 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId30 = eventCOMObject29.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier31 = eventCOMObject29.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject32 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject32.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType37 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription38 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType37);
        eventCOMObject32.setObjType(objectType37);
        java.lang.Long long40 = eventCOMObject32.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId41 = eventCOMObject32.getObjectId();
        eventCOMObject29.setSource(objectId41);
        org.ccsds.moims.mo.mal.structures.Time time43 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int44 = time43.getTypeShortForm();
        eventCOMObject29.setTimestamp(time43);
        long long46 = time43.getValue();
        eventCOMObject0.setTimestamp(time43);
        java.lang.String str48 = time43.toString();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(objectType2);
        org.junit.Assert.assertNull(objectId9);
        org.junit.Assert.assertNull(identifier10);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 4294967295L + "'", long19.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 16 + "'", int23.equals(16));
        org.junit.Assert.assertNotNull(uRI28);
        org.junit.Assert.assertNull(objectId30);
        org.junit.Assert.assertNull(identifier31);
        org.junit.Assert.assertNotNull(objectType37);
        org.junit.Assert.assertNotNull(subscription38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 4294967295L + "'", long40.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 16 + "'", int44.equals(16));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "0" + "'", str48.equals("0"));
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) (-64.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime12 = binaryDecoder9.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob8 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = blob8.getServiceNumber();
        java.lang.String str10 = blob8.getURL();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, 6);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier7 = binaryDecoder6.decodeIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        java.math.BigInteger bigInteger6 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong7 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger6);
        java.lang.Integer int8 = uLong7.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element9 = uLong7.createElement();
        org.ccsds.moims.mo.mal.structures.Element element10 = uLong7.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = uLong7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element12 = uLong7.createElement();
        java.math.BigInteger bigInteger13 = uLong7.getValue();
        java.lang.String str14 = uLong7.toString();
        try {
            binaryEncoder1.encodeULong(uLong7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 14 + "'", int8.equals(14));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(bigInteger13);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "18446744073709551615" + "'", str14.equals("18446744073709551615"));
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(14);
        longList1.clear();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList11 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray13 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList14 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList14, uRIArray13);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        boolean boolean24 = byteList21.add((java.lang.Byte) (byte) 100);
        boolean boolean25 = uRIList14.containsAll((java.util.Collection<java.lang.Byte>) byteList21);
        boolean boolean26 = intList11.removeAll((java.util.Collection<java.lang.Byte>) byteList21);
        boolean boolean28 = intList11.remove((java.lang.Object) '4');
        byte[] byteArray32 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder33 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray32);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder34 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray32);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger35 = binaryDecoder34.decodeUInteger();
        boolean boolean36 = intList11.remove((java.lang.Object) binaryDecoder34);
        try {
            org.ccsds.moims.mo.mal.structures.Element element37 = longList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(uRIArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(uInteger35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = binaryDecoder9.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI12 = binaryDecoder9.decodeNullableURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uOctet11);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        doubleList1.ensureCapacity(52);
        doubleList1.clear();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = doubleList1.getAreaNumber();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        java.lang.Double double21 = binaryDecoder20.decodeNullableDouble();
        byte[] byteArray22 = binaryDecoder20.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob25 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray22, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder26 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        try {
            org.ccsds.moims.mo.mal.structures.Element element27 = doubleList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals((double) double21, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray22);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl2 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl3 = cOMServicesConsumer0.getEventService();
        cOMServicesConsumer0.closeConnections();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl2);
        org.junit.Assert.assertNull(eventConsumerServiceImpl3);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        doubleList1.clear();
        boolean boolean13 = doubleList1.isEmpty();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uRI1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRI1.getServiceNumber();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7, 6);
        boolean boolean11 = uShort3.equals((java.lang.Object) binaryDecoder10);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier12 = binaryDecoder10.decodeNullableIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject12.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType17 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription18 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType17);
        eventCOMObject12.setObjType(objectType17);
        eventCOMObject3.setObjType(objectType17);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("18446744073709551615", objectType17);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList22 = fastObjectType1.getObjectTypeIds(objectType17);
        try {
            fastObjectType1.init();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(integerList22);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        java.lang.Long long4 = floatList0.getShortForm();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        java.lang.Object obj20 = longList18.clone();
        int int21 = strList8.indexOf((java.lang.Object) longList18);
        java.util.ListIterator<java.lang.String> strItor22 = strList8.listIterator();
        java.lang.Short[] shortArray26 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList27 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList27, shortArray26);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray34 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList35, uRIArray34);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        boolean boolean46 = uRIList35.containsAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean47 = strList32.containsAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean48 = shortList27.contains((java.lang.Object) byteList42);
        boolean boolean49 = strList8.removeAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean50 = strList8.isEmpty();
        int int51 = floatList0.indexOf((java.lang.Object) strList8);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray52 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList53 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList53, uShortArray52);
        uShortList53.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet56 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element57 = uOctet56.createElement();
        int int58 = uShortList53.indexOf((java.lang.Object) element57);
        boolean boolean60 = uShortList53.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor61 = uShortList53.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort62 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean63 = uShortList53.add(uShort62);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray64 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList65 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList65, uRIArray64);
        java.lang.Byte[] byteArray71 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList72 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList72, byteArray71);
        boolean boolean75 = byteList72.add((java.lang.Byte) (byte) 100);
        boolean boolean76 = uRIList65.containsAll((java.util.Collection<java.lang.Byte>) byteList72);
        boolean boolean77 = uShortList53.retainAll((java.util.Collection<java.lang.Byte>) byteList72);
        org.ccsds.moims.mo.mal.structures.OctetList octetList78 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = octetList78.getAreaVersion();
        boolean boolean80 = byteList72.addAll((java.util.Collection<java.lang.Byte>) octetList78);
        boolean boolean81 = floatList0.removeAll((java.util.Collection<java.lang.Byte>) octetList78);
        org.ccsds.moims.mo.mal.structures.URIList uRIList82 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int83 = uRIList82.getTypeShortForm();
        java.lang.Integer int84 = uRIList82.getTypeShortForm();
        java.lang.Object obj85 = uRIList82.clone();
        byte[] byteArray89 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder90 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder91 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        int int92 = uRIList82.lastIndexOf((java.lang.Object) binaryDecoder91);
        org.ccsds.moims.mo.mal.structures.Duration duration93 = binaryDecoder91.decodeDuration();
        java.lang.Byte byte94 = binaryDecoder91.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element95 = octetList78.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder91);
        try {
            java.lang.String str96 = binaryDecoder91.decodeString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265084L + "'", long4.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(uRIArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uShortArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(uOctet56);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(uShortItor61);
        org.junit.Assert.assertNotNull(uShort62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(uRIArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uOctet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-18) + "'", int83.equals((-18)));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-18) + "'", int84.equals((-18)));
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertTrue("'" + byte94 + "' != '" + (byte) -1 + "'", byte94.equals((byte) -1));
        org.junit.Assert.assertNotNull(element95);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (-64), (-18));
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (-10), 0);
        org.ccsds.moims.mo.mal.MALEncoder mALEncoder16 = null;
        try {
            blob15.encode(mALEncoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity2 = new esa.mo.com.impl.archive.entities.DomainHolderEntity((-13), "100");
        int int3 = domainHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-13) + "'", int3 == (-13));
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        org.ccsds.moims.mo.com.structures.ObjectId objectId8 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType9 = eventCOMObject0.getObjType();
        java.lang.Long long10 = esa.mo.com.impl.util.HelperCOM.generateSubKey(objectType9);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertNull(objectId8);
        org.junit.Assert.assertNotNull(objectType9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487885L + "'", long10.equals(281474993487885L));
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeFloat((java.lang.Float) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator3 = uRIList1.spliterator();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject4.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType9 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription10 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType9);
        eventCOMObject4.setObjType(objectType9);
        int int12 = uRIList1.indexOf((java.lang.Object) eventCOMObject4);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator13 = uRIList1.spliterator();
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        java.lang.Short[] shortArray20 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList21 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList21, shortArray20);
        java.util.ListIterator<java.lang.Short> shortItor23 = shortList21.listIterator();
        int int24 = doubleList16.indexOf((java.lang.Object) shortList21);
        doubleList16.ensureCapacity((-1));
        doubleList16.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream29 = doubleList16.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob31 = new org.ccsds.moims.mo.mal.structures.Blob("[hi!, ]".getBytes());
        int int32 = doubleList16.lastIndexOf((java.lang.Object) blob31);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray33 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList34, uShortArray33);
        uShortList34.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet37 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element38 = uOctet37.createElement();
        int int39 = uShortList34.indexOf((java.lang.Object) element38);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.lang.Long[] longArray52 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList53 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList53, longArray52);
        java.lang.Object obj55 = longList53.clone();
        int int56 = strList43.indexOf((java.lang.Object) longList53);
        java.util.ListIterator<java.lang.String> strItor57 = strList43.listIterator();
        java.lang.Short[] shortArray61 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList62 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList62, shortArray61);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray69 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList70 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList70, uRIArray69);
        java.lang.Byte[] byteArray76 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList77 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList77, byteArray76);
        boolean boolean80 = byteList77.add((java.lang.Byte) (byte) 100);
        boolean boolean81 = uRIList70.containsAll((java.util.Collection<java.lang.Byte>) byteList77);
        boolean boolean82 = strList67.containsAll((java.util.Collection<java.lang.Byte>) byteList77);
        boolean boolean83 = shortList62.contains((java.lang.Object) byteList77);
        boolean boolean84 = strList43.removeAll((java.util.Collection<java.lang.Byte>) byteList77);
        boolean boolean85 = uShortList34.containsAll((java.util.Collection<java.lang.Byte>) byteList77);
        java.util.stream.Stream<java.lang.Byte> byteStream86 = byteList77.stream();
        boolean boolean87 = doubleList16.removeAll((java.util.Collection<java.lang.Byte>) byteList77);
        boolean boolean88 = uRIList1.removeAll((java.util.Collection<java.lang.Byte>) byteList77);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uRISpliterator3);
        org.junit.Assert.assertNotNull(objectType9);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(uRISpliterator13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(shortItor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(doubleStream29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(uShortArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(uOctet37);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strItor57);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertNotNull(uRIArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", !boolean83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", !boolean85);
        org.junit.Assert.assertNotNull(byteStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", !boolean87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity(11, "[false]");
        int int3 = networkHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 11 + "'", int3 == 11);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder5.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uInteger9.getServiceNumber();
        java.lang.Integer int11 = uInteger9.getTypeShortForm();
        long long12 = uInteger9.getValue();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 12 + "'", int11.equals(12));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        java.math.BigInteger bigInteger56 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong57 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger56);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = uLong57.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity61 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long62 = objectTypeHolderEntity61.getObjectType();
        boolean boolean63 = uLong57.equals((java.lang.Object) long62);
        boolean boolean64 = booleanList10.remove((java.lang.Object) uLong57);
        java.lang.Integer int65 = uLong57.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort66 = uLong57.getAreaNumber();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 281474993487879L + "'", long62.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 14 + "'", int65.equals(14));
        org.junit.Assert.assertNotNull(uShort66);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList11 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList11, shortArray10);
        java.util.ListIterator<java.lang.Short> shortItor13 = shortList11.listIterator();
        int int14 = doubleList6.indexOf((java.lang.Object) shortList11);
        doubleList6.ensureCapacity((-1));
        doubleList6.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream19 = doubleList6.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob21 = new org.ccsds.moims.mo.mal.structures.Blob("[hi!, ]".getBytes());
        int int22 = doubleList6.lastIndexOf((java.lang.Object) blob21);
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = blob21.getAreaNumber();
        try {
            binaryEncoder1.encodeNullableBlob(blob21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(shortItor13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(doubleStream19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(uShort23);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList(0);
        boolean boolean2 = booleanList1.isEmpty();
        java.util.Iterator<java.lang.Boolean> booleanItor3 = booleanList1.iterator();
        booleanList1.clear();
        java.lang.String str5 = booleanList1.toString();
        java.io.InputStream inputStream6 = null;
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(inputStream6);
        try {
            org.ccsds.moims.mo.mal.structures.Element element8 = booleanList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNotNull(booleanItor3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]" + "'", str5.equals("[]"));
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter(7);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Time time13 = binaryDecoder9.decodeNullableTime();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration14 = binaryDecoder9.decodeDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12.equals((byte) -1));
        org.junit.Assert.assertNull(time13);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeAbstractElementType((java.lang.Long) 1558616164233L, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        org.ccsds.moims.mo.mal.structures.Element element12 = time11.createElement();
        java.io.OutputStream outputStream13 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder14 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream13);
        byte byte16 = binaryEncoder14.internalEncodeAttributeType((byte) 100);
        byte byte18 = binaryEncoder14.internalEncodeAttributeType((byte) -1);
        byte byte20 = binaryEncoder14.internalEncodeAttributeType((byte) 100);
        try {
            time11.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 100 + "'", byte16 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) -1 + "'", byte18 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte20 + "' != '" + (byte) 100 + "'", byte20 == (byte) 100);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        java.lang.Double double9 = binaryDecoder8.decodeNullableDouble();
        byte[] byteArray10 = binaryDecoder8.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray10);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray10);
        int int13 = blob12.getLength();
        try {
            binaryEncoder1.encodeAttribute((org.ccsds.moims.mo.mal.structures.Attribute) blob12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals((double) double9, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.String str20 = blob11.getURL();
        org.ccsds.moims.mo.mal.structures.FloatList floatList21 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int23 = floatList21.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int24 = floatList21.getTypeShortForm();
        boolean boolean25 = floatList21.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator26 = floatList21.spliterator();
        java.lang.Integer int27 = floatList21.getTypeShortForm();
        boolean boolean28 = floatList21.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet29 = floatList21.getAreaVersion();
        java.util.Iterator<java.lang.Float> floatItor30 = floatList21.iterator();
        boolean boolean31 = blob11.equals((java.lang.Object) floatItor30);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-4) + "'", int24.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(floatSpliterator26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-4) + "'", int27.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uOctet29);
        org.junit.Assert.assertNotNull(floatItor30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        java.lang.Double double13 = binaryDecoder12.decodeNullableDouble();
        byte[] byteArray14 = binaryDecoder12.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.lang.Long[] longArray28 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList29 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList29, longArray28);
        java.lang.Object obj31 = longList29.clone();
        int int32 = strList19.indexOf((java.lang.Object) longList29);
        java.util.ListIterator<java.lang.String> strItor33 = strList19.listIterator();
        java.lang.String str34 = strList19.toString();
        java.lang.Double[] doubleArray37 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList38 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList38, doubleArray37);
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        int int45 = strList43.size();
        boolean boolean46 = doubleList38.equals((java.lang.Object) strList43);
        boolean boolean47 = strList19.remove((java.lang.Object) strList43);
        boolean boolean48 = blob15.equals((java.lang.Object) strList43);
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = blob15.getServiceNumber();
        try {
            binaryEncoder1.encodeNullableUShort(uShort49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals((double) double13, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[hi!, ]" + "'", str34.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(uShort49);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (-64), (-18));
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob14 = binaryDecoder13.decodeNullableBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        esa.mo.com.impl.archive.db.COMObjectEntityPK cOMObjectEntityPK3 = esa.mo.com.impl.archive.entities.COMObjectEntity.generatePK((java.lang.Integer) 2, (java.lang.Integer) 12, (java.lang.Long) 4294967295L);
        org.junit.Assert.assertNotNull(cOMObjectEntityPK3);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        int int46 = longList8.lastIndexOf((java.lang.Object) byteList42);
        int int47 = longList8.size();
        byte[] byteArray51 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder52 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray51);
        java.lang.Double double53 = binaryDecoder52.decodeNullableDouble();
        byte[] byteArray54 = binaryDecoder52.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob55 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray54);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.lang.Long[] longArray68 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList69 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList69, longArray68);
        java.lang.Object obj71 = longList69.clone();
        int int72 = strList59.indexOf((java.lang.Object) longList69);
        java.util.ListIterator<java.lang.String> strItor73 = strList59.listIterator();
        java.lang.String str74 = strList59.toString();
        java.lang.Double[] doubleArray77 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList78 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList78, doubleArray77);
        java.lang.String[] strArray82 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        int int85 = strList83.size();
        boolean boolean86 = doubleList78.equals((java.lang.Object) strList83);
        boolean boolean87 = strList59.remove((java.lang.Object) strList83);
        boolean boolean88 = blob55.equals((java.lang.Object) strList83);
        org.ccsds.moims.mo.mal.structures.UShort uShort89 = blob55.getServiceNumber();
        int int90 = longList8.lastIndexOf((java.lang.Object) uShort89);
        try {
            java.lang.Long long92 = longList8.remove((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals((double) double53, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "[hi!, ]" + "'", str74.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", !boolean87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
        org.junit.Assert.assertNotNull(uShort89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str1 = identifier0.toString();
        java.lang.Long long2 = identifier0.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = identifier0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Union union5 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        java.lang.Integer int6 = union5.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = union5.getAreaVersion();
        java.lang.Long long8 = union5.getShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList9 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int10 = booleanList9.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = booleanList9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = uOctet11.getAreaVersion();
        java.lang.String str13 = uOctet12.toString();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        org.ccsds.moims.mo.mal.structures.Blob blob23 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder25 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet12.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder25);
        org.ccsds.moims.mo.mal.structures.Element element27 = union5.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder25);
        org.ccsds.moims.mo.mal.structures.Element element28 = identifier0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder25);
        try {
            java.lang.Float float29 = binaryDecoder25.decodeFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487878L + "'", long2.equals(281474993487878L));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6.equals(2));
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487874L + "'", long8.equals(281474993487874L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-2) + "'", int10.equals((-2)));
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "1" + "'", str13.equals("1"));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(element28);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.URI uRI9 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = uRI9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = uRI9.getServiceNumber();
        try {
            binaryEncoder1.encodeURI(uRI9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(uShort11);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList6 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        doubleList6.clear();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = doubleList6.getServiceNumber();
        try {
            binaryEncoder1.encodeUShort(uShort8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(uShort8);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity2 = new esa.mo.com.impl.archive.entities.DomainHolderEntity(0, "true");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        org.ccsds.moims.mo.com.structures.ObjectId objectId8 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType9 = eventCOMObject0.getObjType();
        org.ccsds.moims.mo.mal.structures.Identifier identifier10 = eventCOMObject0.getNetworkZone();
        java.lang.Long long11 = eventCOMObject0.getObjId();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        java.lang.Double double17 = binaryDecoder16.decodeNullableDouble();
        byte[] byteArray18 = binaryDecoder16.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob19 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray18);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject20 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId21 = eventCOMObject20.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier22 = eventCOMObject20.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject23 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject23.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType28 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription29 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType28);
        eventCOMObject23.setObjType(objectType28);
        java.lang.Long long31 = eventCOMObject23.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId32 = eventCOMObject23.getObjectId();
        eventCOMObject20.setSource(objectId32);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList34 = eventCOMObject20.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject35 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject35.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType40 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription41 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType40);
        eventCOMObject35.setObjType(objectType40);
        java.lang.Long long43 = eventCOMObject35.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectType objectType46 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription47 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType46);
        java.lang.Boolean boolean48 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType46);
        java.lang.Boolean boolean49 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType46);
        java.lang.Long long50 = esa.mo.com.impl.util.HelperCOM.generateSubKey(objectType46);
        eventCOMObject35.setObjType(objectType46);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject52 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject52.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType57 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription58 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType57);
        eventCOMObject52.setObjType(objectType57);
        java.lang.Long long60 = eventCOMObject52.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId61 = eventCOMObject52.getObjectId();
        eventCOMObject35.setSource(objectId61);
        eventCOMObject20.setSource(objectId61);
        boolean boolean64 = blob19.equals((java.lang.Object) eventCOMObject20);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject65 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject65.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType70 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription71 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType70);
        eventCOMObject65.setObjType(objectType70);
        java.lang.Long long73 = eventCOMObject65.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectType objectType76 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription77 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType76);
        java.lang.Boolean boolean78 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType76);
        java.lang.Boolean boolean79 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType76);
        java.lang.Long long80 = esa.mo.com.impl.util.HelperCOM.generateSubKey(objectType76);
        eventCOMObject65.setObjType(objectType76);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject82 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject82.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType87 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription88 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType87);
        eventCOMObject82.setObjType(objectType87);
        java.lang.Long long90 = eventCOMObject82.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId91 = eventCOMObject82.getObjectId();
        eventCOMObject65.setSource(objectId91);
        eventCOMObject20.setSource(objectId91);
        eventCOMObject0.setSource(objectId91);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertNull(objectId8);
        org.junit.Assert.assertNotNull(objectType9);
        org.junit.Assert.assertNull(identifier10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals((double) double17, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertNull(objectId21);
        org.junit.Assert.assertNull(identifier22);
        org.junit.Assert.assertNotNull(objectType28);
        org.junit.Assert.assertNotNull(subscription29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 4294967295L + "'", long31.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId32);
        org.junit.Assert.assertNull(identifierList34);
        org.junit.Assert.assertNotNull(objectType40);
        org.junit.Assert.assertNotNull(subscription41);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 4294967295L + "'", long43.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType46);
        org.junit.Assert.assertNotNull(subscription47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48.equals(true));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49.equals(true));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 281474993487885L + "'", long50.equals(281474993487885L));
        org.junit.Assert.assertNotNull(objectType57);
        org.junit.Assert.assertNotNull(subscription58);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 4294967295L + "'", long60.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(objectType70);
        org.junit.Assert.assertNotNull(subscription71);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 4294967295L + "'", long73.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType76);
        org.junit.Assert.assertNotNull(subscription77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78.equals(true));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79.equals(true));
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 281474993487885L + "'", long80.equals(281474993487885L));
        org.junit.Assert.assertNotNull(objectType87);
        org.junit.Assert.assertNotNull(subscription88);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 4294967295L + "'", long90.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId91);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        int int14 = uRIList1.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        int int35 = byteList29.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean36 = uRIList1.removeAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList43 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList43, doubleArray42);
        org.ccsds.moims.mo.mal.structures.OctetList octetList45 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = octetList45.getServiceNumber();
        boolean boolean47 = doubleList43.containsAll((java.util.Collection<java.lang.Byte>) octetList45);
        boolean boolean48 = uRIList1.retainAll((java.util.Collection<java.lang.Byte>) octetList45);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet49 = octetList45.getAreaVersion();
        org.ccsds.moims.mo.com.archive.structures.ExpressionOperator expressionOperator50 = null;
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = org.ccsds.moims.mo.mal.structures.DoubleList.SERVICE_SHORT_FORM;
        java.lang.Boolean boolean52 = esa.mo.com.impl.util.HelperCOM.evaluateExpression((org.ccsds.moims.mo.mal.structures.Element) octetList45, expressionOperator50, (org.ccsds.moims.mo.mal.structures.Attribute) uShort51);
        java.util.Iterator<java.lang.Byte> byteItor53 = octetList45.iterator();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(uOctet49);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(byteItor53);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.String str10 = identifier9.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = identifier9.getAreaVersion();
        java.math.BigInteger bigInteger12 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong13 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger12);
        java.lang.Integer int14 = uLong13.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element15 = uLong13.createElement();
        boolean boolean16 = identifier9.equals((java.lang.Object) element15);
        try {
            binaryEncoder1.encodeIdentifier(identifier9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[hi!, ]" + "'", str10.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(bigInteger12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 14 + "'", int14.equals(14));
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Duration duration23 = binaryDecoder21.decodeDuration();
        int int24 = integerList1.lastIndexOf((java.lang.Object) binaryDecoder21);
        java.lang.Short short25 = binaryDecoder21.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI26 = binaryDecoder21.decodeURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + short25 + "' != '" + (short) -64 + "'", short25.equals((short) -64));
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Float float7 = binaryDecoder5.decodeNullableFloat();
        try {
            java.lang.Long long9 = binaryDecoder5.decodeAbstractElementType(true);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.0f + "'", float7.equals(0.0f));
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        java.lang.String str12 = binaryDecoder9.decodeString();
        try {
            java.lang.Long long13 = binaryDecoder9.decodeLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str6 = uRI5.toString();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        java.lang.Integer int13 = binaryDecoder12.decodeInteger();
        int int15 = binaryDecoder12.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Element element16 = uRI5.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
        try {
            binaryEncoder1.encodeNullableURI(uRI5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13.equals(50));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(element16);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (byte) 1);
        try {
            java.lang.Boolean boolean12 = binaryDecoder11.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeBoolean((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int2 = stringList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        boolean boolean24 = byteList21.add((java.lang.Byte) (byte) 100);
        boolean boolean25 = byteList12.addAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int27 = byteList21.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean28 = uRIList5.retainAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int29 = stringList1.lastIndexOf((java.lang.Object) uRIList5);
        byte[] byteArray33 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder34 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder35 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        boolean boolean36 = stringList1.remove((java.lang.Object) binaryDecoder35);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet37 = stringList1.getAreaVersion();
        java.lang.Integer int38 = uOctet37.getTypeShortForm();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-15) + "'", int2.equals((-15)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(uOctet37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38.equals(8));
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(52);
        java.lang.String str2 = integerList1.toString();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = integerList1.getServiceNumber();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Duration duration12 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = duration12.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element14 = binaryDecoder10.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) duration12);
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "[]" + "'", str2.equals("[]"));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(element14);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray1 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList2, uRIArray1);
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
        boolean boolean12 = byteList9.add((java.lang.Byte) (byte) 100);
        boolean boolean13 = uRIList2.containsAll((java.util.Collection<java.lang.Byte>) byteList9);
        byteList9.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean17 = longList0.removeAll((java.util.Collection<java.lang.Byte>) byteList9);
        org.ccsds.moims.mo.mal.structures.FloatList floatList18 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Object obj38 = byteList24.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream39 = byteList24.stream();
        boolean boolean40 = floatList18.containsAll((java.util.Collection<java.lang.Byte>) byteList24);
        org.ccsds.moims.mo.mal.structures.UShort uShort41 = floatList18.getAreaNumber();
        java.util.stream.Stream<java.lang.Float> floatStream42 = floatList18.stream();
        boolean boolean43 = longList0.contains((java.lang.Object) floatList18);
        org.ccsds.moims.mo.mal.structures.UShort uShort44 = longList0.getServiceNumber();
        java.lang.Object obj45 = longList0.clone();
        java.lang.Long long46 = longList0.getShortForm();
        java.io.OutputStream outputStream47 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder48 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream47);
        byte byte50 = binaryEncoder48.internalEncodeAttributeType((byte) 100);
        byte byte52 = binaryEncoder48.internalEncodeAttributeType((byte) -1);
        byte byte54 = binaryEncoder48.internalEncodeAttributeType((byte) 1);
        try {
            longList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(byteStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(uShort41);
        org.junit.Assert.assertNotNull(floatStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertNotNull(uShort44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 281475010265075L + "'", long46.equals(281475010265075L));
        org.junit.Assert.assertTrue("'" + byte50 + "' != '" + (byte) 100 + "'", byte50 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte52 + "' != '" + (byte) -1 + "'", byte52 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte54 + "' != '" + (byte) 1 + "'", byte54 == (byte) 1);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray2 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList3, uRIArray2);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList10 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList10, byteArray9);
        boolean boolean13 = byteList10.add((java.lang.Byte) (byte) 100);
        boolean boolean14 = uRIList3.containsAll((java.util.Collection<java.lang.Byte>) byteList10);
        int int16 = uRIList3.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList31 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList31, byteArray30);
        boolean boolean34 = byteList31.add((java.lang.Byte) (byte) 100);
        boolean boolean35 = byteList22.addAll((java.util.Collection<java.lang.Byte>) byteList31);
        int int37 = byteList31.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean38 = uRIList3.removeAll((java.util.Collection<java.lang.Byte>) byteList31);
        int int39 = uShortList1.indexOf((java.lang.Object) uRIList3);
        java.io.OutputStream outputStream40 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder41 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream40);
        byte byte43 = binaryEncoder41.internalEncodeAttributeType((byte) 100);
        byte byte45 = binaryEncoder41.internalEncodeAttributeType((byte) -1);
        byte byte47 = binaryEncoder41.internalEncodeAttributeType((byte) 100);
        esa.mo.com.impl.archive.encoding.GENEncoder[] gENEncoderArray48 = new esa.mo.com.impl.archive.encoding.GENEncoder[] { binaryEncoder41 };
        esa.mo.com.impl.archive.encoding.GENEncoder[] gENEncoderArray49 = uShortList1.toArray(gENEncoderArray48);
        org.junit.Assert.assertNotNull(uRIArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + byte43 + "' != '" + (byte) 100 + "'", byte43 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte45 + "' != '" + (byte) -1 + "'", byte45 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte47 + "' != '" + (byte) 100 + "'", byte47 == (byte) 100);
        org.junit.Assert.assertNotNull(gENEncoderArray48);
        org.junit.Assert.assertNotNull(gENEncoderArray49);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger7 = binaryDecoder5.decodeUInteger();
        try {
            java.lang.Long long8 = binaryDecoder5.decodeNullableLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertNotNull(uInteger7);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.Element element1 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList0.getAreaNumber();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId4 = eventCOMObject3.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = eventCOMObject3.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject6.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType11 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription12 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType11);
        eventCOMObject6.setObjType(objectType11);
        java.lang.Long long14 = eventCOMObject6.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId15 = eventCOMObject6.getObjectId();
        eventCOMObject3.setSource(objectId15);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList17 = eventCOMObject3.getDomain();
        boolean boolean18 = uShort2.equals((java.lang.Object) eventCOMObject3);
        org.ccsds.moims.mo.mal.structures.FloatList floatList19 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int21 = floatList19.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int22 = floatList19.getTypeShortForm();
        boolean boolean23 = floatList19.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator24 = floatList19.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = floatList19.getServiceNumber();
        int int27 = floatList19.lastIndexOf((java.lang.Object) (-11));
        java.lang.String str28 = floatList19.toString();
        java.util.stream.Stream<java.lang.Float> floatStream29 = floatList19.stream();
        java.util.Iterator<java.lang.Float> floatItor30 = floatList19.iterator();
        java.util.stream.Stream<java.lang.Float> floatStream31 = floatList19.parallelStream();
        eventCOMObject3.setBody((org.ccsds.moims.mo.mal.structures.Element) floatList19);
        org.ccsds.moims.mo.mal.structures.Time time33 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int34 = time33.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element35 = time33.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort36 = time33.getAreaNumber();
        eventCOMObject3.setTimestamp(time33);
        org.ccsds.moims.mo.mal.structures.Element element38 = eventCOMObject3.getBody();
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNull(objectId4);
        org.junit.Assert.assertNull(identifier5);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 4294967295L + "'", long14.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId15);
        org.junit.Assert.assertNull(identifierList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(floatSpliterator24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]" + "'", str28.equals("[]"));
        org.junit.Assert.assertNotNull(floatStream29);
        org.junit.Assert.assertNotNull(floatItor30);
        org.junit.Assert.assertNotNull(floatStream31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34.equals(16));
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(uShort36);
        org.junit.Assert.assertNotNull(element38);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uInteger6.getAreaVersion();
        java.lang.Integer int8 = uInteger6.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element9 = uInteger6.createElement();
        org.ccsds.moims.mo.mal.structures.Element element10 = uInteger6.createElement();
        java.lang.Integer int11 = uInteger6.getTypeShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 12 + "'", int8.equals(12));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 12 + "'", int11.equals(12));
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int2 = stringList1.getTypeShortForm();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Double double8 = binaryDecoder7.decodeNullableDouble();
        byte[] byteArray9 = binaryDecoder7.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob10 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray9);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.lang.Long[] longArray23 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList24 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList24, longArray23);
        java.lang.Object obj26 = longList24.clone();
        int int27 = strList14.indexOf((java.lang.Object) longList24);
        java.util.ListIterator<java.lang.String> strItor28 = strList14.listIterator();
        java.lang.String str29 = strList14.toString();
        java.lang.Double[] doubleArray32 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList33 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList33, doubleArray32);
        java.lang.String[] strArray37 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        int int40 = strList38.size();
        boolean boolean41 = doubleList33.equals((java.lang.Object) strList38);
        boolean boolean42 = strList14.remove((java.lang.Object) strList38);
        boolean boolean43 = blob10.equals((java.lang.Object) strList38);
        org.ccsds.moims.mo.mal.structures.UShort uShort44 = blob10.getServiceNumber();
        boolean boolean45 = stringList1.remove((java.lang.Object) blob10);
        org.ccsds.moims.mo.mal.structures.Element element46 = blob10.createElement();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-15) + "'", int2.equals((-15)));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals((double) double8, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "[hi!, ]" + "'", str29.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertNotNull(uShort44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(element46);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        java.lang.Double double13 = binaryDecoder12.decodeNullableDouble();
        byte[] byteArray14 = binaryDecoder12.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14);
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14);
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = blob16.getServiceNumber();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        int int23 = intList20.lastIndexOf((java.lang.Object) 0.0f);
        int int25 = intList20.lastIndexOf((java.lang.Object) (-1));
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.lang.Long[] longArray38 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList39 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList39, longArray38);
        java.lang.Object obj41 = longList39.clone();
        int int42 = strList29.indexOf((java.lang.Object) longList39);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
        boolean boolean60 = byteList57.add((java.lang.Byte) (byte) 100);
        boolean boolean61 = byteList48.addAll((java.util.Collection<java.lang.Byte>) byteList57);
        java.lang.Object obj62 = byteList48.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream63 = byteList48.stream();
        boolean boolean64 = strList29.retainAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean65 = intList20.removeAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.String str66 = intList20.toString();
        intList20.ensureCapacity(10);
        boolean boolean69 = blob16.equals((java.lang.Object) 10);
        try {
            binaryEncoder1.encodeNullableBlob(blob16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals((double) double13, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(byteStream63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "[10]" + "'", str66.equals("[10]"));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.stream();
        org.ccsds.moims.mo.mal.structures.OctetList octetList42 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean43 = strList35.retainAll((java.util.Collection<java.lang.Byte>) octetList42);
        org.ccsds.moims.mo.mal.structures.StringList stringList46 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        stringList46.ensureCapacity((-15));
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray49 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList50 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList50, uShortArray49);
        uShortList50.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet53 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element54 = uOctet53.createElement();
        int int55 = uShortList50.indexOf((java.lang.Object) element54);
        boolean boolean57 = uShortList50.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor58 = uShortList50.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort59 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean60 = uShortList50.add(uShort59);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray61 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList62 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList62, uRIArray61);
        java.lang.Byte[] byteArray68 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList69 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList69, byteArray68);
        boolean boolean72 = byteList69.add((java.lang.Byte) (byte) 100);
        boolean boolean73 = uRIList62.containsAll((java.util.Collection<java.lang.Byte>) byteList69);
        boolean boolean74 = uShortList50.retainAll((java.util.Collection<java.lang.Byte>) byteList69);
        org.ccsds.moims.mo.mal.structures.OctetList octetList75 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet76 = octetList75.getAreaVersion();
        boolean boolean77 = byteList69.addAll((java.util.Collection<java.lang.Byte>) octetList75);
        boolean boolean78 = stringList46.containsAll((java.util.Collection<java.lang.Byte>) byteList69);
        try {
            boolean boolean79 = octetList42.addAll((int) (byte) 100, (java.util.Collection<java.lang.Byte>) byteList69);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(uShortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(uOctet53);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(uShortItor58);
        org.junit.Assert.assertNotNull(uShort59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(uRIArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertNotNull(uOctet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        java.lang.Integer int8 = blob0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = blob0.getServiceNumber();
        int int10 = blob0.getOffset();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8.equals(1));
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("");
        dictionary0.defineWord((java.lang.Integer) (-2), "");
        dictionary0.defineWord((java.lang.Integer) 2, "");
        java.lang.Integer int10 = dictionary0.getWordId("[10, -1, 100]");
        boolean boolean12 = dictionary0.exists((java.lang.Integer) 9);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10.equals(2));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        org.ccsds.moims.mo.mal.structures.Time time9 = binaryDecoder7.decodeTime();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute10 = binaryDecoder7.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(time9);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong12 = binaryDecoder11.decodeNullableULong();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ULong argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList1.getAreaNumber();
        java.lang.Object[] objArray3 = shortList1.toArray();
        boolean boolean4 = floatList0.remove((java.lang.Object) shortList1);
        java.lang.Integer int5 = shortList1.getTypeShortForm();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject6.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = null;
        eventCOMObject6.setNetworkZone(identifier9);
        org.ccsds.moims.mo.mal.structures.URI uRI11 = eventCOMObject6.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList12 = eventCOMObject6.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject13 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId14 = eventCOMObject13.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier15 = eventCOMObject13.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject16 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject16.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType21 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription22 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType21);
        eventCOMObject16.setObjType(objectType21);
        java.lang.Long long24 = eventCOMObject16.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId25 = eventCOMObject16.getObjectId();
        eventCOMObject13.setSource(objectId25);
        eventCOMObject6.setSource(objectId25);
        boolean boolean28 = shortList1.remove((java.lang.Object) eventCOMObject6);
        try {
            shortList1.add((int) ' ', (java.lang.Short) (short) 127);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-9) + "'", int5.equals((-9)));
        org.junit.Assert.assertNull(uRI11);
        org.junit.Assert.assertNull(identifierList12);
        org.junit.Assert.assertNull(objectId14);
        org.junit.Assert.assertNull(identifier15);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 4294967295L + "'", long24.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element1 = floatList0.createElement();
        java.lang.Integer int2 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.OctetList octetList3 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = octetList3.getServiceNumber();
        java.lang.Integer int5 = octetList3.getTypeShortForm();
        boolean boolean6 = floatList0.equals((java.lang.Object) int5);
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime12 = binaryDecoder11.decodeFineTime();
        java.lang.Long long13 = binaryDecoder11.decodeLong();
        int int14 = floatList0.lastIndexOf((java.lang.Object) binaryDecoder11);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray15 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList16 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList16, uShortArray15);
        uShortList16.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet19 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element20 = uOctet19.createElement();
        int int21 = uShortList16.indexOf((java.lang.Object) element20);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList35 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList35, longArray34);
        java.lang.Object obj37 = longList35.clone();
        int int38 = strList25.indexOf((java.lang.Object) longList35);
        java.util.ListIterator<java.lang.String> strItor39 = strList25.listIterator();
        java.lang.Short[] shortArray43 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList44 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList44, shortArray43);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray51 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList52 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList52, uRIArray51);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = uRIList52.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean64 = strList49.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean65 = shortList44.contains((java.lang.Object) byteList59);
        boolean boolean66 = strList25.removeAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean67 = uShortList16.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        java.util.stream.Stream<java.lang.Byte> byteStream68 = byteList59.stream();
        boolean boolean69 = floatList0.removeAll((java.util.Collection<java.lang.Byte>) byteList59);
        byte[] byteArray73 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder74 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray73);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder75 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray73);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet76 = binaryDecoder75.decodeNullableUOctet();
        java.lang.Long long77 = uOctet76.getShortForm();
        java.lang.Long long78 = uOctet76.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList79 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int80 = uRIList79.getTypeShortForm();
        java.lang.Integer int81 = uRIList79.getTypeShortForm();
        java.lang.Object obj82 = uRIList79.clone();
        byte[] byteArray86 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder87 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray86);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder88 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray86);
        int int89 = uRIList79.lastIndexOf((java.lang.Object) binaryDecoder88);
        org.ccsds.moims.mo.mal.structures.Duration duration90 = binaryDecoder88.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element91 = uOctet76.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder88);
        byte[] byteArray92 = binaryDecoder88.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder93 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray92);
        try {
            org.ccsds.moims.mo.mal.structures.Element element94 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-4) + "'", int2.equals((-4)));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-7) + "'", int5.equals((-7)));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(fineTime12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-64L) + "'", long13.equals((-64L)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(uShortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(uOctet19);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strItor39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertNotNull(uRIArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertNotNull(byteStream68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertNotNull(uOctet76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 281474993487880L + "'", long77.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 281474993487880L + "'", long78.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-18) + "'", int80.equals((-18)));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-18) + "'", int81.equals((-18)));
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(element91);
        org.junit.Assert.assertNotNull(byteArray92);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime12 = binaryDecoder11.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.Element element13 = fineTime12.createElement();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime12);
        org.junit.Assert.assertNotNull(element13);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        org.ccsds.moims.mo.mal.structures.Time time9 = binaryDecoder7.decodeNullableTime();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration10 = binaryDecoder7.decodeDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(time9);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int1 = uRIList0.size();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor2 = uRIList0.iterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = uRIList0.getAreaVersion();
        java.lang.Long long4 = uRIList0.getShortForm();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) 100);
        try {
            uRIList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(uRIItor2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265070L + "'", long4.equals(281475010265070L));
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 100 + "'", byte8 == (byte) 100);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        uShortList1.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element5 = uOctet4.createElement();
        int int6 = uShortList1.indexOf((java.lang.Object) element5);
        boolean boolean8 = uShortList1.contains((java.lang.Object) 100.0d);
        boolean boolean9 = uShortList1.isEmpty();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList19 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        int int22 = intList19.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream23 = intList19.stream();
        java.util.Iterator<java.lang.Integer> intItor24 = intList19.iterator();
        int int25 = uShortList1.lastIndexOf((java.lang.Object) intList19);
        org.ccsds.moims.mo.com.structures.ObjectType objectType31 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(18, (int) 'a', (int) ' ', 8);
        org.ccsds.moims.mo.mal.structures.Subscription subscription32 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("true", objectType31);
        boolean boolean33 = uShortList1.contains((java.lang.Object) subscription32);
        boolean boolean35 = uShortList1.contains((java.lang.Object) 281474993487874L);
        boolean boolean36 = uShortList1.isEmpty();
        org.ccsds.moims.mo.mal.structures.URIList uRIList37 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int38 = uRIList37.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet39 = uRIList37.getAreaVersion();
        int int40 = uShortList1.indexOf((java.lang.Object) uRIList37);
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(intItor24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(objectType31);
        org.junit.Assert.assertNotNull(subscription32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-18) + "'", int38.equals((-18)));
        org.junit.Assert.assertNotNull(uOctet39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = binaryDecoder9.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.Element element11 = uInteger10.createElement();
        org.ccsds.moims.mo.mal.structures.LongList longList12 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray13 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList14 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList14, uRIArray13);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        boolean boolean24 = byteList21.add((java.lang.Byte) (byte) 100);
        boolean boolean25 = uRIList14.containsAll((java.util.Collection<java.lang.Byte>) byteList21);
        byteList21.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean29 = longList12.removeAll((java.util.Collection<java.lang.Byte>) byteList21);
        org.ccsds.moims.mo.mal.structures.FloatList floatList30 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray35 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList36 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList36, byteArray35);
        boolean boolean39 = byteList36.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray44 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList45 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList45, byteArray44);
        boolean boolean48 = byteList45.add((java.lang.Byte) (byte) 100);
        boolean boolean49 = byteList36.addAll((java.util.Collection<java.lang.Byte>) byteList45);
        java.lang.Object obj50 = byteList36.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream51 = byteList36.stream();
        boolean boolean52 = floatList30.containsAll((java.util.Collection<java.lang.Byte>) byteList36);
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = floatList30.getAreaNumber();
        java.util.stream.Stream<java.lang.Float> floatStream54 = floatList30.stream();
        boolean boolean55 = longList12.contains((java.lang.Object) floatList30);
        org.ccsds.moims.mo.mal.structures.UShort uShort56 = longList12.getServiceNumber();
        java.lang.Object obj57 = longList12.clone();
        boolean boolean58 = uInteger10.equals((java.lang.Object) longList12);
        try {
            binaryEncoder1.encodeUInteger(uInteger10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uInteger10);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(uRIArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(byteStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(uShort53);
        org.junit.Assert.assertNotNull(floatStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(uShort56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((-2), "");
        java.lang.String str3 = providerURIHolderEntity2.getProviderURIString();
        java.lang.String str4 = providerURIHolderEntity2.getProviderURIString();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        java.lang.Float[] floatArray2 = new java.lang.Float[] { 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList3 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList3, floatArray2);
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        int int15 = strList13.size();
        boolean boolean16 = doubleList8.equals((java.lang.Object) strList13);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.lang.Long[] longArray29 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList30 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList30, longArray29);
        java.lang.Object obj32 = longList30.clone();
        int int33 = strList20.indexOf((java.lang.Object) longList30);
        java.util.ListIterator<java.lang.String> strItor34 = strList20.listIterator();
        java.lang.Short[] shortArray38 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList39 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList39, shortArray38);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray46 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList47 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList47, uRIArray46);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        boolean boolean58 = uRIList47.containsAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean59 = strList44.containsAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean60 = shortList39.contains((java.lang.Object) byteList54);
        boolean boolean61 = strList20.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean62 = doubleList8.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean63 = floatList3.remove((java.lang.Object) byteList54);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList65 = new org.ccsds.moims.mo.mal.structures.UShortList(16);
        boolean boolean66 = floatList3.remove((java.lang.Object) uShortList65);
        java.lang.Long long67 = uShortList65.getShortForm();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator68 = uShortList65.spliterator();
        java.lang.Double[] doubleArray70 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList71 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList71, doubleArray70);
        java.lang.Short[] shortArray75 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList76 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList76, shortArray75);
        java.util.ListIterator<java.lang.Short> shortItor78 = shortList76.listIterator();
        int int79 = doubleList71.indexOf((java.lang.Object) shortList76);
        org.ccsds.moims.mo.mal.structures.Blob blob80 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean81 = blob80.isURLBased();
        byte[] byteArray85 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder86 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray85);
        org.ccsds.moims.mo.mal.structures.Element element87 = blob80.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder86);
        boolean boolean88 = doubleList71.contains((java.lang.Object) blob80);
        int int89 = blob80.getOffset();
        boolean boolean90 = blob80.isURLBased();
        int int91 = uShortList65.indexOf((java.lang.Object) boolean90);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(uRIArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 281475010265078L + "'", long67.equals(281475010265078L));
        org.junit.Assert.assertNotNull(uShortSpliterator68);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(shortItor78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertNotNull(element87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.parallelStream();
        org.ccsds.moims.mo.mal.structures.FloatList floatList42 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int44 = floatList42.lastIndexOf((java.lang.Object) 10);
        java.lang.Long long45 = floatList42.getShortForm();
        boolean boolean46 = strList35.contains((java.lang.Object) long45);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 281475010265084L + "'", long45.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime9 = binaryDecoder8.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI10 = binaryDecoder8.decodeURI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = uRI10.getAreaVersion();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList21 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        int int24 = intList21.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream25 = intList21.stream();
        java.util.Iterator<java.lang.Integer> intItor26 = intList21.iterator();
        boolean boolean27 = uRI10.equals((java.lang.Object) intItor26);
        try {
            binaryEncoder1.encodeNullableURI(uRI10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(fineTime9);
        org.junit.Assert.assertNotNull(uRI10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertNotNull(intItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        int int11 = uRIList0.size();
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList19 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList19, shortArray18);
        java.util.ListIterator<java.lang.Short> shortItor21 = shortList19.listIterator();
        int int22 = doubleList14.indexOf((java.lang.Object) shortList19);
        doubleList14.ensureCapacity((-1));
        doubleList14.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream27 = doubleList14.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob29 = new org.ccsds.moims.mo.mal.structures.Blob("[hi!, ]".getBytes());
        int int30 = doubleList14.lastIndexOf((java.lang.Object) blob29);
        boolean boolean31 = uRIList0.equals((java.lang.Object) doubleList14);
        java.lang.Object obj32 = uRIList0.clone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject33 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId34 = eventCOMObject33.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType36 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject33.setObjType(objectType36);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.lang.Long[] longArray50 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList51 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList51, longArray50);
        java.lang.Object obj53 = longList51.clone();
        int int54 = strList41.indexOf((java.lang.Object) longList51);
        java.util.stream.Stream<java.lang.Long> longStream55 = longList51.parallelStream();
        longList51.add(2, (java.lang.Long) 281475010265070L);
        java.util.stream.Stream<java.lang.Long> longStream59 = longList51.parallelStream();
        org.ccsds.moims.mo.mal.structures.URI uRI61 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str62 = uRI61.toString();
        int int63 = longList51.indexOf((java.lang.Object) uRI61);
        eventCOMObject33.setSourceURI(uRI61);
        boolean boolean65 = uRIList0.add(uRI61);
        org.ccsds.moims.mo.mal.structures.URI uRI68 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element69 = uRI68.createElement();
        java.lang.String str70 = uRI68.toString();
        java.lang.Long long71 = uRI68.getShortForm();
        try {
            uRIList0.add((int) (short) -64, uRI68);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -64, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(shortItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(doubleStream27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNull(objectId34);
        org.junit.Assert.assertNotNull(objectType36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(longStream55);
        org.junit.Assert.assertNotNull(longStream59);
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "hi!" + "'", str62.equals("hi!"));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "hi!" + "'", str70.equals("hi!"));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 281474993487890L + "'", long71.equals(281474993487890L));
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeShort((java.lang.Short) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        int int14 = uRIList1.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        int int35 = byteList29.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean36 = uRIList1.removeAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList43 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList43, doubleArray42);
        org.ccsds.moims.mo.mal.structures.OctetList octetList45 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = octetList45.getServiceNumber();
        boolean boolean47 = doubleList43.containsAll((java.util.Collection<java.lang.Byte>) octetList45);
        boolean boolean48 = uRIList1.retainAll((java.util.Collection<java.lang.Byte>) octetList45);
        java.lang.Object obj49 = uRIList1.clone();
        org.ccsds.moims.mo.mal.structures.Time time50 = new org.ccsds.moims.mo.mal.structures.Time();
        int int51 = uRIList1.indexOf((java.lang.Object) time50);
        long long52 = time50.getValue();
        java.lang.Integer int53 = time50.getTypeShortForm();
        byte[] byteArray57 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder58 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray57);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder59 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray57);
        java.lang.Byte byte60 = binaryDecoder59.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element61 = time50.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder59);
        try {
            java.lang.Short short62 = binaryDecoder59.decodeShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 16 + "'", int53.equals(16));
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertTrue("'" + byte60 + "' != '" + (byte) 100 + "'", byte60.equals((byte) 100));
        org.junit.Assert.assertNotNull(element61);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject12.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType17 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription18 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType17);
        eventCOMObject12.setObjType(objectType17);
        eventCOMObject3.setObjType(objectType17);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("18446744073709551615", objectType17);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList22 = fastObjectType1.getObjectTypeIds(objectType17);
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType24 = fastObjectType1.getObjectType((java.lang.Integer) 16);
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: null");
        } catch (java.lang.Exception e) {
        }
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(integerList22);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime13 = binaryDecoder10.decodeFineTime();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.Element element19 = fineTime13.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Time time20 = binaryDecoder18.decodeNullableTime();
        java.io.OutputStream outputStream21 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder22 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream21);
        byte byte24 = binaryEncoder22.internalEncodeAttributeType((byte) 100);
        byte byte26 = binaryEncoder22.internalEncodeAttributeType((byte) -1);
        byte byte28 = binaryEncoder22.internalEncodeAttributeType((byte) 1);
        try {
            time20.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(fineTime13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(time20);
        org.junit.Assert.assertTrue("'" + byte24 + "' != '" + (byte) 100 + "'", byte24 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte26 + "' != '" + (byte) -1 + "'", byte26 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 1 + "'", byte28 == (byte) 1);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeOctet((java.lang.Byte) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        java.lang.Integer int9 = binaryDecoder7.decodeInteger();
        try {
            java.lang.Integer int10 = binaryDecoder7.decodeInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-64) + "'", int9.equals((-64)));
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        integerList1.ensureCapacity((int) 'a');
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = integerList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList6 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int7 = booleanList6.getTypeShortForm();
        java.util.stream.Stream<java.lang.Boolean> booleanStream8 = booleanList6.stream();
        boolean boolean9 = booleanList6.isEmpty();
        java.util.stream.Stream<java.lang.Boolean> booleanStream10 = booleanList6.stream();
        org.ccsds.moims.mo.mal.structures.LongList longList11 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray12 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList13, uRIArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        boolean boolean24 = uRIList13.containsAll((java.util.Collection<java.lang.Byte>) byteList20);
        byteList20.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean28 = longList11.removeAll((java.util.Collection<java.lang.Byte>) byteList20);
        boolean boolean29 = booleanList6.containsAll((java.util.Collection<java.lang.Byte>) byteList20);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray30 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList31, uRIArray30);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator33 = uRIList31.spliterator();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject34 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject34.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType39 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription40 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType39);
        eventCOMObject34.setObjType(objectType39);
        int int42 = uRIList31.indexOf((java.lang.Object) eventCOMObject34);
        uRIList31.clear();
        int int44 = booleanList6.lastIndexOf((java.lang.Object) uRIList31);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList47 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
        int int50 = intList47.lastIndexOf((java.lang.Object) 0.0f);
        int int52 = intList47.lastIndexOf((java.lang.Object) (-1));
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.lang.Long[] longArray65 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList66 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList66, longArray65);
        java.lang.Object obj68 = longList66.clone();
        int int69 = strList56.indexOf((java.lang.Object) longList66);
        java.lang.Byte[] byteArray74 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList75 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList75, byteArray74);
        boolean boolean78 = byteList75.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray83 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList84 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList84, byteArray83);
        boolean boolean87 = byteList84.add((java.lang.Byte) (byte) 100);
        boolean boolean88 = byteList75.addAll((java.util.Collection<java.lang.Byte>) byteList84);
        java.lang.Object obj89 = byteList75.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream90 = byteList75.stream();
        boolean boolean91 = strList56.retainAll((java.util.Collection<java.lang.Byte>) byteList75);
        boolean boolean92 = intList47.removeAll((java.util.Collection<java.lang.Byte>) byteList75);
        byteList75.trimToSize();
        boolean boolean94 = booleanList6.retainAll((java.util.Collection<java.lang.Byte>) byteList75);
        boolean boolean95 = integerList1.retainAll((java.util.Collection<java.lang.Byte>) byteList75);
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7.equals((-2)));
        org.junit.Assert.assertNotNull(booleanStream8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(booleanStream10);
        org.junit.Assert.assertNotNull(uRIArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(uRIArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(uRISpliterator33);
        org.junit.Assert.assertNotNull(objectType39);
        org.junit.Assert.assertNotNull(subscription40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(byteStream90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", !boolean95);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        shortList0.ensureCapacity(18);
        shortList0.clear();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        java.lang.Float float11 = binaryDecoder10.decodeFloat();
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = shortList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 7.0E-44f + "'", float11.equals(7.0E-44f));
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject5 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId6 = eventCOMObject5.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier7 = eventCOMObject5.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject8.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType13 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription14 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType13);
        eventCOMObject8.setObjType(objectType13);
        java.lang.Long long16 = eventCOMObject8.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId17 = eventCOMObject8.getObjectId();
        eventCOMObject5.setSource(objectId17);
        eventCOMObject0.setSource(objectId17);
        org.ccsds.moims.mo.com.structures.ObjectId objectId20 = eventCOMObject0.getObjectId();
        org.junit.Assert.assertNull(objectId6);
        org.junit.Assert.assertNull(identifier7);
        org.junit.Assert.assertNotNull(objectType13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 4294967295L + "'", long16.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId17);
        org.junit.Assert.assertNotNull(objectId20);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream3 = uShortList1.parallelStream();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream4 = uShortList1.stream();
        uShortList1.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream6 = uShortList1.stream();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        java.lang.Double double12 = binaryDecoder11.decodeNullableDouble();
        byte[] byteArray13 = binaryDecoder11.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = blob16.getAreaVersion();
        int int18 = uShortList1.indexOf((java.lang.Object) blob16);
        java.lang.Short[] shortArray22 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList23 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList23, shortArray22);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray30 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList31, uRIArray30);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        boolean boolean42 = uRIList31.containsAll((java.util.Collection<java.lang.Byte>) byteList38);
        boolean boolean43 = strList28.containsAll((java.util.Collection<java.lang.Byte>) byteList38);
        boolean boolean44 = shortList23.contains((java.lang.Object) byteList38);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        java.lang.Object obj64 = byteList50.clone();
        boolean boolean65 = shortList23.retainAll((java.util.Collection<java.lang.Byte>) byteList50);
        shortList23.clear();
        boolean boolean67 = blob16.equals((java.lang.Object) shortList23);
        java.io.OutputStream outputStream68 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder69 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream68);
        byte byte71 = binaryEncoder69.internalEncodeAttributeType((byte) -1);
        try {
            blob16.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uShortStream3);
        org.junit.Assert.assertNotNull(uShortStream4);
        org.junit.Assert.assertNotNull(uShortStream6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals((double) double12, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(uRIArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + byte71 + "' != '" + (byte) -1 + "'", byte71 == (byte) -1);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList((int) '4');
        org.ccsds.moims.mo.mal.structures.FloatList floatList2 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element3 = floatList2.createElement();
        java.util.stream.Stream<java.lang.Float> floatStream4 = floatList2.stream();
        boolean boolean5 = longList1.equals((java.lang.Object) floatList2);
        java.lang.Object obj6 = null;
        int int7 = floatList2.lastIndexOf(obj6);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI10 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject8.setSourceURI(uRI10);
        org.ccsds.moims.mo.mal.structures.URI uRI13 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element14 = uRI13.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray15 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI10, uRI13 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList16 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList16, uRIArray15);
        java.lang.Double[] doubleArray23 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList24 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList24, doubleArray23);
        org.ccsds.moims.mo.mal.structures.OctetList octetList26 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = octetList26.getServiceNumber();
        boolean boolean28 = doubleList24.containsAll((java.util.Collection<java.lang.Byte>) octetList26);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray29 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList30, uShortArray29);
        uShortList30.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet33 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element34 = uOctet33.createElement();
        int int35 = uShortList30.indexOf((java.lang.Object) element34);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.Long[] longArray48 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList49 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList49, longArray48);
        java.lang.Object obj51 = longList49.clone();
        int int52 = strList39.indexOf((java.lang.Object) longList49);
        java.util.ListIterator<java.lang.String> strItor53 = strList39.listIterator();
        java.lang.Short[] shortArray57 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList58 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList58, shortArray57);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray65 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList66 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList66, uRIArray65);
        java.lang.Byte[] byteArray72 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList73 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList73, byteArray72);
        boolean boolean76 = byteList73.add((java.lang.Byte) (byte) 100);
        boolean boolean77 = uRIList66.containsAll((java.util.Collection<java.lang.Byte>) byteList73);
        boolean boolean78 = strList63.containsAll((java.util.Collection<java.lang.Byte>) byteList73);
        boolean boolean79 = shortList58.contains((java.lang.Object) byteList73);
        boolean boolean80 = strList39.removeAll((java.util.Collection<java.lang.Byte>) byteList73);
        boolean boolean81 = uShortList30.containsAll((java.util.Collection<java.lang.Byte>) byteList73);
        int int82 = byteList73.size();
        boolean boolean83 = octetList26.containsAll((java.util.Collection<java.lang.Byte>) byteList73);
        boolean boolean84 = uRIList16.retainAll((java.util.Collection<java.lang.Byte>) octetList26);
        java.lang.Integer int85 = octetList26.getTypeShortForm();
        java.util.Iterator<java.lang.Byte> byteItor86 = octetList26.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort87 = octetList26.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort88 = octetList26.getAreaNumber();
        boolean boolean89 = floatList2.contains((java.lang.Object) uShort88);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(floatStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(uRIArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uShortArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uOctet33);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertNotNull(uRIArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 5 + "'", int82 == 5);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", !boolean83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-7) + "'", int85.equals((-7)));
        org.junit.Assert.assertNotNull(byteItor86);
        org.junit.Assert.assertNotNull(uShort87);
        org.junit.Assert.assertNotNull(uShort88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl4 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl5 = cOMServicesConsumer0.getArchiveSyncService();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl4);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl5);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeDuration();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = duration12.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = duration12.getAreaNumber();
        java.io.OutputStream outputStream15 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder16 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream15);
        byte byte18 = binaryEncoder16.internalEncodeAttributeType((byte) 100);
        byte byte20 = binaryEncoder16.internalEncodeAttributeType((byte) -1);
        byte byte22 = binaryEncoder16.internalEncodeAttributeType((byte) 1);
        try {
            duration12.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 100 + "'", byte18 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte20 + "' != '" + (byte) -1 + "'", byte20 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte22 + "' != '" + (byte) 1 + "'", byte22 == (byte) 1);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        org.ccsds.moims.mo.com.structures.ObjectId objectId8 = eventCOMObject0.getSource();
        java.lang.Long long9 = eventCOMObject0.getRelated();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertNull(objectId8);
        org.junit.Assert.assertNull(long9);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Float float6 = binaryDecoder5.decodeFloat();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = binaryDecoder5.decodeNullableUShort();
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger8 = binaryDecoder5.decodeUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 7.0E-44f + "'", float6.equals(7.0E-44f));
        org.junit.Assert.assertNotNull(uShort7);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, (int) (short) 100);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, 13);
        try {
            java.lang.Short short18 = binaryDecoder17.decodeShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 13");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.ccsds.moims.mo.mal.structures.ULong uLong0 = new org.ccsds.moims.mo.mal.structures.ULong();
        java.lang.String str1 = uLong0.toString();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Float float8 = binaryDecoder7.decodeFloat();
        java.lang.Boolean boolean9 = binaryDecoder7.decodeBoolean();
        try {
            org.ccsds.moims.mo.mal.structures.Element element10 = uLong0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: Zero length BigInteger");
        } catch (java.lang.NumberFormatException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0" + "'", str1.equals("0"));
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 7.0E-44f + "'", float8.equals(7.0E-44f));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9.equals(true));
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.LongList longList9 = new org.ccsds.moims.mo.mal.structures.LongList((int) '4');
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = longList9.getServiceNumber();
        java.lang.Object obj11 = null;
        boolean boolean12 = longList9.equals(obj11);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = longList9.getAreaVersion();
        try {
            binaryEncoder1.encodeUOctet(uOctet13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(uOctet13);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject0.getObjectId();
        org.ccsds.moims.mo.mal.structures.Time time10 = eventCOMObject0.getTimestamp();
        eventCOMObject0.setObjId((java.lang.Long) 281475010265086L);
        org.ccsds.moims.mo.com.structures.ObjectId objectId13 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectId objectId14 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier15 = eventCOMObject0.getNetworkZone();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId9);
        org.junit.Assert.assertNull(time10);
        org.junit.Assert.assertNull(objectId13);
        org.junit.Assert.assertNull(objectId14);
        org.junit.Assert.assertNull(identifier15);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int1 = uRIList0.size();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList10 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray12 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList13, uRIArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        boolean boolean24 = uRIList13.containsAll((java.util.Collection<java.lang.Byte>) byteList20);
        boolean boolean25 = intList10.removeAll((java.util.Collection<java.lang.Byte>) byteList20);
        boolean boolean26 = uRIList0.removeAll((java.util.Collection<java.lang.Byte>) byteList20);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        boolean boolean45 = byteList32.addAll((java.util.Collection<java.lang.Byte>) byteList41);
        java.lang.Object obj46 = byteList32.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream47 = byteList32.stream();
        java.lang.Object[] objArray48 = byteList32.toArray();
        boolean boolean49 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList32);
        java.lang.Double[] doubleArray51 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList52 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList52, doubleArray51);
        java.lang.Short[] shortArray56 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList57 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList57, shortArray56);
        java.util.ListIterator<java.lang.Short> shortItor59 = shortList57.listIterator();
        int int60 = doubleList52.indexOf((java.lang.Object) shortList57);
        doubleList52.trimToSize();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject62 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject62.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier65 = eventCOMObject62.getNetworkZone();
        int int66 = doubleList52.indexOf((java.lang.Object) identifier65);
        int int67 = byteList32.lastIndexOf((java.lang.Object) doubleList52);
        org.ccsds.moims.mo.mal.structures.URI uRI69 = new org.ccsds.moims.mo.mal.structures.URI("0.0");
        int int70 = byteList32.indexOf((java.lang.Object) uRI69);
        java.lang.String str71 = uRI69.getValue();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(uRIArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(byteStream47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertNotNull(shortItor59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(identifier65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "0.0" + "'", str71.equals("0.0"));
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("");
        dictionary0.defineWord((java.lang.Integer) (-2), "");
        boolean boolean7 = dictionary0.exists((java.lang.Integer) 1);
        boolean boolean9 = dictionary0.exists("[-1, 0, 100]");
        boolean boolean11 = dictionary0.exists((java.lang.Integer) 13);
        dictionary0.resetFastNetwork();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.ccsds.moims.mo.mal.structures.Blob blob1 = new org.ccsds.moims.mo.mal.structures.Blob("[]");
        java.math.BigInteger bigInteger2 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong3 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger2);
        java.lang.Integer int4 = uLong3.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element5 = uLong3.createElement();
        org.ccsds.moims.mo.mal.structures.Element element6 = uLong3.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uLong3.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element8 = uLong3.createElement();
        java.math.BigInteger bigInteger9 = uLong3.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uLong3.getAreaNumber();
        boolean boolean11 = blob1.equals((java.lang.Object) uLong3);
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uLong3.getServiceNumber();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        java.lang.Byte byte19 = binaryDecoder18.decodeOctet();
        java.lang.Short short20 = binaryDecoder18.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element21 = uShort12.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 14 + "'", int4.equals(14));
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(bigInteger9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 100 + "'", byte19.equals((byte) 100));
        org.junit.Assert.assertTrue("'" + short20 + "' != '" + (short) -64 + "'", short20.equals((short) -64));
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.util.ListIterator<java.lang.Double> doubleItor21 = doubleList2.listIterator(1);
        doubleList2.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray23 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList24 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList24, uShortArray23);
        uShortList24.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element28 = uOctet27.createElement();
        int int29 = uShortList24.indexOf((java.lang.Object) element28);
        boolean boolean31 = uShortList24.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor32 = uShortList24.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean34 = uShortList24.add(uShort33);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
        boolean boolean43 = byteList40.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList49 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList49, byteArray48);
        boolean boolean52 = byteList49.add((java.lang.Byte) (byte) 100);
        boolean boolean53 = byteList40.addAll((java.util.Collection<java.lang.Byte>) byteList49);
        java.lang.Object obj54 = byteList40.clone();
        boolean boolean55 = uShortList24.removeAll((java.util.Collection<java.lang.Byte>) byteList40);
        boolean boolean56 = doubleList2.retainAll((java.util.Collection<java.lang.Byte>) byteList40);
        try {
            java.util.ListIterator<java.lang.Byte> byteItor58 = byteList40.listIterator((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(doubleItor21);
        org.junit.Assert.assertNotNull(uShortArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uShortItor32);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList2 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int3 = uRIList2.getTypeShortForm();
        java.lang.Integer int4 = uRIList2.getTypeShortForm();
        java.lang.Object obj5 = uRIList2.clone();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        int int12 = uRIList2.lastIndexOf((java.lang.Object) binaryDecoder11);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger13 = binaryDecoder11.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = uInteger13.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = uInteger13.getAreaVersion();
        try {
            binaryEncoder1.encodeUOctet(uOctet15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(uInteger13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(uOctet15);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        int int14 = doubleList1.indexOf((java.lang.Object) false);
        java.util.stream.Stream<java.lang.Double> doubleStream15 = doubleList1.parallelStream();
        java.util.Spliterator<java.lang.Double> doubleSpliterator16 = doubleList1.spliterator();
        java.lang.Integer int17 = doubleList1.getTypeShortForm();
        java.lang.Object obj18 = null;
        int int19 = doubleList1.indexOf(obj18);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = doubleList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList22 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob23 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean24 = blob23.isURLBased();
        byte[] byteArray28 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder29 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray28);
        org.ccsds.moims.mo.mal.structures.Element element30 = blob23.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder29);
        boolean boolean31 = integerList22.equals((java.lang.Object) binaryDecoder29);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet32 = integerList22.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList33 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int34 = uRIList33.getTypeShortForm();
        java.lang.Integer int35 = uRIList33.getTypeShortForm();
        java.lang.Object obj36 = uRIList33.clone();
        byte[] byteArray40 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder41 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray40);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder42 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray40);
        int int43 = uRIList33.lastIndexOf((java.lang.Object) binaryDecoder42);
        org.ccsds.moims.mo.mal.structures.Duration duration44 = binaryDecoder42.decodeDuration();
        int int45 = integerList22.lastIndexOf((java.lang.Object) binaryDecoder42);
        java.lang.String str46 = binaryDecoder42.decodeNullableString();
        try {
            org.ccsds.moims.mo.mal.structures.Element element47 = doubleList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(doubleStream15);
        org.junit.Assert.assertNotNull(doubleSpliterator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-5) + "'", int17.equals((-5)));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(uOctet20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uOctet32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-18) + "'", int34.equals((-18)));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-18) + "'", int35.equals((-18)));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.ULong uLong9 = binaryDecoder5.decodeNullableULong();
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong10 = binaryDecoder5.decodeNullableULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(uLong9);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableLong((java.lang.Long) 127L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray7 = new java.lang.String[] { "[10]", "hi!", "hi!", "true", "[hi!, ]", "true" };
        java.lang.String[] strArray8 = shortList0.toArray(strArray7);
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        java.lang.Double double14 = binaryDecoder13.decodeNullableDouble();
        byte[] byteArray15 = binaryDecoder13.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray15);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.lang.Long[] longArray29 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList30 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList30, longArray29);
        java.lang.Object obj32 = longList30.clone();
        int int33 = strList20.indexOf((java.lang.Object) longList30);
        java.util.ListIterator<java.lang.String> strItor34 = strList20.listIterator();
        java.lang.String str35 = strList20.toString();
        java.lang.Double[] doubleArray38 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList39 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList39, doubleArray38);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        int int46 = strList44.size();
        boolean boolean47 = doubleList39.equals((java.lang.Object) strList44);
        boolean boolean48 = strList20.remove((java.lang.Object) strList44);
        boolean boolean49 = blob16.equals((java.lang.Object) strList44);
        java.util.stream.Stream<java.lang.String> strStream50 = strList44.stream();
        org.ccsds.moims.mo.mal.structures.OctetList octetList51 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean52 = strList44.retainAll((java.util.Collection<java.lang.Byte>) octetList51);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55, doubleArray54);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList60 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList60, shortArray59);
        java.util.ListIterator<java.lang.Short> shortItor62 = shortList60.listIterator();
        int int63 = doubleList55.indexOf((java.lang.Object) shortList60);
        doubleList55.trimToSize();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime65 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort66 = fineTime65.getServiceNumber();
        java.lang.Long long67 = uShort66.getShortForm();
        int int68 = doubleList55.lastIndexOf((java.lang.Object) uShort66);
        boolean boolean69 = strList44.contains((java.lang.Object) int68);
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter71 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter(5);
        org.ccsds.moims.mo.mal.consumer.MALInteractionAdapter[] mALInteractionAdapterArray72 = new org.ccsds.moims.mo.mal.consumer.MALInteractionAdapter[] { archiveSyncGenAdapter71 };
        org.ccsds.moims.mo.mal.consumer.MALInteractionAdapter[] mALInteractionAdapterArray73 = strList44.toArray(mALInteractionAdapterArray72);
        org.ccsds.moims.mo.mal.consumer.MALInteractionListener[] mALInteractionListenerArray74 = shortList0.toArray((org.ccsds.moims.mo.mal.consumer.MALInteractionListener[]) mALInteractionAdapterArray73);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals((double) double14, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "[hi!, ]" + "'", str35.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(shortItor62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(uShort66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 281474993487882L + "'", long67.equals(281474993487882L));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertNotNull(mALInteractionAdapterArray72);
        org.junit.Assert.assertNotNull(mALInteractionAdapterArray73);
        org.junit.Assert.assertNotNull(mALInteractionListenerArray74);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = uRIList58.getAreaNumber();
        boolean boolean71 = uRIList58.isEmpty();
        byte[] byteArray75 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder76 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray75);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime77 = binaryDecoder76.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI78 = binaryDecoder76.decodeURI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = uRI78.getAreaVersion();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList89 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList89, intArray88);
        int int92 = intList89.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream93 = intList89.stream();
        java.util.Iterator<java.lang.Integer> intItor94 = intList89.iterator();
        boolean boolean95 = uRI78.equals((java.lang.Object) intItor94);
        boolean boolean96 = uRIList58.add(uRI78);
        org.ccsds.moims.mo.mal.structures.Element element97 = uRI78.createElement();
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertNotNull(fineTime77);
        org.junit.Assert.assertNotNull(uRI78);
        org.junit.Assert.assertNotNull(uOctet79);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(intStream93);
        org.junit.Assert.assertNotNull(intItor94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", !boolean95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96);
        org.junit.Assert.assertNotNull(element97);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter7 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) '#');
        org.ccsds.moims.mo.mal.structures.UInteger uInteger8 = archiveSyncGenAdapter7.getLastKnownIndex();
        long long9 = uInteger8.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uInteger8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element11 = uInteger8.createElement();
        try {
            binaryEncoder1.encodeUInteger(uInteger8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(uInteger8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(element11);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeOctet((java.lang.Byte) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        java.lang.Long long8 = uOctet6.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList9 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int10 = uRIList9.getTypeShortForm();
        java.lang.Integer int11 = uRIList9.getTypeShortForm();
        java.lang.Object obj12 = uRIList9.clone();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        int int19 = uRIList9.lastIndexOf((java.lang.Object) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Duration duration20 = binaryDecoder18.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element21 = uOctet6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        byte[] byteArray22 = binaryDecoder18.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet24 = binaryDecoder23.decodeNullableUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(byteArray22);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "[-1, -1, -1, -1, 100]", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        strList4.clear();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        org.ccsds.moims.mo.mal.structures.Element element14 = blob7.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
        org.ccsds.moims.mo.mal.structures.Element element15 = blob7.createElement();
        int int16 = strList4.lastIndexOf((java.lang.Object) blob7);
        org.ccsds.moims.mo.mal.structures.FloatList floatList17 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int19 = floatList17.lastIndexOf((java.lang.Object) 10);
        boolean boolean20 = floatList17.isEmpty();
        org.ccsds.moims.mo.mal.structures.Element element21 = floatList17.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray22 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList23, uRIArray22);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        boolean boolean43 = byteList30.addAll((java.util.Collection<java.lang.Byte>) byteList39);
        int int45 = byteList39.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean46 = uRIList23.retainAll((java.util.Collection<java.lang.Byte>) byteList39);
        boolean boolean47 = floatList17.containsAll((java.util.Collection<java.lang.Byte>) byteList39);
        int int48 = strList4.lastIndexOf((java.lang.Object) boolean47);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(uRIArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(1);
        java.lang.String str2 = integerList1.toString();
        java.lang.String str3 = integerList1.toString();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 100);
        boolean boolean16 = uRIList5.containsAll((java.util.Collection<java.lang.Byte>) byteList12);
        boolean boolean17 = byteList12.isEmpty();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        int int23 = intList20.lastIndexOf((java.lang.Object) 0.0f);
        int int24 = byteList12.lastIndexOf((java.lang.Object) intList20);
        java.lang.String str25 = intList20.toString();
        org.ccsds.moims.mo.mal.structures.URIList uRIList26 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int27 = uRIList26.getTypeShortForm();
        java.lang.Integer int28 = uRIList26.getTypeShortForm();
        java.lang.Object obj29 = uRIList26.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream30 = uRIList26.stream();
        int int31 = intList20.lastIndexOf((java.lang.Object) uRIList26);
        int int32 = integerList1.lastIndexOf((java.lang.Object) intList20);
        java.lang.Long long33 = integerList1.getShortForm();
        org.ccsds.moims.mo.mal.structures.Blob blob34 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray38 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder39 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        org.ccsds.moims.mo.mal.structures.Element element41 = blob34.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder40);
        byte[] byteArray42 = blob34.getValue();
        org.ccsds.moims.mo.mal.structures.Element element43 = blob34.createElement();
        int int44 = integerList1.indexOf((java.lang.Object) element43);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "[]" + "'", str2.equals("[]"));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[]" + "'", str3.equals("[]"));
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[10]" + "'", str25.equals("[10]"));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-18) + "'", int27.equals((-18)));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-18) + "'", int28.equals((-18)));
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(uRIStream30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 281475010265077L + "'", long33.equals(281475010265077L));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        org.ccsds.moims.mo.mal.structures.LongList longList56 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byteList65.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean73 = longList56.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean74 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byte[] byteArray78 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray78);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime80 = binaryDecoder79.decodeFineTime();
        boolean boolean81 = booleanList10.remove((java.lang.Object) fineTime80);
        java.util.Iterator<java.lang.Boolean> booleanItor82 = booleanList10.iterator();
        booleanList10.trimToSize();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertNotNull(fineTime80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertNotNull(booleanItor82);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList8 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        boolean boolean21 = byteList18.add((java.lang.Byte) (byte) 100);
        boolean boolean22 = uRIList11.containsAll((java.util.Collection<java.lang.Byte>) byteList18);
        boolean boolean23 = intList8.removeAll((java.util.Collection<java.lang.Byte>) byteList18);
        org.ccsds.moims.mo.mal.structures.Union union25 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        int int26 = byteList18.lastIndexOf((java.lang.Object) union25);
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = union25.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet28 = union25.getAreaVersion();
        java.io.OutputStream outputStream29 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder30 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream29);
        byte byte32 = binaryEncoder30.internalEncodeAttributeType((byte) 100);
        try {
            union25.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertNotNull(uOctet28);
        org.junit.Assert.assertTrue("'" + byte32 + "' != '" + (byte) 100 + "'", byte32 == (byte) 100);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = stringList1.getServiceNumber();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId4 = eventCOMObject3.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = eventCOMObject3.getNetworkZone();
        boolean boolean6 = stringList1.remove((java.lang.Object) eventCOMObject3);
        java.util.ListIterator<java.lang.String> strItor7 = stringList1.listIterator();
        java.lang.Integer int8 = stringList1.getTypeShortForm();
        java.lang.Long long9 = stringList1.getShortForm();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNull(objectId4);
        org.junit.Assert.assertNull(identifier5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(strItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-15) + "'", int8.equals((-15)));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265073L + "'", long9.equals(281475010265073L));
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.lang.Integer int2 = uLong1.getTypeShortForm();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger14 = binaryDecoder13.decodeUInteger();
        int int16 = binaryDecoder13.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Identifier identifier18 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.Long long19 = identifier18.getShortForm();
        java.lang.String str20 = identifier18.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = identifier18.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element22 = binaryDecoder13.decodeElement((org.ccsds.moims.mo.mal.structures.Element) identifier18);
        try {
            org.ccsds.moims.mo.mal.structures.Element element23 = uLong1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 14 + "'", int2.equals(14));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uInteger14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 281474993487878L + "'", long19.equals(281474993487878L));
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "[hi!, ]" + "'", str20.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(uShort21);
        org.junit.Assert.assertNotNull(element22);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute12 = binaryDecoder9.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Unknown attribute type received: -1");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean2 = dictionary0.exists((java.lang.Integer) 16);
        dictionary0.resetFastNetwork();
        boolean boolean5 = dictionary0.exists((java.lang.Integer) (-13));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((int) (byte) -1, "hi!");
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeURI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uRI6.getAreaVersion();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList17 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        int int20 = intList17.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream21 = intList17.stream();
        java.util.Iterator<java.lang.Integer> intItor22 = intList17.iterator();
        boolean boolean23 = uRI6.equals((java.lang.Object) intItor22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = uRI6.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = uRI6.getAreaNumber();
        java.io.OutputStream outputStream26 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder27 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream26);
        byte byte29 = binaryEncoder27.internalEncodeAttributeType((byte) 100);
        try {
            uRI6.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(uRI6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(intItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + byte29 + "' != '" + (byte) 100 + "'", byte29 == (byte) 100);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int1 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element2 = time0.createElement();
        java.lang.Integer int3 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = time0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element5 = time0.createElement();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList7 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = doubleList7.getAreaNumber();
        java.lang.Object obj9 = doubleList7.clone();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = binaryDecoder15.decodeNullableUOctet();
        int int17 = doubleList7.lastIndexOf((java.lang.Object) binaryDecoder15);
        try {
            org.ccsds.moims.mo.mal.structures.Element element18 = time0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 16 + "'", int1.equals(16));
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 16 + "'", int3.equals(16));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) (short) 1);
        long long2 = archiveSyncGenAdapter1.noUpdatesReceivedForThisDuration();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger3 = archiveSyncGenAdapter1.getLastKnownIndex();
        java.util.ArrayList<byte[]> byteArrayList4 = archiveSyncGenAdapter1.getReceivedChunks();
// flaky:         org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1558616202575L + "'", long2 == 1558616202575L);
        org.junit.Assert.assertNotNull(uInteger3);
        org.junit.Assert.assertNotNull(byteArrayList4);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (short) 1);
        try {
            java.lang.Boolean boolean10 = binaryDecoder9.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Byte byte7 = binaryDecoder5.decodeOctet();
        java.lang.Integer int8 = binaryDecoder5.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier9 = binaryDecoder5.decodeNullableIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7.equals((byte) -1));
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl3 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl4 = null;
        cOMServicesConsumer0.setEventService(eventConsumerServiceImpl4);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl3);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.LongList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = uShort0.getAreaVersion();
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) 100);
        byte byte7 = binaryEncoder3.internalEncodeAttributeType((byte) 10);
        try {
            uShort0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort0);
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 100 + "'", byte5 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 10 + "'", byte7 == (byte) 10);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        java.lang.Long long2 = duration1.getShortForm();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger14 = binaryDecoder13.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.Element element15 = duration1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
        try {
            java.lang.Boolean boolean16 = binaryDecoder13.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487875L + "'", long2.equals(281474993487875L));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uInteger14);
        org.junit.Assert.assertNotNull(element15);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Boolean boolean8 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType5);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8.equals(true));
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray2 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList3, uShortArray2);
        uShortList3.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element7 = uOctet6.createElement();
        int int8 = uShortList3.indexOf((java.lang.Object) element7);
        boolean boolean10 = uShortList3.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor11 = uShortList3.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean13 = uShortList3.add(uShort12);
        try {
            binaryEncoder1.encodeUShort(uShort12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uShortItor11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str2 = uRI1.toString();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Integer int9 = binaryDecoder8.decodeInteger();
        int int11 = binaryDecoder8.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Element element12 = uRI1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        try {
            java.lang.String str13 = binaryDecoder8.decodeString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9.equals(50));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(element12);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((int) 'a', "[0, 10]");
        int int3 = networkHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 97 + "'", int3 == 97);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter(6);
        boolean boolean2 = archiveSyncGenAdapter1.transactionCompleted();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList13 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList13, shortArray12);
        java.util.ListIterator<java.lang.Short> shortItor15 = shortList13.listIterator();
        int int16 = doubleList8.indexOf((java.lang.Object) shortList13);
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean18 = blob17.isURLBased();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.Element element24 = blob17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
        boolean boolean25 = doubleList8.contains((java.lang.Object) blob17);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray31 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList32, uRIArray31);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        boolean boolean43 = uRIList32.containsAll((java.util.Collection<java.lang.Byte>) byteList39);
        boolean boolean44 = strList29.containsAll((java.util.Collection<java.lang.Byte>) byteList39);
        boolean boolean45 = doubleList8.containsAll((java.util.Collection<java.lang.Byte>) byteList39);
        java.lang.String str46 = doubleList8.toString();
        org.ccsds.moims.mo.mal.structures.URI uRI48 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet49 = uRI48.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = uRI48.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet51 = uRI48.getAreaVersion();
        int int52 = doubleList8.indexOf((java.lang.Object) uOctet51);
        try {
            binaryEncoder1.encodeNullableUOctet(uOctet51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(shortItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(uRIArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "[0.0]" + "'", str46.equals("[0.0]"));
        org.junit.Assert.assertNotNull(uOctet49);
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertNotNull(uOctet51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        org.ccsds.moims.mo.mal.structures.OctetList octetList34 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = octetList34.getServiceNumber();
        boolean boolean36 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) octetList34);
        java.math.BigInteger bigInteger37 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong38 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger37);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet39 = uLong38.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity42 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long43 = objectTypeHolderEntity42.getObjectType();
        boolean boolean44 = uLong38.equals((java.lang.Object) long43);
        boolean boolean45 = booleanList10.remove((java.lang.Object) long43);
        java.util.stream.Stream<java.lang.Boolean> booleanStream46 = booleanList10.stream();
        boolean boolean48 = booleanList10.add((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(uShort35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(bigInteger37);
        org.junit.Assert.assertNotNull(uOctet39);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 281474993487879L + "'", long43.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(booleanStream46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList5 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = doubleList5.getAreaNumber();
        java.lang.Object obj7 = doubleList5.clone();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = binaryDecoder13.decodeNullableUOctet();
        int int15 = doubleList5.lastIndexOf((java.lang.Object) binaryDecoder13);
        byte[] byteArray16 = binaryDecoder13.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16, 5);
        try {
            binaryEncoder1.directEncodeBytes(byteArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream3 = doubleList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.FloatList floatList4 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList10 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList10, byteArray9);
        boolean boolean13 = byteList10.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19, byteArray18);
        boolean boolean22 = byteList19.add((java.lang.Byte) (byte) 100);
        boolean boolean23 = byteList10.addAll((java.util.Collection<java.lang.Byte>) byteList19);
        java.lang.Object obj24 = byteList10.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream25 = byteList10.stream();
        boolean boolean26 = floatList4.containsAll((java.util.Collection<java.lang.Byte>) byteList10);
        byteList10.trimToSize();
        boolean boolean28 = doubleList1.contains((java.lang.Object) byteList10);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList30 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = doubleList30.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = doubleList30.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = doubleList30.getServiceNumber();
        java.lang.Object obj34 = doubleList30.clone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject35 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI37 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject35.setSourceURI(uRI37);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet39 = uRI37.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort40 = uRI37.getServiceNumber();
        boolean boolean41 = doubleList30.contains((java.lang.Object) uShort40);
        boolean boolean42 = byteList10.remove((java.lang.Object) uShort40);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(doubleStream3);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(byteStream25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(uOctet39);
        org.junit.Assert.assertNotNull(uShort40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = binaryDecoder5.decodeUShort();
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = binaryDecoder5.decodeUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uShort9);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject12.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType17 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription18 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType17);
        eventCOMObject12.setObjType(objectType17);
        eventCOMObject3.setObjType(objectType17);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("18446744073709551615", objectType17);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList22 = fastObjectType1.getObjectTypeIds(objectType17);
        boolean boolean24 = fastObjectType1.exists((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(integerList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.ULong uLong2 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList3 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int4 = uRIList3.getTypeShortForm();
        java.lang.Integer int5 = uRIList3.getTypeShortForm();
        java.lang.Object obj6 = uRIList3.clone();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        int int13 = uRIList3.lastIndexOf((java.lang.Object) binaryDecoder12);
        org.ccsds.moims.mo.mal.structures.Duration duration14 = binaryDecoder12.decodeDuration();
        java.lang.Integer int15 = binaryDecoder12.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element16 = uLong2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-18) + "'", int5.equals((-18)));
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15.equals(0));
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        java.math.BigInteger bigInteger4 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong5 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger4);
        java.math.BigInteger bigInteger6 = uLong5.getValue();
        java.lang.Integer int7 = uLong5.getTypeShortForm();
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList11 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList11, shortArray10);
        java.util.ListIterator<java.lang.Short> shortItor13 = shortList11.listIterator();
        boolean boolean14 = uLong5.equals((java.lang.Object) shortItor13);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = uLong5.getAreaVersion();
        try {
            binaryEncoder1.encodeNullableUOctet(uOctet15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(bigInteger4);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 14 + "'", int7.equals(14));
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(shortItor13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(uOctet15);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Long long5 = binaryDecoder4.decodeNullableLong();
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder4.decodeUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-64L) + "'", long5.equals((-64L)));
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        java.lang.Long long2 = duration1.getShortForm();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger14 = binaryDecoder13.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.Element element15 = duration1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList17 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream18 = integerList17.parallelStream();
        integerList17.ensureCapacity((int) 'a');
        try {
            org.ccsds.moims.mo.mal.structures.Element element21 = binaryDecoder13.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) integerList17);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487875L + "'", long2.equals(281474993487875L));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uInteger14);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(intStream18);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        stringList1.ensureCapacity((-15));
        org.ccsds.moims.mo.mal.structures.Element element4 = stringList1.createElement();
        java.util.Spliterator<java.lang.String> strSpliterator5 = stringList1.spliterator();
        java.io.OutputStream outputStream6 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder7 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream6);
        byte byte9 = binaryEncoder7.internalEncodeAttributeType((byte) 100);
        byte byte11 = binaryEncoder7.internalEncodeAttributeType((byte) -1);
        byte byte13 = binaryEncoder7.internalEncodeAttributeType((byte) 1);
        try {
            stringList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(strSpliterator5);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -1 + "'", byte11 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 1 + "'", byte13 == (byte) 1);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder8.decodeUInteger();
        java.lang.Byte byte10 = binaryDecoder8.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element11 = uRIList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.LongList longList13 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        boolean boolean15 = longList13.equals((java.lang.Object) 6);
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime21 = binaryDecoder20.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList22 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int23 = uRIList22.size();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList32 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList32, intArray31);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray34 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList35, uRIArray34);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        boolean boolean46 = uRIList35.containsAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean47 = intList32.removeAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean48 = uRIList22.removeAll((java.util.Collection<java.lang.Byte>) byteList42);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder49 = binaryDecoder20.createListDecoder((java.util.List) byteList42);
        boolean boolean50 = longList13.retainAll((java.util.Collection<java.lang.Byte>) byteList42);
        try {
            org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder51 = binaryDecoder8.createListDecoder((java.util.List) longList13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -1 + "'", byte10.equals((byte) -1));
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(fineTime21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(uRIArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(mALListDecoder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uRI5.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uRI5.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = uRI5.getAreaVersion();
        try {
            binaryEncoder1.encodeNullableURI(uRI5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uOctet8);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        org.ccsds.moims.mo.mal.structures.OctetList octetList8 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList8.getServiceNumber();
        boolean boolean10 = doubleList6.containsAll((java.util.Collection<java.lang.Byte>) octetList8);
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList19 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray21 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList22, uRIArray21);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = uRIList22.containsAll((java.util.Collection<java.lang.Byte>) byteList29);
        boolean boolean34 = intList19.removeAll((java.util.Collection<java.lang.Byte>) byteList29);
        boolean boolean36 = intList19.remove((java.lang.Object) '4');
        intList19.ensureCapacity(0);
        int int39 = octetList8.lastIndexOf((java.lang.Object) intList19);
        byte[] byteArray43 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder44 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray43);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder45 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray43);
        java.lang.Float float46 = binaryDecoder45.decodeFloat();
        org.ccsds.moims.mo.mal.structures.UShort uShort47 = binaryDecoder45.decodeNullableUShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element48 = octetList8.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uRIArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + 7.0E-44f + "'", float46.equals(7.0E-44f));
        org.junit.Assert.assertNotNull(uShort47);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        boolean boolean3 = booleanList0.add((java.lang.Boolean) true);
        boolean boolean5 = booleanList0.remove((java.lang.Object) 281474993487884L);
        java.util.Iterator<java.lang.Boolean> booleanItor6 = booleanList0.iterator();
        java.lang.Integer int7 = booleanList0.getTypeShortForm();
        java.lang.String str8 = booleanList0.toString();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI11 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject9.setSourceURI(uRI11);
        org.ccsds.moims.mo.mal.structures.URI uRI14 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element15 = uRI14.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray16 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI11, uRI14 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList17 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList17, uRIArray16);
        java.lang.Double[] doubleArray24 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList25 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList25, doubleArray24);
        org.ccsds.moims.mo.mal.structures.OctetList octetList27 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = octetList27.getServiceNumber();
        boolean boolean29 = doubleList25.containsAll((java.util.Collection<java.lang.Byte>) octetList27);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray30 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList31, uShortArray30);
        uShortList31.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element35 = uOctet34.createElement();
        int int36 = uShortList31.indexOf((java.lang.Object) element35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.lang.Long[] longArray49 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList50 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList50, longArray49);
        java.lang.Object obj52 = longList50.clone();
        int int53 = strList40.indexOf((java.lang.Object) longList50);
        java.util.ListIterator<java.lang.String> strItor54 = strList40.listIterator();
        java.lang.Short[] shortArray58 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList59 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList59, shortArray58);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray66 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList67 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList67, uRIArray66);
        java.lang.Byte[] byteArray73 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList74 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList74, byteArray73);
        boolean boolean77 = byteList74.add((java.lang.Byte) (byte) 100);
        boolean boolean78 = uRIList67.containsAll((java.util.Collection<java.lang.Byte>) byteList74);
        boolean boolean79 = strList64.containsAll((java.util.Collection<java.lang.Byte>) byteList74);
        boolean boolean80 = shortList59.contains((java.lang.Object) byteList74);
        boolean boolean81 = strList40.removeAll((java.util.Collection<java.lang.Byte>) byteList74);
        boolean boolean82 = uShortList31.containsAll((java.util.Collection<java.lang.Byte>) byteList74);
        int int83 = byteList74.size();
        boolean boolean84 = octetList27.containsAll((java.util.Collection<java.lang.Byte>) byteList74);
        boolean boolean85 = uRIList17.retainAll((java.util.Collection<java.lang.Byte>) octetList27);
        java.lang.Integer int86 = octetList27.getTypeShortForm();
        java.util.Iterator<java.lang.Byte> byteItor87 = octetList27.iterator();
        octetList27.clear();
        boolean boolean89 = booleanList0.retainAll((java.util.Collection<java.lang.Byte>) octetList27);
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(booleanItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7.equals((-2)));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[true]" + "'", str8.equals("[true]"));
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(uRIArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(uShortArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertNotNull(uRIArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 5 + "'", int83 == 5);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-7) + "'", int86.equals((-7)));
        org.junit.Assert.assertNotNull(byteItor87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        java.lang.Integer int6 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList8 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor10 = uShortList8.listIterator((int) (byte) 0);
        java.lang.Integer int11 = uShortList8.getTypeShortForm();
        int int12 = floatList0.lastIndexOf((java.lang.Object) uShortList8);
        java.lang.String str13 = floatList0.toString();
        java.util.stream.Stream<java.lang.Float> floatStream14 = floatList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Union union16 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Integer) 4);
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = union16.getAreaNumber();
        int int18 = floatList0.indexOf((java.lang.Object) union16);
        org.ccsds.moims.mo.mal.structures.FloatList floatList19 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int21 = floatList19.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int22 = floatList19.getTypeShortForm();
        boolean boolean23 = floatList19.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator24 = floatList19.spliterator();
        java.lang.Integer int25 = floatList19.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList27 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor29 = uShortList27.listIterator((int) (byte) 0);
        java.lang.Integer int30 = uShortList27.getTypeShortForm();
        int int31 = floatList19.lastIndexOf((java.lang.Object) uShortList27);
        java.lang.String str32 = floatList19.toString();
        boolean boolean33 = floatList19.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator34 = floatList19.spliterator();
        byte[] byteArray38 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder39 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = binaryDecoder40.decodeNullableUOctet();
        int int42 = floatList19.indexOf((java.lang.Object) binaryDecoder40);
        try {
            org.ccsds.moims.mo.mal.structures.Element element43 = union16.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-4) + "'", int6.equals((-4)));
        org.junit.Assert.assertNotNull(uShortItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-10) + "'", int11.equals((-10)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[]" + "'", str13.equals("[]"));
        org.junit.Assert.assertNotNull(floatStream14);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(floatSpliterator24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-4) + "'", int25.equals((-4)));
        org.junit.Assert.assertNotNull(uShortItor29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-10) + "'", int30.equals((-10)));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "[]" + "'", str32.equals("[]"));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(floatSpliterator34);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union("[-1, -1, -1, -1, 100]");
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Double double7 = binaryDecoder6.decodeNullableDouble();
        byte[] byteArray8 = binaryDecoder6.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.lang.Long[] longArray22 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList23 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList23, longArray22);
        java.lang.Object obj25 = longList23.clone();
        int int26 = strList13.indexOf((java.lang.Object) longList23);
        java.util.ListIterator<java.lang.String> strItor27 = strList13.listIterator();
        java.lang.String str28 = strList13.toString();
        java.lang.Double[] doubleArray31 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList32 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList32, doubleArray31);
        java.lang.String[] strArray36 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        int int39 = strList37.size();
        boolean boolean40 = doubleList32.equals((java.lang.Object) strList37);
        boolean boolean41 = strList13.remove((java.lang.Object) strList37);
        boolean boolean42 = blob9.equals((java.lang.Object) strList37);
        boolean boolean43 = union1.equals((java.lang.Object) boolean42);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals((double) double7, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[hi!, ]" + "'", str28.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, 5);
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger15 = binaryDecoder14.decodeUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger5 = binaryDecoder4.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uInteger5.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uInteger5.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = uInteger5.getAreaVersion();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uOctet8);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.Identifier identifier4 = eventCOMObject0.getNetworkZone();
        org.ccsds.moims.mo.mal.structures.Identifier identifier6 = new org.ccsds.moims.mo.mal.structures.Identifier("100");
        eventCOMObject0.setNetworkZone(identifier6);
        java.lang.Long[] longArray15 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList16 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList16, longArray15);
        java.lang.Object obj18 = longList16.clone();
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList21 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList21, booleanArray20);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = byteList28.addAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Object obj42 = byteList28.clone();
        boolean boolean43 = booleanList21.contains((java.lang.Object) byteList28);
        boolean boolean44 = longList16.remove((java.lang.Object) boolean43);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        int int54 = longList16.lastIndexOf((java.lang.Object) byteList50);
        org.ccsds.moims.mo.mal.structures.OctetList octetList55 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort56 = octetList55.getServiceNumber();
        boolean boolean57 = longList16.removeAll((java.util.Collection<java.lang.Byte>) octetList55);
        int int58 = longList16.size();
        org.ccsds.moims.mo.mal.structures.Identifier identifier59 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.Integer int60 = identifier59.getTypeShortForm();
        int int61 = longList16.lastIndexOf((java.lang.Object) identifier59);
        eventCOMObject0.setNetworkZone(identifier59);
        org.junit.Assert.assertNull(identifier4);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(uShort56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 7 + "'", int58 == 7);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 6 + "'", int60.equals(6));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        uShortList1.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element5 = uOctet4.createElement();
        int int6 = uShortList1.indexOf((java.lang.Object) element5);
        org.ccsds.moims.mo.mal.structures.FloatList floatList7 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element8 = floatList7.createElement();
        java.util.stream.Stream<java.lang.Float> floatStream9 = floatList7.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = floatList7.getServiceNumber();
        boolean boolean11 = uShortList1.add(uShort10);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId13 = eventCOMObject12.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier14 = eventCOMObject12.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject15 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject15.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType20 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType20);
        eventCOMObject15.setObjType(objectType20);
        java.lang.Long long23 = eventCOMObject15.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId24 = eventCOMObject15.getObjectId();
        eventCOMObject12.setSource(objectId24);
        org.ccsds.moims.mo.mal.structures.Element element26 = null;
        eventCOMObject12.setBody(element26);
        boolean boolean28 = uShortList1.remove((java.lang.Object) eventCOMObject12);
        java.lang.Long[] longArray37 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList38 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList38, longArray37);
        java.lang.Object obj40 = longList38.clone();
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList43 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList43, booleanArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        java.lang.Object obj64 = byteList50.clone();
        boolean boolean65 = booleanList43.contains((java.lang.Object) byteList50);
        boolean boolean66 = longList38.remove((java.lang.Object) boolean65);
        java.lang.Byte[] byteArray71 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList72 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList72, byteArray71);
        boolean boolean75 = byteList72.add((java.lang.Byte) (byte) 100);
        int int76 = longList38.lastIndexOf((java.lang.Object) byteList72);
        org.ccsds.moims.mo.mal.structures.OctetList octetList77 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = octetList77.getServiceNumber();
        boolean boolean79 = longList38.removeAll((java.util.Collection<java.lang.Byte>) octetList77);
        int int80 = longList38.size();
        org.ccsds.moims.mo.mal.structures.Identifier identifier81 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.Integer int82 = identifier81.getTypeShortForm();
        int int83 = longList38.lastIndexOf((java.lang.Object) identifier81);
        java.lang.String str84 = identifier81.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort85 = identifier81.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort86 = identifier81.getAreaNumber();
        uShortList1.add((int) (short) 1, uShort86);
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(floatStream9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNull(objectId13);
        org.junit.Assert.assertNull(identifier14);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 4294967295L + "'", long23.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(uShort78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 7 + "'", int80 == 7);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 6 + "'", int82.equals(6));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "" + "'", str84.equals(""));
        org.junit.Assert.assertNotNull(uShort85);
        org.junit.Assert.assertNotNull(uShort86);
    }
}
