package esa.nmf.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element7 = uOctet6.createElement();
        try {
            org.ccsds.moims.mo.mal.structures.Element element8 = binaryDecoder4.decodeElement((org.ccsds.moims.mo.mal.structures.Element) uOctet6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI5 = binaryDecoder4.decodeURI();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        boolean boolean12 = longList8.remove((java.lang.Object) 8);
        java.lang.Object obj14 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) 8, "");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 8 + "'", obj14.equals(8));
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = org.ccsds.moims.mo.mal.structures.LongList.SERVICE_SHORT_FORM;
        try {
            org.ccsds.moims.mo.mal.structures.Element element7 = binaryDecoder4.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(uShort6);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType4 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType((int) (byte) 10, (int) 'a', (-7), (-11));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UOctet argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean1 = blob0.isURLBased();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger8 = binaryDecoder6.decodeUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", !boolean1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean1 = blob0.isURLBased();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier8 = binaryDecoder6.decodeIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", !boolean1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet0 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Blob blob1 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean2 = blob1.isURLBased();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = blob1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        try {
            org.ccsds.moims.mo.mal.structures.Element element9 = uOctet0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob5 = binaryDecoder4.decodeBlob();
        try {
            java.lang.Long long6 = binaryDecoder4.decodeNullableLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(blob5);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        try {
            java.lang.Integer int6 = binaryDecoder4.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        try {
            java.lang.String str7 = binaryDecoder5.decodeNullableString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger7 = binaryDecoder5.decodeUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean1 = blob0.isURLBased();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob8 = binaryDecoder6.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", !boolean1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = fineTime0.getAreaVersion();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = binaryDecoder7.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Element element9 = fineTime0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(uOctet8);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Double double7 = binaryDecoder6.decodeNullableDouble();
        try {
            org.ccsds.moims.mo.mal.structures.Element element8 = uShortList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals((double) double7, Double.NaN, 0);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        try {
            java.lang.Long long6 = binaryDecoder4.decodeNullableLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = binaryDecoder6.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Element element8 = octetList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(uOctet7);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        try {
            java.lang.Byte byte7 = binaryDecoder5.decodeOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int5 = binaryDecoder4.decodeNullableInteger();
        org.ccsds.moims.mo.mal.structures.Union union7 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = union7.getAreaVersion();
        java.lang.String str9 = union7.toString();
        try {
            org.ccsds.moims.mo.mal.structures.Element element10 = binaryDecoder4.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) union7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-64) + "'", int5.equals((-64)));
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "true" + "'", str9.equals("true"));
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        try {
            java.lang.String str6 = binaryDecoder4.decodeNullableString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute6 = binaryDecoder5.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Unknown attribute type received: 100");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.MALEncoder mALEncoder13 = null;
        try {
            blob12.encode(mALEncoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        esa.mo.com.impl.archive.db.COMObjectEntityPK cOMObjectEntityPK3 = esa.mo.com.impl.archive.entities.COMObjectEntity.generatePK((java.lang.Integer) (-64), (java.lang.Integer) (-2), (java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(cOMObjectEntityPK3);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, 6);
        try {
            java.lang.Byte byte7 = binaryDecoder6.decodeNullableOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType4 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(12, 0, 16, (-18));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UShort argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        org.ccsds.moims.mo.mal.structures.URIList uRIList7 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int8 = uRIList7.getTypeShortForm();
        java.lang.Integer int9 = uRIList7.getTypeShortForm();
        java.lang.Object obj10 = uRIList7.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream11 = uRIList7.stream();
        try {
            org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder12 = binaryDecoder5.createListDecoder((java.util.List) uRIList7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-18) + "'", int9.equals((-18)));
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(uRIStream11);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort7 = binaryDecoder5.decodeNullableUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        try {
            org.ccsds.moims.mo.mal.structures.Element element10 = longList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element9);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList9 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        int int12 = intList9.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream13 = intList9.parallelStream();
        intList9.ensureCapacity(4);
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        java.lang.Double double21 = binaryDecoder20.decodeNullableDouble();
        byte[] byteArray22 = binaryDecoder20.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob25 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray22, 18, (int) ' ');
        boolean boolean26 = intList9.remove((java.lang.Object) 18);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals((double) double21, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, 6);
        try {
            java.lang.Short short7 = binaryDecoder6.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Object obj3 = floatList0.clone();
        try {
            java.lang.Object obj5 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) floatList0, "[0, 10]");
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchFieldException; message: [0, 10]");
        } catch (java.lang.NoSuchFieldException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(obj3);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        try {
            java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor78 = uRIList8.listIterator((-11));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -11");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        try {
            java.lang.Short short7 = binaryDecoder4.decodeShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = union1.getAreaVersion();
        java.lang.String str3 = union1.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = union1.getAreaNumber();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        java.lang.Double double10 = binaryDecoder9.decodeNullableDouble();
        try {
            org.ccsds.moims.mo.mal.structures.Element element11 = uShort4.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "true" + "'", str3.equals("true"));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals((double) double10, Double.NaN, 0);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        try {
            java.lang.Long long6 = binaryDecoder4.decodeLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        try {
            java.lang.Float float6 = binaryDecoder4.decodeNullableFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((int) (byte) 0, "hi!");
        java.lang.String str3 = providerURIHolderEntity2.getProviderURIString();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray1 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList2, uRIArray1);
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
        boolean boolean12 = byteList9.add((java.lang.Byte) (byte) 100);
        boolean boolean13 = uRIList2.containsAll((java.util.Collection<java.lang.Byte>) byteList9);
        byteList9.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean17 = longList0.removeAll((java.util.Collection<java.lang.Byte>) byteList9);
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = longList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Blob blob19 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder25 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element26 = blob19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder25);
        try {
            org.ccsds.moims.mo.mal.structures.Element element27 = uShort18.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder25);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element26);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int5 = binaryDecoder4.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Time time6 = binaryDecoder4.decodeNullableTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-64) + "'", int5.equals((-64)));
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[hi!, ]");
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray1 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList2, uRIArray1);
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
        boolean boolean12 = byteList9.add((java.lang.Byte) (byte) 100);
        boolean boolean13 = uRIList2.containsAll((java.util.Collection<java.lang.Byte>) byteList9);
        byteList9.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean17 = longList0.removeAll((java.util.Collection<java.lang.Byte>) byteList9);
        byte[] byteArray21 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder22 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray21);
        java.lang.Short short23 = binaryDecoder22.decodeNullableShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element24 = longList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder22);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + short23 + "' != '" + (short) -64 + "'", short23.equals((short) -64));
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int5 = binaryDecoder4.decodeNullableInteger();
        try {
            java.lang.Boolean boolean6 = binaryDecoder4.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-64) + "'", int5.equals((-64)));
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.Element element2 = uLong1.createElement();
        java.lang.Float[] floatArray8 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList9 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList9, floatArray8);
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        int int36 = floatList9.lastIndexOf((java.lang.Object) booleanList13);
        java.lang.Float float38 = floatList9.remove(2);
        byte[] byteArray42 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder43 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray42);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder44 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray42);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet45 = binaryDecoder44.decodeNullableUOctet();
        int int46 = floatList9.lastIndexOf((java.lang.Object) binaryDecoder44);
        try {
            org.ccsds.moims.mo.mal.structures.Element element47 = uLong1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + (-1.0f) + "'", float38.equals((-1.0f)));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(uOctet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob5 = binaryDecoder4.decodeBlob();
        try {
            java.lang.Long long6 = binaryDecoder4.decodeLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(blob5);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        try {
            java.lang.String str2 = dictionary0.getWord((java.lang.Integer) 4);
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: The word for the id: 4 is unknown!");
        } catch (java.lang.Exception e) {
        }
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        java.lang.Integer int9 = binaryDecoder8.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element10 = uRIList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-64) + "'", int9.equals((-64)));
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob12 = binaryDecoder9.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList1.listIterator((int) (byte) 0);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        java.lang.Double double9 = binaryDecoder8.decodeNullableDouble();
        byte[] byteArray10 = binaryDecoder8.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob13 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray10, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10, (int) (byte) 1);
        try {
            org.ccsds.moims.mo.mal.structures.Element element16 = uShortList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals((double) double9, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray10);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Time time13 = binaryDecoder9.decodeTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        try {
            java.lang.Byte byte6 = binaryDecoder4.decodeOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray8 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList9, uRIArray8);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        boolean boolean19 = byteList16.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        boolean boolean29 = byteList16.addAll((java.util.Collection<java.lang.Byte>) byteList25);
        int int31 = byteList25.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean32 = uRIList9.retainAll((java.util.Collection<java.lang.Byte>) byteList25);
        try {
            org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder33 = binaryDecoder6.createListDecoder((java.util.List) uRIList9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(uRIArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime12 = binaryDecoder9.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList8 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        boolean boolean21 = byteList18.add((java.lang.Byte) (byte) 100);
        boolean boolean22 = uRIList11.containsAll((java.util.Collection<java.lang.Byte>) byteList18);
        boolean boolean23 = intList8.removeAll((java.util.Collection<java.lang.Byte>) byteList18);
        boolean boolean25 = intList8.remove((java.lang.Object) '4');
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList43 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList43, byteArray42);
        boolean boolean46 = byteList43.add((java.lang.Byte) (byte) 100);
        boolean boolean47 = byteList34.addAll((java.util.Collection<java.lang.Byte>) byteList43);
        int int49 = byteList43.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean50 = uRIList27.retainAll((java.util.Collection<java.lang.Byte>) byteList43);
        boolean boolean51 = intList8.contains((java.lang.Object) uRIList27);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity54 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str55 = networkHolderEntity54.getNetworkString();
        boolean boolean56 = intList8.remove((java.lang.Object) networkHolderEntity54);
        try {
            java.lang.Integer int58 = intList8.remove((-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "[0, 10]" + "'", str55.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList4 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int5 = uRIList4.getTypeShortForm();
        java.lang.Integer int6 = uRIList4.getTypeShortForm();
        java.lang.Object obj7 = uRIList4.clone();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        int int14 = uRIList4.lastIndexOf((java.lang.Object) binaryDecoder13);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger15 = binaryDecoder13.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element16 = uShort3.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-18) + "'", int5.equals((-18)));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-18) + "'", int6.equals((-18)));
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(uInteger15);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType4 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType((int) '#', (int) (short) 127, (-5), (int) (short) -64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UOctet argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort7 = binaryDecoder4.decodeNullableUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        boolean boolean8 = union1.equals((java.lang.Object) byteArray5);
        try {
            java.lang.String str9 = union1.getStringValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Double cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort8 = binaryDecoder6.decodeUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        try {
            java.lang.Boolean boolean13 = binaryDecoder9.decodeBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType1 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 4294967295L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UOctet argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = binaryDecoder9.decodeNullableUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        int int20 = blob11.getOffset();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = blob11.getAreaNumber();
        java.lang.Integer int22 = uShort21.getTypeShortForm();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(uShort21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22.equals(10));
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        try {
            java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.Double double7 = binaryDecoder5.decodeDouble();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort8 = binaryDecoder5.decodeNullableUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertEquals((double) double7, Double.NaN, 0);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (byte) 1);
        try {
            java.lang.Double double12 = binaryDecoder11.decodeNullableDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.Double double7 = binaryDecoder5.decodeDouble();
        try {
            java.lang.Double double8 = binaryDecoder5.decodeNullableDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertEquals((double) double7, Double.NaN, 0);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        esa.mo.helpertools.connections.ConnectionConsumer connectionConsumer3 = null;
        try {
            cOMServicesConsumer0.init(connectionConsumer3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, 18);
        try {
            java.lang.Short short8 = binaryDecoder7.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 18");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        esa.mo.com.impl.provider.EventProviderServiceImpl eventProviderServiceImpl0 = null;
        try {
            esa.mo.com.impl.provider.ArchiveManager archiveManager1 = new esa.mo.com.impl.provider.ArchiveManager(eventProviderServiceImpl0);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field org.ccsds.moims.mo.com.archive.structures.ExpressionOperator.randoop_classUsedFlag from class org.ccsds.moims.mo.mal.structures.Enumeration");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        java.lang.Integer int77 = octetList18.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = octetList18.getAreaNumber();
        byte[] byteArray82 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder83 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray82);
        java.lang.Double double84 = binaryDecoder83.decodeNullableDouble();
        byte[] byteArray85 = binaryDecoder83.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Element element86 = octetList18.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-7) + "'", int77.equals((-7)));
        org.junit.Assert.assertNotNull(uShort78);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals((double) double84, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray85);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        try {
            java.util.List<org.ccsds.moims.mo.mal.structures.URI> uRIList79 = uRIList8.subList((int) (short) 0, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList6 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList6, byteArray5);
        boolean boolean9 = byteList6.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
        boolean boolean18 = byteList15.add((java.lang.Byte) (byte) 100);
        boolean boolean19 = byteList6.addAll((java.util.Collection<java.lang.Byte>) byteList15);
        java.lang.Object obj20 = byteList6.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream21 = byteList6.stream();
        boolean boolean22 = floatList0.containsAll((java.util.Collection<java.lang.Byte>) byteList6);
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = floatList0.getServiceNumber();
        byte[] byteArray27 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder28 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray27);
        org.ccsds.moims.mo.mal.structures.Blob blob29 = binaryDecoder28.decodeBlob();
        try {
            org.ccsds.moims.mo.mal.structures.Element element30 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertNotNull(blob29);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime6 = binaryDecoder4.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob5 = binaryDecoder4.decodeBlob();
        try {
            java.lang.Integer int6 = binaryDecoder4.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(blob5);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray24 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder25 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray24);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder26 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray24);
        org.ccsds.moims.mo.mal.structures.Element element27 = blob20.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder26);
        try {
            org.ccsds.moims.mo.mal.structures.Element element28 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(element27);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList9 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = doubleList9.getAreaNumber();
        java.lang.Object obj11 = doubleList9.clone();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = binaryDecoder17.decodeNullableUOctet();
        int int19 = doubleList9.lastIndexOf((java.lang.Object) binaryDecoder17);
        try {
            org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder20 = binaryDecoder6.createListDecoder((java.util.List) doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(uOctet18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRI2.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRI2.getServiceNumber();
        java.lang.String str6 = uShort5.toString();
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "0" + "'", str6.equals("0"));
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = org.ccsds.moims.mo.mal.structures.IntegerList.AREA_VERSION;
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = binaryDecoder10.decodeElement((org.ccsds.moims.mo.mal.structures.Element) uOctet11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet11);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        try {
            java.lang.Float float7 = binaryDecoder4.decodeNullableFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI7 = binaryDecoder5.decodeNullableURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.String str1 = fineTime0.toString();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Double double7 = binaryDecoder6.decodeNullableDouble();
        try {
            org.ccsds.moims.mo.mal.structures.Element element8 = fineTime0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0" + "'", str1.equals("0"));
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals((double) double7, Double.NaN, 0);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        try {
            java.lang.Short short6 = binaryDecoder4.decodeShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        org.ccsds.moims.mo.mal.structures.ShortList shortList6 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = shortList6.getAreaNumber();
        java.lang.Object[] objArray8 = shortList6.toArray();
        java.lang.Long long9 = shortList6.getShortForm();
        java.lang.Long long10 = shortList6.getShortForm();
        java.lang.Object[] objArray11 = shortList6.toArray();
        org.ccsds.moims.mo.mal.structures.FloatList floatList12 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        boolean boolean21 = byteList18.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray26 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList27 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList27, byteArray26);
        boolean boolean30 = byteList27.add((java.lang.Byte) (byte) 100);
        boolean boolean31 = byteList18.addAll((java.util.Collection<java.lang.Byte>) byteList27);
        java.lang.Object obj32 = byteList18.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream33 = byteList18.stream();
        boolean boolean34 = floatList12.containsAll((java.util.Collection<java.lang.Byte>) byteList18);
        byteList18.ensureCapacity((-4));
        byteList18.clear();
        boolean boolean38 = shortList6.retainAll((java.util.Collection<java.lang.Byte>) byteList18);
        try {
            org.ccsds.moims.mo.mal.structures.Element element39 = binaryDecoder4.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) shortList6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265079L + "'", long9.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281475010265079L + "'", long10.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(byteStream33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10, 18);
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = blob6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 18");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(byteArray10);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger5 = binaryDecoder4.decodeNullableUInteger();
        try {
            java.lang.Long long6 = binaryDecoder4.decodeNullableLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger5);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList9 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        int int12 = intList9.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream13 = intList9.parallelStream();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = binaryDecoder19.decodeNullableUOctet();
        java.lang.Long long21 = uOctet20.getShortForm();
        java.lang.Long long22 = uOctet20.getShortForm();
        int int23 = intList9.lastIndexOf((java.lang.Object) uOctet20);
        try {
            java.util.List<java.lang.Integer> intList26 = intList9.subList(14, (-64));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(14) > toIndex(-64)");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(uOctet20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 281474993487880L + "'", long21.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281474993487880L + "'", long22.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (short) 1);
        try {
            java.lang.String str10 = binaryDecoder9.decodeString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        short short8 = uOctet6.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = uOctet6.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uShort9.getAreaNumber();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short8 + "' != '" + (short) 127 + "'", short8 == (short) 127);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(uShort10);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) 'a');
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        org.ccsds.moims.mo.mal.structures.OctetList octetList10 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = octetList10.getServiceNumber();
        boolean boolean12 = doubleList8.containsAll((java.util.Collection<java.lang.Byte>) octetList10);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray13 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList14 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList14, uShortArray13);
        uShortList14.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element18 = uOctet17.createElement();
        int int19 = uShortList14.indexOf((java.lang.Object) element18);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.lang.Long[] longArray32 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList33 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList33, longArray32);
        java.lang.Object obj35 = longList33.clone();
        int int36 = strList23.indexOf((java.lang.Object) longList33);
        java.util.ListIterator<java.lang.String> strItor37 = strList23.listIterator();
        java.lang.Short[] shortArray41 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList42 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList42, shortArray41);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray49 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList50 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList50, uRIArray49);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
        boolean boolean60 = byteList57.add((java.lang.Byte) (byte) 100);
        boolean boolean61 = uRIList50.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean62 = strList47.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean63 = shortList42.contains((java.lang.Object) byteList57);
        boolean boolean64 = strList23.removeAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean65 = uShortList14.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        int int66 = byteList57.size();
        boolean boolean67 = octetList10.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean68 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) octetList10);
        org.ccsds.moims.mo.mal.structures.URI uRI70 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet71 = uRI70.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort72 = uRI70.getServiceNumber();
        byte[] byteArray76 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder77 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76, 6);
        boolean boolean80 = uShort72.equals((java.lang.Object) binaryDecoder79);
        try {
            org.ccsds.moims.mo.mal.structures.Element element81 = octetList10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(uShortArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(uRIArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uOctet71);
        org.junit.Assert.assertNotNull(uShort72);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            org.ccsds.moims.mo.mal.structures.Time time8 = binaryDecoder6.decodeNullableTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        java.util.ListIterator<java.lang.Float> floatItor6 = floatList4.listIterator();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = binaryDecoder12.decodeNullableUOctet();
        java.lang.Long long14 = uOctet13.getShortForm();
        int int15 = floatList4.indexOf((java.lang.Object) long14);
        try {
            java.lang.Float float18 = floatList4.set((int) (short) 100, (java.lang.Float) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(floatItor6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 281474993487880L + "'", long14.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob7 = binaryDecoder4.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort12 = binaryDecoder9.decodeNullableUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        java.lang.Double double6 = binaryDecoder5.decodeNullableDouble();
        byte[] byteArray7 = binaryDecoder5.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob8 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray7);
        boolean boolean9 = fineTime0.equals((java.lang.Object) blob8);
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        java.lang.Double double15 = binaryDecoder14.decodeNullableDouble();
        try {
            org.ccsds.moims.mo.mal.structures.Element element16 = fineTime0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals((double) double6, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals((double) double15, Double.NaN, 0);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        try {
            java.lang.Double double6 = binaryDecoder4.decodeDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        java.lang.Integer int77 = octetList18.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = octetList18.getAreaNumber();
        org.ccsds.moims.mo.mal.MALEncoder mALEncoder79 = null;
        try {
            uShort78.encode(mALEncoder79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-7) + "'", int77.equals((-7)));
        org.junit.Assert.assertNotNull(uShort78);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        doubleList2.ensureCapacity((-1));
        doubleList2.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream15 = doubleList2.parallelStream();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity18 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        int int19 = doubleList2.lastIndexOf((java.lang.Object) objectTypeHolderEntity18);
        doubleList2.trimToSize();
        java.util.Spliterator<java.lang.Double> doubleSpliterator21 = doubleList2.spliterator();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(doubleStream15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(doubleSpliterator21);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.String str18 = strList3.toString();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = binaryDecoder24.decodeNullableUOctet();
        java.lang.Long long26 = uOctet25.getShortForm();
        short short27 = uOctet25.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = uOctet25.getServiceNumber();
        boolean boolean29 = strList3.remove((java.lang.Object) uShort28);
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = uShort28.getAreaNumber();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "[hi!, ]" + "'", str18.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281474993487880L + "'", long26.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short27 + "' != '" + (short) 127 + "'", short27 == (short) 127);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(uShort30);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int5 = binaryDecoder4.decodeNullableInteger();
        org.ccsds.moims.mo.mal.structures.OctetList octetList6 = new org.ccsds.moims.mo.mal.structures.OctetList();
        java.lang.Integer int7 = octetList6.getTypeShortForm();
        try {
            org.ccsds.moims.mo.mal.structures.Element element8 = binaryDecoder4.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) octetList6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-64) + "'", int5.equals((-64)));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-7) + "'", int7.equals((-7)));
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.ccsds.moims.mo.mal.structures.Blob blob1 = new org.ccsds.moims.mo.mal.structures.Blob("[hi!, ]".getBytes());
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Double double7 = binaryDecoder6.decodeNullableDouble();
        byte[] byteArray8 = binaryDecoder6.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Element element9 = blob1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals((double) double7, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray8);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        try {
            java.lang.String str7 = binaryDecoder4.decodeNullableString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute5 = binaryDecoder4.decodeNullableAttribute();
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Unknown attribute type received: -1");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        java.lang.Integer int77 = octetList18.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = octetList18.getAreaNumber();
        int int79 = uShort78.getValue();
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-7) + "'", int77.equals((-7)));
        org.junit.Assert.assertNotNull(uShort78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute6 = binaryDecoder4.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        esa.mo.com.impl.util.HelperCOM helperCOM0 = new esa.mo.com.impl.util.HelperCOM();
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime9 = binaryDecoder8.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI10 = binaryDecoder8.decodeURI();
        try {
            org.ccsds.moims.mo.mal.structures.Element element11 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(fineTime9);
        org.junit.Assert.assertNotNull(uRI10);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger13 = binaryDecoder9.decodeUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.ccsds.moims.mo.com.structures.ObjectType objectType0 = null;
        try {
            java.lang.String str1 = esa.mo.com.impl.util.HelperCOM.objType2string(objectType0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList2 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int3 = uRIList2.getTypeShortForm();
        java.lang.Integer int4 = uRIList2.getTypeShortForm();
        java.lang.Object obj5 = uRIList2.clone();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        int int12 = uRIList2.lastIndexOf((java.lang.Object) binaryDecoder11);
        org.ccsds.moims.mo.mal.structures.Duration duration13 = binaryDecoder11.decodeDuration();
        try {
            org.ccsds.moims.mo.mal.structures.Element element14 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(duration13);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob7 = binaryDecoder5.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Size must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList7 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) 'a');
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        org.ccsds.moims.mo.mal.structures.OctetList octetList16 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = octetList16.getServiceNumber();
        boolean boolean18 = doubleList14.containsAll((java.util.Collection<java.lang.Byte>) octetList16);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray19 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList20 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20, uShortArray19);
        uShortList20.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element24 = uOctet23.createElement();
        int int25 = uShortList20.indexOf((java.lang.Object) element24);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.lang.Long[] longArray38 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList39 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList39, longArray38);
        java.lang.Object obj41 = longList39.clone();
        int int42 = strList29.indexOf((java.lang.Object) longList39);
        java.util.ListIterator<java.lang.String> strItor43 = strList29.listIterator();
        java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList48 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList48, shortArray47);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray55 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList56 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList56, uRIArray55);
        java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList63 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList63, byteArray62);
        boolean boolean66 = byteList63.add((java.lang.Byte) (byte) 100);
        boolean boolean67 = uRIList56.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        boolean boolean68 = strList53.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        boolean boolean69 = shortList48.contains((java.lang.Object) byteList63);
        boolean boolean70 = strList29.removeAll((java.util.Collection<java.lang.Byte>) byteList63);
        boolean boolean71 = uShortList20.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        int int72 = byteList63.size();
        boolean boolean73 = octetList16.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        boolean boolean74 = doubleList7.retainAll((java.util.Collection<java.lang.Byte>) octetList16);
        java.lang.Byte[] byteArray79 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList80 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList80, byteArray79);
        boolean boolean83 = byteList80.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray88 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList89 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList89, byteArray88);
        boolean boolean92 = byteList89.add((java.lang.Byte) (byte) 100);
        boolean boolean93 = byteList80.addAll((java.util.Collection<java.lang.Byte>) byteList89);
        java.lang.Object obj94 = byteList80.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream95 = byteList80.stream();
        java.lang.Object[] objArray96 = byteList80.toArray();
        boolean boolean97 = octetList16.removeAll((java.util.Collection<java.lang.Byte>) byteList80);
        try {
            org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder98 = binaryDecoder4.createListDecoder((java.util.List) byteList80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(uShortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(uRIArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 5 + "'", int72 == 5);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(byteStream95);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", !boolean97);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (byte) 1);
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder11.decodeDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        int int14 = uRIList1.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        int int35 = byteList29.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean36 = uRIList1.removeAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList43 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList43, doubleArray42);
        org.ccsds.moims.mo.mal.structures.OctetList octetList45 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = octetList45.getServiceNumber();
        boolean boolean47 = doubleList43.containsAll((java.util.Collection<java.lang.Byte>) octetList45);
        boolean boolean48 = uRIList1.retainAll((java.util.Collection<java.lang.Byte>) octetList45);
        try {
            java.lang.Object obj50 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) boolean48, "18446744073709551615");
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchFieldException; message: 18446744073709551615");
        } catch (java.lang.NoSuchFieldException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20, shortArray19);
        java.util.ListIterator<java.lang.Short> shortItor22 = shortList20.listIterator();
        int int23 = doubleList15.indexOf((java.lang.Object) shortList20);
        org.ccsds.moims.mo.mal.structures.Blob blob24 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean25 = blob24.isURLBased();
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.Element element31 = blob24.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder30);
        boolean boolean32 = doubleList15.contains((java.lang.Object) blob24);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray38 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList39, uRIArray38);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        boolean boolean50 = uRIList39.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean51 = strList36.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean52 = doubleList15.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55, doubleArray54);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList60 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList60, shortArray59);
        java.util.ListIterator<java.lang.Short> shortItor62 = shortList60.listIterator();
        int int63 = doubleList55.indexOf((java.lang.Object) shortList60);
        org.ccsds.moims.mo.mal.structures.Blob blob64 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean65 = blob64.isURLBased();
        byte[] byteArray69 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder70 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray69);
        org.ccsds.moims.mo.mal.structures.Element element71 = blob64.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder70);
        boolean boolean72 = doubleList55.contains((java.lang.Object) blob64);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray78 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList79 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList79, uRIArray78);
        java.lang.Byte[] byteArray85 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList86 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList86, byteArray85);
        boolean boolean89 = byteList86.add((java.lang.Byte) (byte) 100);
        boolean boolean90 = uRIList79.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean91 = strList76.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean92 = doubleList55.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean93 = doubleList15.removeAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean94 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean95 = doubleList1.isEmpty();
        try {
            java.util.List<java.lang.Double> doubleList98 = doubleList1.subList((-5), 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(shortItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uRIArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(shortItor62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uRIArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration13 = binaryDecoder9.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Double double7 = binaryDecoder6.decodeNullableDouble();
        byte[] byteArray8 = binaryDecoder6.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8, (int) (short) 1);
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals((double) double7, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray8);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        java.lang.Integer int1 = longList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element2 = longList0.createElement();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Double double8 = binaryDecoder7.decodeNullableDouble();
        byte[] byteArray9 = binaryDecoder7.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Element element10 = longList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-13) + "'", int1.equals((-13)));
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals((double) double8, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray9);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        int int77 = octetList18.size();
        java.lang.Integer int78 = octetList18.getTypeShortForm();
        org.ccsds.moims.mo.com.structures.ObjectType objectType81 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription82 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType81);
        java.lang.Boolean boolean83 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType81);
        java.lang.Boolean boolean84 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType81);
        org.ccsds.moims.mo.com.structures.ObjectType objectType89 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(18, (int) 'a', (int) ' ', 8);
        org.ccsds.moims.mo.com.structures.ObjectType[] objectTypeArray90 = new org.ccsds.moims.mo.com.structures.ObjectType[] { objectType81, objectType89 };
        org.ccsds.moims.mo.com.structures.ObjectType[] objectTypeArray91 = octetList18.toArray(objectTypeArray90);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-7) + "'", int78.equals((-7)));
        org.junit.Assert.assertNotNull(objectType81);
        org.junit.Assert.assertNotNull(subscription82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83.equals(true));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84.equals(true));
        org.junit.Assert.assertNotNull(objectType89);
        org.junit.Assert.assertNotNull(objectTypeArray90);
        org.junit.Assert.assertNotNull(objectTypeArray91);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        java.lang.Double double6 = binaryDecoder5.decodeNullableDouble();
        byte[] byteArray7 = binaryDecoder5.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob8 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray7);
        boolean boolean9 = fineTime0.equals((java.lang.Object) blob8);
        blob8.detach();
        boolean boolean11 = blob8.isURLBased();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals((double) double6, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = binaryDecoder9.decodeNullableUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType1 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281475010265070L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UShort argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList1.listIterator((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.Element element4 = uShortList1.createElement();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        java.lang.Double double10 = binaryDecoder9.decodeNullableDouble();
        byte[] byteArray11 = binaryDecoder9.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob14 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray11, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = blob14.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList16 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int18 = floatList16.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int19 = floatList16.getTypeShortForm();
        boolean boolean20 = floatList16.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator21 = floatList16.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = floatList16.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = floatList16.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = floatList16.getServiceNumber();
        byte[] byteArray28 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder29 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray28);
        org.ccsds.moims.mo.mal.structures.Element element30 = uShort24.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder29);
        org.ccsds.moims.mo.mal.structures.Element element31 = uOctet15.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder29);
        try {
            org.ccsds.moims.mo.mal.structures.Element element32 = uShortList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder29);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals((double) double10, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(uOctet15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-4) + "'", int19.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(floatSpliterator21);
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertNotNull(element31);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        int int46 = longList8.lastIndexOf((java.lang.Object) byteList42);
        java.util.ListIterator<java.lang.Long> longItor47 = longList8.listIterator();
        org.ccsds.moims.mo.mal.structures.Time time49 = new org.ccsds.moims.mo.mal.structures.Time((long) (-5));
        int int50 = longList8.indexOf((java.lang.Object) time49);
        org.ccsds.moims.mo.mal.structures.URI uRI52 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet53 = uRI52.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = uRI52.getServiceNumber();
        byte[] byteArray58 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder59 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray58);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder61 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray58, 6);
        boolean boolean62 = uShort54.equals((java.lang.Object) binaryDecoder61);
        try {
            org.ccsds.moims.mo.mal.structures.Element element63 = time49.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(longItor47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(uOctet53);
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        try {
            java.lang.Boolean boolean6 = binaryDecoder4.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI78 = uRIList8.get(65535);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 65535, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        try {
            java.lang.Boolean boolean13 = binaryDecoder9.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList8 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = doubleList8.getAreaNumber();
        java.lang.Object obj10 = doubleList8.clone();
        byte[] byteArray14 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = binaryDecoder16.decodeNullableUOctet();
        int int18 = doubleList8.lastIndexOf((java.lang.Object) binaryDecoder16);
        byte[] byteArray19 = binaryDecoder16.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        try {
            org.ccsds.moims.mo.mal.structures.Element element21 = uShort6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder20);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList9 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        int int12 = intList9.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream13 = intList9.parallelStream();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = binaryDecoder19.decodeNullableUOctet();
        java.lang.Long long21 = uOctet20.getShortForm();
        java.lang.Long long22 = uOctet20.getShortForm();
        int int23 = intList9.lastIndexOf((java.lang.Object) uOctet20);
        try {
            java.util.List<java.lang.Integer> intList26 = intList9.subList(9, (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(9) > toIndex(-9)");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(uOctet20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 281474993487880L + "'", long21.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281474993487880L + "'", long22.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer13 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl14 = cOMServicesConsumer13.getArchiveService();
        cOMServicesConsumer13.closeConnections();
        cOMServicesConsumer13.closeConnections();
        boolean boolean17 = doubleList1.contains((java.lang.Object) cOMServicesConsumer13);
        java.util.Spliterator<java.lang.Double> doubleSpliterator18 = doubleList1.spliterator();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(doubleSpliterator18);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        esa.mo.com.impl.archive.db.COMObjectEntityPK cOMObjectEntityPK3 = esa.mo.com.impl.archive.entities.COMObjectEntity.generatePK((java.lang.Integer) 11, (java.lang.Integer) (-18), (java.lang.Long) 281474993487886L);
        org.junit.Assert.assertNotNull(cOMObjectEntityPK3);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder8.decodeDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = identifier0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = identifier0.getAreaVersion();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 14, 18);
        blob12.detach();
        boolean boolean14 = identifier0.equals((java.lang.Object) blob12);
        org.ccsds.moims.mo.mal.MALDecoder mALDecoder15 = null;
        try {
            org.ccsds.moims.mo.mal.structures.Element element16 = identifier0.decode(mALDecoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI5 = binaryDecoder4.decodeNullableURI();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute12 = binaryDecoder9.decodeNullableAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType2 = eventCOMObject0.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        eventCOMObject0.setSourceURI(uRI5);
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = eventCOMObject0.getNetworkZone();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(objectType2);
        org.junit.Assert.assertNull(identifier8);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element1 = floatList0.createElement();
        java.util.stream.Stream<java.lang.Float> floatStream2 = floatList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = floatList0.getAreaVersion();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7, 6);
        try {
            org.ccsds.moims.mo.mal.structures.Element element11 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(floatStream2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(byteArray7);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element1 = floatList0.createElement();
        java.lang.Integer int2 = floatList0.getTypeShortForm();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Short short8 = binaryDecoder7.decodeNullableShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element9 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-4) + "'", int2.equals((-4)));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + short8 + "' != '" + (short) -64 + "'", short8.equals((short) -64));
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        java.lang.Integer int77 = octetList18.getTypeShortForm();
        java.util.Iterator<java.lang.Byte> byteItor78 = octetList18.iterator();
        octetList18.clear();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList81 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob82 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean83 = blob82.isURLBased();
        byte[] byteArray87 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder88 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray87);
        org.ccsds.moims.mo.mal.structures.Element element89 = blob82.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder88);
        boolean boolean90 = integerList81.equals((java.lang.Object) binaryDecoder88);
        try {
            org.ccsds.moims.mo.mal.structures.Element element91 = octetList18.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-7) + "'", int77.equals((-7)));
        org.junit.Assert.assertNotNull(byteItor78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", !boolean83);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertNotNull(element89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong11 = binaryDecoder8.decodeNullableULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = doubleList0.getAreaVersion();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime7 = binaryDecoder6.decodeFineTime();
        try {
            org.ccsds.moims.mo.mal.structures.Element element8 = doubleList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(fineTime7);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeURI();
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob7 = binaryDecoder4.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(uRI6);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean64 = byteList37.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.ccsds.moims.mo.mal.structures.URIList uRIList65 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int66 = uRIList65.getTypeShortForm();
        java.lang.Integer int67 = uRIList65.getTypeShortForm();
        boolean boolean68 = byteList37.equals((java.lang.Object) uRIList65);
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = uRIList65.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = uRIList65.getAreaNumber();
        java.lang.String str71 = uRIList65.toString();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject73 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI75 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject73.setSourceURI(uRI75);
        org.ccsds.moims.mo.mal.structures.UShort uShort77 = uRI75.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = uRI75.getServiceNumber();
        try {
            uRIList65.add((int) (short) 255, uRI75);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 255, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-18) + "'", int66.equals((-18)));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uShort69);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "[]" + "'", str71.equals("[]"));
        org.junit.Assert.assertNotNull(uShort77);
        org.junit.Assert.assertNotNull(uShort78);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20, shortArray19);
        java.util.ListIterator<java.lang.Short> shortItor22 = shortList20.listIterator();
        int int23 = doubleList15.indexOf((java.lang.Object) shortList20);
        org.ccsds.moims.mo.mal.structures.Blob blob24 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean25 = blob24.isURLBased();
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.Element element31 = blob24.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder30);
        boolean boolean32 = doubleList15.contains((java.lang.Object) blob24);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray38 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList39, uRIArray38);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        boolean boolean50 = uRIList39.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean51 = strList36.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean52 = doubleList15.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55, doubleArray54);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList60 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList60, shortArray59);
        java.util.ListIterator<java.lang.Short> shortItor62 = shortList60.listIterator();
        int int63 = doubleList55.indexOf((java.lang.Object) shortList60);
        org.ccsds.moims.mo.mal.structures.Blob blob64 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean65 = blob64.isURLBased();
        byte[] byteArray69 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder70 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray69);
        org.ccsds.moims.mo.mal.structures.Element element71 = blob64.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder70);
        boolean boolean72 = doubleList55.contains((java.lang.Object) blob64);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray78 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList79 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList79, uRIArray78);
        java.lang.Byte[] byteArray85 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList86 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList86, byteArray85);
        boolean boolean89 = byteList86.add((java.lang.Byte) (byte) 100);
        boolean boolean90 = uRIList79.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean91 = strList76.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean92 = doubleList55.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean93 = doubleList15.removeAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean94 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean95 = doubleList1.isEmpty();
        try {
            java.lang.Double double98 = doubleList1.set((-15), (java.lang.Double) Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(shortItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uRIArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(shortItor62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uRIArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (byte) 1);
        try {
            java.lang.Short short12 = binaryDecoder11.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = binaryDecoder4.decodeNullableUOctet();
        try {
            java.lang.String str6 = binaryDecoder4.decodeNullableString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet5);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        java.lang.Object[] objArray4 = shortList0.toArray();
        org.ccsds.moims.mo.mal.structures.URIList uRIList5 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int6 = uRIList5.getTypeShortForm();
        java.lang.Integer int7 = uRIList5.getTypeShortForm();
        java.lang.Object obj8 = uRIList5.clone();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        int int15 = uRIList5.lastIndexOf((java.lang.Object) binaryDecoder14);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger16 = binaryDecoder14.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = shortList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-18) + "'", int6.equals((-18)));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-18) + "'", int7.equals((-18)));
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(uInteger16);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        esa.mo.com.impl.archive.db.COMObjectEntityPK cOMObjectEntityPK3 = esa.mo.com.impl.archive.entities.COMObjectEntity.generatePK((java.lang.Integer) 52, (java.lang.Integer) 14, (java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(cOMObjectEntityPK3);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob5 = binaryDecoder4.decodeBlob();
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong6 = binaryDecoder4.decodeNullableULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(blob5);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Float float35 = floatList6.remove(2);
        byte[] byteArray39 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder41 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet42 = binaryDecoder41.decodeNullableUOctet();
        int int43 = floatList6.lastIndexOf((java.lang.Object) binaryDecoder41);
        java.util.Collection<java.lang.Byte> byteCollection44 = null;
        try {
            boolean boolean45 = floatList6.retainAll(byteCollection44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + (-1.0f) + "'", float35.equals((-1.0f)));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(uOctet42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        org.ccsds.moims.mo.mal.structures.LongList longList56 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byteList65.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean73 = longList56.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean74 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byte[] byteArray78 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray78);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime80 = binaryDecoder79.decodeFineTime();
        boolean boolean81 = booleanList10.remove((java.lang.Object) fineTime80);
        byte[] byteArray85 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder86 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray85);
        java.lang.Double double87 = binaryDecoder86.decodeNullableDouble();
        try {
            org.ccsds.moims.mo.mal.structures.Element element88 = fineTime80.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertNotNull(fineTime80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals((double) double87, Double.NaN, 0);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        java.math.BigInteger bigInteger56 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong57 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger56);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = uLong57.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity61 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long62 = objectTypeHolderEntity61.getObjectType();
        boolean boolean63 = uLong57.equals((java.lang.Object) long62);
        boolean boolean64 = booleanList10.remove((java.lang.Object) uLong57);
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = uLong57.getAreaNumber();
        boolean boolean67 = uShort65.equals((java.lang.Object) 2);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 281474993487879L + "'", long62.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = identifier0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList3 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList3.getAreaNumber();
        java.lang.Object obj5 = doubleList3.clone();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = binaryDecoder11.decodeNullableUOctet();
        int int13 = doubleList3.lastIndexOf((java.lang.Object) binaryDecoder11);
        try {
            org.ccsds.moims.mo.mal.structures.Element element14 = identifier0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        try {
            longList8.add((-1), (java.lang.Long) 281474993487876L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean2 = dictionary0.exists((java.lang.Integer) (-1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int7 = uRIList6.size();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray18 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList19 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList19, uRIArray18);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = uRIList19.containsAll((java.util.Collection<java.lang.Byte>) byteList26);
        boolean boolean31 = intList16.removeAll((java.util.Collection<java.lang.Byte>) byteList26);
        boolean boolean32 = uRIList6.removeAll((java.util.Collection<java.lang.Byte>) byteList26);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder33 = binaryDecoder4.createListDecoder((java.util.List) byteList26);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime34 = binaryDecoder4.decodeNullableFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uRIArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(mALListDecoder33);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = blob9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int13 = floatList11.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int14 = floatList11.getTypeShortForm();
        boolean boolean15 = floatList11.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator16 = floatList11.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = floatList11.getServiceNumber();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = uShort19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute27 = binaryDecoder24.decodeNullableAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-4) + "'", int14.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(floatSpliterator16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element26);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) '#');
        long long2 = archiveSyncGenAdapter1.noUpdatesReceivedForThisDuration();
        boolean boolean3 = archiveSyncGenAdapter1.transactionCompleted();
// flaky:         org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1558616165304L + "'", long2 == 1558616165304L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        boolean boolean2 = integerList1.isEmpty();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        try {
            org.ccsds.moims.mo.mal.structures.Element element8 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList1.listIterator((int) (byte) 0);
        uShortList1.trimToSize();
        java.lang.String str5 = uShortList1.toString();
        org.ccsds.moims.mo.mal.structures.OctetList octetList6 = new org.ccsds.moims.mo.mal.structures.OctetList();
        java.lang.Integer int7 = octetList6.getTypeShortForm();
        boolean boolean8 = uShortList1.removeAll((java.util.Collection<java.lang.Byte>) octetList6);
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.Blob blob14 = binaryDecoder13.decodeBlob();
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = octetList6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]" + "'", str5.equals("[]"));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-7) + "'", int7.equals((-7)));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(blob14);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        try {
            java.lang.String str6 = binaryDecoder4.decodeString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort uShort77 = octetList18.getServiceNumber();
        java.util.stream.Stream<java.lang.Byte> byteStream78 = octetList18.stream();
        org.ccsds.moims.mo.mal.structures.Element element79 = octetList18.createElement();
        try {
            java.util.ListIterator<java.lang.Byte> byteItor81 = octetList18.listIterator((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNotNull(uShort77);
        org.junit.Assert.assertNotNull(byteStream78);
        org.junit.Assert.assertNotNull(element79);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration8 = binaryDecoder6.decodeDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList9 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        int int12 = intList9.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream13 = intList9.parallelStream();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = binaryDecoder19.decodeNullableUOctet();
        java.lang.Long long21 = uOctet20.getShortForm();
        java.lang.Long long22 = uOctet20.getShortForm();
        int int23 = intList9.lastIndexOf((java.lang.Object) uOctet20);
        java.lang.Object obj24 = null;
        boolean boolean25 = intList9.remove(obj24);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(uOctet20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 281474993487880L + "'", long21.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281474993487880L + "'", long22.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger5 = binaryDecoder4.decodeNullableUInteger();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        java.lang.Integer int11 = binaryDecoder10.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = uInteger5.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-64) + "'", int11.equals((-64)));
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger5 = binaryDecoder4.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration6 = binaryDecoder4.decodeDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger5);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = blob9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int13 = floatList11.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int14 = floatList11.getTypeShortForm();
        boolean boolean15 = floatList11.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator16 = floatList11.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = floatList11.getServiceNumber();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = uShort19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        try {
            java.lang.Double double27 = binaryDecoder24.decodeNullableDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-4) + "'", int14.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(floatSpliterator16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element26);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean2 = dictionary0.exists((java.lang.Integer) 16);
        dictionary0.resetFastNetwork();
        try {
            java.lang.String str5 = dictionary0.getWord((java.lang.Integer) 16);
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: The word for the id: 16 is unknown!");
        } catch (java.lang.Exception e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, 6);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime7 = binaryDecoder6.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.ccsds.moims.mo.mal.structures.FloatList floatList1 = new org.ccsds.moims.mo.mal.structures.FloatList(12);
        org.ccsds.moims.mo.mal.structures.URI uRI3 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uRI3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRI3.getServiceNumber();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9, 6);
        boolean boolean13 = uShort5.equals((java.lang.Object) binaryDecoder12);
        try {
            org.ccsds.moims.mo.mal.structures.Element element14 = floatList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList12 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        boolean boolean21 = byteList18.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray26 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList27 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList27, byteArray26);
        boolean boolean30 = byteList27.add((java.lang.Byte) (byte) 100);
        boolean boolean31 = byteList18.addAll((java.util.Collection<java.lang.Byte>) byteList27);
        boolean boolean32 = booleanList12.containsAll((java.util.Collection<java.lang.Byte>) byteList27);
        try {
            org.ccsds.moims.mo.mal.structures.Element element33 = binaryDecoder9.decodeElement((org.ccsds.moims.mo.mal.structures.Element) booleanList12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uRI1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRI1.getServiceNumber();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7, 18);
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = uRI1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 18");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(byteArray7);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.lang.Object obj22 = longList20.clone();
        int int23 = strList10.indexOf((java.lang.Object) longList20);
        java.util.ListIterator<java.lang.String> strItor24 = strList10.listIterator();
        java.lang.String str25 = strList10.toString();
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList29 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList29, doubleArray28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        int int36 = strList34.size();
        boolean boolean37 = doubleList29.equals((java.lang.Object) strList34);
        boolean boolean38 = strList10.remove((java.lang.Object) strList34);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder39 = binaryDecoder5.createListDecoder((java.util.List) strList34);
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger40 = binaryDecoder5.decodeUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[hi!, ]" + "'", str25.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(mALListDecoder39);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList((int) '#');
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList6 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList6, shortArray5);
        java.util.ListIterator<java.lang.Short> shortItor8 = shortList6.listIterator();
        int int9 = uRIList1.lastIndexOf((java.lang.Object) shortList6);
        org.ccsds.moims.mo.mal.structures.ShortList shortList10 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = shortList10.getAreaNumber();
        java.lang.Object[] objArray12 = shortList10.toArray();
        java.lang.Long long13 = shortList10.getShortForm();
        shortList10.ensureCapacity((int) (byte) 0);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity18 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str19 = networkHolderEntity18.getNetworkString();
        int int20 = shortList10.lastIndexOf((java.lang.Object) networkHolderEntity18);
        boolean boolean21 = uRIList1.contains((java.lang.Object) networkHolderEntity18);
        int int22 = networkHolderEntity18.getId();
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(shortItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 281475010265079L + "'", long13.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[0, 10]" + "'", str19.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-11) + "'", int22 == (-11));
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int2 = stringList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList3 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int4 = uRIList3.getTypeShortForm();
        java.lang.Integer int5 = uRIList3.getTypeShortForm();
        java.lang.Object obj6 = uRIList3.clone();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        int int13 = uRIList3.lastIndexOf((java.lang.Object) binaryDecoder12);
        java.lang.Boolean boolean14 = binaryDecoder12.decodeBoolean();
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-15) + "'", int2.equals((-15)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-18) + "'", int5.equals((-18)));
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14.equals(true));
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Short) (short) -64);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = binaryDecoder6.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Element element8 = union1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(uOctet7);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime7 = binaryDecoder6.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList8 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int9 = uRIList8.size();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList18 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray20 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList21 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList21, uRIArray20);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        boolean boolean32 = uRIList21.containsAll((java.util.Collection<java.lang.Byte>) byteList28);
        boolean boolean33 = intList18.removeAll((java.util.Collection<java.lang.Byte>) byteList28);
        boolean boolean34 = uRIList8.removeAll((java.util.Collection<java.lang.Byte>) byteList28);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder35 = binaryDecoder6.createListDecoder((java.util.List) byteList28);
        try {
            org.ccsds.moims.mo.mal.structures.Element element36 = uLong1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(fineTime7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(uRIArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertNotNull(mALListDecoder35);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Duration duration23 = binaryDecoder21.decodeDuration();
        int int24 = integerList1.lastIndexOf((java.lang.Object) binaryDecoder21);
        java.lang.Short short25 = binaryDecoder21.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort26 = binaryDecoder21.decodeNullableUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + short25 + "' != '" + (short) -64 + "'", short25.equals((short) -64));
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = blob9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int13 = floatList11.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int14 = floatList11.getTypeShortForm();
        boolean boolean15 = floatList11.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator16 = floatList11.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = floatList11.getServiceNumber();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = uShort19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime27 = binaryDecoder24.decodeNullableFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-4) + "'", int14.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(floatSpliterator16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element26);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob11 = binaryDecoder10.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uRI1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRI1.getServiceNumber();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7, 6);
        boolean boolean11 = uShort3.equals((java.lang.Object) binaryDecoder10);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime12 = binaryDecoder10.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration8 = binaryDecoder6.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList0 = null;
        java.lang.Boolean boolean1 = esa.mo.com.impl.util.HelperCOM.domainContainsWildcard(identifierList0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1.equals(true));
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.ShortList shortList3 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList3.getAreaNumber();
        java.lang.Object[] objArray5 = shortList3.toArray();
        java.lang.Long long6 = shortList3.getShortForm();
        java.lang.Long long7 = shortList3.getShortForm();
        java.lang.Object[] objArray8 = shortList3.toArray();
        org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
        boolean boolean18 = byteList15.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        boolean boolean28 = byteList15.addAll((java.util.Collection<java.lang.Byte>) byteList24);
        java.lang.Object obj29 = byteList15.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream30 = byteList15.stream();
        boolean boolean31 = floatList9.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        byteList15.ensureCapacity((-4));
        byteList15.clear();
        boolean boolean35 = shortList3.retainAll((java.util.Collection<java.lang.Byte>) byteList15);
        boolean boolean36 = integerList1.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        byte[] byteArray40 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder41 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray40);
        java.lang.Double double42 = binaryDecoder41.decodeNullableDouble();
        byte[] byteArray43 = binaryDecoder41.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder45 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray43, 15);
        try {
            org.ccsds.moims.mo.mal.structures.Element element46 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 15");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265079L + "'", long6.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265079L + "'", long7.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals((double) double42, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray43);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList6 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList6, byteArray5);
        boolean boolean9 = byteList6.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
        boolean boolean18 = byteList15.add((java.lang.Byte) (byte) 100);
        boolean boolean19 = byteList6.addAll((java.util.Collection<java.lang.Byte>) byteList15);
        java.lang.Object obj20 = byteList6.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream21 = byteList6.stream();
        boolean boolean22 = floatList0.containsAll((java.util.Collection<java.lang.Byte>) byteList6);
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = floatList0.getAreaNumber();
        java.util.stream.Stream<java.lang.Float> floatStream24 = floatList0.stream();
        org.ccsds.moims.mo.mal.structures.URIList uRIList25 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int26 = uRIList25.getTypeShortForm();
        java.lang.Integer int27 = uRIList25.getTypeShortForm();
        java.lang.Object obj28 = uRIList25.clone();
        byte[] byteArray32 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder33 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray32);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder34 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray32);
        int int35 = uRIList25.lastIndexOf((java.lang.Object) binaryDecoder34);
        java.lang.Boolean boolean36 = binaryDecoder34.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration37 = binaryDecoder34.decodeDuration();
        try {
            org.ccsds.moims.mo.mal.structures.Element element38 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertNotNull(floatStream24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-18) + "'", int26.equals((-18)));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-18) + "'", int27.equals((-18)));
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36.equals(true));
        org.junit.Assert.assertNotNull(duration37);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        try {
            java.lang.Short short13 = binaryDecoder9.decodeShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob5 = binaryDecoder4.decodeBlob();
        try {
            java.lang.Float float6 = binaryDecoder4.decodeFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(blob5);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = binaryDecoder9.decodeNullableUOctet();
        try {
            java.lang.Boolean boolean13 = binaryDecoder9.decodeBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertNotNull(uOctet12);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int2 = uRIList1.getTypeShortForm();
        java.lang.Integer int3 = uRIList1.getTypeShortForm();
        java.lang.Object obj4 = uRIList1.clone();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        int int11 = uRIList1.lastIndexOf((java.lang.Object) binaryDecoder10);
        java.lang.Boolean boolean12 = binaryDecoder10.decodeBoolean();
        try {
            org.ccsds.moims.mo.mal.structures.Element element13 = shortList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12.equals(true));
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob5 = binaryDecoder4.decodeBlob();
        try {
            byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 51 > 3");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(blob5);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        try {
            java.lang.Short short7 = binaryDecoder5.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (byte) 1);
        try {
            java.lang.Float float12 = binaryDecoder11.decodeNullableFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((int) (byte) 0, "hi!");
        int int3 = providerURIHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.Object obj20 = doubleList2.clone();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList34 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList34, longArray33);
        java.lang.Object obj36 = longList34.clone();
        int int37 = strList24.indexOf((java.lang.Object) longList34);
        java.util.ListIterator<java.lang.String> strItor38 = strList24.listIterator();
        java.lang.String str39 = strList24.toString();
        java.lang.Object[] objArray40 = strList24.toArray();
        boolean boolean41 = doubleList2.contains((java.lang.Object) strList24);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator42 = null;
        try {
            strList24.replaceAll(strUnaryOperator42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[hi!, ]" + "'", str39.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.String str1 = fineTime0.toString();
        org.ccsds.moims.mo.mal.structures.URI uRI3 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uRI3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRI3.getServiceNumber();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9, 6);
        boolean boolean13 = uShort5.equals((java.lang.Object) binaryDecoder12);
        try {
            org.ccsds.moims.mo.mal.structures.Element element14 = fineTime0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0" + "'", str1.equals("0"));
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        esa.mo.com.impl.archive.db.COMObjectEntityPK cOMObjectEntityPK3 = esa.mo.com.impl.archive.entities.COMObjectEntity.generatePK((java.lang.Integer) 1, (java.lang.Integer) (-10), (java.lang.Long) 281474993487884L);
        org.junit.Assert.assertNotNull(cOMObjectEntityPK3);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.Element element13 = blob12.createElement();
        blob12.detach();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element13);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        doubleList2.ensureCapacity((-1));
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20, shortArray19);
        java.util.ListIterator<java.lang.Short> shortItor22 = shortList20.listIterator();
        int int23 = doubleList15.indexOf((java.lang.Object) shortList20);
        int int24 = doubleList2.lastIndexOf((java.lang.Object) shortList20);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = uRIList26.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        int int39 = uRIList26.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray44 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList45 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList45, byteArray44);
        boolean boolean48 = byteList45.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        boolean boolean58 = byteList45.addAll((java.util.Collection<java.lang.Byte>) byteList54);
        int int60 = byteList54.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean61 = uRIList26.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        java.lang.Double[] doubleArray67 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList68 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList68, doubleArray67);
        org.ccsds.moims.mo.mal.structures.OctetList octetList70 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort71 = octetList70.getServiceNumber();
        boolean boolean72 = doubleList68.containsAll((java.util.Collection<java.lang.Byte>) octetList70);
        boolean boolean73 = uRIList26.retainAll((java.util.Collection<java.lang.Byte>) octetList70);
        java.lang.Object obj74 = uRIList26.clone();
        int int75 = doubleList2.indexOf((java.lang.Object) uRIList26);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject77 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId78 = eventCOMObject77.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType79 = eventCOMObject77.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject80 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI82 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject80.setSourceURI(uRI82);
        eventCOMObject77.setSourceURI(uRI82);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI85 = uRIList26.set(10, uRI82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(shortItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertNotNull(uShort71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(objectId78);
        org.junit.Assert.assertNull(objectType79);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        esa.mo.com.impl.archive.db.COMObjectEntityPK cOMObjectEntityPK3 = esa.mo.com.impl.archive.entities.COMObjectEntity.generatePK((java.lang.Integer) (-10), (java.lang.Integer) 10, (java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(cOMObjectEntityPK3);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean64 = byteList37.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.ccsds.moims.mo.mal.structures.URIList uRIList65 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int66 = uRIList65.getTypeShortForm();
        java.lang.Integer int67 = uRIList65.getTypeShortForm();
        boolean boolean68 = byteList37.equals((java.lang.Object) uRIList65);
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = uRIList65.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = uRIList65.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList71 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int72 = uRIList71.getTypeShortForm();
        java.lang.Integer int73 = uRIList71.getTypeShortForm();
        java.lang.Object obj74 = uRIList71.clone();
        byte[] byteArray78 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray78);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder80 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray78);
        int int81 = uRIList71.lastIndexOf((java.lang.Object) binaryDecoder80);
        org.ccsds.moims.mo.mal.structures.Time time82 = binaryDecoder80.decodeTime();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet83 = binaryDecoder80.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Element element84 = uShort70.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-18) + "'", int66.equals((-18)));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uShort69);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-18) + "'", int72.equals((-18)));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-18) + "'", int73.equals((-18)));
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(time82);
        org.junit.Assert.assertNotNull(uOctet83);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        java.lang.Long long2 = union1.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = union1.getAreaNumber();
        try {
            java.lang.Object obj5 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) uShort3, "[1, 100, 100, 1, 8, 8, 8]");
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchFieldException; message: [1, 100, 100, 1, 8, 8, 8]");
        } catch (java.lang.NoSuchFieldException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487874L + "'", long2.equals(281474993487874L));
        org.junit.Assert.assertNotNull(uShort3);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        java.lang.Long long6 = binaryDecoder4.decodeLong();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration7 = binaryDecoder4.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-64L) + "'", long6.equals((-64L)));
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = org.ccsds.moims.mo.mal.structures.URIList.AREA_SHORT_FORM;
        try {
            binaryEncoder1.encodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.URI uRI3 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uRI3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRI3.getServiceNumber();
        try {
            binaryEncoder1.encodeNullableURI(uRI3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort5);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int5 = binaryDecoder4.decodeNullableInteger();
        org.ccsds.moims.mo.mal.structures.StringList stringList7 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        stringList7.ensureCapacity((-15));
        try {
            org.ccsds.moims.mo.mal.structures.Element element10 = binaryDecoder4.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) stringList7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-64) + "'", int5.equals((-64)));
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, 15);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI9 = binaryDecoder8.decodeURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 15");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeAbstractElementType((java.lang.Long) 281475010265079L, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = stringList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList4 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob5 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean6 = blob5.isURLBased();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.Element element12 = blob5.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
        boolean boolean13 = integerList4.equals((java.lang.Object) binaryDecoder11);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = integerList4.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList15 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int16 = uRIList15.getTypeShortForm();
        java.lang.Integer int17 = uRIList15.getTypeShortForm();
        java.lang.Object obj18 = uRIList15.clone();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        int int25 = uRIList15.lastIndexOf((java.lang.Object) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.Duration duration26 = binaryDecoder24.decodeDuration();
        int int27 = integerList4.lastIndexOf((java.lang.Object) binaryDecoder24);
        try {
            org.ccsds.moims.mo.mal.structures.Element element28 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-18) + "'", int16.equals((-18)));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-18) + "'", int17.equals((-18)));
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int1 = booleanList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = booleanList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList3 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int4 = uRIList3.getTypeShortForm();
        java.lang.Integer int5 = uRIList3.getTypeShortForm();
        java.lang.Object obj6 = uRIList3.clone();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        int int13 = uRIList3.lastIndexOf((java.lang.Object) binaryDecoder12);
        org.ccsds.moims.mo.mal.structures.Duration duration14 = binaryDecoder12.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Time time15 = binaryDecoder12.decodeTime();
        try {
            org.ccsds.moims.mo.mal.structures.Element element16 = booleanList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2) + "'", int1.equals((-2)));
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-18) + "'", int5.equals((-18)));
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(time15);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = integerList1.getAreaNumber();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        try {
            org.ccsds.moims.mo.mal.structures.Element element11 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(byteArray8);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (byte) 1);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI12 = binaryDecoder11.decodeNullableURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList22 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray24 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList25, uRIArray24);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        boolean boolean36 = uRIList25.containsAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean37 = intList22.removeAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean39 = intList22.remove((java.lang.Object) '4');
        java.util.stream.Stream<java.lang.Integer> intStream40 = intList22.parallelStream();
        java.util.ListIterator<java.lang.Integer> intItor41 = intList22.listIterator();
        try {
            org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder42 = binaryDecoder13.createListDecoder((java.util.List) intList22);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uRIArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNotNull(intItor41);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Duration duration23 = binaryDecoder21.decodeDuration();
        int int24 = integerList1.lastIndexOf((java.lang.Object) binaryDecoder21);
        java.util.Iterator<java.lang.Integer> intItor25 = integerList1.iterator();
        java.io.OutputStream outputStream26 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder27 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream26);
        try {
            integerList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intItor25);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        try {
            java.lang.String str5 = binaryDecoder4.decodeString();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        int int10 = blob9.getLength();
        org.ccsds.moims.mo.mal.structures.Element element11 = blob9.createElement();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(element11);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList2 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int3 = uRIList2.getTypeShortForm();
        java.lang.Integer int4 = uRIList2.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRIList2.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = uRIList2.getAreaNumber();
        uRIList2.clear();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = uRIList2.getAreaVersion();
        try {
            binaryEncoder1.encodeElement((org.ccsds.moims.mo.mal.structures.Element) uRIList2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uOctet8);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier12 = binaryDecoder9.decodeNullableIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Short short8 = binaryDecoder7.decodeNullableShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element9 = duration1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + short8 + "' != '" + (short) -64 + "'", short8.equals((short) -64));
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList3 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList3.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = doubleList3.getServiceNumber();
        try {
            binaryEncoder1.encodeNullableUShort(uShort5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity(0, "0");
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList(0);
        boolean boolean2 = booleanList1.isEmpty();
        java.util.Iterator<java.lang.Boolean> booleanItor3 = booleanList1.iterator();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            booleanList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNotNull(booleanItor3);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (-64), (-18));
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI14 = binaryDecoder13.decodeURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.ccsds.moims.mo.mal.structures.UInteger uInteger0 = new org.ccsds.moims.mo.mal.structures.UInteger();
        java.io.OutputStream outputStream1 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder2 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream1);
        try {
            uInteger0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList2 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int3 = uRIList2.getTypeShortForm();
        java.lang.Integer int4 = uRIList2.getTypeShortForm();
        java.lang.Object obj5 = uRIList2.clone();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        int int12 = uRIList2.lastIndexOf((java.lang.Object) binaryDecoder11);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger13 = binaryDecoder11.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = uInteger13.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element15 = uInteger13.createElement();
        try {
            binaryEncoder1.encodeNullableUInteger(uInteger13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(uInteger13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(element15);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        java.lang.Integer int6 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList8 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor10 = uShortList8.listIterator((int) (byte) 0);
        java.lang.Integer int11 = uShortList8.getTypeShortForm();
        int int12 = floatList0.lastIndexOf((java.lang.Object) uShortList8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = uShortList8.getAreaVersion();
        java.io.OutputStream outputStream14 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder15 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream14);
        try {
            uShortList8.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-4) + "'", int6.equals((-4)));
        org.junit.Assert.assertNotNull(uShortItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-10) + "'", int11.equals((-10)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(uOctet13);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        int int20 = blob11.getOffset();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = blob11.getAreaNumber();
        blob11.detach();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(uShort21);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = stringList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element4 = stringList1.createElement();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        try {
            stringList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(element4);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        try {
            java.lang.Long long72 = longList8.set(100, (java.lang.Long) 281474993487889L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime7 = binaryDecoder6.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI8 = binaryDecoder6.decodeURI();
        try {
            binaryEncoder1.encodeNullableURI(uRI8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(fineTime7);
        org.junit.Assert.assertNotNull(uRI8);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime1 = new org.ccsds.moims.mo.mal.structures.FineTime(281474993487890L);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = fineTime1.getAreaNumber();
        long long3 = fineTime1.getValue();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            fineTime1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487890L + "'", long3 == 281474993487890L);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.lang.Object obj22 = longList20.clone();
        int int23 = strList10.indexOf((java.lang.Object) longList20);
        java.util.ListIterator<java.lang.String> strItor24 = strList10.listIterator();
        java.lang.String str25 = strList10.toString();
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList29 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList29, doubleArray28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        int int36 = strList34.size();
        boolean boolean37 = doubleList29.equals((java.lang.Object) strList34);
        boolean boolean38 = strList10.remove((java.lang.Object) strList34);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder39 = binaryDecoder5.createListDecoder((java.util.List) strList34);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI40 = binaryDecoder5.decodeURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[hi!, ]" + "'", str25.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(mALListDecoder39);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int1 = booleanList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = booleanList0.getServiceNumber();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        try {
            booleanList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2) + "'", int1.equals((-2)));
        org.junit.Assert.assertNotNull(uShort2);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier13 = binaryDecoder9.decodeIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        boolean boolean2 = integerList1.isEmpty();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.URIList uRIList4 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int5 = uRIList4.getTypeShortForm();
        java.lang.Integer int6 = uRIList4.getTypeShortForm();
        java.lang.Object obj7 = uRIList4.clone();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        int int14 = uRIList4.lastIndexOf((java.lang.Object) binaryDecoder13);
        org.ccsds.moims.mo.mal.structures.Time time15 = binaryDecoder13.decodeTime();
        org.ccsds.moims.mo.mal.structures.Duration duration16 = binaryDecoder13.decodeNullableDuration();
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-18) + "'", int5.equals((-18)));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-18) + "'", int6.equals((-18)));
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(time15);
        org.junit.Assert.assertNotNull(duration16);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Time time2 = null;
        try {
            binaryEncoder1.encodeNullableTime(time2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) 2.47E-322d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject3.getObjectId();
        eventCOMObject0.setSource(objectId12);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject14 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject14.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType19 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription20 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType19);
        eventCOMObject14.setObjType(objectType19);
        java.lang.Long long22 = eventCOMObject14.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId23 = eventCOMObject14.getObjectId();
        eventCOMObject0.setSource(objectId23);
        org.ccsds.moims.mo.com.structures.ObjectType objectType27 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription28 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType27);
        java.lang.Boolean boolean29 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType27);
        java.lang.Boolean boolean30 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType27);
        java.lang.Boolean boolean31 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType27);
        eventCOMObject0.setObjType(objectType27);
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId12);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 4294967295L + "'", long22.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId23);
        org.junit.Assert.assertNotNull(objectType27);
        org.junit.Assert.assertNotNull(subscription28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29.equals(true));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30.equals(true));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31.equals(true));
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        java.lang.Integer int6 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList8 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor10 = uShortList8.listIterator((int) (byte) 0);
        java.lang.Integer int11 = uShortList8.getTypeShortForm();
        int int12 = floatList0.lastIndexOf((java.lang.Object) uShortList8);
        uShortList8.clear();
        java.io.OutputStream outputStream14 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder15 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream14);
        try {
            uShortList8.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-4) + "'", int6.equals((-4)));
        org.junit.Assert.assertNotNull(uShortItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-10) + "'", int11.equals((-10)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList8 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        boolean boolean21 = byteList18.add((java.lang.Byte) (byte) 100);
        boolean boolean22 = uRIList11.containsAll((java.util.Collection<java.lang.Byte>) byteList18);
        boolean boolean23 = intList8.removeAll((java.util.Collection<java.lang.Byte>) byteList18);
        boolean boolean25 = intList8.remove((java.lang.Object) '4');
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList43 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList43, byteArray42);
        boolean boolean46 = byteList43.add((java.lang.Byte) (byte) 100);
        boolean boolean47 = byteList34.addAll((java.util.Collection<java.lang.Byte>) byteList43);
        int int49 = byteList43.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean50 = uRIList27.retainAll((java.util.Collection<java.lang.Byte>) byteList43);
        boolean boolean51 = intList8.contains((java.lang.Object) uRIList27);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity54 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str55 = networkHolderEntity54.getNetworkString();
        boolean boolean56 = intList8.remove((java.lang.Object) networkHolderEntity54);
        java.lang.String str57 = networkHolderEntity54.getNetworkString();
        java.lang.String str58 = networkHolderEntity54.getNetworkString();
        int int59 = networkHolderEntity54.getId();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "[0, 10]" + "'", str55.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "[0, 10]" + "'", str57.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "[0, 10]" + "'", str58.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-11) + "'", int59 == (-11));
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        int int20 = blob11.getOffset();
        boolean boolean21 = blob11.isURLBased();
        int int22 = blob11.getOffset();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((int) (short) 0, "0");
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((int) (short) 10, "127");
        int int3 = networkHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        java.math.BigInteger bigInteger56 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong57 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger56);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = uLong57.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity61 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long62 = objectTypeHolderEntity61.getObjectType();
        boolean boolean63 = uLong57.equals((java.lang.Object) long62);
        boolean boolean64 = booleanList10.remove((java.lang.Object) uLong57);
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = uLong57.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort66 = uShort65.getAreaNumber();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 281474993487879L + "'", long62.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertNotNull(uShort66);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Duration duration23 = binaryDecoder21.decodeDuration();
        int int24 = integerList1.lastIndexOf((java.lang.Object) binaryDecoder21);
        byte[] byteArray28 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder29 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray28);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray28);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger31 = binaryDecoder30.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.Element element32 = uInteger31.createElement();
        org.ccsds.moims.mo.mal.structures.FloatList floatList33 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int35 = floatList33.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int36 = floatList33.getTypeShortForm();
        boolean boolean37 = floatList33.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator38 = floatList33.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = floatList33.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort40 = floatList33.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort41 = floatList33.getServiceNumber();
        byte[] byteArray45 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder46 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray45);
        org.ccsds.moims.mo.mal.structures.Element element47 = uShort41.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder46);
        org.ccsds.moims.mo.mal.structures.Element element48 = uInteger31.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder46);
        try {
            org.ccsds.moims.mo.mal.structures.Element element49 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(uInteger31);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-4) + "'", int36.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(floatSpliterator38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertNotNull(uShort40);
        org.junit.Assert.assertNotNull(uShort41);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(element48);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = fineTime0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uShort1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element3 = uShort2.createElement();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList13 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        int int16 = intList13.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream17 = intList13.parallelStream();
        byte[] byteArray21 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder22 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray21);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray21);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet24 = binaryDecoder23.decodeNullableUOctet();
        java.lang.Long long25 = uOctet24.getShortForm();
        java.lang.Long long26 = uOctet24.getShortForm();
        int int27 = intList13.lastIndexOf((java.lang.Object) uOctet24);
        java.lang.Integer int28 = uOctet24.getTypeShortForm();
        java.lang.Long long29 = uOctet24.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = null;
        try {
            org.ccsds.moims.mo.com.COMService cOMService31 = esa.mo.com.impl.util.HelperCOM.findCOMService(uShort2, uOctet24, uShort30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(uOctet24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 281474993487880L + "'", long25.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281474993487880L + "'", long26.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28.equals(8));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 281474993487880L + "'", long29.equals(281474993487880L));
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean64 = byteList37.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.ccsds.moims.mo.mal.structures.URIList uRIList65 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int66 = uRIList65.getTypeShortForm();
        java.lang.Integer int67 = uRIList65.getTypeShortForm();
        boolean boolean68 = byteList37.equals((java.lang.Object) uRIList65);
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = uRIList65.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = uRIList65.getAreaNumber();
        byte[] byteArray74 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder75 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray74);
        try {
            org.ccsds.moims.mo.mal.structures.Element element76 = uRIList65.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-18) + "'", int66.equals((-18)));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uShort69);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertNotNull(byteArray74);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.Integer int1 = identifier0.getTypeShortForm();
        java.lang.Float[] floatArray7 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList8 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList8, floatArray7);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12, booleanArray11);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19, byteArray18);
        boolean boolean22 = byteList19.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        boolean boolean32 = byteList19.addAll((java.util.Collection<java.lang.Byte>) byteList28);
        java.lang.Object obj33 = byteList19.clone();
        boolean boolean34 = booleanList12.contains((java.lang.Object) byteList19);
        int int35 = floatList8.lastIndexOf((java.lang.Object) booleanList12);
        java.lang.Float float37 = floatList8.remove(2);
        byte[] byteArray41 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder42 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray41);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder43 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray41);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet44 = binaryDecoder43.decodeNullableUOctet();
        int int45 = floatList8.lastIndexOf((java.lang.Object) binaryDecoder43);
        try {
            org.ccsds.moims.mo.mal.structures.Element element46 = identifier0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 6 + "'", int1.equals(6));
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + (-1.0f) + "'", float37.equals((-1.0f)));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(uOctet44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime3 = new org.ccsds.moims.mo.mal.structures.FineTime(281474993487890L);
        try {
            binaryEncoder1.encodeNullableFineTime(fineTime3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        try {
            java.util.List<java.lang.Double> doubleList15 = doubleList1.subList(2, 15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 15");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Blob blob3 = new org.ccsds.moims.mo.mal.structures.Blob("[]".getBytes());
        try {
            binaryEncoder1.encodeBlob(blob3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(14);
        java.lang.Long long2 = doubleList1.getShortForm();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        try {
            doubleList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265083L + "'", long2.equals(281475010265083L));
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        java.lang.Short short12 = binaryDecoder9.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime13 = binaryDecoder9.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertTrue("'" + short12 + "' != '" + (short) -64 + "'", short12.equals((short) -64));
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        java.lang.Long long4 = shortList0.getShortForm();
        java.lang.Object[] objArray5 = shortList0.toArray();
        shortList0.ensureCapacity(16);
        java.io.OutputStream outputStream8 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder9 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream8);
        try {
            shortList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265079L + "'", long4.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray5);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Long) 4294967295L);
        java.lang.Long long2 = union1.getLongValue();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = union1.getAreaVersion();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            union1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 4294967295L + "'", long2.equals(4294967295L));
        org.junit.Assert.assertNotNull(uOctet3);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        try {
            esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((-18));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -18");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = floatList0.getServiceNumber();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.Element element14 = uShort8.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
        org.ccsds.moims.mo.mal.structures.ULong uLong15 = binaryDecoder13.decodeNullableULong();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort16 = binaryDecoder13.decodeUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNull(uLong15);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = org.ccsds.moims.mo.mal.structures.IntegerList.AREA_VERSION;
        try {
            binaryEncoder1.encodeNullableUOctet(uOctet2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        shortList0.ensureCapacity((int) (byte) 0);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity8 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str9 = networkHolderEntity8.getNetworkString();
        int int10 = shortList0.lastIndexOf((java.lang.Object) networkHolderEntity8);
        java.lang.String str11 = networkHolderEntity8.getNetworkString();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[0, 10]" + "'", str9.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[0, 10]" + "'", str11.equals("[0, 10]"));
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.Element element13 = blob12.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = blob12.getAreaVersion();
        java.io.OutputStream outputStream15 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder16 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream15);
        try {
            blob12.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(uOctet14);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList3 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream4 = integerList3.parallelStream();
        integerList3.ensureCapacity((int) 'a');
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
        boolean boolean18 = byteList15.add((java.lang.Byte) (byte) 100);
        boolean boolean19 = uRIList8.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        int int21 = uRIList8.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray26 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList27 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList27, byteArray26);
        boolean boolean30 = byteList27.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray35 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList36 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList36, byteArray35);
        boolean boolean39 = byteList36.add((java.lang.Byte) (byte) 100);
        boolean boolean40 = byteList27.addAll((java.util.Collection<java.lang.Byte>) byteList36);
        int int42 = byteList36.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean43 = uRIList8.removeAll((java.util.Collection<java.lang.Byte>) byteList36);
        java.lang.Byte byte45 = byteList36.get(0);
        boolean boolean46 = integerList3.retainAll((java.util.Collection<java.lang.Byte>) byteList36);
        try {
            org.ccsds.moims.mo.mal.MALListEncoder mALListEncoder47 = binaryEncoder1.createListEncoder((java.util.List) integerList3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + byte45 + "' != '" + (byte) -1 + "'", byte45.equals((byte) -1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) '#');
        org.ccsds.moims.mo.mal.structures.UInteger uInteger2 = archiveSyncGenAdapter1.getLastKnownIndex();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        try {
            uInteger2.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uInteger2);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeBoolean((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject2 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject2.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = null;
        eventCOMObject2.setNetworkZone(identifier5);
        org.ccsds.moims.mo.mal.structures.URI uRI7 = eventCOMObject2.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject8.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier10 = eventCOMObject8.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject11 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject11.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType16 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription17 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType16);
        eventCOMObject11.setObjType(objectType16);
        java.lang.Long long19 = eventCOMObject11.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId20 = eventCOMObject11.getObjectId();
        eventCOMObject8.setSource(objectId20);
        org.ccsds.moims.mo.mal.structures.Time time22 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int23 = time22.getTypeShortForm();
        eventCOMObject8.setTimestamp(time22);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = time22.getAreaVersion();
        java.lang.String str26 = time22.toString();
        eventCOMObject2.setTimestamp(time22);
        try {
            binaryEncoder1.encodeNullableTime(time22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertNull(objectId9);
        org.junit.Assert.assertNull(identifier10);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 4294967295L + "'", long19.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 16 + "'", int23.equals(16));
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "0" + "'", str26.equals("0"));
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList8 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        boolean boolean21 = byteList18.add((java.lang.Byte) (byte) 100);
        boolean boolean22 = uRIList11.containsAll((java.util.Collection<java.lang.Byte>) byteList18);
        boolean boolean23 = intList8.removeAll((java.util.Collection<java.lang.Byte>) byteList18);
        org.ccsds.moims.mo.mal.structures.Union union25 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        int int26 = byteList18.lastIndexOf((java.lang.Object) union25);
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = union25.getServiceNumber();
        java.io.OutputStream outputStream28 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder29 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream28);
        try {
            uShort27.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(uShort27);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.lang.Integer int2 = uLong1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.Element element4 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uLong1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element6 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.URI uRI8 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str9 = uRI8.toString();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        java.lang.Integer int16 = binaryDecoder15.decodeInteger();
        int int18 = binaryDecoder15.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Element element19 = uRI8.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
        try {
            org.ccsds.moims.mo.mal.structures.Element element20 = uLong1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 14 + "'", int2.equals(14));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16.equals(50));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(element19);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = binaryDecoder4.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute6 = binaryDecoder4.decodeNullableAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet5);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject2 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI4 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject2.setSourceURI(uRI4);
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = uRI4.getServiceNumber();
        try {
            binaryEncoder1.encodeURI(uRI4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort6);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = union1.getAreaVersion();
        java.lang.String str3 = union1.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = union1.getAreaNumber();
        java.lang.Long long5 = union1.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element6 = union1.createElement();
        org.ccsds.moims.mo.mal.structures.URI uRI8 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = uRI8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uRI8.getServiceNumber();
        byte[] byteArray14 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14, 6);
        boolean boolean18 = uShort10.equals((java.lang.Object) binaryDecoder17);
        try {
            org.ccsds.moims.mo.mal.structures.Element element19 = union1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "true" + "'", str3.equals("true"));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281474993487874L + "'", long5.equals(281474993487874L));
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Duration duration3 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        try {
            binaryEncoder1.encodeDuration(duration3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = blob9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int13 = floatList11.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int14 = floatList11.getTypeShortForm();
        boolean boolean15 = floatList11.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator16 = floatList11.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = floatList11.getServiceNumber();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = uShort19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.LongList longList27 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray28 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList29, uRIArray28);
        java.lang.Byte[] byteArray35 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList36 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList36, byteArray35);
        boolean boolean39 = byteList36.add((java.lang.Byte) (byte) 100);
        boolean boolean40 = uRIList29.containsAll((java.util.Collection<java.lang.Byte>) byteList36);
        byteList36.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean44 = longList27.removeAll((java.util.Collection<java.lang.Byte>) byteList36);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet45 = longList27.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet46 = longList27.getAreaVersion();
        try {
            org.ccsds.moims.mo.mal.structures.Element element47 = binaryDecoder24.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) longList27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-4) + "'", int14.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(floatSpliterator16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(uRIArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(uOctet45);
        org.junit.Assert.assertNotNull(uOctet46);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableShort((java.lang.Short) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Float float35 = floatList6.remove(2);
        byte[] byteArray39 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder41 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet42 = binaryDecoder41.decodeNullableUOctet();
        int int43 = floatList6.lastIndexOf((java.lang.Object) binaryDecoder41);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort44 = binaryDecoder41.decodeNullableUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + (-1.0f) + "'", float35.equals((-1.0f)));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(uOctet42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        org.ccsds.moims.mo.com.structures.ObjectId objectId8 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType9 = eventCOMObject0.getObjType();
        org.ccsds.moims.mo.mal.structures.URI uRI10 = eventCOMObject0.getSourceURI();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertNull(objectId8);
        org.junit.Assert.assertNotNull(objectType9);
        org.junit.Assert.assertNull(uRI10);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        doubleList0.clear();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList0.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream3 = doubleList0.parallelStream();
        java.lang.Long[] longArray11 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
        java.lang.Object obj14 = longList12.clone();
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Object obj38 = byteList24.clone();
        boolean boolean39 = booleanList17.contains((java.lang.Object) byteList24);
        boolean boolean40 = longList12.remove((java.lang.Object) boolean39);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        int int50 = longList12.lastIndexOf((java.lang.Object) byteList46);
        int int51 = longList12.size();
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder56 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray55);
        java.lang.Double double57 = binaryDecoder56.decodeNullableDouble();
        byte[] byteArray58 = binaryDecoder56.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob59 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray58);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.lang.Long[] longArray72 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList73 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList73, longArray72);
        java.lang.Object obj75 = longList73.clone();
        int int76 = strList63.indexOf((java.lang.Object) longList73);
        java.util.ListIterator<java.lang.String> strItor77 = strList63.listIterator();
        java.lang.String str78 = strList63.toString();
        java.lang.Double[] doubleArray81 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList82 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList82, doubleArray81);
        java.lang.String[] strArray86 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        int int89 = strList87.size();
        boolean boolean90 = doubleList82.equals((java.lang.Object) strList87);
        boolean boolean91 = strList63.remove((java.lang.Object) strList87);
        boolean boolean92 = blob59.equals((java.lang.Object) strList87);
        org.ccsds.moims.mo.mal.structures.UShort uShort93 = blob59.getServiceNumber();
        int int94 = longList12.lastIndexOf((java.lang.Object) uShort93);
        boolean boolean95 = doubleList0.contains((java.lang.Object) uShort93);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(doubleStream3);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7 + "'", int51 == 7);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals((double) double57, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strItor77);
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "[hi!, ]" + "'", str78.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertNotNull(uShort93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", !boolean95);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Duration duration23 = binaryDecoder21.decodeDuration();
        int int24 = integerList1.lastIndexOf((java.lang.Object) binaryDecoder21);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob25 = binaryDecoder21.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Size must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Time time2 = null;
        try {
            binaryEncoder1.encodeTime(time2);
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Null value supplied in a non-nullable field");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        java.lang.Double double6 = binaryDecoder5.decodeNullableDouble();
        byte[] byteArray7 = binaryDecoder5.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Element element8 = identifier0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals((double) double6, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray7);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str2 = uRI1.toString();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Integer int9 = binaryDecoder8.decodeInteger();
        int int11 = binaryDecoder8.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Element element12 = uRI1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        try {
            java.lang.Long long13 = binaryDecoder8.decodeLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9.equals(50));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(element12);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = floatList0.getServiceNumber();
        int int8 = floatList0.lastIndexOf((java.lang.Object) (-11));
        java.lang.String str9 = floatList0.toString();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList0.stream();
        java.util.Iterator<java.lang.Float> floatItor11 = floatList0.iterator();
        java.lang.Integer int12 = floatList0.getTypeShortForm();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.lang.Long[] longArray25 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList26 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList26, longArray25);
        java.lang.Object obj28 = longList26.clone();
        int int29 = strList16.indexOf((java.lang.Object) longList26);
        java.util.ListIterator<java.lang.String> strItor30 = strList16.listIterator();
        java.lang.String str31 = strList16.toString();
        byte[] byteArray35 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet38 = binaryDecoder37.decodeNullableUOctet();
        java.lang.Long long39 = uOctet38.getShortForm();
        short short40 = uOctet38.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort41 = uOctet38.getServiceNumber();
        boolean boolean42 = strList16.remove((java.lang.Object) uShort41);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray43 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList44 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList44, uRIArray43);
        java.lang.Byte[] byteArray50 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList51 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList51, byteArray50);
        boolean boolean54 = byteList51.add((java.lang.Byte) (byte) 100);
        boolean boolean55 = uRIList44.containsAll((java.util.Collection<java.lang.Byte>) byteList51);
        int int57 = uRIList44.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList63 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList63, byteArray62);
        boolean boolean66 = byteList63.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray71 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList72 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList72, byteArray71);
        boolean boolean75 = byteList72.add((java.lang.Byte) (byte) 100);
        boolean boolean76 = byteList63.addAll((java.util.Collection<java.lang.Byte>) byteList72);
        int int78 = byteList72.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean79 = uRIList44.removeAll((java.util.Collection<java.lang.Byte>) byteList72);
        boolean boolean80 = strList16.removeAll((java.util.Collection<java.lang.Byte>) byteList72);
        boolean boolean81 = floatList0.retainAll((java.util.Collection<java.lang.Byte>) byteList72);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList83 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort84 = doubleList83.getAreaNumber();
        java.lang.Object obj85 = doubleList83.clone();
        byte[] byteArray89 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder90 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder91 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet92 = binaryDecoder91.decodeNullableUOctet();
        int int93 = doubleList83.lastIndexOf((java.lang.Object) binaryDecoder91);
        byte[] byteArray94 = binaryDecoder91.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Element element95 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]" + "'", str9.equals("[]"));
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNotNull(floatItor11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-4) + "'", int12.equals((-4)));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "[hi!, ]" + "'", str31.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertNotNull(uOctet38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 281474993487880L + "'", long39.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short40 + "' != '" + (short) 127 + "'", short40 == (short) 127);
        org.junit.Assert.assertNotNull(uShort41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(uRIArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertNotNull(uShort84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertNotNull(uOctet92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(byteArray94);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = floatList0.getAreaVersion();
        java.io.OutputStream outputStream6 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder7 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream6);
        try {
            floatList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(uOctet5);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        java.lang.Long long2 = union1.getShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList3 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element4 = booleanList3.createElement();
        boolean boolean6 = booleanList3.add((java.lang.Boolean) true);
        boolean boolean8 = booleanList3.remove((java.lang.Object) 281474993487884L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = booleanList3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Union union11 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        int int12 = booleanList3.lastIndexOf((java.lang.Object) (-1.0d));
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = booleanList3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = booleanList3.getServiceNumber();
        java.lang.Object obj15 = booleanList3.clone();
        boolean boolean16 = union1.equals((java.lang.Object) booleanList3);
        booleanList3.clear();
        java.lang.Integer int18 = booleanList3.getTypeShortForm();
        java.io.OutputStream outputStream19 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder20 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream19);
        try {
            booleanList3.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487874L + "'", long2.equals(281474993487874L));
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-2) + "'", int18.equals((-2)));
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList2 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = integerList2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = integerList2.getAreaNumber();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Element element10 = uShort4.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeNullableTime();
        try {
            binaryEncoder1.encodeTime(time11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(time11);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        org.ccsds.moims.mo.mal.structures.OctetList octetList8 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList8.getServiceNumber();
        boolean boolean10 = doubleList6.containsAll((java.util.Collection<java.lang.Byte>) octetList8);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList15 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList15, shortArray14);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray22 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList23, uRIArray22);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        boolean boolean34 = uRIList23.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean35 = strList20.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean36 = shortList15.contains((java.lang.Object) byteList30);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray37 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList38 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList38, uRIArray37);
        java.lang.Byte[] byteArray44 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList45 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList45, byteArray44);
        boolean boolean48 = byteList45.add((java.lang.Byte) (byte) 100);
        boolean boolean49 = uRIList38.containsAll((java.util.Collection<java.lang.Byte>) byteList45);
        boolean boolean50 = byteList45.isEmpty();
        boolean boolean51 = shortList15.containsAll((java.util.Collection<java.lang.Byte>) byteList45);
        java.util.stream.Stream<java.lang.Short> shortStream52 = shortList15.parallelStream();
        boolean boolean53 = doubleList6.equals((java.lang.Object) shortStream52);
        java.util.stream.Stream<java.lang.Double> doubleStream54 = doubleList6.stream();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject55 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI57 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject55.setSourceURI(uRI57);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject59 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI61 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject59.setSourceURI(uRI61);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray63 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI57, uRI61 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList64 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList64, uRIArray63);
        boolean boolean67 = uRIList64.remove((java.lang.Object) 1.0f);
        boolean boolean68 = doubleList6.remove((java.lang.Object) uRIList64);
        try {
            java.lang.Double double70 = doubleList6.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(uRIArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(uRIArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(shortStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(doubleStream54);
        org.junit.Assert.assertNotNull(uRIArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        boolean boolean21 = byteList8.addAll((java.util.Collection<java.lang.Byte>) byteList17);
        int int23 = byteList17.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean24 = uRIList1.retainAll((java.util.Collection<java.lang.Byte>) byteList17);
        uRIList1.trimToSize();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject27 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI29 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject27.setSourceURI(uRI29);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet31 = uRI29.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = uRI29.getServiceNumber();
        try {
            uRIList1.add(8, uRI29);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(uOctet31);
        org.junit.Assert.assertNotNull(uShort32);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        java.lang.Long long4 = shortList0.getShortForm();
        java.lang.Object[] objArray5 = shortList0.toArray();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = shortList0.getAreaVersion();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime12 = binaryDecoder11.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList13 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int14 = uRIList13.size();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList23 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = uRIList26.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean38 = intList23.removeAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean39 = uRIList13.removeAll((java.util.Collection<java.lang.Byte>) byteList33);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder40 = binaryDecoder11.createListDecoder((java.util.List) byteList33);
        try {
            org.ccsds.moims.mo.mal.structures.Element element41 = uOctet6.decode((org.ccsds.moims.mo.mal.MALDecoder) mALListDecoder40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265079L + "'", long4.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(fineTime12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(mALListDecoder40);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime2 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = fineTime2.getAreaVersion();
        java.lang.Long long4 = uOctet3.getShortForm();
        try {
            binaryEncoder1.encodeUOctet(uOctet3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487880L + "'", long4.equals(281474993487880L));
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        boolean boolean21 = byteList8.addAll((java.util.Collection<java.lang.Byte>) byteList17);
        int int23 = byteList17.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean24 = uRIList1.retainAll((java.util.Collection<java.lang.Byte>) byteList17);
        java.lang.Double[] doubleArray26 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList27 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList27, doubleArray26);
        java.lang.Short[] shortArray31 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList32 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList32, shortArray31);
        java.util.ListIterator<java.lang.Short> shortItor34 = shortList32.listIterator();
        int int35 = doubleList27.indexOf((java.lang.Object) shortList32);
        org.ccsds.moims.mo.mal.structures.Blob blob36 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean37 = blob36.isURLBased();
        byte[] byteArray41 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder42 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray41);
        org.ccsds.moims.mo.mal.structures.Element element43 = blob36.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder42);
        boolean boolean44 = doubleList27.contains((java.lang.Object) blob36);
        java.util.ListIterator<java.lang.Double> doubleItor46 = doubleList27.listIterator(1);
        doubleList27.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray48 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList49 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList49, uShortArray48);
        uShortList49.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet52 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element53 = uOctet52.createElement();
        int int54 = uShortList49.indexOf((java.lang.Object) element53);
        boolean boolean56 = uShortList49.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor57 = uShortList49.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean59 = uShortList49.add(uShort58);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray73 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList74 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList74, byteArray73);
        boolean boolean77 = byteList74.add((java.lang.Byte) (byte) 100);
        boolean boolean78 = byteList65.addAll((java.util.Collection<java.lang.Byte>) byteList74);
        java.lang.Object obj79 = byteList65.clone();
        boolean boolean80 = uShortList49.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean81 = doubleList27.retainAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean82 = uRIList1.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        java.math.BigInteger bigInteger83 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong84 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger83);
        java.lang.Integer int85 = uLong84.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element86 = uLong84.createElement();
        org.ccsds.moims.mo.mal.structures.Element element87 = uLong84.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort88 = uLong84.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet89 = uLong84.getAreaVersion();
        int int90 = byteList65.indexOf((java.lang.Object) uOctet89);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(shortItor34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(doubleItor46);
        org.junit.Assert.assertNotNull(uShortArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertNotNull(uOctet52);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(uShortItor57);
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
        org.junit.Assert.assertNotNull(bigInteger83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 14 + "'", int85.equals(14));
        org.junit.Assert.assertNotNull(element86);
        org.junit.Assert.assertNotNull(element87);
        org.junit.Assert.assertNotNull(uShort88);
        org.junit.Assert.assertNotNull(uOctet89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity2 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((int) (byte) 100, (java.lang.Long) 281474993487885L);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.URI uRI3 = new org.ccsds.moims.mo.mal.structures.URI("[-1, -1, -1, -1, 100]");
        java.lang.String str4 = uRI3.toString();
        try {
            binaryEncoder1.encodeNullableURI(uRI3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "[-1, -1, -1, -1, 100]" + "'", str4.equals("[-1, -1, -1, -1, 100]"));
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(1);
        java.lang.Class<?> wildcardClass2 = doubleList1.getClass();
        java.util.ListIterator<java.lang.Double> doubleItor3 = doubleList1.listIterator();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            doubleList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(doubleItor3);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        java.util.ListIterator<java.lang.Float> floatItor6 = floatList4.listIterator();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = binaryDecoder12.decodeNullableUOctet();
        java.lang.Long long14 = uOctet13.getShortForm();
        int int15 = floatList4.indexOf((java.lang.Object) long14);
        int int16 = floatList4.size();
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(floatItor6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 281474993487880L + "'", long14.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uLong1.getAreaVersion();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        try {
            uLong1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(uOctet2);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeShort((java.lang.Short) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        org.ccsds.moims.mo.mal.structures.OctetList octetList34 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = octetList34.getServiceNumber();
        boolean boolean36 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) octetList34);
        java.math.BigInteger bigInteger37 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong38 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger37);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet39 = uLong38.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity42 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long43 = objectTypeHolderEntity42.getObjectType();
        boolean boolean44 = uLong38.equals((java.lang.Object) long43);
        boolean boolean45 = booleanList10.remove((java.lang.Object) long43);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.lang.Long[] longArray58 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList59 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList59, longArray58);
        java.lang.Object obj61 = longList59.clone();
        int int62 = strList49.indexOf((java.lang.Object) longList59);
        java.lang.Byte[] byteArray67 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList68 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList68, byteArray67);
        boolean boolean71 = byteList68.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray76 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList77 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList77, byteArray76);
        boolean boolean80 = byteList77.add((java.lang.Byte) (byte) 100);
        boolean boolean81 = byteList68.addAll((java.util.Collection<java.lang.Byte>) byteList77);
        java.lang.Object obj82 = byteList68.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream83 = byteList68.stream();
        boolean boolean84 = strList49.retainAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean85 = booleanList10.removeAll((java.util.Collection<java.lang.Byte>) byteList68);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(uShort35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(bigInteger37);
        org.junit.Assert.assertNotNull(uOctet39);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 281474993487879L + "'", long43.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(byteStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", !boolean85);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.FloatList floatList2 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int4 = floatList2.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int5 = floatList2.getTypeShortForm();
        boolean boolean6 = floatList2.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator7 = floatList2.spliterator();
        java.lang.Integer int8 = floatList2.getTypeShortForm();
        boolean boolean9 = floatList2.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = floatList2.getAreaVersion();
        try {
            binaryEncoder1.encodeUOctet(uOctet10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-4) + "'", int5.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(floatSpliterator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-4) + "'", int8.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uOctet10);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Float float35 = floatList6.remove(2);
        byte[] byteArray39 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder41 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet42 = binaryDecoder41.decodeNullableUOctet();
        int int43 = floatList6.lastIndexOf((java.lang.Object) binaryDecoder41);
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger44 = binaryDecoder41.decodeNullableUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + (-1.0f) + "'", float35.equals((-1.0f)));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(uOctet42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.lang.Long[] longArray16 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList17 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList17, longArray16);
        java.lang.Object obj19 = longList17.clone();
        int int20 = strList7.indexOf((java.lang.Object) longList17);
        java.util.ListIterator<java.lang.String> strItor21 = strList7.listIterator();
        java.lang.Short[] shortArray25 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList26 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList26, shortArray25);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray33 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList34, uRIArray33);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        boolean boolean45 = uRIList34.containsAll((java.util.Collection<java.lang.Byte>) byteList41);
        boolean boolean46 = strList31.containsAll((java.util.Collection<java.lang.Byte>) byteList41);
        boolean boolean47 = shortList26.contains((java.lang.Object) byteList41);
        boolean boolean48 = strList7.removeAll((java.util.Collection<java.lang.Byte>) byteList41);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList63 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList63, byteArray62);
        boolean boolean66 = byteList63.add((java.lang.Byte) (byte) 100);
        boolean boolean67 = byteList54.addAll((java.util.Collection<java.lang.Byte>) byteList63);
        boolean boolean68 = byteList41.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        org.ccsds.moims.mo.mal.structures.URI uRI70 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet71 = uRI70.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort72 = uRI70.getServiceNumber();
        byte[] byteArray76 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder77 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76, 6);
        boolean boolean80 = uShort72.equals((java.lang.Object) binaryDecoder79);
        int int81 = byteList63.indexOf((java.lang.Object) boolean80);
        boolean boolean82 = floatList0.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        org.ccsds.moims.mo.mal.structures.UShort uShort83 = floatList0.getServiceNumber();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(uRIArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertNotNull(uOctet71);
        org.junit.Assert.assertNotNull(uShort72);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
        org.junit.Assert.assertNotNull(uShort83);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str2 = uRI1.toString();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Integer int9 = binaryDecoder8.decodeInteger();
        int int11 = binaryDecoder8.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Element element12 = uRI1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger13 = binaryDecoder8.decodeNullableUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9.equals(50));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(element12);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = binaryDecoder8.decodeUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        try {
            java.lang.Integer int7 = binaryDecoder4.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        boolean boolean13 = byteList8.isEmpty();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        int int19 = intList16.lastIndexOf((java.lang.Object) 0.0f);
        int int20 = byteList8.lastIndexOf((java.lang.Object) intList16);
        java.lang.String str21 = intList16.toString();
        org.ccsds.moims.mo.mal.structures.URIList uRIList22 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int23 = uRIList22.getTypeShortForm();
        java.lang.Integer int24 = uRIList22.getTypeShortForm();
        java.lang.Object obj25 = uRIList22.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream26 = uRIList22.stream();
        int int27 = intList16.lastIndexOf((java.lang.Object) uRIList22);
        java.io.OutputStream outputStream28 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder29 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream28);
        try {
            uRIList22.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[10]" + "'", str21.equals("[10]"));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-18) + "'", int23.equals((-18)));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-18) + "'", int24.equals((-18)));
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(uRIStream26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject7 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId8 = eventCOMObject7.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = eventCOMObject7.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject10 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject10.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType15 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription16 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType15);
        eventCOMObject10.setObjType(objectType15);
        java.lang.Long long18 = eventCOMObject10.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId19 = eventCOMObject10.getObjectId();
        eventCOMObject7.setSource(objectId19);
        org.ccsds.moims.mo.mal.structures.Time time21 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int22 = time21.getTypeShortForm();
        eventCOMObject7.setTimestamp(time21);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet24 = time21.getAreaVersion();
        try {
            org.ccsds.moims.mo.mal.structures.Element element25 = binaryDecoder4.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uOctet24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNull(objectId8);
        org.junit.Assert.assertNull(identifier9);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 4294967295L + "'", long18.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 16 + "'", int22.equals(16));
        org.junit.Assert.assertNotNull(uOctet24);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.Object obj20 = doubleList2.clone();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList34 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList34, longArray33);
        java.lang.Object obj36 = longList34.clone();
        int int37 = strList24.indexOf((java.lang.Object) longList34);
        java.util.ListIterator<java.lang.String> strItor38 = strList24.listIterator();
        java.lang.String str39 = strList24.toString();
        java.lang.Object[] objArray40 = strList24.toArray();
        boolean boolean41 = doubleList2.contains((java.lang.Object) strList24);
        java.lang.String str42 = strList24.toString();
        int int43 = strList24.size();
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList46 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList46, booleanArray45);
        java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53, byteArray52);
        boolean boolean56 = byteList53.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList62, byteArray61);
        boolean boolean65 = byteList62.add((java.lang.Byte) (byte) 100);
        boolean boolean66 = byteList53.addAll((java.util.Collection<java.lang.Byte>) byteList62);
        java.lang.Object obj67 = byteList53.clone();
        boolean boolean68 = booleanList46.contains((java.lang.Object) byteList53);
        boolean boolean69 = strList24.removeAll((java.util.Collection<java.lang.Byte>) byteList53);
        try {
            byteList53.add(11, (java.lang.Byte) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Size: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[hi!, ]" + "'", str39.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "[hi!, ]" + "'", str42.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str3 = identifier2.toString();
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong11 = binaryDecoder10.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean1 = blob0.isURLBased();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort8 = binaryDecoder6.decodeUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", !boolean1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Object obj3 = floatList0.clone();
        java.lang.Integer int4 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList6 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean8 = blob7.isURLBased();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.Element element14 = blob7.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
        boolean boolean15 = integerList6.equals((java.lang.Object) binaryDecoder13);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = integerList6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList17 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int18 = uRIList17.getTypeShortForm();
        java.lang.Integer int19 = uRIList17.getTypeShortForm();
        java.lang.Object obj20 = uRIList17.clone();
        byte[] byteArray24 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder25 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray24);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder26 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray24);
        int int27 = uRIList17.lastIndexOf((java.lang.Object) binaryDecoder26);
        org.ccsds.moims.mo.mal.structures.Duration duration28 = binaryDecoder26.decodeDuration();
        int int29 = integerList6.lastIndexOf((java.lang.Object) binaryDecoder26);
        java.lang.String str30 = binaryDecoder26.decodeNullableString();
        try {
            org.ccsds.moims.mo.mal.structures.Element element31 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-4) + "'", int4.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-18) + "'", int18.equals((-18)));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-18) + "'", int19.equals((-18)));
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream3 = uShortList1.parallelStream();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream4 = uShortList1.stream();
        uShortList1.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream6 = uShortList1.stream();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        java.lang.Double double12 = binaryDecoder11.decodeNullableDouble();
        byte[] byteArray13 = binaryDecoder11.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = blob16.getAreaVersion();
        int int18 = uShortList1.indexOf((java.lang.Object) blob16);
        java.lang.Integer int19 = blob16.getTypeShortForm();
        org.ccsds.moims.mo.mal.MALEncoder mALEncoder20 = null;
        try {
            blob16.encode(mALEncoder20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uShortStream3);
        org.junit.Assert.assertNotNull(uShortStream4);
        org.junit.Assert.assertNotNull(uShortStream6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals((double) double12, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19.equals(1));
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Duration duration3 = new org.ccsds.moims.mo.mal.structures.Duration((double) (-1L));
        try {
            binaryEncoder1.encodeDuration(duration3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Time time12 = binaryDecoder9.decodeTime();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier13 = binaryDecoder9.decodeIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(time12);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.String str1 = fineTime0.toString();
        long long2 = fineTime0.getValue();
        java.lang.Integer int3 = fineTime0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Blob blob4 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean5 = blob4.isURLBased();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.Element element11 = blob4.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = fineTime0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0" + "'", str1.equals("0"));
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 17 + "'", int3.equals(17));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(element11);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Union union3 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = union3.getAreaVersion();
        java.lang.String str5 = union3.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = union3.getAreaNumber();
        try {
            binaryEncoder1.encodeNullableUShort(uShort6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "true" + "'", str5.equals("true"));
        org.junit.Assert.assertNotNull(uShort6);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) 18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.stream();
        java.util.stream.Stream<java.lang.String> strStream42 = strList35.stream();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList44 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort45 = doubleList44.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = doubleList44.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort47 = doubleList44.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream48 = doubleList44.parallelStream();
        boolean boolean49 = strList35.contains((java.lang.Object) doubleStream48);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertNotNull(uShort45);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertNotNull(uShort47);
        org.junit.Assert.assertNotNull(doubleStream48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean2 = dictionary0.exists((java.lang.Integer) 16);
        java.lang.Integer int4 = dictionary0.getWordId("[0, 10]");
        boolean boolean6 = dictionary0.exists("hi!");
        try {
            java.lang.String str8 = dictionary0.getWord((java.lang.Integer) (-11));
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: The word for the id: -11 is unknown!");
        } catch (java.lang.Exception e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4.equals(1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean64 = byteList37.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.ccsds.moims.mo.mal.structures.URIList uRIList65 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int66 = uRIList65.getTypeShortForm();
        java.lang.Integer int67 = uRIList65.getTypeShortForm();
        boolean boolean68 = byteList37.equals((java.lang.Object) uRIList65);
        java.lang.Integer int69 = uRIList65.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList70 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int71 = uRIList70.getTypeShortForm();
        java.lang.Integer int72 = uRIList70.getTypeShortForm();
        java.lang.Object obj73 = uRIList70.clone();
        byte[] byteArray77 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder78 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray77);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray77);
        int int80 = uRIList70.lastIndexOf((java.lang.Object) binaryDecoder79);
        org.ccsds.moims.mo.mal.structures.Time time81 = binaryDecoder79.decodeTime();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet82 = binaryDecoder79.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Element element83 = uRIList65.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-18) + "'", int66.equals((-18)));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-18) + "'", int69.equals((-18)));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-18) + "'", int71.equals((-18)));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-18) + "'", int72.equals((-18)));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(time81);
        org.junit.Assert.assertNotNull(uOctet82);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList2 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int3 = uRIList2.getTypeShortForm();
        java.lang.Integer int4 = uRIList2.getTypeShortForm();
        java.lang.Object obj5 = uRIList2.clone();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        int int12 = uRIList2.lastIndexOf((java.lang.Object) binaryDecoder11);
        org.ccsds.moims.mo.mal.structures.Time time13 = binaryDecoder11.decodeTime();
        org.ccsds.moims.mo.mal.structures.Duration duration14 = binaryDecoder11.decodeNullableDuration();
        try {
            binaryEncoder1.encodeDuration(duration14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(time13);
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        org.ccsds.moims.mo.mal.structures.LongList longList56 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byteList65.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean73 = longList56.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean74 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byte[] byteArray78 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray78);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime80 = binaryDecoder79.decodeFineTime();
        boolean boolean81 = booleanList10.remove((java.lang.Object) fineTime80);
        long long82 = fineTime80.getValue();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertNotNull(fineTime80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 100L + "'", long82 == 100L);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.math.BigInteger bigInteger2 = uLong1.getValue();
        java.lang.Integer int3 = uLong1.getTypeShortForm();
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        boolean boolean10 = uLong1.equals((java.lang.Object) shortItor9);
        java.io.OutputStream outputStream11 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder12 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream11);
        try {
            uLong1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 14 + "'", int3.equals(14));
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        java.lang.Integer int8 = blob0.getTypeShortForm();
        java.lang.String str9 = blob0.getURL();
        java.lang.Long long10 = blob0.getShortForm();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8.equals(1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487873L + "'", long10.equals(281474993487873L));
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        int int20 = blob11.getOffset();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = blob11.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime22 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.String str23 = fineTime22.toString();
        boolean boolean24 = blob11.equals((java.lang.Object) fineTime22);
        byte[] byteArray28 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder29 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray28);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger30 = binaryDecoder29.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element31 = fineTime22.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder29);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(uShort21);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "0" + "'", str23.equals("0"));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(uInteger30);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str2 = uRI1.toString();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Integer int9 = binaryDecoder8.decodeInteger();
        int int11 = binaryDecoder8.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Element element12 = uRI1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.URIList uRIList13 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int14 = uRIList13.getTypeShortForm();
        java.lang.Integer int15 = uRIList13.getTypeShortForm();
        boolean boolean16 = uRIList13.isEmpty();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray22 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList23, uRIArray22);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        boolean boolean34 = uRIList23.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean35 = strList20.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        java.util.Iterator<java.lang.String> strItor36 = strList20.iterator();
        int int37 = uRIList13.indexOf((java.lang.Object) strList20);
        int int38 = uRIList13.size();
        try {
            org.ccsds.moims.mo.mal.structures.Element element39 = binaryDecoder8.decodeElement((org.ccsds.moims.mo.mal.structures.Element) uRIList13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9.equals(50));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-18) + "'", int15.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(uRIArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Time time2 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int3 = time2.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element4 = time2.createElement();
        java.lang.Integer int5 = time2.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = time2.getServiceNumber();
        try {
            binaryEncoder1.encodeNullableTime(time2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 16 + "'", int3.equals(16));
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 16 + "'", int5.equals(16));
        org.junit.Assert.assertNotNull(uShort6);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.math.BigInteger bigInteger2 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong3 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger2);
        java.lang.Integer int4 = uLong3.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uLong3.getAreaNumber();
        try {
            binaryEncoder1.encodeNullableAttribute((org.ccsds.moims.mo.mal.structures.Attribute) uShort5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 14 + "'", int4.equals(14));
        org.junit.Assert.assertNotNull(uShort5);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Integer int12 = binaryDecoder9.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime13 = binaryDecoder9.decodeNullableFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12.equals(0));
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeShort((java.lang.Short) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.lang.Long[] longArray9 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList10 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList10, longArray9);
        java.lang.Object obj12 = longList10.clone();
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15, booleanArray14);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList31 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList31, byteArray30);
        boolean boolean34 = byteList31.add((java.lang.Byte) (byte) 100);
        boolean boolean35 = byteList22.addAll((java.util.Collection<java.lang.Byte>) byteList31);
        java.lang.Object obj36 = byteList22.clone();
        boolean boolean37 = booleanList15.contains((java.lang.Object) byteList22);
        boolean boolean38 = longList10.remove((java.lang.Object) boolean37);
        java.lang.Byte[] byteArray43 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList44 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList44, byteArray43);
        boolean boolean47 = byteList44.add((java.lang.Byte) (byte) 100);
        int int48 = longList10.lastIndexOf((java.lang.Object) byteList44);
        org.ccsds.moims.mo.mal.structures.OctetList octetList49 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = octetList49.getServiceNumber();
        boolean boolean51 = longList10.removeAll((java.util.Collection<java.lang.Byte>) octetList49);
        java.lang.Double[] doubleArray58 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList59 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList59, doubleArray58);
        org.ccsds.moims.mo.mal.structures.OctetList octetList61 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort62 = octetList61.getServiceNumber();
        boolean boolean63 = doubleList59.containsAll((java.util.Collection<java.lang.Byte>) octetList61);
        boolean boolean64 = octetList49.addAll(0, (java.util.Collection<java.lang.Byte>) octetList61);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet65 = octetList49.getAreaVersion();
        try {
            binaryEncoder1.encodeUOctet(uOctet65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(uShort62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(uOctet65);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList2 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int3 = uRIList2.getTypeShortForm();
        java.lang.Integer int4 = uRIList2.getTypeShortForm();
        java.lang.Object obj5 = uRIList2.clone();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        int int12 = uRIList2.lastIndexOf((java.lang.Object) binaryDecoder11);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger13 = binaryDecoder11.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = uInteger13.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = uInteger13.getServiceNumber();
        try {
            binaryEncoder1.encodeUInteger(uInteger13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(uInteger13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(uShort15);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.Identifier identifier4 = null;
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject4.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier7 = null;
        eventCOMObject4.setNetworkZone(identifier7);
        org.ccsds.moims.mo.mal.structures.URI uRI9 = eventCOMObject4.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList10 = eventCOMObject4.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject11 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject11.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier13 = eventCOMObject11.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject14 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject14.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType19 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription20 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType19);
        eventCOMObject14.setObjType(objectType19);
        java.lang.Long long22 = eventCOMObject14.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId23 = eventCOMObject14.getObjectId();
        eventCOMObject11.setSource(objectId23);
        eventCOMObject4.setSource(objectId23);
        org.ccsds.moims.mo.com.structures.ObjectId objectId26 = eventCOMObject4.getSource();
        try {
            binaryEncoder1.encodeElement((org.ccsds.moims.mo.mal.structures.Element) objectId26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNull(identifierList10);
        org.junit.Assert.assertNull(objectId12);
        org.junit.Assert.assertNull(identifier13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 4294967295L + "'", long22.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId23);
        org.junit.Assert.assertNotNull(objectId26);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        java.lang.Long long8 = uOctet6.getShortForm();
        short short9 = uOctet6.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uOctet6.getAreaNumber();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short9 + "' != '" + (short) 127 + "'", short9 == (short) 127);
        org.junit.Assert.assertNotNull(uShort10);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        stringList1.ensureCapacity((-15));
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = stringList1.getServiceNumber();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        try {
            org.ccsds.moims.mo.mal.structures.Element element10 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(byteArray8);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute13 = binaryDecoder9.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        org.ccsds.moims.mo.mal.structures.Element element2 = uShortList1.createElement();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        byte byte6 = binaryEncoder4.internalEncodeAttributeType((byte) 100);
        try {
            uShortList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6 == (byte) 100);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Time time13 = binaryDecoder9.decodeNullableTime();
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime14 = binaryDecoder9.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12.equals((byte) -1));
        org.junit.Assert.assertNull(time13);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.math.BigInteger bigInteger2 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong3 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger2);
        java.math.BigInteger bigInteger4 = uLong3.getValue();
        try {
            binaryEncoder1.encodeNullableULong(uLong3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertNotNull(bigInteger4);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = octetList0.getServiceNumber();
        java.util.stream.Stream<java.lang.Byte> byteStream2 = octetList0.parallelStream();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        byte byte6 = binaryEncoder4.internalEncodeAttributeType((byte) 100);
        try {
            octetList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(byteStream2);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6 == (byte) 100);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = floatList0.getServiceNumber();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.Element element14 = uShort8.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
        org.ccsds.moims.mo.mal.structures.ULong uLong15 = binaryDecoder13.decodeNullableULong();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier16 = binaryDecoder13.decodeNullableIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNull(uLong15);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (short) 1);
        try {
            java.lang.Long long10 = binaryDecoder9.decodeNullableLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger5 = binaryDecoder4.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute6 = binaryDecoder4.decodeNullableAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger5);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        java.lang.Object[] objArray4 = shortList0.toArray();
        java.lang.Long long5 = shortList0.getShortForm();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject6.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType11 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription12 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType11);
        eventCOMObject6.setObjType(objectType11);
        java.lang.Long long14 = eventCOMObject6.getObjId();
        boolean boolean15 = shortList0.contains((java.lang.Object) eventCOMObject6);
        java.lang.Long long16 = eventCOMObject6.getRelated();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265079L + "'", long5.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 4294967295L + "'", long14.equals(4294967295L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNull(long16);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = new org.ccsds.moims.mo.mal.structures.Identifier("100");
        try {
            binaryEncoder1.encodeIdentifier(identifier3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.stream();
        java.util.stream.Stream<java.lang.String> strStream42 = strList35.stream();
        java.util.stream.Stream<java.lang.String> strStream43 = strList35.parallelStream();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertNotNull(strStream43);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime2 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.String str3 = fineTime2.toString();
        long long4 = fineTime2.getValue();
        try {
            binaryEncoder1.encodeFineTime(fineTime2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0" + "'", str3.equals("0"));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList((int) (short) 10);
        java.lang.Long long2 = uRIList1.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList3 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = integerList3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = integerList3.getAreaNumber();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.Element element11 = uShort5.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
        org.ccsds.moims.mo.mal.structures.Time time12 = binaryDecoder10.decodeNullableTime();
        try {
            org.ccsds.moims.mo.mal.structures.Element element13 = uRIList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265070L + "'", long2.equals(281475010265070L));
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(time12);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        java.util.List list13 = null;
        try {
            org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder14 = binaryDecoder9.createListDecoder(list13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        java.lang.Long long8 = uOctet6.getShortForm();
        short short9 = uOctet6.getValue();
        java.lang.Long long10 = uOctet6.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = uOctet6.getAreaNumber();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = binaryDecoder16.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Element element18 = uShort11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short9 + "' != '" + (short) 127 + "'", short9 == (short) 127);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487880L + "'", long10.equals(281474993487880L));
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(uOctet17);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList6 = eventCOMObject0.getDomain();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.URI uRI9 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.Integer int10 = uRI9.getTypeShortForm();
        eventCOMObject0.setSourceURI(uRI9);
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = uRI9.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(identifierList6);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 18 + "'", int10.equals(18));
        org.junit.Assert.assertNotNull(byteArray15);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.math.BigInteger bigInteger2 = uLong1.getValue();
        org.ccsds.moims.mo.mal.structures.Element element3 = uLong1.createElement();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            uLong1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertNotNull(element3);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.Object obj20 = doubleList2.clone();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList34 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList34, longArray33);
        java.lang.Object obj36 = longList34.clone();
        int int37 = strList24.indexOf((java.lang.Object) longList34);
        java.util.ListIterator<java.lang.String> strItor38 = strList24.listIterator();
        java.lang.String str39 = strList24.toString();
        java.lang.Object[] objArray40 = strList24.toArray();
        boolean boolean41 = doubleList2.contains((java.lang.Object) strList24);
        java.lang.String str42 = strList24.toString();
        int int43 = strList24.size();
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList46 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList46, booleanArray45);
        java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53, byteArray52);
        boolean boolean56 = byteList53.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList62, byteArray61);
        boolean boolean65 = byteList62.add((java.lang.Byte) (byte) 100);
        boolean boolean66 = byteList53.addAll((java.util.Collection<java.lang.Byte>) byteList62);
        java.lang.Object obj67 = byteList53.clone();
        boolean boolean68 = booleanList46.contains((java.lang.Object) byteList53);
        boolean boolean69 = strList24.removeAll((java.util.Collection<java.lang.Byte>) byteList53);
        try {
            java.util.ListIterator<java.lang.String> strItor71 = strList24.listIterator((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[hi!, ]" + "'", str39.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "[hi!, ]" + "'", str42.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime4 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = fineTime4.getServiceNumber();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        java.lang.Double double11 = binaryDecoder10.decodeNullableDouble();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        boolean boolean13 = fineTime4.equals((java.lang.Object) byteArray12);
        try {
            binaryEncoder1.encodeNullableFineTime(fineTime4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals((double) double11, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        longList8.ensureCapacity((int) '4');
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity15 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((int) (byte) 0, "hi!");
        boolean boolean16 = longList8.remove((java.lang.Object) (byte) 0);
        try {
            java.util.ListIterator<java.lang.Long> longItor18 = longList8.listIterator(13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 13");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = binaryDecoder9.decodeNullableUOctet();
        try {
            java.lang.Integer int13 = binaryDecoder9.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertNotNull(uOctet12);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (short) 1);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList11 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = doubleList11.getAreaVersion();
        java.util.stream.Stream<java.lang.Double> doubleStream13 = doubleList11.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = doubleList11.getServiceNumber();
        try {
            org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder15 = binaryDecoder9.createListDecoder((java.util.List) doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertNotNull(doubleStream13);
        org.junit.Assert.assertNotNull(uShort14);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Long) 4294967295L);
        java.lang.Long long2 = union1.getLongValue();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Integer int9 = binaryDecoder8.decodeInteger();
        java.lang.Double double10 = binaryDecoder8.decodeDouble();
        try {
            org.ccsds.moims.mo.mal.structures.Element element11 = union1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 4294967295L + "'", long2.equals(4294967295L));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9.equals(50));
        org.junit.Assert.assertEquals((double) double10, Double.NaN, 0);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRIList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRIList0.getAreaNumber();
        uRIList0.clear();
        java.io.OutputStream outputStream6 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder7 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream6);
        try {
            uRIList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeString("[-1, -1, -1, -1, 100]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) (-11));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.Element element14 = null;
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = binaryDecoder13.decodeNullableElement(element14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int1 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element2 = time0.createElement();
        java.lang.Integer int3 = time0.getTypeShortForm();
        java.lang.Long long4 = time0.getShortForm();
        java.lang.Integer int5 = time0.getTypeShortForm();
        java.io.OutputStream outputStream6 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder7 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream6);
        try {
            time0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 16 + "'", int1.equals(16));
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 16 + "'", int3.equals(16));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487888L + "'", long4.equals(281474993487888L));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 16 + "'", int5.equals(16));
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
        uShortList2.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element6 = uOctet5.createElement();
        int int7 = uShortList2.indexOf((java.lang.Object) element6);
        boolean boolean8 = booleanList0.contains((java.lang.Object) uShortList2);
        java.lang.Long long9 = booleanList0.getShortForm();
        java.io.OutputStream outputStream10 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder11 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream10);
        try {
            booleanList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265086L + "'", long9.equals(281475010265086L));
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl2 = cOMServicesConsumer0.getArchiveService();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl2);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        org.ccsds.moims.mo.mal.structures.OctetList octetList8 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList8.getServiceNumber();
        boolean boolean10 = doubleList6.containsAll((java.util.Collection<java.lang.Byte>) octetList8);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList15 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList15, shortArray14);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray22 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList23, uRIArray22);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        boolean boolean34 = uRIList23.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean35 = strList20.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean36 = shortList15.contains((java.lang.Object) byteList30);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray37 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList38 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList38, uRIArray37);
        java.lang.Byte[] byteArray44 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList45 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList45, byteArray44);
        boolean boolean48 = byteList45.add((java.lang.Byte) (byte) 100);
        boolean boolean49 = uRIList38.containsAll((java.util.Collection<java.lang.Byte>) byteList45);
        boolean boolean50 = byteList45.isEmpty();
        boolean boolean51 = shortList15.containsAll((java.util.Collection<java.lang.Byte>) byteList45);
        java.util.stream.Stream<java.lang.Short> shortStream52 = shortList15.parallelStream();
        boolean boolean53 = doubleList6.equals((java.lang.Object) shortStream52);
        java.util.stream.Stream<java.lang.Double> doubleStream54 = doubleList6.stream();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject55 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI57 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject55.setSourceURI(uRI57);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject59 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI61 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject59.setSourceURI(uRI61);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray63 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI57, uRI61 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList64 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList64, uRIArray63);
        boolean boolean67 = uRIList64.remove((java.lang.Object) 1.0f);
        boolean boolean68 = doubleList6.remove((java.lang.Object) uRIList64);
        try {
            java.lang.Double double70 = doubleList6.remove((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(uRIArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(uRIArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(shortStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(doubleStream54);
        org.junit.Assert.assertNotNull(uRIArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.URIList uRIList7 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int8 = uRIList7.getTypeShortForm();
        java.lang.Integer int9 = uRIList7.getTypeShortForm();
        java.lang.Object obj10 = uRIList7.clone();
        byte[] byteArray14 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        int int17 = uRIList7.lastIndexOf((java.lang.Object) binaryDecoder16);
        org.ccsds.moims.mo.mal.structures.Time time18 = binaryDecoder16.decodeTime();
        java.lang.Short short19 = binaryDecoder16.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element20 = uInteger6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-18) + "'", int9.equals((-18)));
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(time18);
        org.junit.Assert.assertTrue("'" + short19 + "' != '" + (short) -64 + "'", short19.equals((short) -64));
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime7 = binaryDecoder6.decodeFineTime();
        try {
            binaryEncoder1.encodeFineTime(fineTime7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(fineTime7);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.lang.Long long4 = doubleList1.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream5 = doubleList1.parallelStream();
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList13 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList13, shortArray12);
        java.util.ListIterator<java.lang.Short> shortItor15 = shortList13.listIterator();
        int int16 = doubleList8.indexOf((java.lang.Object) shortList13);
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean18 = blob17.isURLBased();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.Element element24 = blob17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
        boolean boolean25 = doubleList8.contains((java.lang.Object) blob17);
        java.util.ListIterator<java.lang.Double> doubleItor27 = doubleList8.listIterator(1);
        doubleList8.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray29 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList30, uShortArray29);
        uShortList30.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet33 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element34 = uOctet33.createElement();
        int int35 = uShortList30.indexOf((java.lang.Object) element34);
        boolean boolean37 = uShortList30.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor38 = uShortList30.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean40 = uShortList30.add(uShort39);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        boolean boolean59 = byteList46.addAll((java.util.Collection<java.lang.Byte>) byteList55);
        java.lang.Object obj60 = byteList46.clone();
        boolean boolean61 = uShortList30.removeAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean62 = doubleList8.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean63 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet64 = doubleList1.getAreaVersion();
        try {
            java.util.ListIterator<java.lang.Double> doubleItor66 = doubleList1.listIterator((-15));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -15");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265083L + "'", long4.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(shortItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(doubleItor27);
        org.junit.Assert.assertNotNull(uShortArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uOctet33);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertNotNull(uShortItor38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertNotNull(uOctet64);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uInteger11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = uInteger11.getServiceNumber();
        java.lang.Long long14 = uInteger11.getShortForm();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 281474993487884L + "'", long14.equals(281474993487884L));
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeFloat((java.lang.Float) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.lang.Long long4 = doubleList1.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream5 = doubleList1.stream();
        int int6 = doubleList1.size();
        java.io.OutputStream outputStream7 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder8 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream7);
        byte byte10 = binaryEncoder8.internalEncodeAttributeType((byte) 100);
        try {
            doubleList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265083L + "'", long4.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 100 + "'", byte10 == (byte) 100);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (-64), (-18));
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        try {
            java.lang.Long long14 = binaryDecoder13.decodeNullableLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.String str18 = strList3.toString();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = binaryDecoder24.decodeNullableUOctet();
        java.lang.Long long26 = uOctet25.getShortForm();
        short short27 = uOctet25.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = uOctet25.getServiceNumber();
        boolean boolean29 = strList3.remove((java.lang.Object) uShort28);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray30 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList31, uRIArray30);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        boolean boolean42 = uRIList31.containsAll((java.util.Collection<java.lang.Byte>) byteList38);
        int int44 = uRIList31.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        int int65 = byteList59.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean66 = uRIList31.removeAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean67 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList59);
        java.util.stream.Stream<java.lang.String> strStream68 = strList3.stream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "[hi!, ]" + "'", str18.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281474993487880L + "'", long26.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short27 + "' != '" + (short) 127 + "'", short27 == (short) 127);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(uRIArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertNotNull(strStream68);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        int int11 = uRIList0.size();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uRIList0.getServiceNumber();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(uShort12);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.LongList longList2 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray3 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList4 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList4, uRIArray3);
        java.lang.Byte[] byteArray10 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList11, byteArray10);
        boolean boolean14 = byteList11.add((java.lang.Byte) (byte) 100);
        boolean boolean15 = uRIList4.containsAll((java.util.Collection<java.lang.Byte>) byteList11);
        byteList11.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean19 = longList2.removeAll((java.util.Collection<java.lang.Byte>) byteList11);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = longList2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet21 = longList2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet22 = uOctet21.getAreaVersion();
        try {
            binaryEncoder1.encodeUOctet(uOctet21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(uOctet20);
        org.junit.Assert.assertNotNull(uOctet21);
        org.junit.Assert.assertNotNull(uOctet22);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean2 = dictionary0.exists((java.lang.Integer) 16);
        java.lang.Integer int4 = dictionary0.getWordId("[0, 10]");
        boolean boolean6 = dictionary0.exists("18446744073709551615");
        java.lang.Integer int8 = dictionary0.getWordId("[0, 10]");
        boolean boolean10 = dictionary0.exists("[-1, -1, -1, -1, 100]");
        dictionary0.resetFastNetwork();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4.equals(1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8.equals(1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeDouble((java.lang.Double) 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) 'a');
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        org.ccsds.moims.mo.mal.structures.OctetList octetList10 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = octetList10.getServiceNumber();
        boolean boolean12 = doubleList8.containsAll((java.util.Collection<java.lang.Byte>) octetList10);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray13 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList14 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList14, uShortArray13);
        uShortList14.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element18 = uOctet17.createElement();
        int int19 = uShortList14.indexOf((java.lang.Object) element18);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.lang.Long[] longArray32 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList33 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList33, longArray32);
        java.lang.Object obj35 = longList33.clone();
        int int36 = strList23.indexOf((java.lang.Object) longList33);
        java.util.ListIterator<java.lang.String> strItor37 = strList23.listIterator();
        java.lang.Short[] shortArray41 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList42 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList42, shortArray41);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray49 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList50 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList50, uRIArray49);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
        boolean boolean60 = byteList57.add((java.lang.Byte) (byte) 100);
        boolean boolean61 = uRIList50.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean62 = strList47.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean63 = shortList42.contains((java.lang.Object) byteList57);
        boolean boolean64 = strList23.removeAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean65 = uShortList14.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        int int66 = byteList57.size();
        boolean boolean67 = octetList10.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean68 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) octetList10);
        java.io.OutputStream outputStream69 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder70 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream69);
        byte byte72 = binaryEncoder70.internalEncodeAttributeType((byte) 100);
        try {
            octetList10.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(uShortArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(uRIArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + byte72 + "' != '" + (byte) 100 + "'", byte72 == (byte) 100);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        try {
            java.lang.Long long14 = binaryDecoder9.decodeAbstractElementType(false);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeInteger((java.lang.Integer) 65535);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.stream();
        strList35.trimToSize();
        try {
            java.lang.String str44 = strList35.get(12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 12, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        int int11 = uRIList0.size();
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList19 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList19, shortArray18);
        java.util.ListIterator<java.lang.Short> shortItor21 = shortList19.listIterator();
        int int22 = doubleList14.indexOf((java.lang.Object) shortList19);
        doubleList14.ensureCapacity((-1));
        doubleList14.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream27 = doubleList14.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob29 = new org.ccsds.moims.mo.mal.structures.Blob("[hi!, ]".getBytes());
        int int30 = doubleList14.lastIndexOf((java.lang.Object) blob29);
        boolean boolean31 = uRIList0.equals((java.lang.Object) doubleList14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet32 = uRIList0.getAreaVersion();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(shortItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(doubleStream27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uOctet32);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        eventCOMObject0.setObjType(objectType14);
        org.ccsds.moims.mo.mal.structures.Time time18 = eventCOMObject0.getTimestamp();
        eventCOMObject0.setRelated((java.lang.Long) 281475010265073L);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList21 = eventCOMObject0.getDomain();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNull(time18);
        org.junit.Assert.assertNull(identifierList21);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = floatList0.getServiceNumber();
        int int8 = floatList0.lastIndexOf((java.lang.Object) (-11));
        java.lang.String str9 = floatList0.toString();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList0.stream();
        java.util.Iterator<java.lang.Float> floatItor11 = floatList0.iterator();
        java.lang.Integer int12 = floatList0.getTypeShortForm();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.lang.Long[] longArray25 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList26 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList26, longArray25);
        java.lang.Object obj28 = longList26.clone();
        int int29 = strList16.indexOf((java.lang.Object) longList26);
        java.util.ListIterator<java.lang.String> strItor30 = strList16.listIterator();
        java.lang.String str31 = strList16.toString();
        byte[] byteArray35 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet38 = binaryDecoder37.decodeNullableUOctet();
        java.lang.Long long39 = uOctet38.getShortForm();
        short short40 = uOctet38.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort41 = uOctet38.getServiceNumber();
        boolean boolean42 = strList16.remove((java.lang.Object) uShort41);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray43 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList44 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList44, uRIArray43);
        java.lang.Byte[] byteArray50 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList51 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList51, byteArray50);
        boolean boolean54 = byteList51.add((java.lang.Byte) (byte) 100);
        boolean boolean55 = uRIList44.containsAll((java.util.Collection<java.lang.Byte>) byteList51);
        int int57 = uRIList44.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList63 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList63, byteArray62);
        boolean boolean66 = byteList63.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray71 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList72 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList72, byteArray71);
        boolean boolean75 = byteList72.add((java.lang.Byte) (byte) 100);
        boolean boolean76 = byteList63.addAll((java.util.Collection<java.lang.Byte>) byteList72);
        int int78 = byteList72.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean79 = uRIList44.removeAll((java.util.Collection<java.lang.Byte>) byteList72);
        boolean boolean80 = strList16.removeAll((java.util.Collection<java.lang.Byte>) byteList72);
        boolean boolean81 = floatList0.retainAll((java.util.Collection<java.lang.Byte>) byteList72);
        int int82 = byteList72.size();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]" + "'", str9.equals("[]"));
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNotNull(floatItor11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-4) + "'", int12.equals((-4)));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "[hi!, ]" + "'", str31.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertNotNull(uOctet38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 281474993487880L + "'", long39.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short40 + "' != '" + (short) 127 + "'", short40 == (short) 127);
        org.junit.Assert.assertNotNull(uShort41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(uRIArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 5 + "'", int82 == 5);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int5 = binaryDecoder4.decodeNullableInteger();
        try {
            java.lang.Double double6 = binaryDecoder4.decodeNullableDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-64) + "'", int5.equals((-64)));
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Long) 4294967295L);
        java.lang.Long long2 = union1.getLongValue();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = union1.getAreaVersion();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime9 = binaryDecoder8.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList10 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int11 = uRIList10.size();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray22 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList23, uRIArray22);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        boolean boolean34 = uRIList23.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean35 = intList20.removeAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean36 = uRIList10.removeAll((java.util.Collection<java.lang.Byte>) byteList30);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder37 = binaryDecoder8.createListDecoder((java.util.List) byteList30);
        try {
            org.ccsds.moims.mo.mal.structures.Element element38 = uOctet3.decode((org.ccsds.moims.mo.mal.MALDecoder) mALListDecoder37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 4294967295L + "'", long2.equals(4294967295L));
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(fineTime9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(uRIArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(mALListDecoder37);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder5.decodeNullableUInteger();
        try {
            java.lang.Integer int10 = binaryDecoder5.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uInteger9);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
        java.lang.Long long13 = binaryDecoder9.decodeNullableLong();
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob14 = binaryDecoder9.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12.equals((byte) -1));
        org.junit.Assert.assertNull(long13);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        java.lang.String str2 = doubleList1.toString();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        try {
            doubleList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "[]" + "'", str2.equals("[]"));
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int1 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element2 = time0.createElement();
        java.lang.Integer int3 = time0.getTypeShortForm();
        java.lang.Long long4 = time0.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = time0.getAreaNumber();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger12 = binaryDecoder11.decodeUInteger();
        java.lang.Byte byte13 = binaryDecoder11.decodeOctet();
        java.lang.Integer int14 = binaryDecoder11.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = time0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 16 + "'", int1.equals(16));
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 16 + "'", int3.equals(16));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487888L + "'", long4.equals(281474993487888L));
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(uInteger12);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) -1 + "'", byte13.equals((byte) -1));
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute12 = binaryDecoder9.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList2 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int3 = uRIList2.getTypeShortForm();
        java.lang.Integer int4 = uRIList2.getTypeShortForm();
        java.lang.Object obj5 = uRIList2.clone();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        int int12 = uRIList2.lastIndexOf((java.lang.Object) binaryDecoder11);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger13 = binaryDecoder11.decodeNullableUInteger();
        try {
            binaryEncoder1.encodeNullableUInteger(uInteger13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(uInteger13);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("[-1, -1, -1, -1, 100]");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uRI5.getAreaVersion();
        try {
            binaryEncoder1.encodeUOctet(uOctet6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(uOctet6);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.lang.Object obj22 = longList20.clone();
        int int23 = strList10.indexOf((java.lang.Object) longList20);
        java.util.ListIterator<java.lang.String> strItor24 = strList10.listIterator();
        java.lang.String str25 = strList10.toString();
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList29 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList29, doubleArray28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        int int36 = strList34.size();
        boolean boolean37 = doubleList29.equals((java.lang.Object) strList34);
        boolean boolean38 = strList10.remove((java.lang.Object) strList34);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder39 = binaryDecoder5.createListDecoder((java.util.List) strList34);
        try {
            java.lang.String str40 = binaryDecoder5.decodeNullableString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[hi!, ]" + "'", str25.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(mALListDecoder39);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        java.util.ListIterator<java.lang.Short> shortItor6 = shortList4.listIterator();
        int int7 = shortList4.size();
        java.lang.Class<?> wildcardClass8 = shortList4.getClass();
        shortList4.trimToSize();
        java.lang.Float[] floatArray13 = new java.lang.Float[] { 10.0f, 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList14 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList14, floatArray13);
        java.util.ListIterator<java.lang.Float> floatItor16 = floatList14.listIterator();
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder22 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = binaryDecoder22.decodeNullableUOctet();
        java.lang.Long long24 = uOctet23.getShortForm();
        int int25 = floatList14.indexOf((java.lang.Object) long24);
        floatList14.trimToSize();
        int int27 = shortList4.indexOf((java.lang.Object) floatList14);
        try {
            java.lang.Short short29 = shortList4.get((-13));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(shortItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(floatItor16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 281474993487880L + "'", long24.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeFloat((java.lang.Float) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity(2, "[-1, -1, -1, -1, 100]");
        int int3 = providerURIHolderEntity2.getId();
        java.lang.String str4 = providerURIHolderEntity2.getProviderURIString();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "[-1, -1, -1, -1, 100]" + "'", str4.equals("[-1, -1, -1, -1, 100]"));
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = binaryDecoder9.decodeUInteger();
        java.lang.Float[] floatArray16 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList17 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList17, floatArray16);
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList21 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList21, booleanArray20);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = byteList28.addAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Object obj42 = byteList28.clone();
        boolean boolean43 = booleanList21.contains((java.lang.Object) byteList28);
        int int44 = floatList17.lastIndexOf((java.lang.Object) booleanList21);
        boolean boolean45 = floatList17.isEmpty();
        boolean boolean46 = uInteger10.equals((java.lang.Object) boolean45);
        org.ccsds.moims.mo.mal.structures.Element element47 = uInteger10.createElement();
        try {
            binaryEncoder1.encodeUInteger(uInteger10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uInteger10);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertNotNull(element47);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.ccsds.moims.mo.mal.structures.Identifier identifier1 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.Long long2 = identifier1.getShortForm();
        java.lang.String str3 = identifier1.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = identifier1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList6 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean8 = blob7.isURLBased();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.Element element14 = blob7.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
        boolean boolean15 = integerList6.equals((java.lang.Object) binaryDecoder13);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = integerList6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList17 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int18 = uRIList17.getTypeShortForm();
        java.lang.Integer int19 = uRIList17.getTypeShortForm();
        java.lang.Object obj20 = uRIList17.clone();
        byte[] byteArray24 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder25 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray24);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder26 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray24);
        int int27 = uRIList17.lastIndexOf((java.lang.Object) binaryDecoder26);
        org.ccsds.moims.mo.mal.structures.Duration duration28 = binaryDecoder26.decodeDuration();
        int int29 = integerList6.lastIndexOf((java.lang.Object) binaryDecoder26);
        java.lang.String str30 = binaryDecoder26.decodeNullableString();
        try {
            org.ccsds.moims.mo.mal.structures.Element element31 = identifier1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487878L + "'", long2.equals(281474993487878L));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[hi!, ]" + "'", str3.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-18) + "'", int18.equals((-18)));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-18) + "'", int19.equals((-18)));
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.Element element12 = uInteger11.createElement();
        java.io.OutputStream outputStream13 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder14 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream13);
        byte byte16 = binaryEncoder14.internalEncodeAttributeType((byte) 100);
        try {
            uInteger11.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 100 + "'", byte16 == (byte) 100);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        try {
            java.lang.String str2 = dictionary0.getWord((java.lang.Integer) (-11));
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: The word for the id: -11 is unknown!");
        } catch (java.lang.Exception e) {
        }
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList12 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = integerList12.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = integerList12.getAreaNumber();
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = binaryDecoder9.decodeElement((org.ccsds.moims.mo.mal.structures.Element) uShort14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertNotNull(uShort14);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob12 = binaryDecoder9.decodeNullableBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.FloatList floatList2 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int4 = floatList2.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int5 = floatList2.getTypeShortForm();
        boolean boolean6 = floatList2.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator7 = floatList2.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = floatList2.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element9 = floatList2.createElement();
        try {
            binaryEncoder1.encodeElement((org.ccsds.moims.mo.mal.structures.Element) floatList2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-4) + "'", int5.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(floatSpliterator7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(element9);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = stringList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element4 = stringList1.createElement();
        org.ccsds.moims.mo.mal.structures.URIList uRIList5 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int6 = uRIList5.getTypeShortForm();
        java.lang.Integer int7 = uRIList5.getTypeShortForm();
        java.lang.Object obj8 = uRIList5.clone();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        int int15 = uRIList5.lastIndexOf((java.lang.Object) binaryDecoder14);
        java.lang.Boolean boolean16 = binaryDecoder14.decodeBoolean();
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-18) + "'", int6.equals((-18)));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-18) + "'", int7.equals((-18)));
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16.equals(true));
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Byte byte7 = binaryDecoder5.decodeOctet();
        java.lang.Integer int8 = binaryDecoder5.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute9 = binaryDecoder5.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7.equals((byte) -1));
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.lang.Integer int2 = uLong1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uLong1.getAreaNumber();
        java.lang.String str4 = uLong1.toString();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        java.lang.Integer int10 = binaryDecoder9.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element11 = uLong1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 14 + "'", int2.equals(14));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "18446744073709551615" + "'", str4.equals("18446744073709551615"));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-64) + "'", int10.equals((-64)));
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        try {
            java.lang.Byte byte13 = binaryDecoder9.decodeNullableOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray2 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList3, uShortArray2);
        uShortList3.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element7 = uOctet6.createElement();
        int int8 = uShortList3.indexOf((java.lang.Object) element7);
        boolean boolean10 = uShortList3.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor11 = uShortList3.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean13 = uShortList3.add(uShort12);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray14 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList15 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList15, uRIArray14);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        boolean boolean26 = uRIList15.containsAll((java.util.Collection<java.lang.Byte>) byteList22);
        boolean boolean27 = uShortList3.retainAll((java.util.Collection<java.lang.Byte>) byteList22);
        org.ccsds.moims.mo.mal.structures.OctetList octetList28 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet29 = octetList28.getAreaVersion();
        boolean boolean30 = byteList22.addAll((java.util.Collection<java.lang.Byte>) octetList28);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet31 = octetList28.getAreaVersion();
        int int32 = stringList1.indexOf((java.lang.Object) uOctet31);
        java.io.OutputStream outputStream33 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder34 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream33);
        byte byte36 = binaryEncoder34.internalEncodeAttributeType((byte) 100);
        try {
            stringList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uShortItor11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(uRIArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(uOctet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(uOctet31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + byte36 + "' != '" + (byte) 100 + "'", byte36 == (byte) 100);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList1.getAreaNumber();
        java.lang.Object[] objArray3 = shortList1.toArray();
        boolean boolean4 = floatList0.remove((java.lang.Object) shortList1);
        java.lang.Integer int5 = shortList1.getTypeShortForm();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject6.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = null;
        eventCOMObject6.setNetworkZone(identifier9);
        org.ccsds.moims.mo.mal.structures.URI uRI11 = eventCOMObject6.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList12 = eventCOMObject6.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject13 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId14 = eventCOMObject13.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier15 = eventCOMObject13.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject16 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject16.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType21 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription22 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType21);
        eventCOMObject16.setObjType(objectType21);
        java.lang.Long long24 = eventCOMObject16.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId25 = eventCOMObject16.getObjectId();
        eventCOMObject13.setSource(objectId25);
        eventCOMObject6.setSource(objectId25);
        boolean boolean28 = shortList1.remove((java.lang.Object) eventCOMObject6);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject29 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId30 = eventCOMObject29.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType32 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject29.setObjType(objectType32);
        eventCOMObject6.setObjType(objectType32);
        try {
            java.lang.String str35 = esa.mo.com.impl.util.HelperCOM.objType2string(objectType32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-9) + "'", int5.equals((-9)));
        org.junit.Assert.assertNull(uRI11);
        org.junit.Assert.assertNull(identifierList12);
        org.junit.Assert.assertNull(objectId14);
        org.junit.Assert.assertNull(identifier15);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 4294967295L + "'", long24.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNull(objectId30);
        org.junit.Assert.assertNotNull(objectType32);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((int) (byte) 1, "[false]");
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.ccsds.moims.mo.com.structures.ObjectType objectType1 = null;
        try {
            org.ccsds.moims.mo.mal.structures.Subscription subscription2 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.lang.Float[] floatArray7 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList8 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList8, floatArray7);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12, booleanArray11);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19, byteArray18);
        boolean boolean22 = byteList19.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        boolean boolean32 = byteList19.addAll((java.util.Collection<java.lang.Byte>) byteList28);
        java.lang.Object obj33 = byteList19.clone();
        boolean boolean34 = booleanList12.contains((java.lang.Object) byteList19);
        int int35 = floatList8.lastIndexOf((java.lang.Object) booleanList12);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = byteList41.addAll((java.util.Collection<java.lang.Byte>) byteList50);
        java.lang.Object obj55 = byteList41.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream56 = byteList41.stream();
        boolean boolean57 = booleanList12.equals((java.lang.Object) byteList41);
        java.math.BigInteger bigInteger58 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong59 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger58);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet60 = uLong59.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity63 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long64 = objectTypeHolderEntity63.getObjectType();
        boolean boolean65 = uLong59.equals((java.lang.Object) long64);
        boolean boolean66 = booleanList12.remove((java.lang.Object) uLong59);
        org.ccsds.moims.mo.mal.structures.UShort uShort67 = uLong59.getAreaNumber();
        java.lang.Long long68 = uShort67.getShortForm();
        try {
            binaryEncoder1.encodeUShort(uShort67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(byteStream56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(bigInteger58);
        org.junit.Assert.assertNotNull(uOctet60);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 281474993487879L + "'", long64.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(uShort67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 281474993487882L + "'", long68.equals(281474993487882L));
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean64 = byteList37.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.ccsds.moims.mo.mal.structures.URIList uRIList65 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int66 = uRIList65.getTypeShortForm();
        java.lang.Integer int67 = uRIList65.getTypeShortForm();
        boolean boolean68 = byteList37.equals((java.lang.Object) uRIList65);
        java.lang.Integer int69 = uRIList65.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = uRIList65.getAreaNumber();
        java.io.OutputStream outputStream71 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder72 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream71);
        try {
            uRIList65.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-18) + "'", int66.equals((-18)));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-18) + "'", int69.equals((-18)));
        org.junit.Assert.assertNotNull(uShort70);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.math.BigInteger bigInteger2 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong3 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uLong3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uLong3.getAreaVersion();
        try {
            binaryEncoder1.encodeULong(uLong3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uOctet5);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.URI uRI4 = null;
        try {
            binaryEncoder1.encodeURI(uRI4);
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Null value supplied in a non-nullable field");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray2 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList3, uShortArray2);
        uShortList3.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element7 = uOctet6.createElement();
        int int8 = uShortList3.indexOf((java.lang.Object) element7);
        boolean boolean10 = uShortList3.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor11 = uShortList3.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean13 = uShortList3.add(uShort12);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray14 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList15 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList15, uRIArray14);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        boolean boolean26 = uRIList15.containsAll((java.util.Collection<java.lang.Byte>) byteList22);
        boolean boolean27 = uShortList3.retainAll((java.util.Collection<java.lang.Byte>) byteList22);
        org.ccsds.moims.mo.mal.structures.OctetList octetList28 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet29 = octetList28.getAreaVersion();
        boolean boolean30 = byteList22.addAll((java.util.Collection<java.lang.Byte>) octetList28);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet31 = octetList28.getAreaVersion();
        int int32 = stringList1.indexOf((java.lang.Object) uOctet31);
        org.ccsds.moims.mo.mal.structures.URIList uRIList33 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int34 = uRIList33.getTypeShortForm();
        java.lang.Integer int35 = uRIList33.getTypeShortForm();
        java.lang.Object obj36 = uRIList33.clone();
        byte[] byteArray40 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder41 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray40);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder42 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray40);
        int int43 = uRIList33.lastIndexOf((java.lang.Object) binaryDecoder42);
        java.lang.Boolean boolean44 = binaryDecoder42.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration45 = binaryDecoder42.decodeDuration();
        try {
            org.ccsds.moims.mo.mal.structures.Element element46 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uShortItor11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(uRIArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(uOctet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(uOctet31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-18) + "'", int34.equals((-18)));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-18) + "'", int35.equals((-18)));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44.equals(true));
        org.junit.Assert.assertNotNull(duration45);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.Time time4 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int5 = time4.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element6 = time4.createElement();
        java.lang.Integer int7 = time4.getTypeShortForm();
        java.lang.Long long8 = time4.getShortForm();
        java.lang.Integer int9 = time4.getTypeShortForm();
        try {
            binaryEncoder1.encodeTime(time4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 16 + "'", int5.equals(16));
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 16 + "'", int7.equals(16));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487888L + "'", long8.equals(281474993487888L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 16 + "'", int9.equals(16));
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        boolean boolean13 = byteList8.isEmpty();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        int int19 = intList16.lastIndexOf((java.lang.Object) 0.0f);
        int int20 = byteList8.lastIndexOf((java.lang.Object) intList16);
        java.lang.String str21 = intList16.toString();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray22 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList23, uShortArray22);
        uShortList23.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet26 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element27 = uOctet26.createElement();
        int int28 = uShortList23.indexOf((java.lang.Object) element27);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.lang.Long[] longArray41 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList42 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList42, longArray41);
        java.lang.Object obj44 = longList42.clone();
        int int45 = strList32.indexOf((java.lang.Object) longList42);
        java.util.ListIterator<java.lang.String> strItor46 = strList32.listIterator();
        java.lang.Short[] shortArray50 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList51 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList51, shortArray50);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray58 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList59 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList59, uRIArray58);
        java.lang.Byte[] byteArray65 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList66 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList66, byteArray65);
        boolean boolean69 = byteList66.add((java.lang.Byte) (byte) 100);
        boolean boolean70 = uRIList59.containsAll((java.util.Collection<java.lang.Byte>) byteList66);
        boolean boolean71 = strList56.containsAll((java.util.Collection<java.lang.Byte>) byteList66);
        boolean boolean72 = shortList51.contains((java.lang.Object) byteList66);
        boolean boolean73 = strList32.removeAll((java.util.Collection<java.lang.Byte>) byteList66);
        boolean boolean74 = uShortList23.containsAll((java.util.Collection<java.lang.Byte>) byteList66);
        int int75 = byteList66.size();
        java.util.stream.Stream<java.lang.Byte> byteStream76 = byteList66.parallelStream();
        boolean boolean77 = intList16.contains((java.lang.Object) byteList66);
        byte[] byteArray81 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder82 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray81);
        java.lang.Short short83 = binaryDecoder82.decodeNullableShort();
        boolean boolean84 = intList16.contains((java.lang.Object) short83);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity87 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((int) (short) 10, "127");
        boolean boolean88 = intList16.remove((java.lang.Object) (short) 10);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[10]" + "'", str21.equals("[10]"));
        org.junit.Assert.assertNotNull(uShortArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(uOctet26);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(uRIArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 5 + "'", int75 == 5);
        org.junit.Assert.assertNotNull(byteStream76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) -64 + "'", short83.equals((short) -64));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList2 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element3 = booleanList2.createElement();
        boolean boolean5 = booleanList2.add((java.lang.Boolean) true);
        boolean boolean7 = booleanList2.remove((java.lang.Object) 281474993487884L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = booleanList2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Union union10 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        int int11 = booleanList2.lastIndexOf((java.lang.Object) (-1.0d));
        java.lang.Double[] doubleArray17 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList18 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList18, doubleArray17);
        org.ccsds.moims.mo.mal.structures.OctetList octetList20 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = octetList20.getServiceNumber();
        boolean boolean22 = doubleList18.containsAll((java.util.Collection<java.lang.Byte>) octetList20);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray23 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList24 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList24, uShortArray23);
        uShortList24.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element28 = uOctet27.createElement();
        int int29 = uShortList24.indexOf((java.lang.Object) element28);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.lang.Long[] longArray42 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList43 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList43, longArray42);
        java.lang.Object obj45 = longList43.clone();
        int int46 = strList33.indexOf((java.lang.Object) longList43);
        java.util.ListIterator<java.lang.String> strItor47 = strList33.listIterator();
        java.lang.Short[] shortArray51 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList52 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList52, shortArray51);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray59 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList60 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList60, uRIArray59);
        java.lang.Byte[] byteArray66 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList67 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList67, byteArray66);
        boolean boolean70 = byteList67.add((java.lang.Byte) (byte) 100);
        boolean boolean71 = uRIList60.containsAll((java.util.Collection<java.lang.Byte>) byteList67);
        boolean boolean72 = strList57.containsAll((java.util.Collection<java.lang.Byte>) byteList67);
        boolean boolean73 = shortList52.contains((java.lang.Object) byteList67);
        boolean boolean74 = strList33.removeAll((java.util.Collection<java.lang.Byte>) byteList67);
        boolean boolean75 = uShortList24.containsAll((java.util.Collection<java.lang.Byte>) byteList67);
        int int76 = byteList67.size();
        boolean boolean77 = octetList20.containsAll((java.util.Collection<java.lang.Byte>) byteList67);
        boolean boolean78 = booleanList2.removeAll((java.util.Collection<java.lang.Byte>) octetList20);
        org.ccsds.moims.mo.mal.structures.UShort uShort79 = octetList20.getServiceNumber();
        try {
            binaryEncoder1.encodeNullableUShort(uShort79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(uShort21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(uShortArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertNotNull(uRIArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 5 + "'", int76 == 5);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertNotNull(uShort79);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        double double12 = duration11.getValue();
        java.lang.Short[] shortArray16 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList17 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList17, shortArray16);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray24 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList25, uRIArray24);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        boolean boolean36 = uRIList25.containsAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean37 = strList22.containsAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean38 = shortList17.contains((java.lang.Object) byteList32);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray39 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList40 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList40, uRIArray39);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        boolean boolean51 = uRIList40.containsAll((java.util.Collection<java.lang.Byte>) byteList47);
        boolean boolean52 = byteList47.isEmpty();
        boolean boolean53 = shortList17.containsAll((java.util.Collection<java.lang.Byte>) byteList47);
        java.lang.String str54 = shortList17.toString();
        boolean boolean55 = duration11.equals((java.lang.Object) str54);
        double double56 = duration11.getValue();
        org.ccsds.moims.mo.mal.structures.Element element57 = duration11.createElement();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.47E-322d + "'", double12 == 2.47E-322d);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uRIArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(uRIArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "[-1, 0, 100]" + "'", str54.equals("[-1, 0, 100]"));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2.47E-322d + "'", double56 == 2.47E-322d);
        org.junit.Assert.assertNotNull(element57);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRIList0.getServiceNumber();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            uRIList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(uShort3);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        doubleList0.clear();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList0.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream3 = doubleList0.parallelStream();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        try {
            doubleList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(doubleStream3);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str7 = uRI6.toString();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        java.lang.Integer int14 = binaryDecoder13.decodeInteger();
        int int16 = binaryDecoder13.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Element element17 = uRI6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI18 = uRIList0.set((-10), uRI6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!" + "'", str7.equals("hi!"));
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14.equals(50));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(element17);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20, shortArray19);
        java.util.ListIterator<java.lang.Short> shortItor22 = shortList20.listIterator();
        int int23 = doubleList15.indexOf((java.lang.Object) shortList20);
        org.ccsds.moims.mo.mal.structures.Blob blob24 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean25 = blob24.isURLBased();
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.Element element31 = blob24.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder30);
        boolean boolean32 = doubleList15.contains((java.lang.Object) blob24);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray38 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList39, uRIArray38);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        boolean boolean50 = uRIList39.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean51 = strList36.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean52 = doubleList15.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55, doubleArray54);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList60 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList60, shortArray59);
        java.util.ListIterator<java.lang.Short> shortItor62 = shortList60.listIterator();
        int int63 = doubleList55.indexOf((java.lang.Object) shortList60);
        org.ccsds.moims.mo.mal.structures.Blob blob64 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean65 = blob64.isURLBased();
        byte[] byteArray69 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder70 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray69);
        org.ccsds.moims.mo.mal.structures.Element element71 = blob64.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder70);
        boolean boolean72 = doubleList55.contains((java.lang.Object) blob64);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray78 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList79 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList79, uRIArray78);
        java.lang.Byte[] byteArray85 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList86 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList86, byteArray85);
        boolean boolean89 = byteList86.add((java.lang.Byte) (byte) 100);
        boolean boolean90 = uRIList79.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean91 = strList76.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean92 = doubleList55.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean93 = doubleList15.removeAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean94 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList86);
        java.lang.Object obj95 = doubleList1.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort96 = doubleList1.getServiceNumber();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(shortItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uRIArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(shortItor62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uRIArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(uShort96);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int2 = stringList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        boolean boolean24 = byteList21.add((java.lang.Byte) (byte) 100);
        boolean boolean25 = byteList12.addAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int27 = byteList21.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean28 = uRIList5.retainAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int29 = stringList1.lastIndexOf((java.lang.Object) uRIList5);
        java.lang.Long long30 = stringList1.getShortForm();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList32 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = doubleList32.getAreaNumber();
        java.lang.Object obj34 = doubleList32.clone();
        byte[] byteArray38 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder39 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = binaryDecoder40.decodeNullableUOctet();
        int int42 = doubleList32.lastIndexOf((java.lang.Object) binaryDecoder40);
        java.util.stream.Stream<java.lang.Double> doubleStream43 = doubleList32.stream();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer44 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl45 = cOMServicesConsumer44.getArchiveService();
        cOMServicesConsumer44.closeConnections();
        cOMServicesConsumer44.closeConnections();
        boolean boolean48 = doubleList32.contains((java.lang.Object) cOMServicesConsumer44);
        boolean boolean49 = stringList1.contains((java.lang.Object) boolean48);
        java.lang.String str50 = stringList1.toString();
        org.ccsds.moims.mo.mal.structures.URIList uRIList51 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int52 = uRIList51.getTypeShortForm();
        java.lang.Integer int53 = uRIList51.getTypeShortForm();
        java.lang.Object obj54 = uRIList51.clone();
        byte[] byteArray58 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder59 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray58);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder60 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray58);
        int int61 = uRIList51.lastIndexOf((java.lang.Object) binaryDecoder60);
        org.ccsds.moims.mo.mal.structures.Duration duration62 = binaryDecoder60.decodeDuration();
        java.lang.Integer int63 = binaryDecoder60.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element64 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-15) + "'", int2.equals((-15)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 281475010265073L + "'", long30.equals(281475010265073L));
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(doubleStream43);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "[]" + "'", str50.equals("[]"));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-18) + "'", int52.equals((-18)));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-18) + "'", int53.equals((-18)));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63.equals(0));
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime4 = new org.ccsds.moims.mo.mal.structures.FineTime();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        java.lang.Double double10 = binaryDecoder9.decodeNullableDouble();
        byte[] byteArray11 = binaryDecoder9.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray11);
        boolean boolean13 = fineTime4.equals((java.lang.Object) blob12);
        try {
            binaryEncoder1.encodeBlob(blob12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals((double) double10, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int1 = uRIList0.size();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor2 = uRIList0.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRIList0.getServiceNumber();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            uRIList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(uRIItor2);
        org.junit.Assert.assertNotNull(uShort3);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Float float7 = binaryDecoder5.decodeNullableFloat();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI8 = binaryDecoder5.decodeNullableURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.0f + "'", float7.equals(0.0f));
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.Element element7 = uInteger6.createElement();
        org.ccsds.moims.mo.mal.structures.FloatList floatList8 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int10 = floatList8.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int11 = floatList8.getTypeShortForm();
        boolean boolean12 = floatList8.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator13 = floatList8.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = floatList8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = floatList8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = floatList8.getServiceNumber();
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = uShort16.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Element element23 = uInteger6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong24 = binaryDecoder21.decodeNullableULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(floatSpliterator13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element23);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList3 = new org.ccsds.moims.mo.mal.structures.BooleanList(50);
        try {
            org.ccsds.moims.mo.mal.MALListEncoder mALListEncoder4 = binaryEncoder1.createListEncoder((java.util.List) booleanList3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong5 = binaryDecoder4.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ULong argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.Element element7 = uInteger6.createElement();
        java.lang.Integer int8 = uInteger6.getTypeShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 12 + "'", int8.equals(12));
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        boolean boolean2 = integerList1.isEmpty();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray3 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList4 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList4, uRIArray3);
        java.lang.Byte[] byteArray10 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList11, byteArray10);
        boolean boolean14 = byteList11.add((java.lang.Byte) (byte) 100);
        boolean boolean15 = uRIList4.containsAll((java.util.Collection<java.lang.Byte>) byteList11);
        int int17 = uRIList4.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList23 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList23, byteArray22);
        boolean boolean26 = byteList23.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        boolean boolean36 = byteList23.addAll((java.util.Collection<java.lang.Byte>) byteList32);
        int int38 = byteList32.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean39 = uRIList4.removeAll((java.util.Collection<java.lang.Byte>) byteList32);
        java.lang.Double[] doubleArray45 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList46 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList46, doubleArray45);
        org.ccsds.moims.mo.mal.structures.OctetList octetList48 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = octetList48.getServiceNumber();
        boolean boolean50 = doubleList46.containsAll((java.util.Collection<java.lang.Byte>) octetList48);
        boolean boolean51 = uRIList4.retainAll((java.util.Collection<java.lang.Byte>) octetList48);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet52 = octetList48.getAreaVersion();
        boolean boolean53 = integerList1.removeAll((java.util.Collection<java.lang.Byte>) octetList48);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList55 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort56 = doubleList55.getAreaNumber();
        java.lang.Object obj57 = doubleList55.clone();
        byte[] byteArray61 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder62 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray61);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder63 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray61);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet64 = binaryDecoder63.decodeNullableUOctet();
        int int65 = doubleList55.lastIndexOf((java.lang.Object) binaryDecoder63);
        try {
            org.ccsds.moims.mo.mal.structures.Element element66 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNotNull(uRIArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(uShort49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(uOctet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(uShort56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertNotNull(uOctet64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRIList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRIList0.getAreaNumber();
        java.lang.Long long5 = uShort4.getShortForm();
        java.io.OutputStream outputStream6 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder7 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream6);
        try {
            uShort4.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281474993487882L + "'", long5.equals(281474993487882L));
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        shortList0.ensureCapacity((int) (byte) 0);
        java.lang.Object[] objArray6 = shortList0.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = shortList0.getServiceNumber();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        java.util.Iterator<java.lang.String> strItor40 = strList35.iterator();
        boolean boolean41 = shortList0.remove((java.lang.Object) strItor40);
        java.util.Iterator<java.lang.Short> shortItor42 = shortList0.iterator();
        java.lang.Integer int43 = shortList0.getTypeShortForm();
        byte[] byteArray47 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder48 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray47);
        java.lang.Integer int49 = binaryDecoder48.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element50 = shortList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(shortItor42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-9) + "'", int43.equals((-9)));
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-64) + "'", int49.equals((-64)));
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, 6);
        try {
            java.lang.Integer int7 = binaryDecoder6.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList(16);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Float float8 = binaryDecoder7.decodeFloat();
        try {
            org.ccsds.moims.mo.mal.structures.Element element9 = octetList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 7.0E-44f + "'", float8.equals(7.0E-44f));
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject3.getObjectId();
        eventCOMObject0.setSource(objectId12);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject14 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject14.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType19 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription20 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType19);
        eventCOMObject14.setObjType(objectType19);
        java.lang.Long long22 = eventCOMObject14.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId23 = eventCOMObject14.getObjectId();
        eventCOMObject0.setSource(objectId23);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList25 = eventCOMObject0.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject26 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI28 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject26.setSourceURI(uRI28);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet30 = uRI28.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = uRI28.getAreaNumber();
        eventCOMObject0.setSourceURI(uRI28);
        java.io.OutputStream outputStream33 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder34 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream33);
        byte byte36 = binaryEncoder34.internalEncodeAttributeType((byte) 100);
        try {
            uRI28.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId12);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 4294967295L + "'", long22.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId23);
        org.junit.Assert.assertNull(identifierList25);
        org.junit.Assert.assertNotNull(uOctet30);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertTrue("'" + byte36 + "' != '" + (byte) 100 + "'", byte36 == (byte) 100);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        boolean boolean3 = uRIList0.isEmpty();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray9 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList10, uRIArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        boolean boolean21 = uRIList10.containsAll((java.util.Collection<java.lang.Byte>) byteList17);
        boolean boolean22 = strList7.containsAll((java.util.Collection<java.lang.Byte>) byteList17);
        java.util.Iterator<java.lang.String> strItor23 = strList7.iterator();
        int int24 = uRIList0.indexOf((java.lang.Object) strList7);
        java.lang.String str26 = strList7.get((int) (byte) 0);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList29 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList29, doubleArray28);
        java.lang.Short[] shortArray33 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList34 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList34, shortArray33);
        java.util.ListIterator<java.lang.Short> shortItor36 = shortList34.listIterator();
        int int37 = doubleList29.indexOf((java.lang.Object) shortList34);
        doubleList29.ensureCapacity((-1));
        doubleList29.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream42 = doubleList29.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob44 = new org.ccsds.moims.mo.mal.structures.Blob("[hi!, ]".getBytes());
        int int45 = doubleList29.lastIndexOf((java.lang.Object) blob44);
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = blob44.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort47 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UOctet uOctet48 = uShort47.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Union union50 = new org.ccsds.moims.mo.mal.structures.Union("0.0");
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = union50.getServiceNumber();
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder56 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray55);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder57 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray55);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = binaryDecoder57.decodeNullableUOctet();
        java.lang.Long long59 = uOctet58.getShortForm();
        short short60 = uOctet58.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort61 = uOctet58.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray62 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort46, uShort47, uShort51, uShort61 };
        try {
            org.ccsds.moims.mo.mal.structures.UShort[] uShortArray63 = strList7.toArray(uShortArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(uRIArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(shortItor36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(doubleStream42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertNotNull(uShort47);
        org.junit.Assert.assertNotNull(uOctet48);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 281474993487880L + "'", long59.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short60 + "' != '" + (short) 127 + "'", short60 == (short) 127);
        org.junit.Assert.assertNotNull(uShort61);
        org.junit.Assert.assertNotNull(uShortArray62);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList8 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        boolean boolean21 = byteList18.add((java.lang.Byte) (byte) 100);
        boolean boolean22 = uRIList11.containsAll((java.util.Collection<java.lang.Byte>) byteList18);
        boolean boolean23 = intList8.removeAll((java.util.Collection<java.lang.Byte>) byteList18);
        boolean boolean25 = intList8.remove((java.lang.Object) '4');
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList43 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList43, byteArray42);
        boolean boolean46 = byteList43.add((java.lang.Byte) (byte) 100);
        boolean boolean47 = byteList34.addAll((java.util.Collection<java.lang.Byte>) byteList43);
        int int49 = byteList43.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean50 = uRIList27.retainAll((java.util.Collection<java.lang.Byte>) byteList43);
        boolean boolean51 = intList8.contains((java.lang.Object) uRIList27);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity54 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str55 = networkHolderEntity54.getNetworkString();
        boolean boolean56 = intList8.remove((java.lang.Object) networkHolderEntity54);
        java.lang.String str57 = networkHolderEntity54.getNetworkString();
        int int58 = networkHolderEntity54.getId();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "[0, 10]" + "'", str55.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "[0, 10]" + "'", str57.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-11) + "'", int58 == (-11));
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Integer int7 = binaryDecoder5.decodeInteger();
        try {
            java.lang.Long long9 = binaryDecoder5.decodeAbstractElementType(false);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-64) + "'", int7.equals((-64)));
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        java.math.BigInteger bigInteger56 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong57 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger56);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = uLong57.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity61 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long62 = objectTypeHolderEntity61.getObjectType();
        boolean boolean63 = uLong57.equals((java.lang.Object) long62);
        boolean boolean64 = booleanList10.remove((java.lang.Object) uLong57);
        java.lang.Object obj65 = booleanList10.clone();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 281474993487879L + "'", long62.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList9 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) 'a');
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = doubleList9.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        doubleList9.ensureCapacity((-10));
        boolean boolean79 = blob7.equals((java.lang.Object) doubleList9);
        java.io.OutputStream outputStream80 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder81 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream80);
        byte byte83 = binaryEncoder81.internalEncodeAttributeType((byte) 100);
        try {
            blob7.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + byte83 + "' != '" + (byte) 100 + "'", byte83 == (byte) 100);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Long) 4294967295L);
        java.lang.Long long2 = union1.getLongValue();
        java.lang.Long long3 = union1.getShortForm();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = binaryDecoder9.decodeUInteger();
        java.lang.Float[] floatArray16 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList17 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList17, floatArray16);
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList21 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList21, booleanArray20);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = byteList28.addAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Object obj42 = byteList28.clone();
        boolean boolean43 = booleanList21.contains((java.lang.Object) byteList28);
        int int44 = floatList17.lastIndexOf((java.lang.Object) booleanList21);
        boolean boolean45 = floatList17.isEmpty();
        boolean boolean46 = uInteger10.equals((java.lang.Object) boolean45);
        org.ccsds.moims.mo.mal.structures.Element element47 = uInteger10.createElement();
        boolean boolean48 = union1.equals((java.lang.Object) element47);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 4294967295L + "'", long2.equals(4294967295L));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487885L + "'", long3.equals(281474993487885L));
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uInteger10);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList9 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int10 = uRIList9.getTypeShortForm();
        java.lang.Integer int11 = uRIList9.getTypeShortForm();
        java.lang.Object obj12 = uRIList9.clone();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        int int19 = uRIList9.lastIndexOf((java.lang.Object) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Time time20 = binaryDecoder18.decodeTime();
        java.lang.Short short21 = binaryDecoder18.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element22 = uShort8.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(time20);
        org.junit.Assert.assertTrue("'" + short21 + "' != '" + (short) -64 + "'", short21.equals((short) -64));
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray1 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList2, uRIArray1);
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
        boolean boolean12 = byteList9.add((java.lang.Byte) (byte) 100);
        boolean boolean13 = uRIList2.containsAll((java.util.Collection<java.lang.Byte>) byteList9);
        byteList9.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean17 = longList0.removeAll((java.util.Collection<java.lang.Byte>) byteList9);
        org.ccsds.moims.mo.mal.structures.FloatList floatList18 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Object obj38 = byteList24.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream39 = byteList24.stream();
        boolean boolean40 = floatList18.containsAll((java.util.Collection<java.lang.Byte>) byteList24);
        org.ccsds.moims.mo.mal.structures.UShort uShort41 = floatList18.getAreaNumber();
        java.util.stream.Stream<java.lang.Float> floatStream42 = floatList18.stream();
        boolean boolean43 = longList0.contains((java.lang.Object) floatList18);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.lang.Long[] longArray56 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList57 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList57, longArray56);
        java.lang.Object obj59 = longList57.clone();
        int int60 = strList47.indexOf((java.lang.Object) longList57);
        java.lang.Byte[] byteArray65 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList66 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList66, byteArray65);
        boolean boolean69 = byteList66.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray74 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList75 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList75, byteArray74);
        boolean boolean78 = byteList75.add((java.lang.Byte) (byte) 100);
        boolean boolean79 = byteList66.addAll((java.util.Collection<java.lang.Byte>) byteList75);
        java.lang.Object obj80 = byteList66.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream81 = byteList66.stream();
        boolean boolean82 = strList47.retainAll((java.util.Collection<java.lang.Byte>) byteList66);
        org.ccsds.moims.mo.mal.structures.OctetList octetList83 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean84 = strList47.containsAll((java.util.Collection<java.lang.Byte>) octetList83);
        boolean boolean85 = longList0.containsAll((java.util.Collection<java.lang.Byte>) octetList83);
        byte[] byteArray89 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder90 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder91 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger92 = binaryDecoder91.decodeUInteger();
        java.lang.Byte byte93 = binaryDecoder91.decodeOctet();
        java.lang.Integer int94 = binaryDecoder91.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element95 = octetList83.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(byteStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(uShort41);
        org.junit.Assert.assertNotNull(floatStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(byteStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertNotNull(uInteger92);
        org.junit.Assert.assertTrue("'" + byte93 + "' != '" + (byte) -1 + "'", byte93.equals((byte) -1));
        org.junit.Assert.assertNull(int94);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob14 = binaryDecoder13.decodeNullableBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        java.lang.Integer int1 = longList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element2 = longList0.createElement();
        java.lang.Integer int3 = longList0.getTypeShortForm();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        try {
            longList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-13) + "'", int1.equals((-13)));
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-13) + "'", int3.equals((-13)));
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity2 = new esa.mo.com.impl.archive.entities.DomainHolderEntity(7, "18446744073709551615");
        int int3 = domainHolderEntity2.getId();
        int int4 = domainHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 7 + "'", int3 == 7);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 7 + "'", int4 == 7);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Long) 4294967295L);
        java.lang.Long long2 = union1.getLongValue();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = union1.getAreaVersion();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        try {
            uOctet3.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 4294967295L + "'", long2.equals(4294967295L));
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime2 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = fineTime2.getServiceNumber();
        long long4 = fineTime2.getValue();
        try {
            binaryEncoder1.encodeFineTime(fineTime2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger8 = binaryDecoder7.decodeUInteger();
        java.lang.Float[] floatArray14 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList15 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList15, floatArray14);
        java.lang.Boolean[] booleanArray18 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList19 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList19, booleanArray18);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        boolean boolean38 = byteList35.add((java.lang.Byte) (byte) 100);
        boolean boolean39 = byteList26.addAll((java.util.Collection<java.lang.Byte>) byteList35);
        java.lang.Object obj40 = byteList26.clone();
        boolean boolean41 = booleanList19.contains((java.lang.Object) byteList26);
        int int42 = floatList15.lastIndexOf((java.lang.Object) booleanList19);
        boolean boolean43 = floatList15.isEmpty();
        boolean boolean44 = uInteger8.equals((java.lang.Object) boolean43);
        long long45 = uInteger8.getValue();
        try {
            binaryEncoder1.encodeUInteger(uInteger8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(uInteger8);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 100L + "'", long45 == 100L);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
        uShortList2.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element6 = uOctet5.createElement();
        int int7 = uShortList2.indexOf((java.lang.Object) element6);
        boolean boolean8 = booleanList0.contains((java.lang.Object) uShortList2);
        uShortList2.ensureCapacity((int) (short) 0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI14 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject12.setSourceURI(uRI14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = uRI14.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = uRI14.getAreaNumber();
        try {
            uShortList2.add((int) 'a', uShort17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertNotNull(uShort17);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        org.ccsds.moims.mo.mal.structures.LongList longList56 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byteList65.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean73 = longList56.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean74 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byte[] byteArray78 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray78);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime80 = binaryDecoder79.decodeFineTime();
        boolean boolean81 = booleanList10.remove((java.lang.Object) fineTime80);
        java.lang.Long long82 = fineTime80.getShortForm();
        java.io.OutputStream outputStream83 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder84 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream83);
        byte byte86 = binaryEncoder84.internalEncodeAttributeType((byte) 100);
        try {
            fineTime80.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertNotNull(fineTime80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 281474993487889L + "'", long82.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + byte86 + "' != '" + (byte) 100 + "'", byte86 == (byte) 100);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = floatList0.getServiceNumber();
        floatList0.clear();
        java.io.OutputStream outputStream10 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder11 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream10);
        try {
            floatList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.math.BigInteger bigInteger2 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong3 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uLong3.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity7 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long8 = objectTypeHolderEntity7.getObjectType();
        boolean boolean9 = uLong3.equals((java.lang.Object) long8);
        java.lang.Integer int10 = uLong3.getTypeShortForm();
        try {
            binaryEncoder1.encodeNullableAttribute((org.ccsds.moims.mo.mal.structures.Attribute) uLong3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487879L + "'", long8.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 14 + "'", int10.equals(14));
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) 13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        java.lang.Float[] floatArray2 = new java.lang.Float[] { 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList3 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList3, floatArray2);
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        int int15 = strList13.size();
        boolean boolean16 = doubleList8.equals((java.lang.Object) strList13);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.lang.Long[] longArray29 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList30 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList30, longArray29);
        java.lang.Object obj32 = longList30.clone();
        int int33 = strList20.indexOf((java.lang.Object) longList30);
        java.util.ListIterator<java.lang.String> strItor34 = strList20.listIterator();
        java.lang.Short[] shortArray38 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList39 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList39, shortArray38);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray46 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList47 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList47, uRIArray46);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        boolean boolean58 = uRIList47.containsAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean59 = strList44.containsAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean60 = shortList39.contains((java.lang.Object) byteList54);
        boolean boolean61 = strList20.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean62 = doubleList8.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean63 = floatList3.remove((java.lang.Object) byteList54);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList65 = new org.ccsds.moims.mo.mal.structures.UShortList(16);
        boolean boolean66 = floatList3.remove((java.lang.Object) uShortList65);
        java.lang.String str67 = uShortList65.toString();
        java.io.OutputStream outputStream68 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder69 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream68);
        try {
            uShortList65.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(uRIArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "[]" + "'", str67.equals("[]"));
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int7 = uRIList6.size();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray18 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList19 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList19, uRIArray18);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = uRIList19.containsAll((java.util.Collection<java.lang.Byte>) byteList26);
        boolean boolean31 = intList16.removeAll((java.util.Collection<java.lang.Byte>) byteList26);
        boolean boolean32 = uRIList6.removeAll((java.util.Collection<java.lang.Byte>) byteList26);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder33 = binaryDecoder4.createListDecoder((java.util.List) byteList26);
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger34 = binaryDecoder4.decodeNullableUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uRIArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(mALListDecoder33);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList2 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int3 = uRIList2.getTypeShortForm();
        java.lang.Integer int4 = uRIList2.getTypeShortForm();
        java.lang.Object obj5 = uRIList2.clone();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        int int12 = uRIList2.lastIndexOf((java.lang.Object) binaryDecoder11);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger13 = binaryDecoder11.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = uInteger13.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element15 = uInteger13.createElement();
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20, shortArray19);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray27 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList28 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList28, uRIArray27);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        boolean boolean38 = byteList35.add((java.lang.Byte) (byte) 100);
        boolean boolean39 = uRIList28.containsAll((java.util.Collection<java.lang.Byte>) byteList35);
        boolean boolean40 = strList25.containsAll((java.util.Collection<java.lang.Byte>) byteList35);
        boolean boolean41 = shortList20.contains((java.lang.Object) byteList35);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = byteList50.isEmpty();
        boolean boolean56 = shortList20.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        java.util.stream.Stream<java.lang.Short> shortStream57 = shortList20.stream();
        boolean boolean58 = uInteger13.equals((java.lang.Object) shortList20);
        try {
            binaryEncoder1.encodeNullableUInteger(uInteger13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(uInteger13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(uRIArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(shortStream57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Double double7 = binaryDecoder6.decodeNullableDouble();
        byte[] byteArray8 = binaryDecoder6.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8, 0);
        try {
            binaryEncoder1.directEncodeBytes(byteArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals((double) double7, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray8);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.Element element13 = blob12.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = blob12.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = uOctet14.getAreaVersion();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertNotNull(uOctet15);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        try {
            java.lang.Object obj2 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) (-2), "100");
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchFieldException; message: 100");
        } catch (java.lang.NoSuchFieldException e) {
        }
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        try {
            java.lang.String str13 = binaryDecoder9.decodeNullableString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.Duration duration7 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = duration7.getServiceNumber();
        try {
            binaryEncoder1.encodeNullableDuration(duration7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(uShort8);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeShort((java.lang.Short) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.math.BigInteger bigInteger2 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong3 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger2);
        java.lang.Integer int4 = uLong3.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uLong3.getAreaNumber();
        try {
            binaryEncoder1.encodeULong(uLong3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 14 + "'", int4.equals(14));
        org.junit.Assert.assertNotNull(uShort5);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = floatList0.getServiceNumber();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.Element element14 = uShort8.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
        org.ccsds.moims.mo.mal.structures.ULong uLong15 = binaryDecoder13.decodeNullableULong();
        try {
            java.lang.Short short16 = binaryDecoder13.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNull(uLong15);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeFloat((java.lang.Float) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.URI uRI78 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = uRI78.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort80 = uRI78.getServiceNumber();
        boolean boolean81 = uRIList8.add(uRI78);
        java.lang.Long long82 = uRI78.getShortForm();
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNotNull(uOctet79);
        org.junit.Assert.assertNotNull(uShort80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 281474993487890L + "'", long82.equals(281474993487890L));
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((-2), "");
        int int3 = providerURIHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-2) + "'", int3 == (-2));
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.URIList uRIList4 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int5 = uRIList4.getTypeShortForm();
        java.lang.Integer int6 = uRIList4.getTypeShortForm();
        java.lang.Object obj7 = uRIList4.clone();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        int int14 = uRIList4.lastIndexOf((java.lang.Object) binaryDecoder13);
        org.ccsds.moims.mo.mal.structures.Duration duration15 = binaryDecoder13.decodeDuration();
        double double16 = duration15.getValue();
        java.lang.Short[] shortArray20 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList21 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList21, shortArray20);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray28 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList29, uRIArray28);
        java.lang.Byte[] byteArray35 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList36 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList36, byteArray35);
        boolean boolean39 = byteList36.add((java.lang.Byte) (byte) 100);
        boolean boolean40 = uRIList29.containsAll((java.util.Collection<java.lang.Byte>) byteList36);
        boolean boolean41 = strList26.containsAll((java.util.Collection<java.lang.Byte>) byteList36);
        boolean boolean42 = shortList21.contains((java.lang.Object) byteList36);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray43 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList44 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList44, uRIArray43);
        java.lang.Byte[] byteArray50 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList51 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList51, byteArray50);
        boolean boolean54 = byteList51.add((java.lang.Byte) (byte) 100);
        boolean boolean55 = uRIList44.containsAll((java.util.Collection<java.lang.Byte>) byteList51);
        boolean boolean56 = byteList51.isEmpty();
        boolean boolean57 = shortList21.containsAll((java.util.Collection<java.lang.Byte>) byteList51);
        java.lang.String str58 = shortList21.toString();
        boolean boolean59 = duration15.equals((java.lang.Object) str58);
        try {
            binaryEncoder1.encodeDuration(duration15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-18) + "'", int5.equals((-18)));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-18) + "'", int6.equals((-18)));
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2.47E-322d + "'", double16 == 2.47E-322d);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(uRIArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(uRIArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "[-1, 0, 100]" + "'", str58.equals("[-1, 0, 100]"));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        try {
            java.lang.Byte byte13 = binaryDecoder9.decodeOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uLong1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = uLong1.getAreaVersion();
        try {
            java.lang.Object obj5 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) uOctet3, "[-1, 0, 100]");
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchFieldException; message: [-1, 0, 100]");
        } catch (java.lang.NoSuchFieldException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uOctet3);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.util.List list2 = null;
        try {
            org.ccsds.moims.mo.mal.MALListEncoder mALListEncoder3 = binaryEncoder1.createListEncoder(list2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        java.lang.Short short12 = binaryDecoder9.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort13 = binaryDecoder9.decodeUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertTrue("'" + short12 + "' != '" + (short) -64 + "'", short12.equals((short) -64));
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList3 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList3.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = doubleList3.getAreaNumber();
        java.lang.Long long6 = doubleList3.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream7 = doubleList3.parallelStream();
        boolean boolean9 = doubleList3.add((java.lang.Double) 0.0d);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 10 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        java.util.Spliterator<java.lang.Byte> byteSpliterator14 = byteList12.spliterator();
        boolean boolean15 = doubleList3.containsAll((java.util.Collection<java.lang.Byte>) byteList12);
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        org.ccsds.moims.mo.mal.structures.Blob blob22 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray19);
        int int23 = blob22.getOffset();
        boolean boolean24 = doubleList3.equals((java.lang.Object) blob22);
        try {
            binaryEncoder1.encodeNullableBlob(blob22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265083L + "'", long6.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(byteSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType2 = eventCOMObject0.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        eventCOMObject0.setSourceURI(uRI5);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject8.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier10 = eventCOMObject8.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject11 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject11.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType16 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription17 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType16);
        eventCOMObject11.setObjType(objectType16);
        java.lang.Long long19 = eventCOMObject11.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId20 = eventCOMObject11.getObjectId();
        eventCOMObject8.setSource(objectId20);
        org.ccsds.moims.mo.mal.structures.Time time22 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int23 = time22.getTypeShortForm();
        eventCOMObject8.setTimestamp(time22);
        eventCOMObject0.setTimestamp(time22);
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = time22.getAreaNumber();
        java.lang.Long long27 = uShort26.getShortForm();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(objectType2);
        org.junit.Assert.assertNull(objectId9);
        org.junit.Assert.assertNull(identifier10);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 4294967295L + "'", long19.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 16 + "'", int23.equals(16));
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 281474993487882L + "'", long27.equals(281474993487882L));
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = uRIList58.getAreaNumber();
        byte[] byteArray74 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder75 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray74);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder76 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray74);
        java.lang.Integer int77 = binaryDecoder76.decodeInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element78 = uRIList58.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 50 + "'", int77.equals(50));
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        short short8 = uOctet6.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = uOctet6.getServiceNumber();
        org.ccsds.moims.mo.mal.MALEncoder mALEncoder10 = null;
        try {
            uShort9.encode(mALEncoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short8 + "' != '" + (short) 127 + "'", short8 == (short) 127);
        org.junit.Assert.assertNotNull(uShort9);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Long long3 = doubleList1.getShortForm();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        try {
            doubleList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265083L + "'", long3.equals(281475010265083L));
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeFloat((java.lang.Float) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = uRIList58.getAreaNumber();
        boolean boolean71 = uRIList58.isEmpty();
        byte[] byteArray75 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder76 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray75);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime77 = binaryDecoder76.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI78 = binaryDecoder76.decodeURI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = uRI78.getAreaVersion();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList89 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList89, intArray88);
        int int92 = intList89.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream93 = intList89.stream();
        java.util.Iterator<java.lang.Integer> intItor94 = intList89.iterator();
        boolean boolean95 = uRI78.equals((java.lang.Object) intItor94);
        boolean boolean96 = uRIList58.add(uRI78);
        org.ccsds.moims.mo.mal.structures.UShort uShort97 = uRIList58.getServiceNumber();
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertNotNull(fineTime77);
        org.junit.Assert.assertNotNull(uRI78);
        org.junit.Assert.assertNotNull(uOctet79);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(intStream93);
        org.junit.Assert.assertNotNull(intItor94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", !boolean95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96);
        org.junit.Assert.assertNotNull(uShort97);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = binaryDecoder9.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration13 = binaryDecoder9.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertNotNull(uOctet12);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject4.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier7 = null;
        eventCOMObject4.setNetworkZone(identifier7);
        org.ccsds.moims.mo.mal.structures.URI uRI9 = eventCOMObject4.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject10 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId11 = eventCOMObject10.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier12 = eventCOMObject10.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject13 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject13.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType18 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription19 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType18);
        eventCOMObject13.setObjType(objectType18);
        java.lang.Long long21 = eventCOMObject13.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId22 = eventCOMObject13.getObjectId();
        eventCOMObject10.setSource(objectId22);
        org.ccsds.moims.mo.mal.structures.Time time24 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int25 = time24.getTypeShortForm();
        eventCOMObject10.setTimestamp(time24);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = time24.getAreaVersion();
        java.lang.String str28 = time24.toString();
        eventCOMObject4.setTimestamp(time24);
        try {
            binaryEncoder1.encodeTime(time24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNull(objectId11);
        org.junit.Assert.assertNull(identifier12);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 4294967295L + "'", long21.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 16 + "'", int25.equals(16));
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "0" + "'", str28.equals("0"));
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7, 6);
        try {
            binaryEncoder1.directEncodeBytes(byteArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(byteArray7);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        java.lang.String str13 = duration12.toString();
        org.ccsds.moims.mo.mal.MALEncoder mALEncoder14 = null;
        try {
            duration12.encode(mALEncoder14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "0.0" + "'", str13.equals("0.0"));
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Float float12 = binaryDecoder11.decodeNullableFloat();
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong13 = binaryDecoder11.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((float) float12, Float.NaN, 0);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Integer int12 = binaryDecoder9.decodeNullableInteger();
        try {
            java.lang.Long long14 = binaryDecoder9.decodeAbstractElementType(true);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12.equals(0));
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = identifier0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = identifier0.getAreaNumber();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        byte byte6 = binaryEncoder4.internalEncodeAttributeType((byte) 100);
        byte byte8 = binaryEncoder4.internalEncodeAttributeType((byte) 10);
        try {
            identifier0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 10 + "'", byte8 == (byte) 10);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        boolean boolean3 = booleanList0.add((java.lang.Boolean) true);
        boolean boolean5 = booleanList0.remove((java.lang.Object) 281474993487884L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = booleanList0.getAreaVersion();
        java.io.OutputStream outputStream7 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder8 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream7);
        byte byte10 = binaryEncoder8.internalEncodeAttributeType((byte) 100);
        byte byte12 = binaryEncoder8.internalEncodeAttributeType((byte) 10);
        try {
            uOctet6.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 100 + "'", byte10 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 10 + "'", byte12 == (byte) 10);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType2 = eventCOMObject0.getObjType();
        org.ccsds.moims.mo.com.structures.ObjectType objectType3 = eventCOMObject0.getObjType();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(objectType2);
        org.junit.Assert.assertNull(objectType3);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element1 = floatList0.createElement();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Byte byte8 = binaryDecoder7.decodeOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Element element9 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 100 + "'", byte8.equals((byte) 100));
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = identifier2.getAreaVersion();
        java.lang.String str4 = identifier2.getValue();
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
    }
}
