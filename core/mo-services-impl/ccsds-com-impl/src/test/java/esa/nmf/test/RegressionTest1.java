package esa.nmf.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = binaryDecoder5.decodeUOctet();
        java.math.BigInteger bigInteger10 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong11 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger10);
        java.lang.Integer int12 = uLong11.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element13 = uLong11.createElement();
        org.ccsds.moims.mo.mal.structures.Element element14 = uLong11.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = uLong11.getAreaNumber();
        try {
            org.ccsds.moims.mo.mal.structures.Element element16 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 14 + "'", int12.equals(14));
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(uShort15);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob("0.0".getBytes());
        try {
            binaryEncoder1.encodeBlob(blob7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.Union union7 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        java.lang.Integer int8 = union7.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = union7.getAreaNumber();
        try {
            binaryEncoder1.encodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8.equals(2));
        org.junit.Assert.assertNotNull(uShort9);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob6 = binaryDecoder4.decodeNullableBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = blob6.getServiceNumber();
        java.io.OutputStream outputStream8 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder9 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream8);
        byte byte11 = binaryEncoder9.internalEncodeAttributeType((byte) 100);
        byte byte13 = binaryEncoder9.internalEncodeAttributeType((byte) 10);
        try {
            blob6.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 100 + "'", byte11 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 10 + "'", byte13 == (byte) 10);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableBoolean((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableOctet((java.lang.Byte) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeString("[10]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList18 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList18, booleanArray17);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = byteList25.addAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.lang.Object obj39 = byteList25.clone();
        boolean boolean40 = booleanList18.contains((java.lang.Object) byteList25);
        boolean boolean41 = longList13.remove((java.lang.Object) boolean40);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        int int51 = longList13.lastIndexOf((java.lang.Object) byteList47);
        org.ccsds.moims.mo.mal.structures.OctetList octetList52 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = octetList52.getServiceNumber();
        boolean boolean54 = longList13.removeAll((java.util.Collection<java.lang.Byte>) octetList52);
        boolean boolean55 = floatList0.remove((java.lang.Object) boolean54);
        java.lang.Long long56 = floatList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList57 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int58 = uRIList57.getTypeShortForm();
        java.lang.Integer int59 = uRIList57.getTypeShortForm();
        java.lang.Object obj60 = uRIList57.clone();
        byte[] byteArray64 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder65 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray64);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray64);
        int int67 = uRIList57.lastIndexOf((java.lang.Object) binaryDecoder66);
        org.ccsds.moims.mo.mal.structures.Duration duration68 = binaryDecoder66.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Time time69 = binaryDecoder66.decodeTime();
        try {
            org.ccsds.moims.mo.mal.structures.Element element70 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uShort53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 281475010265084L + "'", long56.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-18) + "'", int58.equals((-18)));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(time69);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        boolean boolean8 = union1.equals((java.lang.Object) byteArray5);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5, 0, 14);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = blob12.getAreaNumber();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(uShort13);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = null;
        try {
            binaryEncoder1.encodeDuration(duration2);
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Null value supplied in a non-nullable field");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject2 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI4 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject2.setSourceURI(uRI4);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uRI4.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uRI4.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = uRI4.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element9 = uRI4.createElement();
        try {
            binaryEncoder1.encodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uRI4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(element9);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType3 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject0.setObjType(objectType3);
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        java.lang.Object obj20 = longList18.clone();
        int int21 = strList8.indexOf((java.lang.Object) longList18);
        java.util.stream.Stream<java.lang.Long> longStream22 = longList18.parallelStream();
        longList18.add(2, (java.lang.Long) 281475010265070L);
        java.util.stream.Stream<java.lang.Long> longStream26 = longList18.parallelStream();
        org.ccsds.moims.mo.mal.structures.URI uRI28 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str29 = uRI28.toString();
        int int30 = longList18.indexOf((java.lang.Object) uRI28);
        eventCOMObject0.setSourceURI(uRI28);
        byte[] byteArray35 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger38 = binaryDecoder37.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.Element element39 = uInteger38.createElement();
        org.ccsds.moims.mo.mal.structures.FloatList floatList40 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int42 = floatList40.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int43 = floatList40.getTypeShortForm();
        boolean boolean44 = floatList40.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator45 = floatList40.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = floatList40.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort47 = floatList40.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = floatList40.getServiceNumber();
        byte[] byteArray52 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder53 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray52);
        org.ccsds.moims.mo.mal.structures.Element element54 = uShort48.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder53);
        org.ccsds.moims.mo.mal.structures.Element element55 = uInteger38.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder53);
        eventCOMObject0.setBody(element55);
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNotNull(objectType3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(longStream22);
        org.junit.Assert.assertNotNull(longStream26);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertNotNull(uInteger38);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-4) + "'", int43.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(floatSpliterator45);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertNotNull(uShort47);
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(element55);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 100);
        boolean boolean16 = uRIList5.containsAll((java.util.Collection<java.lang.Byte>) byteList12);
        int int18 = uRIList5.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        int int39 = byteList33.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean40 = uRIList5.removeAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Double[] doubleArray46 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList47 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList47, doubleArray46);
        org.ccsds.moims.mo.mal.structures.OctetList octetList49 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = octetList49.getServiceNumber();
        boolean boolean51 = doubleList47.containsAll((java.util.Collection<java.lang.Byte>) octetList49);
        boolean boolean52 = uRIList5.retainAll((java.util.Collection<java.lang.Byte>) octetList49);
        java.lang.Object obj53 = uRIList5.clone();
        org.ccsds.moims.mo.mal.structures.Time time54 = new org.ccsds.moims.mo.mal.structures.Time();
        int int55 = uRIList5.indexOf((java.lang.Object) time54);
        long long56 = time54.getValue();
        try {
            binaryEncoder1.encodeTime(time54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        java.lang.Long[] longArray11 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
        java.lang.Object obj14 = longList12.clone();
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Object obj38 = byteList24.clone();
        boolean boolean39 = booleanList17.contains((java.lang.Object) byteList24);
        boolean boolean40 = longList12.remove((java.lang.Object) boolean39);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        int int50 = longList12.lastIndexOf((java.lang.Object) byteList46);
        int int51 = longList12.size();
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder56 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray55);
        java.lang.Double double57 = binaryDecoder56.decodeNullableDouble();
        byte[] byteArray58 = binaryDecoder56.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob59 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray58);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.lang.Long[] longArray72 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList73 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList73, longArray72);
        java.lang.Object obj75 = longList73.clone();
        int int76 = strList63.indexOf((java.lang.Object) longList73);
        java.util.ListIterator<java.lang.String> strItor77 = strList63.listIterator();
        java.lang.String str78 = strList63.toString();
        java.lang.Double[] doubleArray81 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList82 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList82, doubleArray81);
        java.lang.String[] strArray86 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        int int89 = strList87.size();
        boolean boolean90 = doubleList82.equals((java.lang.Object) strList87);
        boolean boolean91 = strList63.remove((java.lang.Object) strList87);
        boolean boolean92 = blob59.equals((java.lang.Object) strList87);
        org.ccsds.moims.mo.mal.structures.UShort uShort93 = blob59.getServiceNumber();
        int int94 = longList12.lastIndexOf((java.lang.Object) uShort93);
        try {
            binaryEncoder1.encodeNullableUShort(uShort93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7 + "'", int51 == 7);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals((double) double57, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strItor77);
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "[hi!, ]" + "'", str78.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertNotNull(uShort93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) (short) 1);
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) 100);
        try {
            booleanList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 100 + "'", byte5 == (byte) 100);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Duration duration23 = binaryDecoder21.decodeDuration();
        int int24 = integerList1.lastIndexOf((java.lang.Object) binaryDecoder21);
        java.lang.Short short25 = binaryDecoder21.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob26 = binaryDecoder21.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + short25 + "' != '" + (short) -64 + "'", short25.equals((short) -64));
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableBoolean((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime6 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = fineTime6.getServiceNumber();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        java.lang.Double double13 = binaryDecoder12.decodeNullableDouble();
        byte[] byteArray14 = binaryDecoder12.getRemainingEncodedData();
        boolean boolean15 = fineTime6.equals((java.lang.Object) byteArray14);
        try {
            binaryEncoder1.directEncodeBytes(byteArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals((double) double13, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        int int14 = uRIList1.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        int int35 = byteList29.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean36 = uRIList1.removeAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList43 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList43, doubleArray42);
        org.ccsds.moims.mo.mal.structures.OctetList octetList45 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = octetList45.getServiceNumber();
        boolean boolean47 = doubleList43.containsAll((java.util.Collection<java.lang.Byte>) octetList45);
        boolean boolean48 = uRIList1.retainAll((java.util.Collection<java.lang.Byte>) octetList45);
        java.lang.Object obj49 = uRIList1.clone();
        org.ccsds.moims.mo.mal.structures.Time time50 = new org.ccsds.moims.mo.mal.structures.Time();
        int int51 = uRIList1.indexOf((java.lang.Object) time50);
        java.io.OutputStream outputStream52 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder53 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream52);
        byte byte55 = binaryEncoder53.internalEncodeAttributeType((byte) 100);
        byte byte57 = binaryEncoder53.internalEncodeAttributeType((byte) 10);
        try {
            time50.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + byte55 + "' != '" + (byte) 100 + "'", byte55 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte57 + "' != '" + (byte) 10 + "'", byte57 == (byte) 10);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Double double7 = binaryDecoder6.decodeNullableDouble();
        byte[] byteArray8 = binaryDecoder6.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob14 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = blob14.getAreaNumber();
        try {
            binaryEncoder1.encodeNullableBlob(blob14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals((double) double7, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(uShort15);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl3 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl4 = cOMServicesConsumer0.getEventService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl5 = cOMServicesConsumer0.getArchiveSyncService();
        cOMServicesConsumer0.closeConnections();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl3);
        org.junit.Assert.assertNull(eventConsumerServiceImpl4);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl5);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeFloat((java.lang.Float) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.lang.Long long4 = doubleList1.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream5 = doubleList1.parallelStream();
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList13 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList13, shortArray12);
        java.util.ListIterator<java.lang.Short> shortItor15 = shortList13.listIterator();
        int int16 = doubleList8.indexOf((java.lang.Object) shortList13);
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean18 = blob17.isURLBased();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.Element element24 = blob17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
        boolean boolean25 = doubleList8.contains((java.lang.Object) blob17);
        java.util.ListIterator<java.lang.Double> doubleItor27 = doubleList8.listIterator(1);
        doubleList8.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray29 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList30, uShortArray29);
        uShortList30.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet33 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element34 = uOctet33.createElement();
        int int35 = uShortList30.indexOf((java.lang.Object) element34);
        boolean boolean37 = uShortList30.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor38 = uShortList30.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean40 = uShortList30.add(uShort39);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        boolean boolean59 = byteList46.addAll((java.util.Collection<java.lang.Byte>) byteList55);
        java.lang.Object obj60 = byteList46.clone();
        boolean boolean61 = uShortList30.removeAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean62 = doubleList8.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean63 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        java.lang.Object obj64 = null;
        int int65 = byteList46.indexOf(obj64);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265083L + "'", long4.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(shortItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(doubleItor27);
        org.junit.Assert.assertNotNull(uShortArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uOctet33);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertNotNull(uShortItor38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Union union3 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        java.lang.Long long4 = union3.getShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList5 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element6 = booleanList5.createElement();
        boolean boolean8 = booleanList5.add((java.lang.Boolean) true);
        boolean boolean10 = booleanList5.remove((java.lang.Object) 281474993487884L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = booleanList5.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Union union13 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        int int14 = booleanList5.lastIndexOf((java.lang.Object) (-1.0d));
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = booleanList5.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = booleanList5.getServiceNumber();
        java.lang.Object obj17 = booleanList5.clone();
        boolean boolean18 = union3.equals((java.lang.Object) booleanList5);
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = booleanList5.getAreaNumber();
        try {
            binaryEncoder1.encodeAttribute((org.ccsds.moims.mo.mal.structures.Attribute) uShort19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487874L + "'", long4.equals(281474993487874L));
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(uOctet15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(uShort19);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = eventCOMObject0.getObjType();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertNotNull(objectType8);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        org.ccsds.moims.mo.mal.structures.Element element4 = floatList0.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        boolean boolean26 = byteList13.addAll((java.util.Collection<java.lang.Byte>) byteList22);
        int int28 = byteList22.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean29 = uRIList6.retainAll((java.util.Collection<java.lang.Byte>) byteList22);
        boolean boolean30 = floatList0.containsAll((java.util.Collection<java.lang.Byte>) byteList22);
        org.ccsds.moims.mo.mal.structures.URIList uRIList31 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int32 = uRIList31.getTypeShortForm();
        java.lang.Integer int33 = uRIList31.getTypeShortForm();
        java.lang.Object obj34 = uRIList31.clone();
        byte[] byteArray38 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder39 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        int int41 = uRIList31.lastIndexOf((java.lang.Object) binaryDecoder40);
        org.ccsds.moims.mo.mal.structures.Duration duration42 = binaryDecoder40.decodeDuration();
        java.lang.Byte byte43 = binaryDecoder40.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Time time44 = binaryDecoder40.decodeNullableTime();
        byte[] byteArray45 = binaryDecoder40.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Element element46 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-18) + "'", int32.equals((-18)));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-18) + "'", int33.equals((-18)));
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + byte43 + "' != '" + (byte) -1 + "'", byte43.equals((byte) -1));
        org.junit.Assert.assertNull(time44);
        org.junit.Assert.assertNotNull(byteArray45);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.URIList uRIList4 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int5 = uRIList4.getTypeShortForm();
        java.lang.Integer int6 = uRIList4.getTypeShortForm();
        java.lang.Object obj7 = uRIList4.clone();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        int int14 = uRIList4.lastIndexOf((java.lang.Object) binaryDecoder13);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger15 = binaryDecoder13.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = uInteger15.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = uInteger15.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = uInteger15.getServiceNumber();
        java.lang.Long long19 = uInteger15.getShortForm();
        try {
            binaryEncoder1.encodeNullableAttribute((org.ccsds.moims.mo.mal.structures.Attribute) uInteger15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-18) + "'", int5.equals((-18)));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-18) + "'", int6.equals((-18)));
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(uInteger15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 281474993487884L + "'", long19.equals(281474993487884L));
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        esa.mo.com.impl.archive.db.COMObjectEntityPK cOMObjectEntityPK3 = esa.mo.com.impl.archive.entities.COMObjectEntity.generatePK((java.lang.Integer) 2, (java.lang.Integer) 3, (java.lang.Long) 281474993487879L);
        org.junit.Assert.assertNotNull(cOMObjectEntityPK3);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((-2), "[hi!, ]");
        java.lang.String str3 = providerURIHolderEntity2.getProviderURIString();
        java.lang.String str4 = providerURIHolderEntity2.getProviderURIString();
        int int5 = providerURIHolderEntity2.getId();
        int int6 = providerURIHolderEntity2.getId();
        java.lang.String str7 = providerURIHolderEntity2.getProviderURIString();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[hi!, ]" + "'", str3.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "[hi!, ]" + "'", str4.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-2) + "'", int5 == (-2));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2) + "'", int6 == (-2));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[hi!, ]" + "'", str7.equals("[hi!, ]"));
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Integer int7 = binaryDecoder5.decodeInteger();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList8 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element9 = booleanList8.createElement();
        boolean boolean11 = booleanList8.add((java.lang.Boolean) true);
        boolean boolean13 = booleanList8.remove((java.lang.Object) 281474993487884L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = booleanList8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Union union16 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        int int17 = booleanList8.lastIndexOf((java.lang.Object) (-1.0d));
        org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = booleanList8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = booleanList8.getServiceNumber();
        try {
            org.ccsds.moims.mo.mal.structures.Element element20 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-64) + "'", int7.equals((-64)));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(uOctet18);
        org.junit.Assert.assertNotNull(uShort19);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.math.BigInteger bigInteger2 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong3 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger2);
        org.ccsds.moims.mo.mal.structures.Element element4 = uLong3.createElement();
        try {
            binaryEncoder1.encodeNullableAttribute((org.ccsds.moims.mo.mal.structures.Attribute) uLong3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertNotNull(element4);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType2 = eventCOMObject0.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        eventCOMObject0.setSourceURI(uRI5);
        org.ccsds.moims.mo.mal.structures.Time time8 = eventCOMObject0.getTimestamp();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(objectType2);
        org.junit.Assert.assertNull(time8);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = floatList0.getServiceNumber();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.Element element14 = uShort8.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob15 = binaryDecoder13.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Size must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(element14);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        java.lang.Long long2 = duration1.getShortForm();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        byte byte6 = binaryEncoder4.internalEncodeAttributeType((byte) 100);
        try {
            duration1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487875L + "'", long2.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6 == (byte) 100);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableBoolean((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.Identifier identifier4 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = identifier4.getAreaVersion();
        java.lang.String str6 = identifier4.getValue();
        org.ccsds.moims.mo.mal.structures.Element element7 = identifier4.createElement();
        try {
            binaryEncoder1.encodeIdentifier(identifier4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableBoolean((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = floatList0.getServiceNumber();
        int int8 = floatList0.lastIndexOf((java.lang.Object) (-11));
        java.lang.String str9 = floatList0.toString();
        java.io.OutputStream outputStream10 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder11 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream10);
        byte byte13 = binaryEncoder11.internalEncodeAttributeType((byte) 100);
        byte byte15 = binaryEncoder11.internalEncodeAttributeType((byte) 10);
        try {
            floatList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]" + "'", str9.equals("[]"));
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 100 + "'", byte13 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) 10 + "'", byte15 == (byte) 10);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Duration duration7 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = duration7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element9 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) duration7);
        try {
            java.lang.Short short10 = binaryDecoder5.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(element9);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.LongList longList6 = new org.ccsds.moims.mo.mal.structures.LongList();
        java.lang.Integer int7 = longList6.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = longList6.getAreaNumber();
        try {
            binaryEncoder1.encodeUShort(uShort8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-13) + "'", int7.equals((-13)));
        org.junit.Assert.assertNotNull(uShort8);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        boolean boolean2 = integerList1.isEmpty();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        java.lang.Integer int10 = binaryDecoder9.decodeInteger();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10.equals(50));
        org.junit.Assert.assertNotNull(uInteger11);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder8.decodeUInteger();
        java.lang.Byte byte10 = binaryDecoder8.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element11 = uRIList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong12 = binaryDecoder8.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -1 + "'", byte10.equals((byte) -1));
        org.junit.Assert.assertNotNull(element11);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType2 = eventCOMObject0.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        eventCOMObject0.setSourceURI(uRI5);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject8.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier10 = eventCOMObject8.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject11 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject11.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType16 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription17 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType16);
        eventCOMObject11.setObjType(objectType16);
        java.lang.Long long19 = eventCOMObject11.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId20 = eventCOMObject11.getObjectId();
        eventCOMObject8.setSource(objectId20);
        org.ccsds.moims.mo.mal.structures.Time time22 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int23 = time22.getTypeShortForm();
        eventCOMObject8.setTimestamp(time22);
        eventCOMObject0.setTimestamp(time22);
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = time22.getServiceNumber();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(objectType2);
        org.junit.Assert.assertNull(objectId9);
        org.junit.Assert.assertNull(identifier10);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 4294967295L + "'", long19.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 16 + "'", int23.equals(16));
        org.junit.Assert.assertNotNull(uShort26);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        boolean boolean11 = integerList1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.Float float7 = binaryDecoder5.decodeNullableFloat();
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = binaryDecoder5.decodeNullableUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.0f + "'", float7.equals(0.0f));
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = binaryDecoder8.decodeNullableUOctet();
        java.lang.Long long10 = uOctet9.getShortForm();
        java.lang.Long long11 = uOctet9.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Duration duration23 = binaryDecoder21.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element24 = uOctet9.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        byte[] byteArray25 = binaryDecoder21.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Element element26 = shortList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487880L + "'", long10.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 281474993487880L + "'", long11.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(byteArray25);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Blob blob10 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray7);
        org.ccsds.moims.mo.mal.structures.Blob blob13 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray7, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger15 = binaryDecoder14.decodeUInteger();
        byte[] byteArray16 = binaryDecoder14.getRemainingEncodedData();
        try {
            binaryEncoder1.directEncodeBytes(byteArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uInteger15);
        org.junit.Assert.assertNotNull(byteArray16);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        esa.mo.com.impl.archive.db.COMObjectEntityPK cOMObjectEntityPK3 = esa.mo.com.impl.archive.entities.COMObjectEntity.generatePK((java.lang.Integer) 65535, (java.lang.Integer) 0, (java.lang.Long) 281475010265079L);
        org.junit.Assert.assertNotNull(cOMObjectEntityPK3);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.LongList longList5 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        java.util.stream.Stream<java.lang.Long> longStream6 = longList5.stream();
        java.lang.Integer int7 = longList5.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = longList5.getAreaVersion();
        try {
            binaryEncoder1.encodeNullableUOctet(uOctet8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertNotNull(longStream6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-13) + "'", int7.equals((-13)));
        org.junit.Assert.assertNotNull(uOctet8);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger5 = binaryDecoder4.decodeNullableUInteger();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.lang.Long[] longArray18 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList19 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList19, longArray18);
        java.lang.Object obj21 = longList19.clone();
        int int22 = strList9.indexOf((java.lang.Object) longList19);
        try {
            org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder23 = binaryDecoder4.createListDecoder((java.util.List) longList19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.Identifier identifier4 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = identifier4.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = identifier4.getAreaVersion();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.Blob blob13 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray10);
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray10, 14, 18);
        blob16.detach();
        boolean boolean18 = identifier4.equals((java.lang.Object) blob16);
        java.lang.String str19 = identifier4.getValue();
        try {
            binaryEncoder1.encodeIdentifier(identifier4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime14 = binaryDecoder13.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId5 = eventCOMObject4.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType7 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject4.setObjType(objectType7);
        eventCOMObject0.setObjType(objectType7);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList10 = eventCOMObject0.getDomain();
        org.ccsds.moims.mo.com.structures.ObjectId objectId11 = eventCOMObject0.getObjectId();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList12 = eventCOMObject0.getDomain();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNull(identifier3);
        org.junit.Assert.assertNull(objectId5);
        org.junit.Assert.assertNotNull(objectType7);
        org.junit.Assert.assertNull(identifierList10);
        org.junit.Assert.assertNotNull(objectId11);
        org.junit.Assert.assertNull(identifierList12);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        java.math.BigInteger bigInteger56 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong57 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger56);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = uLong57.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity61 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long62 = objectTypeHolderEntity61.getObjectType();
        boolean boolean63 = uLong57.equals((java.lang.Object) long62);
        boolean boolean64 = booleanList10.remove((java.lang.Object) uLong57);
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = uLong57.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList66 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int67 = uRIList66.getTypeShortForm();
        java.lang.Integer int68 = uRIList66.getTypeShortForm();
        java.lang.Object obj69 = uRIList66.clone();
        byte[] byteArray73 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder74 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray73);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder75 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray73);
        int int76 = uRIList66.lastIndexOf((java.lang.Object) binaryDecoder75);
        java.lang.Boolean boolean77 = binaryDecoder75.decodeBoolean();
        byte[] byteArray78 = binaryDecoder75.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Element element79 = uShort65.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder75);
        try {
            java.lang.Integer int80 = binaryDecoder75.decodeInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 281474993487879L + "'", long62.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-18) + "'", int68.equals((-18)));
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77.equals(true));
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertNotNull(element79);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.Identifier identifier6 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = identifier6.getAreaVersion();
        java.lang.String str8 = identifier6.getValue();
        org.ccsds.moims.mo.mal.structures.Element element9 = identifier6.createElement();
        org.ccsds.moims.mo.mal.structures.Union union11 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Integer) 4);
        java.lang.Integer int12 = union11.getTypeShortForm();
        boolean boolean13 = identifier6.equals((java.lang.Object) union11);
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 11 + "'", int12.equals(11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList1.getAreaNumber();
        java.lang.Object[] objArray3 = shortList1.toArray();
        boolean boolean4 = floatList0.remove((java.lang.Object) shortList1);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList18 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList18, booleanArray17);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = byteList25.addAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.lang.Object obj39 = byteList25.clone();
        boolean boolean40 = booleanList18.contains((java.lang.Object) byteList25);
        boolean boolean41 = longList13.remove((java.lang.Object) boolean40);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray47 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList48 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList48, uRIArray47);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        boolean boolean59 = uRIList48.containsAll((java.util.Collection<java.lang.Byte>) byteList55);
        boolean boolean60 = strList45.containsAll((java.util.Collection<java.lang.Byte>) byteList55);
        int int61 = longList13.lastIndexOf((java.lang.Object) boolean60);
        java.lang.Object obj62 = longList13.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList63 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int64 = uRIList63.getTypeShortForm();
        java.lang.Integer int65 = uRIList63.getTypeShortForm();
        java.lang.Object obj66 = uRIList63.clone();
        byte[] byteArray70 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder71 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder72 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        int int73 = uRIList63.lastIndexOf((java.lang.Object) binaryDecoder72);
        boolean boolean74 = longList13.remove((java.lang.Object) uRIList63);
        boolean boolean76 = longList13.add((java.lang.Long) 281475010265078L);
        boolean boolean77 = shortList1.remove((java.lang.Object) 281475010265078L);
        java.lang.Object[] objArray78 = shortList1.toArray();
        try {
            java.lang.Short short80 = shortList1.remove(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(uRIArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-18) + "'", int64.equals((-18)));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-18) + "'", int65.equals((-18)));
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertNotNull(objArray78);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = identifier0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = identifier0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList3 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int4 = uRIList3.getTypeShortForm();
        java.lang.Integer int5 = uRIList3.getTypeShortForm();
        java.lang.Object obj6 = uRIList3.clone();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        int int13 = uRIList3.lastIndexOf((java.lang.Object) binaryDecoder12);
        org.ccsds.moims.mo.mal.structures.Duration duration14 = binaryDecoder12.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Time time15 = binaryDecoder12.decodeTime();
        try {
            org.ccsds.moims.mo.mal.structures.Element element16 = identifier0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-18) + "'", int5.equals((-18)));
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(time15);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = union1.getAreaVersion();
        java.lang.String str3 = union1.toString();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) -1);
        try {
            union1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "true" + "'", str3.equals("true"));
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7 == (byte) -1);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = fineTime0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uShort1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element3 = uShort2.createElement();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder5.internalEncodeAttributeType((byte) 10);
        try {
            uShort2.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 10 + "'", byte9 == (byte) 10);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        java.lang.Integer int8 = blob0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element9 = blob0.createElement();
        org.ccsds.moims.mo.mal.structures.Element element10 = blob0.createElement();
        java.lang.String str11 = blob0.getURL();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8.equals(1));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime4 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = fineTime4.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = fineTime4.getAreaVersion();
        try {
            binaryEncoder1.encodeNullableFineTime(fineTime4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uOctet6);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime4 = null;
        try {
            binaryEncoder1.encodeFineTime(fineTime4);
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Null value supplied in a non-nullable field");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        java.lang.Long long6 = binaryDecoder4.decodeLong();
        try {
            java.lang.Short short7 = binaryDecoder4.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-64L) + "'", long6.equals((-64L)));
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) '#');
        long long2 = archiveSyncGenAdapter1.noUpdatesReceivedForThisDuration();
        long long3 = archiveSyncGenAdapter1.noUpdatesReceivedForThisDuration();
        long long4 = archiveSyncGenAdapter1.noUpdatesReceivedForThisDuration();
        java.util.ArrayList<byte[]> byteArrayList5 = archiveSyncGenAdapter1.getReceivedChunks();
// flaky:         org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1558616178307L + "'", long2 == 1558616178307L);
// flaky:         org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1558616178308L + "'", long3 == 1558616178308L);
// flaky:         org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1558616178308L + "'", long4 == 1558616178308L);
        org.junit.Assert.assertNotNull(byteArrayList5);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int1 = booleanList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = booleanList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Blob blob3 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean4 = blob3.isURLBased();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Element element10 = blob3.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
        try {
            org.ccsds.moims.mo.mal.structures.Element element11 = uOctet2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2) + "'", int1.equals((-2)));
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(element10);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Time time13 = binaryDecoder9.decodeNullableTime();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI14 = binaryDecoder9.decodeURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12.equals((byte) -1));
        org.junit.Assert.assertNull(time13);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        short short8 = uOctet6.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = uOctet6.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uOctet6.getServiceNumber();
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        boolean boolean19 = byteList16.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        boolean boolean29 = byteList16.addAll((java.util.Collection<java.lang.Byte>) byteList25);
        java.lang.Short[] shortArray33 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList34 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList34, shortArray33);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray41 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList42 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList42, uRIArray41);
        java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList49 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList49, byteArray48);
        boolean boolean52 = byteList49.add((java.lang.Byte) (byte) 100);
        boolean boolean53 = uRIList42.containsAll((java.util.Collection<java.lang.Byte>) byteList49);
        boolean boolean54 = strList39.containsAll((java.util.Collection<java.lang.Byte>) byteList49);
        boolean boolean55 = shortList34.contains((java.lang.Object) byteList49);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray56 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList57 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList57, uRIArray56);
        java.lang.Byte[] byteArray63 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList64 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList64, byteArray63);
        boolean boolean67 = byteList64.add((java.lang.Byte) (byte) 100);
        boolean boolean68 = uRIList57.containsAll((java.util.Collection<java.lang.Byte>) byteList64);
        boolean boolean69 = byteList64.isEmpty();
        boolean boolean70 = shortList34.containsAll((java.util.Collection<java.lang.Byte>) byteList64);
        boolean boolean71 = byteList25.removeAll((java.util.Collection<java.lang.Byte>) byteList64);
        org.ccsds.moims.mo.mal.structures.LongList longList73 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        boolean boolean75 = longList73.equals((java.lang.Object) 6);
        java.lang.Byte[] byteArray80 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList81 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList81, byteArray80);
        boolean boolean84 = byteList81.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray89 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList90 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList90, byteArray89);
        boolean boolean93 = byteList90.add((java.lang.Byte) (byte) 100);
        boolean boolean94 = byteList81.addAll((java.util.Collection<java.lang.Byte>) byteList90);
        java.lang.Object obj95 = byteList81.clone();
        boolean boolean96 = longList73.containsAll((java.util.Collection<java.lang.Byte>) byteList81);
        boolean boolean97 = byteList64.removeAll((java.util.Collection<java.lang.Byte>) byteList81);
        boolean boolean98 = uShort10.equals((java.lang.Object) byteList81);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short8 + "' != '" + (short) 127 + "'", short8 == (short) 127);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(uRIArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(uRIArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", !boolean96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", !boolean98);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        int int11 = uRIList0.size();
        java.lang.Integer int12 = uRIList0.getTypeShortForm();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI14 = uRIList0.remove((-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-18) + "'", int12.equals((-18)));
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType3 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject0.setObjType(objectType3);
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        java.lang.Object obj20 = longList18.clone();
        int int21 = strList8.indexOf((java.lang.Object) longList18);
        java.util.stream.Stream<java.lang.Long> longStream22 = longList18.parallelStream();
        longList18.add(2, (java.lang.Long) 281475010265070L);
        java.util.stream.Stream<java.lang.Long> longStream26 = longList18.parallelStream();
        org.ccsds.moims.mo.mal.structures.URI uRI28 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str29 = uRI28.toString();
        int int30 = longList18.indexOf((java.lang.Object) uRI28);
        eventCOMObject0.setSourceURI(uRI28);
        java.io.OutputStream outputStream32 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder33 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream32);
        byte byte35 = binaryEncoder33.internalEncodeAttributeType((byte) 100);
        byte byte37 = binaryEncoder33.internalEncodeAttributeType((byte) -1);
        try {
            uRI28.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNotNull(objectType3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(longStream22);
        org.junit.Assert.assertNotNull(longStream26);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + byte35 + "' != '" + (byte) 100 + "'", byte35 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte37 + "' != '" + (byte) -1 + "'", byte37 == (byte) -1);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) -64, (short) 1, (short) 127, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList6 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList6, shortArray5);
        java.lang.Long[] longArray15 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList16 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList16, longArray15);
        java.lang.Object obj18 = longList16.clone();
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList21 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList21, booleanArray20);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = byteList28.addAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Object obj42 = byteList28.clone();
        boolean boolean43 = booleanList21.contains((java.lang.Object) byteList28);
        boolean boolean44 = longList16.remove((java.lang.Object) boolean43);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        int int54 = longList16.lastIndexOf((java.lang.Object) byteList50);
        org.ccsds.moims.mo.mal.structures.OctetList octetList55 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort56 = octetList55.getServiceNumber();
        boolean boolean57 = longList16.removeAll((java.util.Collection<java.lang.Byte>) octetList55);
        java.lang.Double[] doubleArray64 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList65 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList65, doubleArray64);
        org.ccsds.moims.mo.mal.structures.OctetList octetList67 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort68 = octetList67.getServiceNumber();
        boolean boolean69 = doubleList65.containsAll((java.util.Collection<java.lang.Byte>) octetList67);
        boolean boolean70 = octetList55.addAll(0, (java.util.Collection<java.lang.Byte>) octetList67);
        boolean boolean71 = shortList6.removeAll((java.util.Collection<java.lang.Byte>) octetList67);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList73 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort74 = doubleList73.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort75 = doubleList73.getServiceNumber();
        int int76 = octetList67.lastIndexOf((java.lang.Object) doubleList73);
        org.ccsds.moims.mo.mal.structures.UShort uShort77 = doubleList73.getAreaNumber();
        java.io.OutputStream outputStream78 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder79 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream78);
        byte byte81 = binaryEncoder79.internalEncodeAttributeType((byte) 100);
        byte byte83 = binaryEncoder79.internalEncodeAttributeType((byte) 10);
        try {
            doubleList73.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(uShort56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertNotNull(uShort68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertNotNull(uShort74);
        org.junit.Assert.assertNotNull(uShort75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(uShort77);
        org.junit.Assert.assertTrue("'" + byte81 + "' != '" + (byte) 100 + "'", byte81 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte83 + "' != '" + (byte) 10 + "'", byte83 == (byte) 10);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList6 = eventCOMObject0.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject7 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId8 = eventCOMObject7.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = eventCOMObject7.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject10 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject10.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType15 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription16 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType15);
        eventCOMObject10.setObjType(objectType15);
        java.lang.Long long18 = eventCOMObject10.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId19 = eventCOMObject10.getObjectId();
        eventCOMObject7.setSource(objectId19);
        eventCOMObject0.setSource(objectId19);
        org.ccsds.moims.mo.mal.structures.URI uRI22 = eventCOMObject0.getSourceURI();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(identifierList6);
        org.junit.Assert.assertNull(objectId8);
        org.junit.Assert.assertNull(identifier9);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 4294967295L + "'", long18.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId19);
        org.junit.Assert.assertNull(uRI22);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        doubleList2.trimToSize();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject12.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier15 = eventCOMObject12.getNetworkZone();
        int int16 = doubleList2.indexOf((java.lang.Object) identifier15);
        java.util.stream.Stream<java.lang.Double> doubleStream17 = doubleList2.parallelStream();
        boolean boolean18 = doubleList2.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(identifier15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(doubleStream17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableLong((java.lang.Long) 281474993487873L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeNullableLong((java.lang.Long) 281474993487890L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime6 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = fineTime6.getAreaVersion();
        java.lang.Long long8 = uOctet7.getShortForm();
        try {
            binaryEncoder1.encodeNullableAttribute((org.ccsds.moims.mo.mal.structures.Attribute) uOctet7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) 7.0E-44f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList11 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList11, shortArray10);
        java.util.ListIterator<java.lang.Short> shortItor13 = shortList11.listIterator();
        int int14 = doubleList6.indexOf((java.lang.Object) shortList11);
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean16 = blob15.isURLBased();
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = blob15.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        boolean boolean23 = doubleList6.contains((java.lang.Object) blob15);
        java.util.ListIterator<java.lang.Double> doubleItor25 = doubleList6.listIterator(1);
        doubleList6.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray27 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList28 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList28, uShortArray27);
        uShortList28.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet31 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element32 = uOctet31.createElement();
        int int33 = uShortList28.indexOf((java.lang.Object) element32);
        boolean boolean35 = uShortList28.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor36 = uShortList28.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean38 = uShortList28.add(uShort37);
        java.lang.Byte[] byteArray43 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList44 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList44, byteArray43);
        boolean boolean47 = byteList44.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53, byteArray52);
        boolean boolean56 = byteList53.add((java.lang.Byte) (byte) 100);
        boolean boolean57 = byteList44.addAll((java.util.Collection<java.lang.Byte>) byteList53);
        java.lang.Object obj58 = byteList44.clone();
        boolean boolean59 = uShortList28.removeAll((java.util.Collection<java.lang.Byte>) byteList44);
        boolean boolean60 = doubleList6.retainAll((java.util.Collection<java.lang.Byte>) byteList44);
        org.ccsds.moims.mo.mal.structures.FloatList floatList61 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int63 = floatList61.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int64 = floatList61.getTypeShortForm();
        boolean boolean65 = floatList61.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator66 = floatList61.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort67 = floatList61.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort68 = floatList61.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = floatList61.getServiceNumber();
        int int70 = doubleList6.lastIndexOf((java.lang.Object) floatList61);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList71 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UShort uShort72 = integerList71.getAreaNumber();
        int int73 = doubleList6.lastIndexOf((java.lang.Object) uShort72);
        try {
            binaryEncoder1.encodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(shortItor13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(doubleItor25);
        org.junit.Assert.assertNotNull(uShortArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(uOctet31);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(uShortItor36);
        org.junit.Assert.assertNotNull(uShort37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-4) + "'", int64.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertNotNull(floatSpliterator66);
        org.junit.Assert.assertNotNull(uShort67);
        org.junit.Assert.assertNotNull(uShort68);
        org.junit.Assert.assertNotNull(uShort69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(uShort72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        java.lang.Integer int77 = octetList18.getTypeShortForm();
        java.util.Iterator<java.lang.Byte> byteItor78 = octetList18.iterator();
        octetList18.clear();
        java.util.Iterator<java.lang.Byte> byteItor80 = octetList18.iterator();
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-7) + "'", int77.equals((-7)));
        org.junit.Assert.assertNotNull(byteItor78);
        org.junit.Assert.assertNotNull(byteItor80);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList3 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList3.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = doubleList3.getAreaNumber();
        java.lang.Integer int6 = doubleList3.getTypeShortForm();
        java.lang.String str7 = doubleList3.toString();
        int int8 = doubleList3.size();
        java.util.Spliterator<java.lang.Double> doubleSpliterator9 = doubleList3.spliterator();
        try {
            binaryEncoder1.encodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) doubleList3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-5) + "'", int6.equals((-5)));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[]" + "'", str7.equals("[]"));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(doubleSpliterator9);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList1.listIterator((int) (byte) 0);
        uShortList1.trimToSize();
        java.lang.String str5 = uShortList1.toString();
        org.ccsds.moims.mo.mal.structures.OctetList octetList6 = new org.ccsds.moims.mo.mal.structures.OctetList();
        java.lang.Integer int7 = octetList6.getTypeShortForm();
        boolean boolean8 = uShortList1.removeAll((java.util.Collection<java.lang.Byte>) octetList6);
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, 18);
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = uShortList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 18");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]" + "'", str5.equals("[]"));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-7) + "'", int7.equals((-7)));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        try {
            esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((-13));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -13");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Float[] floatArray12 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList13 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList13, floatArray12);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Object obj38 = byteList24.clone();
        boolean boolean39 = booleanList17.contains((java.lang.Object) byteList24);
        int int40 = floatList13.lastIndexOf((java.lang.Object) booleanList17);
        boolean boolean41 = floatList13.isEmpty();
        boolean boolean42 = uInteger6.equals((java.lang.Object) boolean41);
        java.lang.Integer int43 = uInteger6.getTypeShortForm();
        java.io.OutputStream outputStream44 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder45 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream44);
        byte byte47 = binaryEncoder45.internalEncodeAttributeType((byte) 100);
        byte byte49 = binaryEncoder45.internalEncodeAttributeType((byte) 10);
        try {
            uInteger6.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 12 + "'", int43.equals(12));
        org.junit.Assert.assertTrue("'" + byte47 + "' != '" + (byte) 100 + "'", byte47 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte49 + "' != '" + (byte) 10 + "'", byte49 == (byte) 10);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        java.lang.Integer int6 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = floatList0.getAreaVersion();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        java.lang.Double double13 = binaryDecoder12.decodeNullableDouble();
        byte[] byteArray14 = binaryDecoder12.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14, (int) (byte) 1);
        try {
            org.ccsds.moims.mo.mal.structures.Element element20 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-4) + "'", int6.equals((-4)));
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals((double) double13, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray14);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        shortList0.ensureCapacity((-4));
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder5.internalEncodeAttributeType((byte) -1);
        try {
            shortList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -1 + "'", byte9 == (byte) -1);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeBoolean((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Double double7 = binaryDecoder6.decodeNullableDouble();
        byte[] byteArray8 = binaryDecoder6.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8);
        org.ccsds.moims.mo.mal.structures.Blob blob10 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8);
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = blob10.getServiceNumber();
        try {
            binaryEncoder1.encodeNullableAttribute((org.ccsds.moims.mo.mal.structures.Attribute) uShort11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals((double) double7, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(uShort11);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        int int13 = uRIList1.size();
        java.lang.Object obj14 = uRIList1.clone();
        java.lang.Double[] doubleArray16 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList17 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList17, doubleArray16);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.util.ListIterator<java.lang.Short> shortItor24 = shortList22.listIterator();
        int int25 = doubleList17.indexOf((java.lang.Object) shortList22);
        org.ccsds.moims.mo.mal.structures.Blob blob26 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean27 = blob26.isURLBased();
        byte[] byteArray31 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder32 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        org.ccsds.moims.mo.mal.structures.Element element33 = blob26.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder32);
        boolean boolean34 = doubleList17.contains((java.lang.Object) blob26);
        java.util.ListIterator<java.lang.Double> doubleItor36 = doubleList17.listIterator(1);
        doubleList17.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray38 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList39, uShortArray38);
        uShortList39.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet42 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element43 = uOctet42.createElement();
        int int44 = uShortList39.indexOf((java.lang.Object) element43);
        boolean boolean46 = uShortList39.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor47 = uShortList39.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean49 = uShortList39.add(uShort48);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray63 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList64 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList64, byteArray63);
        boolean boolean67 = byteList64.add((java.lang.Byte) (byte) 100);
        boolean boolean68 = byteList55.addAll((java.util.Collection<java.lang.Byte>) byteList64);
        java.lang.Object obj69 = byteList55.clone();
        boolean boolean70 = uShortList39.removeAll((java.util.Collection<java.lang.Byte>) byteList55);
        boolean boolean71 = doubleList17.retainAll((java.util.Collection<java.lang.Byte>) byteList55);
        org.ccsds.moims.mo.mal.structures.FloatList floatList72 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int74 = floatList72.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int75 = floatList72.getTypeShortForm();
        boolean boolean76 = floatList72.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator77 = floatList72.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = floatList72.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort79 = floatList72.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort80 = floatList72.getServiceNumber();
        int int81 = doubleList17.lastIndexOf((java.lang.Object) floatList72);
        int int82 = uRIList1.lastIndexOf((java.lang.Object) int81);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(shortItor24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertNotNull(doubleItor36);
        org.junit.Assert.assertNotNull(uShortArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(uOctet42);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertNotNull(uShortItor47);
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-4) + "'", int75.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNotNull(floatSpliterator77);
        org.junit.Assert.assertNotNull(uShort78);
        org.junit.Assert.assertNotNull(uShort79);
        org.junit.Assert.assertNotNull(uShort80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeInteger((java.lang.Integer) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean1 = blob0.isURLBased();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        int int9 = binaryDecoder6.internalDecodeAttributeType((byte) 0);
        try {
            org.ccsds.moims.mo.mal.structures.Time time10 = binaryDecoder6.decodeNullableTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", !boolean1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        boolean boolean2 = integerList1.isEmpty();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        try {
            java.lang.Object obj5 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) integerList1, "18446744073709551615");
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchFieldException; message: 18446744073709551615");
        } catch (java.lang.NoSuchFieldException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNotNull(element3);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        int int46 = longList8.lastIndexOf((java.lang.Object) byteList42);
        int int47 = longList8.size();
        java.math.BigInteger bigInteger48 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong49 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger48);
        java.lang.Integer int50 = uLong49.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = uLong49.getAreaNumber();
        boolean boolean52 = longList8.contains((java.lang.Object) uLong49);
        java.lang.Long long53 = uLong49.getShortForm();
        byte[] byteArray57 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder58 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray57);
        java.lang.Double double59 = binaryDecoder58.decodeNullableDouble();
        byte[] byteArray60 = binaryDecoder58.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob63 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray60, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob66 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray60, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.Element element67 = blob66.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet68 = blob66.getAreaVersion();
        boolean boolean69 = uLong49.equals((java.lang.Object) uOctet68);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(bigInteger48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 14 + "'", int50.equals(14));
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 281474993487886L + "'", long53.equals(281474993487886L));
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals((double) double59, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(element67);
        org.junit.Assert.assertNotNull(uOctet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRIList0.getServiceNumber();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            uShort3.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(uShort3);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int1 = uRIList0.size();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor2 = uRIList0.iterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = uRIList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str6 = uRI5.toString();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        java.lang.Integer int13 = binaryDecoder12.decodeInteger();
        int int15 = binaryDecoder12.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Element element16 = uRI5.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = uRIList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(uRIItor2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13.equals(50));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(element16);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder8.decodeNullableUInteger();
        try {
            binaryEncoder1.encodeUInteger(uInteger9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uInteger9);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity(0, "[0, 10]");
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uRI2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRI2.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = uRI2.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList7 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int8 = uRIList7.getTypeShortForm();
        java.lang.Integer int9 = uRIList7.getTypeShortForm();
        java.lang.Object obj10 = uRIList7.clone();
        byte[] byteArray14 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        int int17 = uRIList7.lastIndexOf((java.lang.Object) binaryDecoder16);
        org.ccsds.moims.mo.mal.structures.Time time18 = binaryDecoder16.decodeTime();
        org.ccsds.moims.mo.mal.structures.Duration duration19 = binaryDecoder16.decodeNullableDuration();
        boolean boolean20 = uShort6.equals((java.lang.Object) duration19);
        double double21 = duration19.getValue();
        org.ccsds.moims.mo.mal.structures.URIList uRIList22 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int23 = uRIList22.getTypeShortForm();
        java.lang.Integer int24 = uRIList22.getTypeShortForm();
        java.lang.Object obj25 = uRIList22.clone();
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder31 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        int int32 = uRIList22.lastIndexOf((java.lang.Object) binaryDecoder31);
        org.ccsds.moims.mo.mal.structures.Time time33 = binaryDecoder31.decodeTime();
        org.ccsds.moims.mo.mal.structures.Duration duration34 = binaryDecoder31.decodeNullableDuration();
        try {
            org.ccsds.moims.mo.mal.structures.Element element35 = duration19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder31);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-18) + "'", int9.equals((-18)));
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(time18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-18) + "'", int23.equals((-18)));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-18) + "'", int24.equals((-18)));
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(time33);
        org.junit.Assert.assertNotNull(duration34);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.Element element7 = uInteger6.createElement();
        org.ccsds.moims.mo.mal.structures.FloatList floatList8 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int10 = floatList8.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int11 = floatList8.getTypeShortForm();
        boolean boolean12 = floatList8.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator13 = floatList8.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = floatList8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = floatList8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = floatList8.getServiceNumber();
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = uShort16.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Element element23 = uInteger6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        try {
            java.lang.Byte byte24 = binaryDecoder21.decodeNullableOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(floatSpliterator13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element23);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList((int) (short) 100);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uRI5.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = uRI5.getServiceNumber();
        java.lang.Class<?> wildcardClass9 = uRI5.getClass();
        try {
            uRIList1.add((int) ' ', uRI5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (short) 1);
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl4 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl5 = cOMServicesConsumer0.getArchiveService();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl6 = cOMServicesConsumer0.getArchiveService();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl4);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl5);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl6);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = duration1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList4 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        byteList13.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean21 = longList4.removeAll((java.util.Collection<java.lang.Byte>) byteList13);
        boolean boolean22 = duration1.equals((java.lang.Object) longList4);
        org.ccsds.moims.mo.mal.structures.StringList stringList24 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = stringList24.getAreaNumber();
        java.lang.Integer int26 = stringList24.getTypeShortForm();
        boolean boolean27 = duration1.equals((java.lang.Object) stringList24);
        java.io.OutputStream outputStream28 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder29 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream28);
        byte byte31 = binaryEncoder29.internalEncodeAttributeType((byte) 100);
        try {
            duration1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-15) + "'", int26.equals((-15)));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertTrue("'" + byte31 + "' != '" + (byte) 100 + "'", byte31 == (byte) 100);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList1.listIterator((int) (byte) 0);
        uShortList1.trimToSize();
        java.lang.String str5 = uShortList1.toString();
        org.ccsds.moims.mo.mal.structures.OctetList octetList6 = new org.ccsds.moims.mo.mal.structures.OctetList();
        java.lang.Integer int7 = octetList6.getTypeShortForm();
        boolean boolean8 = uShortList1.removeAll((java.util.Collection<java.lang.Byte>) octetList6);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = new org.ccsds.moims.mo.mal.structures.UShort(50);
        boolean boolean11 = octetList6.equals((java.lang.Object) uShort10);
        java.io.OutputStream outputStream12 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder13 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream12);
        byte byte15 = binaryEncoder13.internalEncodeAttributeType((byte) 100);
        byte byte17 = binaryEncoder13.internalEncodeAttributeType((byte) 10);
        try {
            octetList6.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[]" + "'", str5.equals("[]"));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-7) + "'", int7.equals((-7)));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) 100 + "'", byte15 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 10 + "'", byte17 == (byte) 10);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob8 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.Long long10 = blob9.getShortForm();
        java.lang.String str11 = blob9.getURL();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487873L + "'", long10.equals(281474993487873L));
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRI2.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRI2.getServiceNumber();
        java.lang.Class<?> wildcardClass6 = uRI2.getClass();
        java.lang.Long long7 = uRI2.getShortForm();
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487890L + "'", long7.equals(281474993487890L));
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uLong1.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity5 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long6 = objectTypeHolderEntity5.getObjectType();
        boolean boolean7 = uLong1.equals((java.lang.Object) long6);
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter8 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = archiveSyncGenAdapter8.getLastKnownIndex();
        boolean boolean10 = uLong1.equals((java.lang.Object) archiveSyncGenAdapter8);
        org.ccsds.moims.mo.mal.structures.Element element11 = uLong1.createElement();
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487879L + "'", long6.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(element11);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeNullableShort((java.lang.Short) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime6 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = fineTime6.getServiceNumber();
        java.lang.Long long8 = uShort7.getShortForm();
        try {
            binaryEncoder1.encodeUShort(uShort7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487882L + "'", long8.equals(281474993487882L));
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
        uShortList2.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element6 = uOctet5.createElement();
        int int7 = uShortList2.indexOf((java.lang.Object) element6);
        boolean boolean8 = booleanList0.contains((java.lang.Object) uShortList2);
        java.lang.Long long9 = booleanList0.getShortForm();
        java.io.OutputStream outputStream10 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder11 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream10);
        byte byte13 = binaryEncoder11.internalEncodeAttributeType((byte) 100);
        byte byte15 = binaryEncoder11.internalEncodeAttributeType((byte) -1);
        try {
            booleanList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265086L + "'", long9.equals(281475010265086L));
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 100 + "'", byte13 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -1 + "'", byte15 == (byte) -1);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) 2.47E-322d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, 15);
        try {
            java.lang.Boolean boolean9 = binaryDecoder8.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 15");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Long long5 = binaryDecoder4.decodeNullableLong();
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime6 = binaryDecoder4.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-64L) + "'", long5.equals((-64L)));
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator3 = uRIList1.spliterator();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject4.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType9 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription10 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType9);
        eventCOMObject4.setObjType(objectType9);
        int int12 = uRIList1.indexOf((java.lang.Object) eventCOMObject4);
        eventCOMObject4.setRelated((java.lang.Long) 281474993487883L);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uRISpliterator3);
        org.junit.Assert.assertNotNull(objectType9);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uInteger6.getAreaVersion();
        java.lang.Long long8 = uOctet7.getShortForm();
        java.lang.Integer int9 = uOctet7.getTypeShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9.equals(8));
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeURI();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute7 = binaryDecoder4.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(uRI6);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.ULong uLong14 = binaryDecoder13.decodeNullableULong();
        try {
            java.lang.Long long16 = binaryDecoder13.decodeAbstractElementType(true);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNull(uLong14);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int2 = stringList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        boolean boolean24 = byteList21.add((java.lang.Byte) (byte) 100);
        boolean boolean25 = byteList12.addAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int27 = byteList21.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean28 = uRIList5.retainAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int29 = stringList1.lastIndexOf((java.lang.Object) uRIList5);
        byte[] byteArray33 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder34 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder35 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        boolean boolean36 = stringList1.remove((java.lang.Object) binaryDecoder35);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier37 = binaryDecoder35.decodeNullableIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-15) + "'", int2.equals((-15)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeShort((java.lang.Short) (short) 255);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("");
        dictionary0.resetFastNetwork();
        boolean boolean5 = dictionary0.exists((java.lang.Integer) 6);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.Identifier identifier6 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = identifier6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = identifier6.getAreaVersion();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray12);
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray12, 14, 18);
        blob18.detach();
        boolean boolean20 = identifier6.equals((java.lang.Object) blob18);
        java.lang.String str21 = identifier6.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = identifier6.getServiceNumber();
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
        org.junit.Assert.assertNotNull(uShort22);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        int int11 = uRIList0.size();
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList19 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList19, shortArray18);
        java.util.ListIterator<java.lang.Short> shortItor21 = shortList19.listIterator();
        int int22 = doubleList14.indexOf((java.lang.Object) shortList19);
        doubleList14.ensureCapacity((-1));
        doubleList14.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream27 = doubleList14.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob29 = new org.ccsds.moims.mo.mal.structures.Blob("[hi!, ]".getBytes());
        int int30 = doubleList14.lastIndexOf((java.lang.Object) blob29);
        boolean boolean31 = uRIList0.equals((java.lang.Object) doubleList14);
        java.lang.Object obj32 = uRIList0.clone();
        java.io.OutputStream outputStream33 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder34 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream33);
        byte byte36 = binaryEncoder34.internalEncodeAttributeType((byte) -1);
        try {
            uRIList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(shortItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(doubleStream27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + byte36 + "' != '" + (byte) -1 + "'", byte36 == (byte) -1);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Byte byte6 = binaryDecoder5.decodeOctet();
        java.lang.Byte byte7 = binaryDecoder5.decodeNullableOctet();
        try {
            java.lang.String str8 = binaryDecoder5.decodeNullableString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6.equals((byte) 100));
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 0 + "'", byte7.equals((byte) 0));
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Short) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = union1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Blob blob3 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean4 = blob3.isURLBased();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Element element10 = blob3.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
        int int12 = binaryDecoder9.internalDecodeAttributeType((byte) 0);
        try {
            org.ccsds.moims.mo.mal.structures.Element element13 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { Double.NaN, 1.0d, (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        doubleList12.ensureCapacity((int) ' ');
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.lang.Long[] longArray28 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList29 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList29, longArray28);
        java.lang.Object obj31 = longList29.clone();
        int int32 = strList19.indexOf((java.lang.Object) longList29);
        java.util.ListIterator<java.lang.String> strItor33 = strList19.listIterator();
        java.lang.Short[] shortArray37 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList38 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList38, shortArray37);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray45 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList46 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList46, uRIArray45);
        java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53, byteArray52);
        boolean boolean56 = byteList53.add((java.lang.Byte) (byte) 100);
        boolean boolean57 = uRIList46.containsAll((java.util.Collection<java.lang.Byte>) byteList53);
        boolean boolean58 = strList43.containsAll((java.util.Collection<java.lang.Byte>) byteList53);
        boolean boolean59 = shortList38.contains((java.lang.Object) byteList53);
        boolean boolean60 = strList19.removeAll((java.util.Collection<java.lang.Byte>) byteList53);
        java.lang.Byte[] byteArray65 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList66 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList66, byteArray65);
        boolean boolean69 = byteList66.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray74 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList75 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList75, byteArray74);
        boolean boolean78 = byteList75.add((java.lang.Byte) (byte) 100);
        boolean boolean79 = byteList66.addAll((java.util.Collection<java.lang.Byte>) byteList75);
        boolean boolean80 = byteList53.containsAll((java.util.Collection<java.lang.Byte>) byteList75);
        boolean boolean81 = doubleList12.equals((java.lang.Object) byteList75);
        java.lang.Double[] doubleArray87 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList88 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList88, doubleArray87);
        org.ccsds.moims.mo.mal.structures.OctetList octetList90 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort91 = octetList90.getServiceNumber();
        boolean boolean92 = doubleList88.containsAll((java.util.Collection<java.lang.Byte>) octetList90);
        boolean boolean93 = doubleList12.retainAll((java.util.Collection<java.lang.Byte>) octetList90);
        try {
            org.ccsds.moims.mo.mal.MALListEncoder mALListEncoder94 = binaryEncoder1.createListEncoder((java.util.List) octetList90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uRIArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
        org.junit.Assert.assertNotNull(uShort91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, 15);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier9 = binaryDecoder8.decodeNullableIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 15");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.ccsds.moims.mo.mal.structures.Time time1 = new org.ccsds.moims.mo.mal.structures.Time(4294967295L);
        org.ccsds.moims.mo.mal.structures.URI uRI3 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uRI3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRI3.getServiceNumber();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9, 6);
        boolean boolean13 = uShort5.equals((java.lang.Object) binaryDecoder12);
        try {
            org.ccsds.moims.mo.mal.structures.Element element14 = time1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, (int) (short) 100);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, 13);
        try {
            java.lang.Boolean boolean18 = binaryDecoder17.decodeBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 13");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeLong((java.lang.Long) 281475010265070L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        boolean boolean3 = booleanList0.add((java.lang.Boolean) true);
        boolean boolean5 = booleanList0.remove((java.lang.Object) 281474993487884L);
        boolean boolean6 = booleanList0.isEmpty();
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator7 = booleanList0.spliterator();
        java.io.OutputStream outputStream8 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder9 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream8);
        byte byte11 = binaryEncoder9.internalEncodeAttributeType((byte) 100);
        byte byte13 = binaryEncoder9.internalEncodeAttributeType((byte) -1);
        try {
            booleanList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(booleanSpliterator7);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 100 + "'", byte11 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) -1 + "'", byte13 == (byte) -1);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Byte byte6 = binaryDecoder5.decodeOctet();
        java.lang.Short short7 = binaryDecoder5.decodeShort();
        try {
            java.lang.Short short8 = binaryDecoder5.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6.equals((byte) 100));
        org.junit.Assert.assertTrue("'" + short7 + "' != '" + (short) -64 + "'", short7.equals((short) -64));
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator3 = uRIList1.spliterator();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject4.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType9 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription10 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType9);
        eventCOMObject4.setObjType(objectType9);
        int int12 = uRIList1.indexOf((java.lang.Object) eventCOMObject4);
        eventCOMObject4.setRelated((java.lang.Long) 281474993487887L);
        org.ccsds.moims.mo.com.structures.ObjectId objectId15 = eventCOMObject4.getSource();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uRISpliterator3);
        org.junit.Assert.assertNotNull(objectType9);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(objectId15);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        doubleList2.ensureCapacity((-1));
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20, shortArray19);
        java.util.ListIterator<java.lang.Short> shortItor22 = shortList20.listIterator();
        int int23 = doubleList15.indexOf((java.lang.Object) shortList20);
        int int24 = doubleList2.lastIndexOf((java.lang.Object) shortList20);
        esa.mo.com.impl.sync.Dictionary dictionary25 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean27 = dictionary25.exists((java.lang.Integer) 16);
        java.lang.Integer int29 = dictionary25.getWordId("");
        int int30 = doubleList2.lastIndexOf((java.lang.Object) dictionary25);
        try {
            java.lang.String str32 = dictionary25.getWord((java.lang.Integer) (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: The word for the id: -4 is unknown!");
        } catch (java.lang.Exception e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(shortItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29.equals(1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        java.lang.Float[] floatArray13 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList14 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList14, floatArray13);
        java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList18 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList18, booleanArray17);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = byteList25.addAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.lang.Object obj39 = byteList25.clone();
        boolean boolean40 = booleanList18.contains((java.lang.Object) byteList25);
        int int41 = floatList14.lastIndexOf((java.lang.Object) booleanList18);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray55 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList56 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList56, byteArray55);
        boolean boolean59 = byteList56.add((java.lang.Byte) (byte) 100);
        boolean boolean60 = byteList47.addAll((java.util.Collection<java.lang.Byte>) byteList56);
        java.lang.Object obj61 = byteList47.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream62 = byteList47.stream();
        boolean boolean63 = booleanList18.equals((java.lang.Object) byteList47);
        java.math.BigInteger bigInteger64 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong65 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger64);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet66 = uLong65.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity69 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long70 = objectTypeHolderEntity69.getObjectType();
        boolean boolean71 = uLong65.equals((java.lang.Object) long70);
        boolean boolean72 = booleanList18.remove((java.lang.Object) uLong65);
        try {
            binaryEncoder1.encodeNullableULong(uLong65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertNotNull(bigInteger64);
        org.junit.Assert.assertNotNull(uOctet66);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 281474993487879L + "'", long70.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = floatList0.getServiceNumber();
        int int8 = floatList0.lastIndexOf((java.lang.Object) (-11));
        java.lang.String str9 = floatList0.toString();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList0.stream();
        java.util.Iterator<java.lang.Float> floatItor11 = floatList0.iterator();
        java.lang.Integer int12 = floatList0.getTypeShortForm();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.lang.Long[] longArray25 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList26 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList26, longArray25);
        java.lang.Object obj28 = longList26.clone();
        int int29 = strList16.indexOf((java.lang.Object) longList26);
        java.util.ListIterator<java.lang.String> strItor30 = strList16.listIterator();
        java.lang.String str31 = strList16.toString();
        byte[] byteArray35 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet38 = binaryDecoder37.decodeNullableUOctet();
        java.lang.Long long39 = uOctet38.getShortForm();
        short short40 = uOctet38.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort41 = uOctet38.getServiceNumber();
        boolean boolean42 = strList16.remove((java.lang.Object) uShort41);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray43 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList44 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList44, uRIArray43);
        java.lang.Byte[] byteArray50 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList51 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList51, byteArray50);
        boolean boolean54 = byteList51.add((java.lang.Byte) (byte) 100);
        boolean boolean55 = uRIList44.containsAll((java.util.Collection<java.lang.Byte>) byteList51);
        int int57 = uRIList44.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList63 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList63, byteArray62);
        boolean boolean66 = byteList63.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray71 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList72 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList72, byteArray71);
        boolean boolean75 = byteList72.add((java.lang.Byte) (byte) 100);
        boolean boolean76 = byteList63.addAll((java.util.Collection<java.lang.Byte>) byteList72);
        int int78 = byteList72.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean79 = uRIList44.removeAll((java.util.Collection<java.lang.Byte>) byteList72);
        boolean boolean80 = strList16.removeAll((java.util.Collection<java.lang.Byte>) byteList72);
        boolean boolean81 = floatList0.retainAll((java.util.Collection<java.lang.Byte>) byteList72);
        java.io.OutputStream outputStream82 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder83 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream82);
        try {
            floatList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]" + "'", str9.equals("[]"));
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNotNull(floatItor11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-4) + "'", int12.equals((-4)));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "[hi!, ]" + "'", str31.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertNotNull(uOctet38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 281474993487880L + "'", long39.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short40 + "' != '" + (short) 127 + "'", short40 == (short) 127);
        org.junit.Assert.assertNotNull(uShort41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(uRIArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray1 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList2, uRIArray1);
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
        boolean boolean12 = byteList9.add((java.lang.Byte) (byte) 100);
        boolean boolean13 = uRIList2.containsAll((java.util.Collection<java.lang.Byte>) byteList9);
        byteList9.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean17 = longList0.removeAll((java.util.Collection<java.lang.Byte>) byteList9);
        org.ccsds.moims.mo.mal.structures.FloatList floatList18 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Object obj38 = byteList24.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream39 = byteList24.stream();
        boolean boolean40 = floatList18.containsAll((java.util.Collection<java.lang.Byte>) byteList24);
        org.ccsds.moims.mo.mal.structures.UShort uShort41 = floatList18.getAreaNumber();
        java.util.stream.Stream<java.lang.Float> floatStream42 = floatList18.stream();
        boolean boolean43 = longList0.contains((java.lang.Object) floatList18);
        java.io.OutputStream outputStream44 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder45 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream44);
        byte byte47 = binaryEncoder45.internalEncodeAttributeType((byte) 100);
        byte byte49 = binaryEncoder45.internalEncodeAttributeType((byte) -1);
        byte byte51 = binaryEncoder45.internalEncodeAttributeType((byte) 1);
        try {
            floatList18.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(byteStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(uShort41);
        org.junit.Assert.assertNotNull(floatStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + byte47 + "' != '" + (byte) 100 + "'", byte47 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte49 + "' != '" + (byte) -1 + "'", byte49 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte51 + "' != '" + (byte) 1 + "'", byte51 == (byte) 1);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) 7.0E-44f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int1 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element2 = time0.createElement();
        java.lang.Integer int3 = time0.getTypeShortForm();
        java.lang.Integer int4 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element5 = time0.createElement();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.Duration duration13 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = duration13.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element15 = binaryDecoder11.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) duration13);
        try {
            org.ccsds.moims.mo.mal.structures.Element element16 = time0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 16 + "'", int1.equals(16));
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 16 + "'", int3.equals(16));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 16 + "'", int4.equals(16));
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(element15);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        int int11 = uRIList0.size();
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList19 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList19, shortArray18);
        java.util.ListIterator<java.lang.Short> shortItor21 = shortList19.listIterator();
        int int22 = doubleList14.indexOf((java.lang.Object) shortList19);
        doubleList14.ensureCapacity((-1));
        doubleList14.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream27 = doubleList14.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob29 = new org.ccsds.moims.mo.mal.structures.Blob("[hi!, ]".getBytes());
        int int30 = doubleList14.lastIndexOf((java.lang.Object) blob29);
        boolean boolean31 = uRIList0.equals((java.lang.Object) doubleList14);
        java.lang.Object obj32 = uRIList0.clone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject33 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId34 = eventCOMObject33.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType36 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject33.setObjType(objectType36);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.lang.Long[] longArray50 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList51 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList51, longArray50);
        java.lang.Object obj53 = longList51.clone();
        int int54 = strList41.indexOf((java.lang.Object) longList51);
        java.util.stream.Stream<java.lang.Long> longStream55 = longList51.parallelStream();
        longList51.add(2, (java.lang.Long) 281475010265070L);
        java.util.stream.Stream<java.lang.Long> longStream59 = longList51.parallelStream();
        org.ccsds.moims.mo.mal.structures.URI uRI61 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str62 = uRI61.toString();
        int int63 = longList51.indexOf((java.lang.Object) uRI61);
        eventCOMObject33.setSourceURI(uRI61);
        boolean boolean65 = uRIList0.add(uRI61);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList67 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        java.util.stream.Stream<java.lang.Double> doubleStream68 = doubleList67.parallelStream();
        boolean boolean70 = doubleList67.add((java.lang.Double) 10.0d);
        java.util.ListIterator<java.lang.Double> doubleItor71 = doubleList67.listIterator();
        boolean boolean72 = uRIList0.contains((java.lang.Object) doubleItor71);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(shortItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(doubleStream27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNull(objectId34);
        org.junit.Assert.assertNotNull(objectType36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(longStream55);
        org.junit.Assert.assertNotNull(longStream59);
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "hi!" + "'", str62.equals("hi!"));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertNotNull(doubleStream68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertNotNull(doubleItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = union1.getAreaVersion();
        java.lang.Long long3 = union1.getShortForm();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            union1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487874L + "'", long3.equals(281474993487874L));
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeString("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.ShortList shortList6 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = shortList6.getAreaNumber();
        java.lang.Object[] objArray8 = shortList6.toArray();
        java.lang.Long long9 = shortList6.getShortForm();
        shortList6.ensureCapacity((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray12 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList13, uRIArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        int int35 = byteList29.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean36 = uRIList13.retainAll((java.util.Collection<java.lang.Byte>) byteList29);
        boolean boolean37 = shortList6.removeAll((java.util.Collection<java.lang.Byte>) byteList29);
        org.ccsds.moims.mo.mal.structures.UShort uShort38 = shortList6.getServiceNumber();
        try {
            binaryEncoder1.encodeElement((org.ccsds.moims.mo.mal.structures.Element) uShort38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265079L + "'", long9.equals(281475010265079L));
        org.junit.Assert.assertNotNull(uRIArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertNotNull(uShort38);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((-2), "[hi!, ]");
        java.lang.String str3 = providerURIHolderEntity2.getProviderURIString();
        java.lang.String str4 = providerURIHolderEntity2.getProviderURIString();
        int int5 = providerURIHolderEntity2.getId();
        int int6 = providerURIHolderEntity2.getId();
        int int7 = providerURIHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[hi!, ]" + "'", str3.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "[hi!, ]" + "'", str4.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-2) + "'", int5 == (-2));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2) + "'", int6 == (-2));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.Float float7 = binaryDecoder5.decodeNullableFloat();
        try {
            java.lang.Short short8 = binaryDecoder5.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.0f + "'", float7.equals(0.0f));
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableLong((java.lang.Long) 281474993487881L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = binaryDecoder5.decodeUOctet();
        try {
            java.lang.Long long10 = binaryDecoder5.decodeNullableLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uOctet9);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.io.OutputStream outputStream12 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder13 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream12);
        byte byte15 = binaryEncoder13.internalEncodeAttributeType((byte) -1);
        try {
            duration11.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -1 + "'", byte15 == (byte) -1);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str1 = identifier0.toString();
        java.lang.Integer int2 = identifier0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = duration4.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = duration4.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList7 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray8 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList9, uRIArray8);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        boolean boolean19 = byteList16.add((java.lang.Byte) (byte) 100);
        boolean boolean20 = uRIList9.containsAll((java.util.Collection<java.lang.Byte>) byteList16);
        byteList16.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean24 = longList7.removeAll((java.util.Collection<java.lang.Byte>) byteList16);
        boolean boolean25 = duration4.equals((java.lang.Object) longList7);
        org.ccsds.moims.mo.mal.structures.StringList stringList27 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = stringList27.getAreaNumber();
        java.lang.Integer int29 = stringList27.getTypeShortForm();
        boolean boolean30 = duration4.equals((java.lang.Object) stringList27);
        byte[] byteArray34 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder35 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray34);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray34);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet37 = binaryDecoder36.decodeNullableUOctet();
        java.lang.Long long38 = uOctet37.getShortForm();
        java.lang.Long long39 = uOctet37.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList40 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int41 = uRIList40.getTypeShortForm();
        java.lang.Integer int42 = uRIList40.getTypeShortForm();
        java.lang.Object obj43 = uRIList40.clone();
        byte[] byteArray47 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder48 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray47);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder49 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray47);
        int int50 = uRIList40.lastIndexOf((java.lang.Object) binaryDecoder49);
        org.ccsds.moims.mo.mal.structures.Duration duration51 = binaryDecoder49.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element52 = uOctet37.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder49);
        byte[] byteArray53 = binaryDecoder49.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder54 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray53);
        boolean boolean55 = duration4.equals((java.lang.Object) binaryDecoder54);
        try {
            org.ccsds.moims.mo.mal.structures.Element element56 = identifier0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 6 + "'", int2.equals(6));
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(uRIArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-15) + "'", int29.equals((-15)));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(uOctet37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 281474993487880L + "'", long38.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 281474993487880L + "'", long39.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-18) + "'", int41.equals((-18)));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-18) + "'", int42.equals((-18)));
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        org.ccsds.moims.mo.mal.structures.OctetList octetList34 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = octetList34.getServiceNumber();
        boolean boolean36 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) octetList34);
        java.math.BigInteger bigInteger37 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong38 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger37);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet39 = uLong38.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity42 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long43 = objectTypeHolderEntity42.getObjectType();
        boolean boolean44 = uLong38.equals((java.lang.Object) long43);
        boolean boolean45 = booleanList10.remove((java.lang.Object) long43);
        try {
            booleanList10.add(6, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(uShort35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(bigInteger37);
        org.junit.Assert.assertNotNull(uOctet39);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 281474993487879L + "'", long43.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject3.getObjectId();
        eventCOMObject0.setSource(objectId12);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject14 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject14.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType19 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription20 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType19);
        eventCOMObject14.setObjType(objectType19);
        java.lang.Long long22 = eventCOMObject14.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId23 = eventCOMObject14.getObjectId();
        eventCOMObject0.setSource(objectId23);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList25 = eventCOMObject0.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject26 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI28 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject26.setSourceURI(uRI28);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet30 = uRI28.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = uRI28.getAreaNumber();
        eventCOMObject0.setSourceURI(uRI28);
        org.ccsds.moims.mo.mal.structures.Identifier identifier33 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = identifier33.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet35 = identifier33.getAreaVersion();
        byte[] byteArray39 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder41 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        org.ccsds.moims.mo.mal.structures.Blob blob42 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray39);
        org.ccsds.moims.mo.mal.structures.Blob blob45 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray39, 14, 18);
        blob45.detach();
        boolean boolean47 = identifier33.equals((java.lang.Object) blob45);
        java.lang.String str48 = identifier33.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = identifier33.getServiceNumber();
        eventCOMObject0.setNetworkZone(identifier33);
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId12);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 4294967295L + "'", long22.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId23);
        org.junit.Assert.assertNull(identifierList25);
        org.junit.Assert.assertNotNull(uOctet30);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertNotNull(uOctet35);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertNotNull(uShort49);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI14 = binaryDecoder13.decodeURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        esa.mo.com.impl.archive.encoding.GENDecoder.BufferHolder bufferHolder1 = null;
        try {
            esa.mo.com.impl.archive.encoding.BinaryListDecoder binaryListDecoder2 = new esa.mo.com.impl.archive.encoding.BinaryListDecoder((java.util.List) doubleList0, bufferHolder1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) 100);
        byte byte7 = binaryEncoder3.internalEncodeAttributeType((byte) -1);
        byte byte9 = binaryEncoder3.internalEncodeAttributeType((byte) 1);
        try {
            shortList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 100 + "'", byte5 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 1 + "'", byte9 == (byte) 1);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream3 = uShortList1.parallelStream();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream4 = uShortList1.stream();
        uShortList1.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream6 = uShortList1.stream();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        java.lang.Double double12 = binaryDecoder11.decodeNullableDouble();
        byte[] byteArray13 = binaryDecoder11.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = blob16.getAreaVersion();
        int int18 = uShortList1.indexOf((java.lang.Object) blob16);
        java.lang.Integer int19 = blob16.getTypeShortForm();
        java.lang.Integer int20 = blob16.getTypeShortForm();
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uShortStream3);
        org.junit.Assert.assertNotNull(uShortStream4);
        org.junit.Assert.assertNotNull(uShortStream6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals((double) double12, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19.equals(1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20.equals(1));
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        int int77 = octetList18.size();
        java.lang.Integer int78 = octetList18.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element79 = octetList18.createElement();
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-7) + "'", int78.equals((-7)));
        org.junit.Assert.assertNotNull(element79);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = blob12.getAreaNumber();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = binaryDecoder19.decodeNullableUOctet();
        java.lang.Long long21 = uOctet20.getShortForm();
        java.lang.Long long22 = uOctet20.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList23 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int24 = uRIList23.getTypeShortForm();
        java.lang.Integer int25 = uRIList23.getTypeShortForm();
        java.lang.Object obj26 = uRIList23.clone();
        byte[] byteArray30 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder31 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray30);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder32 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray30);
        int int33 = uRIList23.lastIndexOf((java.lang.Object) binaryDecoder32);
        org.ccsds.moims.mo.mal.structures.Duration duration34 = binaryDecoder32.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element35 = uOctet20.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder32);
        byte[] byteArray36 = binaryDecoder32.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray36);
        try {
            org.ccsds.moims.mo.mal.structures.Element element38 = blob12.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(uOctet20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 281474993487880L + "'", long21.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281474993487880L + "'", long22.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-18) + "'", int24.equals((-18)));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-18) + "'", int25.equals((-18)));
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(byteArray36);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.lang.Long long4 = doubleList1.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream5 = doubleList1.parallelStream();
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList13 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList13, shortArray12);
        java.util.ListIterator<java.lang.Short> shortItor15 = shortList13.listIterator();
        int int16 = doubleList8.indexOf((java.lang.Object) shortList13);
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean18 = blob17.isURLBased();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.Element element24 = blob17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
        boolean boolean25 = doubleList8.contains((java.lang.Object) blob17);
        java.util.ListIterator<java.lang.Double> doubleItor27 = doubleList8.listIterator(1);
        doubleList8.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray29 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList30, uShortArray29);
        uShortList30.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet33 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element34 = uOctet33.createElement();
        int int35 = uShortList30.indexOf((java.lang.Object) element34);
        boolean boolean37 = uShortList30.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor38 = uShortList30.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean40 = uShortList30.add(uShort39);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        boolean boolean59 = byteList46.addAll((java.util.Collection<java.lang.Byte>) byteList55);
        java.lang.Object obj60 = byteList46.clone();
        boolean boolean61 = uShortList30.removeAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean62 = doubleList8.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean63 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet64 = doubleList1.getAreaVersion();
        java.lang.Long long65 = doubleList1.getShortForm();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265083L + "'", long4.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(shortItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(doubleItor27);
        org.junit.Assert.assertNotNull(uShortArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uOctet33);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertNotNull(uShortItor38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertNotNull(uOctet64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 281475010265083L + "'", long65.equals(281475010265083L));
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject2 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject2.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType7 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription8 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType7);
        eventCOMObject2.setObjType(objectType7);
        org.ccsds.moims.mo.com.structures.ObjectId objectId10 = eventCOMObject2.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier11 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = identifier11.getAreaVersion();
        java.lang.String str13 = identifier11.getValue();
        eventCOMObject2.setNetworkZone(identifier11);
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(objectType7);
        org.junit.Assert.assertNotNull(subscription8);
        org.junit.Assert.assertNull(objectId10);
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList5 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = doubleList5.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = doubleList5.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = doubleList5.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream9 = doubleList5.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob10 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean11 = blob10.isURLBased();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        org.ccsds.moims.mo.mal.structures.Element element17 = blob10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
        boolean boolean18 = doubleList5.equals((java.lang.Object) element17);
        boolean boolean19 = integerList1.contains((java.lang.Object) element17);
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = integerList1.getServiceNumber();
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(doubleStream9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(uShort20);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.ccsds.moims.mo.mal.structures.Time time1 = new org.ccsds.moims.mo.mal.structures.Time((long) (-5));
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList2 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element3 = booleanList2.createElement();
        int int5 = booleanList2.lastIndexOf((java.lang.Object) 281474993487878L);
        boolean boolean6 = time1.equals((java.lang.Object) booleanList2);
        java.lang.Integer int7 = time1.getTypeShortForm();
        java.io.OutputStream outputStream8 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder9 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream8);
        byte byte11 = binaryEncoder9.internalEncodeAttributeType((byte) 100);
        byte byte13 = binaryEncoder9.internalEncodeAttributeType((byte) 10);
        try {
            time1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 16 + "'", int7.equals(16));
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 100 + "'", byte11 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 10 + "'", byte13 == (byte) 10);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = octetList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        byte byte6 = binaryEncoder4.internalEncodeAttributeType((byte) 100);
        try {
            octetList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6 == (byte) 100);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) '#');
        org.ccsds.moims.mo.mal.structures.UInteger uInteger2 = archiveSyncGenAdapter1.getLastKnownIndex();
        java.lang.Integer int3 = uInteger2.getTypeShortForm();
        org.junit.Assert.assertNotNull(uInteger2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 12 + "'", int3.equals(12));
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int2 = stringList1.getTypeShortForm();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Duration duration10 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = duration10.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element12 = binaryDecoder8.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) duration10);
        try {
            org.ccsds.moims.mo.mal.structures.Element element13 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-15) + "'", int2.equals((-15)));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(element12);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uLong1.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity5 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long6 = objectTypeHolderEntity5.getObjectType();
        boolean boolean7 = uLong1.equals((java.lang.Object) long6);
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter8 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = archiveSyncGenAdapter8.getLastKnownIndex();
        boolean boolean10 = uLong1.equals((java.lang.Object) archiveSyncGenAdapter8);
        byte[] byteArray14 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        java.lang.Short short16 = binaryDecoder15.decodeNullableShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = uLong1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487879L + "'", long6.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + short16 + "' != '" + (short) -64 + "'", short16.equals((short) -64));
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        java.lang.Double double9 = binaryDecoder7.decodeNullableDouble();
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong10 = binaryDecoder7.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9.equals(0.0d));
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        java.lang.Integer int1 = longList0.getTypeShortForm();
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) -1);
        try {
            longList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-13) + "'", int1.equals((-13)));
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = new org.ccsds.moims.mo.mal.structures.UOctet((short) (byte) 100);
        java.lang.Object obj3 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) uOctet1, "");
        org.junit.Assert.assertNotNull(obj3);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        java.util.stream.Stream<java.lang.Long> longStream2 = longList1.stream();
        boolean boolean4 = longList1.add((java.lang.Long) 1558616165304L);
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) 100);
        try {
            longList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(longStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 100 + "'", byte8 == (byte) 100);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = floatList0.getAreaNumber();
        java.io.OutputStream outputStream8 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder9 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream8);
        byte byte11 = binaryEncoder9.internalEncodeAttributeType((byte) 100);
        byte byte13 = binaryEncoder9.internalEncodeAttributeType((byte) 10);
        try {
            floatList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 100 + "'", byte11 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 10 + "'", byte13 == (byte) 10);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeURI();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort7 = binaryDecoder4.decodeUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(uRI6);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Float float6 = binaryDecoder5.decodeFloat();
        java.lang.Byte byte7 = binaryDecoder5.decodeOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute8 = binaryDecoder5.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Unknown attribute type received: 0");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 7.0E-44f + "'", float6.equals(7.0E-44f));
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7.equals((byte) -1));
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        shortList0.ensureCapacity((int) (byte) 0);
        java.lang.Object[] objArray6 = shortList0.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = shortList0.getServiceNumber();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        java.util.Iterator<java.lang.String> strItor40 = strList35.iterator();
        boolean boolean41 = shortList0.remove((java.lang.Object) strItor40);
        org.ccsds.moims.mo.mal.structures.Element element42 = shortList0.createElement();
        java.io.OutputStream outputStream43 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder44 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream43);
        byte byte46 = binaryEncoder44.internalEncodeAttributeType((byte) 100);
        byte byte48 = binaryEncoder44.internalEncodeAttributeType((byte) 10);
        try {
            shortList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertTrue("'" + byte46 + "' != '" + (byte) 100 + "'", byte46 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte48 + "' != '" + (byte) 10 + "'", byte48 == (byte) 10);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.lang.Short[] shortArray4 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList5 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList5, shortArray4);
        java.util.ListIterator<java.lang.Short> shortItor7 = shortList5.listIterator();
        java.util.stream.Stream<java.lang.Short> shortStream8 = shortList5.parallelStream();
        try {
            org.ccsds.moims.mo.mal.MALListEncoder mALListEncoder9 = binaryEncoder1.createListEncoder((java.util.List) shortList5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(shortItor7);
        org.junit.Assert.assertNotNull(shortStream8);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = binaryDecoder5.decodeUShort();
        try {
            java.lang.Short short10 = binaryDecoder5.decodeShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uShort9);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableLong((java.lang.Long) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        int int10 = blob9.getOffset();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = blob9.getAreaVersion();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 18 + "'", int10 == 18);
        org.junit.Assert.assertNotNull(uOctet11);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str1 = identifier0.toString();
        java.lang.Integer int2 = identifier0.getTypeShortForm();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        try {
            identifier0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 6 + "'", int2.equals(6));
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.Duration duration9 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = duration9.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = duration9.getAreaVersion();
        java.lang.String str12 = duration9.toString();
        try {
            binaryEncoder1.encodeNullableDuration(duration9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "0.0" + "'", str12.equals("0.0"));
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
        java.lang.Long long1 = stringList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList2 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = integerList2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = integerList2.getAreaNumber();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Element element10 = uShort4.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeNullableTime();
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = stringList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265073L + "'", long1.equals(281475010265073L));
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(time11);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter(11);
        boolean boolean2 = archiveSyncGenAdapter1.transactionCompleted();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList9 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = doubleList9.getAreaNumber();
        java.lang.Object obj11 = doubleList9.clone();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = binaryDecoder17.decodeNullableUOctet();
        int int19 = doubleList9.lastIndexOf((java.lang.Object) binaryDecoder17);
        byte[] byteArray20 = binaryDecoder17.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20, (int) (short) 100);
        org.ccsds.moims.mo.mal.structures.Blob blob26 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray20, 2, 18);
        blob26.detach();
        boolean boolean28 = blob26.isURLBased();
        try {
            binaryEncoder1.encodeNullableBlob(blob26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(uOctet18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Byte byte6 = binaryDecoder5.decodeOctet();
        java.lang.Short short7 = binaryDecoder5.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI8 = binaryDecoder5.decodeNullableURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6.equals((byte) 100));
        org.junit.Assert.assertTrue("'" + short7 + "' != '" + (short) -64 + "'", short7.equals((short) -64));
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeShort((java.lang.Short) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
        java.lang.Long long13 = binaryDecoder9.decodeLong();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort14 = binaryDecoder9.decodeUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12.equals((byte) -1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13.equals(0L));
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.ccsds.moims.mo.mal.structures.FloatList floatList1 = new org.ccsds.moims.mo.mal.structures.FloatList((int) '4');
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) 100);
        byte byte7 = binaryEncoder3.internalEncodeAttributeType((byte) -1);
        try {
            floatList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 100 + "'", byte5 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7 == (byte) -1);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = identifier0.getAreaVersion();
        java.lang.String str2 = identifier0.getValue();
        org.ccsds.moims.mo.mal.structures.Element element3 = identifier0.createElement();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        try {
            identifier0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int2 = uRIList1.getTypeShortForm();
        java.lang.Integer int3 = uRIList1.getTypeShortForm();
        java.lang.Object obj4 = uRIList1.clone();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        int int11 = uRIList1.lastIndexOf((java.lang.Object) binaryDecoder10);
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = stringList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity(52, "[hi!, ]");
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject1 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject1.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier4 = null;
        eventCOMObject1.setNetworkZone(identifier4);
        org.ccsds.moims.mo.mal.structures.URI uRI6 = eventCOMObject1.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList7 = eventCOMObject1.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject8.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier10 = eventCOMObject8.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject11 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject11.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType16 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription17 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType16);
        eventCOMObject11.setObjType(objectType16);
        java.lang.Long long19 = eventCOMObject11.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId20 = eventCOMObject11.getObjectId();
        eventCOMObject8.setSource(objectId20);
        eventCOMObject1.setSource(objectId20);
        org.ccsds.moims.mo.com.structures.ObjectId objectId23 = eventCOMObject1.getSource();
        eventCOMObject0.setSource(objectId23);
        org.ccsds.moims.mo.mal.structures.Identifier identifier25 = eventCOMObject0.getNetworkZone();
        java.lang.Long long26 = eventCOMObject0.getRelated();
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertNull(identifierList7);
        org.junit.Assert.assertNull(objectId9);
        org.junit.Assert.assertNull(identifier10);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 4294967295L + "'", long19.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId20);
        org.junit.Assert.assertNotNull(objectId23);
        org.junit.Assert.assertNull(identifier25);
        org.junit.Assert.assertNull(long26);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.util.ListIterator<java.lang.Double> doubleItor21 = doubleList2.listIterator(1);
        doubleList2.trimToSize();
        try {
            java.util.List<java.lang.Double> doubleList25 = doubleList2.subList(14, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(doubleItor21);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity(11, "[]");
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = duration1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList4 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        byteList13.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean21 = longList4.removeAll((java.util.Collection<java.lang.Byte>) byteList13);
        boolean boolean22 = duration1.equals((java.lang.Object) longList4);
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = duration1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.FloatList floatList24 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element25 = floatList24.createElement();
        java.lang.Integer int26 = floatList24.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.OctetList octetList27 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = octetList27.getServiceNumber();
        java.lang.Integer int29 = octetList27.getTypeShortForm();
        boolean boolean30 = floatList24.equals((java.lang.Object) int29);
        byte[] byteArray34 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder35 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray34);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime36 = binaryDecoder35.decodeFineTime();
        java.lang.Long long37 = binaryDecoder35.decodeLong();
        int int38 = floatList24.lastIndexOf((java.lang.Object) binaryDecoder35);
        try {
            org.ccsds.moims.mo.mal.structures.Element element39 = uShort23.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-4) + "'", int26.equals((-4)));
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-7) + "'", int29.equals((-7)));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(fineTime36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-64L) + "'", long37.equals((-64L)));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRI2.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element5 = uRI2.createElement();
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(element5);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str1 = identifier0.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = identifier0.getAreaNumber();
        java.lang.Long long3 = identifier0.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = identifier0.getServiceNumber();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) -1);
        try {
            identifier0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487878L + "'", long3.equals(281474993487878L));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -1 + "'", byte8 == (byte) -1);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Time time13 = binaryDecoder9.decodeNullableTime();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration14 = binaryDecoder9.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12.equals((byte) -1));
        org.junit.Assert.assertNull(time13);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = blob9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int13 = floatList11.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int14 = floatList11.getTypeShortForm();
        boolean boolean15 = floatList11.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator16 = floatList11.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = floatList11.getServiceNumber();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = uShort19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort27 = binaryDecoder24.decodeNullableUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-4) + "'", int14.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(floatSpliterator16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element26);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeNullableBoolean((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.ULong uLong14 = binaryDecoder13.decodeNullableULong();
        try {
            java.lang.Double double15 = binaryDecoder13.decodeNullableDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNull(uLong14);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        try {
            java.lang.Boolean boolean11 = binaryDecoder10.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList13 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList13, shortArray12);
        java.util.ListIterator<java.lang.Short> shortItor15 = shortList13.listIterator();
        int int16 = doubleList8.indexOf((java.lang.Object) shortList13);
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean18 = blob17.isURLBased();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.Element element24 = blob17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
        boolean boolean25 = doubleList8.contains((java.lang.Object) blob17);
        java.lang.String str26 = blob17.getURL();
        try {
            binaryEncoder1.encodeElement((org.ccsds.moims.mo.mal.structures.Element) blob17);
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Null value supplied in a non-nullable field");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(shortItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        try {
            java.lang.Double double6 = binaryDecoder4.decodeNullableDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean64 = byteList37.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.ccsds.moims.mo.mal.structures.URIList uRIList65 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int66 = uRIList65.getTypeShortForm();
        java.lang.Integer int67 = uRIList65.getTypeShortForm();
        boolean boolean68 = byteList37.equals((java.lang.Object) uRIList65);
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = uRIList65.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = uRIList65.getAreaNumber();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.lang.Long[] longArray83 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList84 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList84, longArray83);
        java.lang.Object obj86 = longList84.clone();
        int int87 = strList74.indexOf((java.lang.Object) longList84);
        java.util.ListIterator<java.lang.String> strItor88 = strList74.listIterator();
        java.lang.String str89 = strList74.toString();
        strList74.clear();
        boolean boolean91 = uRIList65.remove((java.lang.Object) strList74);
        java.io.OutputStream outputStream92 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder93 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream92);
        byte byte95 = binaryEncoder93.internalEncodeAttributeType((byte) 100);
        try {
            uRIList65.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-18) + "'", int66.equals((-18)));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uShort69);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "[hi!, ]" + "'", str89.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + byte95 + "' != '" + (byte) 100 + "'", byte95 == (byte) 100);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier12 = binaryDecoder9.decodeNullableIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("[-1.0]");
        dictionary0.defineWord((java.lang.Integer) 18, "[-1.0]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        java.lang.Double double13 = binaryDecoder12.decodeNullableDouble();
        byte[] byteArray14 = binaryDecoder12.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14, 18, (int) ' ');
        int int18 = blob17.getLength();
        java.lang.String str19 = blob17.getURL();
        try {
            binaryEncoder1.encodeNullableBlob(blob17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals((double) double13, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Blob blob8 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger13 = binaryDecoder12.decodeUInteger();
        byte[] byteArray14 = binaryDecoder12.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        org.ccsds.moims.mo.mal.structures.ULong uLong16 = binaryDecoder15.decodeNullableULong();
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = union1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(uInteger13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNull(uLong16);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = duration1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList4 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        byteList13.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean21 = longList4.removeAll((java.util.Collection<java.lang.Byte>) byteList13);
        boolean boolean22 = duration1.equals((java.lang.Object) longList4);
        org.ccsds.moims.mo.mal.structures.StringList stringList24 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = stringList24.getAreaNumber();
        java.lang.Integer int26 = stringList24.getTypeShortForm();
        boolean boolean27 = duration1.equals((java.lang.Object) stringList24);
        byte[] byteArray31 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder32 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder33 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = binaryDecoder33.decodeNullableUOctet();
        java.lang.Long long35 = uOctet34.getShortForm();
        java.lang.Long long36 = uOctet34.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList37 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int38 = uRIList37.getTypeShortForm();
        java.lang.Integer int39 = uRIList37.getTypeShortForm();
        java.lang.Object obj40 = uRIList37.clone();
        byte[] byteArray44 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder45 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder46 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        int int47 = uRIList37.lastIndexOf((java.lang.Object) binaryDecoder46);
        org.ccsds.moims.mo.mal.structures.Duration duration48 = binaryDecoder46.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element49 = uOctet34.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder46);
        byte[] byteArray50 = binaryDecoder46.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder51 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray50);
        boolean boolean52 = duration1.equals((java.lang.Object) binaryDecoder51);
        try {
            java.lang.Integer int53 = binaryDecoder51.decodeInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-15) + "'", int26.equals((-15)));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281474993487880L + "'", long35.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 281474993487880L + "'", long36.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-18) + "'", int38.equals((-18)));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-18) + "'", int39.equals((-18)));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray8 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList9, uShortArray8);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream11 = uShortList9.parallelStream();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream12 = uShortList9.stream();
        uShortList9.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream14 = uShortList9.stream();
        byte[] byteArray18 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray18);
        java.lang.Double double20 = binaryDecoder19.decodeNullableDouble();
        byte[] byteArray21 = binaryDecoder19.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob24 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray21, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = blob24.getAreaVersion();
        int int26 = uShortList9.indexOf((java.lang.Object) blob24);
        java.lang.Short[] shortArray30 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList31 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList31, shortArray30);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray38 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList39, uRIArray38);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        boolean boolean50 = uRIList39.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean51 = strList36.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean52 = shortList31.contains((java.lang.Object) byteList46);
        java.lang.Byte[] byteArray57 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList58 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList58, byteArray57);
        boolean boolean61 = byteList58.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray66 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList67 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList67, byteArray66);
        boolean boolean70 = byteList67.add((java.lang.Byte) (byte) 100);
        boolean boolean71 = byteList58.addAll((java.util.Collection<java.lang.Byte>) byteList67);
        java.lang.Object obj72 = byteList58.clone();
        boolean boolean73 = shortList31.retainAll((java.util.Collection<java.lang.Byte>) byteList58);
        shortList31.clear();
        boolean boolean75 = blob24.equals((java.lang.Object) shortList31);
        try {
            binaryEncoder1.encodeNullableBlob(blob24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(uShortArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uShortStream11);
        org.junit.Assert.assertNotNull(uShortStream12);
        org.junit.Assert.assertNotNull(uShortStream14);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals((double) double20, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uRIArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) (-18));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        double double13 = duration12.getValue();
        org.ccsds.moims.mo.mal.structures.Element element14 = duration12.createElement();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(element14);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeFloat((java.lang.Float) Float.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = identifier0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = identifier0.getAreaVersion();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 14, 18);
        blob12.detach();
        boolean boolean14 = identifier0.equals((java.lang.Object) blob12);
        java.lang.String str15 = identifier0.getValue();
        org.ccsds.moims.mo.mal.structures.ShortList shortList16 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.Element element17 = shortList16.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = shortList16.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element19 = shortList16.createElement();
        boolean boolean20 = identifier0.equals((java.lang.Object) element19);
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uShortList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uShortList1.getServiceNumber();
        int int4 = uShortList1.size();
        java.lang.Long long5 = uShortList1.getShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor6 = uShortList1.iterator();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray7 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList8, uShortArray7);
        uShortList8.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element12 = uOctet11.createElement();
        int int13 = uShortList8.indexOf((java.lang.Object) element12);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator14 = uShortList8.spliterator();
        uShortList8.clear();
        org.ccsds.moims.mo.mal.structures.ShortList shortList16 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Integer int17 = shortList16.getTypeShortForm();
        byte[] byteArray21 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder22 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray21);
        org.ccsds.moims.mo.mal.structures.Blob blob23 = binaryDecoder22.decodeBlob();
        boolean boolean24 = shortList16.equals((java.lang.Object) blob23);
        org.ccsds.moims.mo.mal.structures.ShortList shortList25 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = shortList25.getAreaNumber();
        java.lang.Object[] objArray27 = shortList25.toArray();
        java.lang.Long long28 = shortList25.getShortForm();
        shortList25.ensureCapacity((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray31 = new org.ccsds.moims.mo.mal.structures.ShortList[] { shortList16, shortList25 };
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray32 = uShortList8.toArray(shortListArray31);
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray33 = uShortList1.toArray(shortListArray32);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265078L + "'", long5.equals(281475010265078L));
        org.junit.Assert.assertNotNull(uShortItor6);
        org.junit.Assert.assertNotNull(uShortArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(uShortSpliterator14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-9) + "'", int17.equals((-9)));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(blob23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 281475010265079L + "'", long28.equals(281475010265079L));
        org.junit.Assert.assertNotNull(shortListArray31);
        org.junit.Assert.assertNotNull(shortListArray32);
        org.junit.Assert.assertNotNull(shortListArray33);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = uRIList26.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean38 = strList23.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean39 = doubleList2.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.String str40 = doubleList2.toString();
        org.ccsds.moims.mo.mal.structures.URI uRI42 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet43 = uRI42.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort44 = uRI42.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet45 = uRI42.getAreaVersion();
        int int46 = doubleList2.indexOf((java.lang.Object) uOctet45);
        java.lang.Object obj47 = doubleList2.clone();
        java.util.Iterator<java.lang.Double> doubleItor48 = doubleList2.iterator();
        java.lang.String str49 = doubleList2.toString();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[0.0]" + "'", str40.equals("[0.0]"));
        org.junit.Assert.assertNotNull(uOctet43);
        org.junit.Assert.assertNotNull(uShort44);
        org.junit.Assert.assertNotNull(uOctet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(doubleItor48);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "[0.0]" + "'", str49.equals("[0.0]"));
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId5 = eventCOMObject4.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType7 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject4.setObjType(objectType7);
        eventCOMObject0.setObjType(objectType7);
        org.ccsds.moims.mo.mal.structures.URI uRI10 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.Element element11 = eventCOMObject0.getBody();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNull(identifier3);
        org.junit.Assert.assertNull(objectId5);
        org.junit.Assert.assertNotNull(objectType7);
        org.junit.Assert.assertNull(uRI10);
        org.junit.Assert.assertNull(element11);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean2 = dictionary0.exists((java.lang.Integer) 16);
        java.lang.Integer int4 = dictionary0.getWordId("");
        try {
            java.lang.String str6 = dictionary0.getWord((java.lang.Integer) 6);
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: The word for the id: 6 is unknown!");
        } catch (java.lang.Exception e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4.equals(1));
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList9 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        int int12 = intList9.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream13 = intList9.parallelStream();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = binaryDecoder19.decodeNullableUOctet();
        java.lang.Long long21 = uOctet20.getShortForm();
        java.lang.Long long22 = uOctet20.getShortForm();
        int int23 = intList9.lastIndexOf((java.lang.Object) uOctet20);
        java.lang.Object obj24 = intList9.clone();
        boolean boolean26 = intList9.add((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(uOctet20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 281474993487880L + "'", long21.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281474993487880L + "'", long22.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = uRIList58.getAreaNumber();
        boolean boolean71 = uRIList58.isEmpty();
        byte[] byteArray75 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder76 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray75);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime77 = binaryDecoder76.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI78 = binaryDecoder76.decodeURI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = uRI78.getAreaVersion();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList89 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList89, intArray88);
        int int92 = intList89.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream93 = intList89.stream();
        java.util.Iterator<java.lang.Integer> intItor94 = intList89.iterator();
        boolean boolean95 = uRI78.equals((java.lang.Object) intItor94);
        boolean boolean96 = uRIList58.add(uRI78);
        uRIList58.clear();
        java.lang.String str98 = uRIList58.toString();
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertNotNull(fineTime77);
        org.junit.Assert.assertNotNull(uRI78);
        org.junit.Assert.assertNotNull(uOctet79);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(intStream93);
        org.junit.Assert.assertNotNull(intItor94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", !boolean95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96);
        org.junit.Assert.assertTrue("'" + str98 + "' != '" + "[]" + "'", str98.equals("[]"));
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity(5, "[10]");
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Integer int12 = binaryDecoder9.decodeNullableInteger();
        try {
            java.lang.Long long13 = binaryDecoder9.decodeLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12.equals(0));
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        java.lang.Object[] objArray4 = shortList0.toArray();
        java.lang.Long long5 = shortList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = shortList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList7 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int8 = uRIList7.getTypeShortForm();
        java.lang.Integer int9 = uRIList7.getTypeShortForm();
        java.lang.Object obj10 = uRIList7.clone();
        byte[] byteArray14 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        int int17 = uRIList7.lastIndexOf((java.lang.Object) binaryDecoder16);
        org.ccsds.moims.mo.mal.structures.Time time18 = binaryDecoder16.decodeTime();
        org.ccsds.moims.mo.mal.structures.Duration duration19 = binaryDecoder16.decodeNullableDuration();
        try {
            org.ccsds.moims.mo.mal.structures.Element element20 = uOctet6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265079L + "'", long5.equals(281475010265079L));
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-18) + "'", int9.equals((-18)));
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(time18);
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        org.ccsds.moims.mo.mal.structures.Time time9 = binaryDecoder7.decodeNullableTime();
        java.io.OutputStream outputStream10 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder11 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream10);
        byte byte13 = binaryEncoder11.internalEncodeAttributeType((byte) -1);
        try {
            time9.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(time9);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) -1 + "'", byte13 == (byte) -1);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int1 = uRIList0.size();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor2 = uRIList0.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRIList0.getServiceNumber();
        int int4 = uRIList0.size();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        java.lang.Double double10 = binaryDecoder9.decodeNullableDouble();
        byte[] byteArray11 = binaryDecoder9.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11, (int) (short) 1);
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = uRIList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(uRIItor2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals((double) double10, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray11);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeAbstractElementType((java.lang.Long) 281474993487881L, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.String str18 = strList3.toString();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = binaryDecoder24.decodeNullableUOctet();
        java.lang.Long long26 = uOctet25.getShortForm();
        short short27 = uOctet25.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = uOctet25.getServiceNumber();
        boolean boolean29 = strList3.remove((java.lang.Object) uShort28);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray30 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList31, uRIArray30);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        boolean boolean42 = uRIList31.containsAll((java.util.Collection<java.lang.Byte>) byteList38);
        int int44 = uRIList31.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        int int65 = byteList59.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean66 = uRIList31.removeAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean67 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList59);
        try {
            java.util.List<java.lang.String> strList70 = strList3.subList((int) '#', (-15));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(35) > toIndex(-15)");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "[hi!, ]" + "'", str18.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281474993487880L + "'", long26.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short27 + "' != '" + (short) 127 + "'", short27 == (short) 127);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(uRIArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = binaryDecoder9.decodeUShort();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute14 = binaryDecoder9.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(uShort13);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        java.lang.Integer int6 = floatList0.getTypeShortForm();
        boolean boolean8 = floatList0.add((java.lang.Float) (-1.0f));
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray9 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList10, uShortArray9);
        uShortList10.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element14 = uOctet13.createElement();
        int int15 = uShortList10.indexOf((java.lang.Object) element14);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator16 = uShortList10.spliterator();
        uShortList10.clear();
        org.ccsds.moims.mo.mal.structures.ShortList shortList18 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Integer int19 = shortList18.getTypeShortForm();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Blob blob25 = binaryDecoder24.decodeBlob();
        boolean boolean26 = shortList18.equals((java.lang.Object) blob25);
        org.ccsds.moims.mo.mal.structures.ShortList shortList27 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = shortList27.getAreaNumber();
        java.lang.Object[] objArray29 = shortList27.toArray();
        java.lang.Long long30 = shortList27.getShortForm();
        shortList27.ensureCapacity((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray33 = new org.ccsds.moims.mo.mal.structures.ShortList[] { shortList18, shortList27 };
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray34 = uShortList10.toArray(shortListArray33);
        byte[] byteArray38 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder39 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = binaryDecoder40.decodeNullableUOctet();
        java.lang.Long long42 = uOctet41.getShortForm();
        int int43 = uShortList10.lastIndexOf((java.lang.Object) uOctet41);
        boolean boolean44 = floatList0.remove((java.lang.Object) int43);
        try {
            java.util.ListIterator<java.lang.Float> floatItor46 = floatList0.listIterator((-9));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -9");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-4) + "'", int6.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(uShortArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(uShortSpliterator16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-9) + "'", int19.equals((-9)));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(blob25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 281475010265079L + "'", long30.equals(281475010265079L));
        org.junit.Assert.assertNotNull(shortListArray33);
        org.junit.Assert.assertNotNull(shortListArray34);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 281474993487880L + "'", long42.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject6.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = eventCOMObject6.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        java.lang.Long long17 = eventCOMObject9.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId18 = eventCOMObject9.getObjectId();
        eventCOMObject6.setSource(objectId18);
        org.ccsds.moims.mo.mal.structures.Time time20 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int21 = time20.getTypeShortForm();
        eventCOMObject6.setTimestamp(time20);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = time20.getAreaVersion();
        java.lang.String str24 = time20.toString();
        eventCOMObject0.setTimestamp(time20);
        java.lang.Long long26 = eventCOMObject0.getRelated();
        java.lang.Long long27 = eventCOMObject0.getObjId();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertNull(identifier8);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 4294967295L + "'", long17.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 16 + "'", int21.equals(16));
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "0" + "'", str24.equals("0"));
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 4294967295L + "'", long27.equals(4294967295L));
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.Object obj20 = doubleList2.clone();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList34 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList34, longArray33);
        java.lang.Object obj36 = longList34.clone();
        int int37 = strList24.indexOf((java.lang.Object) longList34);
        java.util.ListIterator<java.lang.String> strItor38 = strList24.listIterator();
        java.lang.String str39 = strList24.toString();
        java.lang.Object[] objArray40 = strList24.toArray();
        boolean boolean41 = doubleList2.contains((java.lang.Object) strList24);
        java.lang.String str42 = strList24.toString();
        int int43 = strList24.size();
        java.util.ListIterator<java.lang.String> strItor44 = strList24.listIterator();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[hi!, ]" + "'", str39.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "[hi!, ]" + "'", str42.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(strItor44);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.lang.Long[] longArray24 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList25 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList25, longArray24);
        java.lang.Object obj27 = longList25.clone();
        int int28 = strList15.indexOf((java.lang.Object) longList25);
        java.util.ListIterator<java.lang.String> strItor29 = strList15.listIterator();
        java.lang.Short[] shortArray33 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList34 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList34, shortArray33);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray41 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList42 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList42, uRIArray41);
        java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList49 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList49, byteArray48);
        boolean boolean52 = byteList49.add((java.lang.Byte) (byte) 100);
        boolean boolean53 = uRIList42.containsAll((java.util.Collection<java.lang.Byte>) byteList49);
        boolean boolean54 = strList39.containsAll((java.util.Collection<java.lang.Byte>) byteList49);
        boolean boolean55 = shortList34.contains((java.lang.Object) byteList49);
        boolean boolean56 = strList15.removeAll((java.util.Collection<java.lang.Byte>) byteList49);
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList62, byteArray61);
        boolean boolean65 = byteList62.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray70 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList71 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList71, byteArray70);
        boolean boolean74 = byteList71.add((java.lang.Byte) (byte) 100);
        boolean boolean75 = byteList62.addAll((java.util.Collection<java.lang.Byte>) byteList71);
        boolean boolean76 = byteList49.containsAll((java.util.Collection<java.lang.Byte>) byteList71);
        org.ccsds.moims.mo.mal.structures.URIList uRIList77 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int78 = uRIList77.getTypeShortForm();
        java.lang.Integer int79 = uRIList77.getTypeShortForm();
        boolean boolean80 = byteList49.equals((java.lang.Object) uRIList77);
        java.lang.Object obj81 = uRIList77.clone();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet82 = uRIList77.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet83 = uRIList77.getAreaVersion();
        try {
            org.ccsds.moims.mo.mal.structures.Element element84 = binaryDecoder9.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uRIList77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(uRIArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-18) + "'", int78.equals((-18)));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-18) + "'", int79.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(uOctet82);
        org.junit.Assert.assertNotNull(uOctet83);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.Duration duration9 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = duration9.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = duration9.getAreaVersion();
        java.lang.Integer int12 = duration9.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element13 = duration9.createElement();
        try {
            binaryEncoder1.encodeNullableDuration(duration9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12.equals(3));
        org.junit.Assert.assertNotNull(element13);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.ccsds.moims.mo.mal.structures.Blob blob1 = new org.ccsds.moims.mo.mal.structures.Blob("".getBytes());
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) 100);
        byte byte7 = binaryEncoder3.internalEncodeAttributeType((byte) 10);
        try {
            blob1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 100 + "'", byte5 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 10 + "'", byte7 == (byte) 10);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        java.util.Spliterator<java.lang.Long> longSpliterator70 = longList8.spliterator();
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertNotNull(longSpliterator70);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        java.lang.Integer int2 = union1.getTypeShortForm();
        java.lang.String str3 = union1.toString();
        java.lang.Long long4 = union1.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = union1.getAreaNumber();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger12 = binaryDecoder11.decodeUInteger();
        java.lang.Float float13 = binaryDecoder11.decodeNullableFloat();
        try {
            org.ccsds.moims.mo.mal.structures.Element element14 = union1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2.equals(2));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "true" + "'", str3.equals("true"));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487874L + "'", long4.equals(281474993487874L));
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(uInteger12);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 0.0f + "'", float13.equals(0.0f));
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        org.ccsds.moims.mo.mal.structures.OctetList octetList34 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = octetList34.getServiceNumber();
        boolean boolean36 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) octetList34);
        java.util.stream.Stream<java.lang.Byte> byteStream37 = octetList34.stream();
        octetList34.clear();
        byte[] byteArray42 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder43 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray42);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder44 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray42);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger45 = binaryDecoder44.decodeUInteger();
        java.lang.Integer int46 = binaryDecoder44.decodeInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element47 = octetList34.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(uShort35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(byteStream37);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(uInteger45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-64) + "'", int46.equals((-64)));
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeAbstractElementType((java.lang.Long) 281474993487875L, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        boolean boolean3 = booleanList0.add((java.lang.Boolean) true);
        boolean boolean5 = booleanList0.remove((java.lang.Object) 281474993487884L);
        org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList(12);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = octetList7.getAreaNumber();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        java.lang.Integer int15 = binaryDecoder14.decodeInteger();
        org.ccsds.moims.mo.mal.structures.Element element16 = uShort8.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder14);
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = booleanList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15.equals(50));
        org.junit.Assert.assertNotNull(element16);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.Time time9 = new org.ccsds.moims.mo.mal.structures.Time(4294967295L);
        try {
            binaryEncoder1.encodeNullableTime(time9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uLong1.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity5 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long6 = objectTypeHolderEntity5.getObjectType();
        boolean boolean7 = uLong1.equals((java.lang.Object) long6);
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter8 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = archiveSyncGenAdapter8.getLastKnownIndex();
        boolean boolean10 = uLong1.equals((java.lang.Object) archiveSyncGenAdapter8);
        java.lang.Long long11 = uLong1.getShortForm();
        java.lang.String str12 = uLong1.toString();
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487879L + "'", long6.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 281474993487886L + "'", long11.equals(281474993487886L));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "18446744073709551615" + "'", str12.equals("18446744073709551615"));
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) 13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uRI1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRI1.getServiceNumber();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7, 6);
        boolean boolean11 = uShort3.equals((java.lang.Object) binaryDecoder10);
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute12 = binaryDecoder10.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        java.lang.Integer int6 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList8 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor10 = uShortList8.listIterator((int) (byte) 0);
        java.lang.Integer int11 = uShortList8.getTypeShortForm();
        int int12 = floatList0.lastIndexOf((java.lang.Object) uShortList8);
        java.lang.String str13 = floatList0.toString();
        boolean boolean14 = floatList0.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = floatList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList17 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean19 = blob18.isURLBased();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = blob18.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        boolean boolean26 = integerList17.equals((java.lang.Object) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = integerList17.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList28 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int29 = uRIList28.getTypeShortForm();
        java.lang.Integer int30 = uRIList28.getTypeShortForm();
        java.lang.Object obj31 = uRIList28.clone();
        byte[] byteArray35 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        int int38 = uRIList28.lastIndexOf((java.lang.Object) binaryDecoder37);
        org.ccsds.moims.mo.mal.structures.Duration duration39 = binaryDecoder37.decodeDuration();
        int int40 = integerList17.lastIndexOf((java.lang.Object) binaryDecoder37);
        java.lang.Boolean boolean41 = binaryDecoder37.decodeNullableBoolean();
        org.ccsds.moims.mo.mal.structures.Element element42 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder37);
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet43 = binaryDecoder37.decodeUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-4) + "'", int6.equals((-4)));
        org.junit.Assert.assertNotNull(uShortItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-10) + "'", int11.equals((-10)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[]" + "'", str13.equals("[]"));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-18) + "'", int29.equals((-18)));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-18) + "'", int30.equals((-18)));
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41.equals(false));
        org.junit.Assert.assertNotNull(element42);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uLong1.getAreaVersion();
        java.math.BigInteger bigInteger3 = uLong1.getValue();
        org.ccsds.moims.mo.mal.structures.ULong uLong4 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger3);
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Blob blob10 = binaryDecoder9.decodeBlob();
        try {
            org.ccsds.moims.mo.mal.structures.Element element11 = uLong4.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(bigInteger3);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(blob10);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = duration1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList4 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        byteList13.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean21 = longList4.removeAll((java.util.Collection<java.lang.Byte>) byteList13);
        boolean boolean22 = duration1.equals((java.lang.Object) longList4);
        org.ccsds.moims.mo.mal.structures.StringList stringList24 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = stringList24.getAreaNumber();
        java.lang.Integer int26 = stringList24.getTypeShortForm();
        boolean boolean27 = duration1.equals((java.lang.Object) stringList24);
        byte[] byteArray31 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder32 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder33 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = binaryDecoder33.decodeNullableUOctet();
        java.lang.Long long35 = uOctet34.getShortForm();
        java.lang.Long long36 = uOctet34.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList37 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int38 = uRIList37.getTypeShortForm();
        java.lang.Integer int39 = uRIList37.getTypeShortForm();
        java.lang.Object obj40 = uRIList37.clone();
        byte[] byteArray44 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder45 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder46 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        int int47 = uRIList37.lastIndexOf((java.lang.Object) binaryDecoder46);
        org.ccsds.moims.mo.mal.structures.Duration duration48 = binaryDecoder46.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element49 = uOctet34.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder46);
        byte[] byteArray50 = binaryDecoder46.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder51 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray50);
        boolean boolean52 = duration1.equals((java.lang.Object) binaryDecoder51);
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute53 = binaryDecoder51.decodeNullableAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-15) + "'", int26.equals((-15)));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281474993487880L + "'", long35.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 281474993487880L + "'", long36.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-18) + "'", int38.equals((-18)));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-18) + "'", int39.equals((-18)));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        boolean boolean12 = integerList1.add((java.lang.Integer) 9);
        java.lang.Object obj13 = integerList1.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Short[] shortArray7 = new java.lang.Short[] { (short) -64, (short) 1, (short) 127, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList8 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList8, shortArray7);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        java.lang.Object obj20 = longList18.clone();
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList23 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList23, booleanArray22);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        boolean boolean43 = byteList30.addAll((java.util.Collection<java.lang.Byte>) byteList39);
        java.lang.Object obj44 = byteList30.clone();
        boolean boolean45 = booleanList23.contains((java.lang.Object) byteList30);
        boolean boolean46 = longList18.remove((java.lang.Object) boolean45);
        java.lang.Byte[] byteArray51 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList52 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList52, byteArray51);
        boolean boolean55 = byteList52.add((java.lang.Byte) (byte) 100);
        int int56 = longList18.lastIndexOf((java.lang.Object) byteList52);
        org.ccsds.moims.mo.mal.structures.OctetList octetList57 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = octetList57.getServiceNumber();
        boolean boolean59 = longList18.removeAll((java.util.Collection<java.lang.Byte>) octetList57);
        java.lang.Double[] doubleArray66 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList67 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList67, doubleArray66);
        org.ccsds.moims.mo.mal.structures.OctetList octetList69 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = octetList69.getServiceNumber();
        boolean boolean71 = doubleList67.containsAll((java.util.Collection<java.lang.Byte>) octetList69);
        boolean boolean72 = octetList57.addAll(0, (java.util.Collection<java.lang.Byte>) octetList69);
        boolean boolean73 = shortList8.removeAll((java.util.Collection<java.lang.Byte>) octetList69);
        org.ccsds.moims.mo.mal.structures.UShort uShort74 = octetList69.getAreaNumber();
        boolean boolean75 = stringList1.retainAll((java.util.Collection<java.lang.Byte>) octetList69);
        java.util.Iterator<java.lang.String> strItor76 = stringList1.iterator();
        java.io.OutputStream outputStream77 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder78 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream77);
        byte byte80 = binaryEncoder78.internalEncodeAttributeType((byte) 100);
        byte byte82 = binaryEncoder78.internalEncodeAttributeType((byte) -1);
        byte byte84 = binaryEncoder78.internalEncodeAttributeType((byte) 1);
        try {
            stringList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertNotNull(uShort74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertNotNull(strItor76);
        org.junit.Assert.assertTrue("'" + byte80 + "' != '" + (byte) 100 + "'", byte80 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte82 + "' != '" + (byte) -1 + "'", byte82 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte84 + "' != '" + (byte) 1 + "'", byte84 == (byte) 1);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        shortList0.ensureCapacity((int) (byte) 0);
        java.lang.Object[] objArray6 = shortList0.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = shortList0.getServiceNumber();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        java.util.Iterator<java.lang.String> strItor40 = strList35.iterator();
        boolean boolean41 = shortList0.remove((java.lang.Object) strItor40);
        java.util.Iterator<java.lang.Short> shortItor42 = shortList0.iterator();
        org.ccsds.moims.mo.mal.structures.URIList uRIList43 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int44 = uRIList43.getTypeShortForm();
        java.lang.Integer int45 = uRIList43.getTypeShortForm();
        java.lang.Object obj46 = uRIList43.clone();
        byte[] byteArray50 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder51 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray50);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder52 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray50);
        int int53 = uRIList43.lastIndexOf((java.lang.Object) binaryDecoder52);
        org.ccsds.moims.mo.mal.structures.Time time54 = binaryDecoder52.decodeTime();
        org.ccsds.moims.mo.mal.structures.Duration duration55 = binaryDecoder52.decodeNullableDuration();
        boolean boolean56 = shortList0.remove((java.lang.Object) duration55);
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(shortItor42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-18) + "'", int44.equals((-18)));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-18) + "'", int45.equals((-18)));
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(time54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = blob9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int13 = floatList11.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int14 = floatList11.getTypeShortForm();
        boolean boolean15 = floatList11.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator16 = floatList11.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = floatList11.getServiceNumber();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = uShort19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort27 = binaryDecoder24.decodeUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-4) + "'", int14.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(floatSpliterator16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element26);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = blob9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int13 = floatList11.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int14 = floatList11.getTypeShortForm();
        boolean boolean15 = floatList11.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator16 = floatList11.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = floatList11.getServiceNumber();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = uShort19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        try {
            java.lang.Long long27 = binaryDecoder24.decodeLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-4) + "'", int14.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(floatSpliterator16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element26);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType4 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(9, (int) (short) 0, 17, (-18));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UShort argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.Object obj20 = doubleList2.clone();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList34 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList34, longArray33);
        java.lang.Object obj36 = longList34.clone();
        int int37 = strList24.indexOf((java.lang.Object) longList34);
        java.util.ListIterator<java.lang.String> strItor38 = strList24.listIterator();
        java.lang.String str39 = strList24.toString();
        java.lang.Object[] objArray40 = strList24.toArray();
        boolean boolean41 = doubleList2.contains((java.lang.Object) strList24);
        java.lang.String str42 = strList24.toString();
        int int43 = strList24.size();
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList46 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList46, booleanArray45);
        java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53, byteArray52);
        boolean boolean56 = byteList53.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList62, byteArray61);
        boolean boolean65 = byteList62.add((java.lang.Byte) (byte) 100);
        boolean boolean66 = byteList53.addAll((java.util.Collection<java.lang.Byte>) byteList62);
        java.lang.Object obj67 = byteList53.clone();
        boolean boolean68 = booleanList46.contains((java.lang.Object) byteList53);
        boolean boolean69 = strList24.removeAll((java.util.Collection<java.lang.Byte>) byteList53);
        java.lang.String str70 = byteList53.toString();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[hi!, ]" + "'", str39.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "[hi!, ]" + "'", str42.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "[-1, -1, -1, -1, 100, -1, -1, -1, -1, 100]" + "'", str70.equals("[-1, -1, -1, -1, 100, -1, -1, -1, -1, 100]"));
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, (int) (short) 100);
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray12, 2, 18);
        blob18.detach();
        int int20 = blob18.getLength();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 18 + "'", int20 == 18);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.ShortList shortList3 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList3.getAreaNumber();
        java.lang.Object[] objArray5 = shortList3.toArray();
        java.lang.Long long6 = shortList3.getShortForm();
        java.lang.Long long7 = shortList3.getShortForm();
        java.lang.Object[] objArray8 = shortList3.toArray();
        org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
        boolean boolean18 = byteList15.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        boolean boolean28 = byteList15.addAll((java.util.Collection<java.lang.Byte>) byteList24);
        java.lang.Object obj29 = byteList15.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream30 = byteList15.stream();
        boolean boolean31 = floatList9.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        byteList15.ensureCapacity((-4));
        byteList15.clear();
        boolean boolean35 = shortList3.retainAll((java.util.Collection<java.lang.Byte>) byteList15);
        boolean boolean36 = integerList1.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        org.ccsds.moims.mo.mal.structures.URIList uRIList37 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int38 = uRIList37.getTypeShortForm();
        java.lang.Integer int39 = uRIList37.getTypeShortForm();
        java.lang.Object obj40 = uRIList37.clone();
        byte[] byteArray44 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder45 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder46 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        int int47 = uRIList37.lastIndexOf((java.lang.Object) binaryDecoder46);
        org.ccsds.moims.mo.mal.structures.Duration duration48 = binaryDecoder46.decodeDuration();
        java.lang.Integer int49 = binaryDecoder46.decodeInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element50 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265079L + "'", long6.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265079L + "'", long7.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-18) + "'", int38.equals((-18)));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-18) + "'", int39.equals((-18)));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-64) + "'", int49.equals((-64)));
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.lang.Long[] longArray16 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList17 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList17, longArray16);
        java.lang.Object obj19 = longList17.clone();
        int int20 = strList7.indexOf((java.lang.Object) longList17);
        java.util.ListIterator<java.lang.String> strItor21 = strList7.listIterator();
        java.lang.Short[] shortArray25 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList26 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList26, shortArray25);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray33 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList34, uRIArray33);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        boolean boolean45 = uRIList34.containsAll((java.util.Collection<java.lang.Byte>) byteList41);
        boolean boolean46 = strList31.containsAll((java.util.Collection<java.lang.Byte>) byteList41);
        boolean boolean47 = shortList26.contains((java.lang.Object) byteList41);
        boolean boolean48 = strList7.removeAll((java.util.Collection<java.lang.Byte>) byteList41);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList63 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList63, byteArray62);
        boolean boolean66 = byteList63.add((java.lang.Byte) (byte) 100);
        boolean boolean67 = byteList54.addAll((java.util.Collection<java.lang.Byte>) byteList63);
        boolean boolean68 = byteList41.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        org.ccsds.moims.mo.mal.structures.URI uRI70 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet71 = uRI70.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort72 = uRI70.getServiceNumber();
        byte[] byteArray76 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder77 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76, 6);
        boolean boolean80 = uShort72.equals((java.lang.Object) binaryDecoder79);
        int int81 = byteList63.indexOf((java.lang.Object) boolean80);
        boolean boolean82 = floatList0.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        java.lang.Object obj83 = floatList0.clone();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(uRIArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertNotNull(uOctet71);
        org.junit.Assert.assertNotNull(uShort72);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        try {
            java.lang.Boolean boolean13 = binaryDecoder9.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26, booleanArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        boolean boolean46 = byteList33.addAll((java.util.Collection<java.lang.Byte>) byteList42);
        java.lang.Object obj47 = byteList33.clone();
        boolean boolean48 = booleanList26.contains((java.lang.Object) byteList33);
        boolean boolean49 = longList21.remove((java.lang.Object) boolean48);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        int int59 = longList21.lastIndexOf((java.lang.Object) byteList55);
        int int60 = longList21.size();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime61 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet62 = fineTime61.getAreaVersion();
        boolean boolean63 = longList21.equals((java.lang.Object) uOctet62);
        try {
            org.ccsds.moims.mo.mal.structures.Element element64 = binaryDecoder9.decodeElement((org.ccsds.moims.mo.mal.structures.Element) uOctet62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 7 + "'", int60 == 7);
        org.junit.Assert.assertNotNull(uOctet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int2 = stringList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        boolean boolean24 = byteList21.add((java.lang.Byte) (byte) 100);
        boolean boolean25 = byteList12.addAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int27 = byteList21.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean28 = uRIList5.retainAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int29 = stringList1.lastIndexOf((java.lang.Object) uRIList5);
        java.lang.Long long30 = stringList1.getShortForm();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList32 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = doubleList32.getAreaNumber();
        java.lang.Object obj34 = doubleList32.clone();
        byte[] byteArray38 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder39 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = binaryDecoder40.decodeNullableUOctet();
        int int42 = doubleList32.lastIndexOf((java.lang.Object) binaryDecoder40);
        java.util.stream.Stream<java.lang.Double> doubleStream43 = doubleList32.stream();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer44 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl45 = cOMServicesConsumer44.getArchiveService();
        cOMServicesConsumer44.closeConnections();
        cOMServicesConsumer44.closeConnections();
        boolean boolean48 = doubleList32.contains((java.lang.Object) cOMServicesConsumer44);
        boolean boolean49 = stringList1.contains((java.lang.Object) boolean48);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet50 = stringList1.getAreaVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-15) + "'", int2.equals((-15)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 281475010265073L + "'", long30.equals(281475010265073L));
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(doubleStream43);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(uOctet50);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime9 = binaryDecoder8.decodeFineTime();
        java.lang.Integer int10 = fineTime9.getTypeShortForm();
        java.lang.Long long11 = fineTime9.getShortForm();
        try {
            binaryEncoder1.encodeNullableFineTime(fineTime9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(fineTime9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 17 + "'", int10.equals(17));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 281474993487889L + "'", long11.equals(281474993487889L));
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Duration duration23 = binaryDecoder21.decodeDuration();
        int int24 = integerList1.lastIndexOf((java.lang.Object) binaryDecoder21);
        java.lang.Boolean boolean25 = binaryDecoder21.decodeNullableBoolean();
        java.lang.Double double26 = binaryDecoder21.decodeDouble();
        try {
            java.lang.Long long27 = binaryDecoder21.decodeLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25.equals(false));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26.equals(0.0d));
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream3 = uShortList1.parallelStream();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream4 = uShortList1.stream();
        uShortList1.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream6 = uShortList1.stream();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        java.lang.Double double12 = binaryDecoder11.decodeNullableDouble();
        byte[] byteArray13 = binaryDecoder11.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = blob16.getAreaVersion();
        int int18 = uShortList1.indexOf((java.lang.Object) blob16);
        java.io.OutputStream outputStream19 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder20 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream19);
        byte byte22 = binaryEncoder20.internalEncodeAttributeType((byte) 100);
        try {
            blob16.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uShortStream3);
        org.junit.Assert.assertNotNull(uShortStream4);
        org.junit.Assert.assertNotNull(uShortStream6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals((double) double12, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + byte22 + "' != '" + (byte) 100 + "'", byte22 == (byte) 100);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = blob9.getAreaVersion();
        java.lang.Long long11 = blob9.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = blob9.getServiceNumber();
        java.lang.String str13 = blob9.getURL();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 281474993487873L + "'", long11.equals(281474993487873L));
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int1 = uRIList0.size();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor2 = uRIList0.iterator();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uRI5.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = uRI5.getServiceNumber();
        java.lang.String str9 = uRI5.toString();
        boolean boolean10 = uRIList0.add(uRI5);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(uRIItor2);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong12 = binaryDecoder9.decodeNullableULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Duration duration7 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = duration7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element9 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) duration7);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime10 = binaryDecoder5.decodeNullableFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(element9);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.Element element1 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element3 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList4 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = integerList4.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = integerList4.getAreaNumber();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.Element element12 = uShort6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
        org.ccsds.moims.mo.mal.structures.Time time13 = binaryDecoder11.decodeTime();
        try {
            org.ccsds.moims.mo.mal.structures.Element element14 = shortList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(time13);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        java.lang.Long long2 = union1.getShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList3 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element4 = booleanList3.createElement();
        boolean boolean6 = booleanList3.add((java.lang.Boolean) true);
        boolean boolean8 = booleanList3.remove((java.lang.Object) 281474993487884L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = booleanList3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Union union11 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        int int12 = booleanList3.lastIndexOf((java.lang.Object) (-1.0d));
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = booleanList3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = booleanList3.getServiceNumber();
        java.lang.Object obj15 = booleanList3.clone();
        boolean boolean16 = union1.equals((java.lang.Object) booleanList3);
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = booleanList3.getAreaNumber();
        java.io.OutputStream outputStream18 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder19 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream18);
        byte byte21 = binaryEncoder19.internalEncodeAttributeType((byte) 100);
        byte byte23 = binaryEncoder19.internalEncodeAttributeType((byte) 10);
        try {
            booleanList3.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487874L + "'", long2.equals(281474993487874L));
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertTrue("'" + byte21 + "' != '" + (byte) 100 + "'", byte21 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) 10 + "'", byte23 == (byte) 10);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        java.lang.Long long8 = uOctet6.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList9 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int10 = uRIList9.getTypeShortForm();
        java.lang.Integer int11 = uRIList9.getTypeShortForm();
        java.lang.Object obj12 = uRIList9.clone();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        int int19 = uRIList9.lastIndexOf((java.lang.Object) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Duration duration20 = binaryDecoder18.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element21 = uOctet6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort22 = binaryDecoder18.decodeNullableUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(element21);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.lang.Long[] longArray18 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList19 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList19, longArray18);
        java.lang.Object obj21 = longList19.clone();
        int int22 = strList9.indexOf((java.lang.Object) longList19);
        java.util.ListIterator<java.lang.String> strItor23 = strList9.listIterator();
        java.lang.Short[] shortArray27 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList28 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList28, shortArray27);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray35 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList36 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList36, uRIArray35);
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList43 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList43, byteArray42);
        boolean boolean46 = byteList43.add((java.lang.Byte) (byte) 100);
        boolean boolean47 = uRIList36.containsAll((java.util.Collection<java.lang.Byte>) byteList43);
        boolean boolean48 = strList33.containsAll((java.util.Collection<java.lang.Byte>) byteList43);
        boolean boolean49 = shortList28.contains((java.lang.Object) byteList43);
        boolean boolean50 = strList9.removeAll((java.util.Collection<java.lang.Byte>) byteList43);
        byteList43.trimToSize();
        org.ccsds.moims.mo.mal.structures.URIList uRIList52 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int53 = uRIList52.getTypeShortForm();
        java.lang.Integer int54 = uRIList52.getTypeShortForm();
        java.lang.Object obj55 = uRIList52.clone();
        byte[] byteArray59 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder60 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray59);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder61 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray59);
        int int62 = uRIList52.lastIndexOf((java.lang.Object) binaryDecoder61);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger63 = binaryDecoder61.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort64 = uInteger63.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = uInteger63.getServiceNumber();
        boolean boolean66 = byteList43.equals((java.lang.Object) uInteger63);
        try {
            binaryEncoder1.encodeUInteger(uInteger63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(uRIArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-18) + "'", int53.equals((-18)));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-18) + "'", int54.equals((-18)));
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(uInteger63);
        org.junit.Assert.assertNotNull(uShort64);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeBoolean((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Float float6 = binaryDecoder5.decodeFloat();
        java.lang.Byte byte7 = binaryDecoder5.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Blob blob8 = binaryDecoder5.decodeNullableBlob();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList10 = new org.ccsds.moims.mo.mal.structures.BooleanList(50);
        int int11 = booleanList10.size();
        org.ccsds.moims.mo.mal.structures.Element element12 = booleanList10.createElement();
        java.util.Iterator<java.lang.Boolean> booleanItor13 = booleanList10.iterator();
        try {
            org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder14 = binaryDecoder5.createListDecoder((java.util.List) booleanList10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 7.0E-44f + "'", float6.equals(7.0E-44f));
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7.equals((byte) -1));
        org.junit.Assert.assertNotNull(blob8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(booleanItor13);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        java.lang.Integer int6 = fineTime5.getTypeShortForm();
        java.lang.Long long7 = fineTime5.getShortForm();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        java.lang.Byte byte14 = binaryDecoder13.decodeOctet();
        java.lang.Short short15 = binaryDecoder13.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element16 = fineTime5.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 17 + "'", int6.equals(17));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487889L + "'", long7.equals(281474993487889L));
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 100 + "'", byte14.equals((byte) 100));
        org.junit.Assert.assertTrue("'" + short15 + "' != '" + (short) -64 + "'", short15.equals((short) -64));
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element1 = floatList0.createElement();
        java.util.stream.Stream<java.lang.Float> floatStream2 = floatList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = floatList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList4 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element5 = booleanList4.createElement();
        int int7 = booleanList4.lastIndexOf((java.lang.Object) 281474993487878L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = booleanList4.getAreaVersion();
        boolean boolean9 = floatList0.contains((java.lang.Object) booleanList4);
        boolean boolean11 = booleanList4.add((java.lang.Boolean) false);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList21 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        int int24 = intList21.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream25 = intList21.parallelStream();
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder31 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet32 = binaryDecoder31.decodeNullableUOctet();
        java.lang.Long long33 = uOctet32.getShortForm();
        java.lang.Long long34 = uOctet32.getShortForm();
        int int35 = intList21.lastIndexOf((java.lang.Object) uOctet32);
        boolean boolean36 = booleanList4.equals((java.lang.Object) uOctet32);
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(floatStream2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(uOctet32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 281474993487880L + "'", long33.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 281474993487880L + "'", long34.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRI2.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRI2.getAreaVersion();
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uOctet5);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime9 = binaryDecoder8.decodeFineTime();
        try {
            binaryEncoder1.encodeNullableFineTime(fineTime9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(fineTime9);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            java.lang.Double double8 = binaryDecoder6.decodeNullableDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeURI();
        org.ccsds.moims.mo.mal.structures.Element element7 = uRI6.createElement();
        java.lang.String str8 = uRI6.toString();
        org.ccsds.moims.mo.mal.structures.Element element9 = uRI6.createElement();
        java.lang.Long long10 = uRI6.getShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(uRI6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487890L + "'", long10.equals(281474993487890L));
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        java.io.OutputStream outputStream70 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder71 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream70);
        byte byte73 = binaryEncoder71.internalEncodeAttributeType((byte) 100);
        try {
            uRIList58.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + byte73 + "' != '" + (byte) 100 + "'", byte73 == (byte) 100);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Object obj3 = null;
        int int4 = shortList0.indexOf(obj3);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList10 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList10, byteArray9);
        boolean boolean13 = byteList10.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19, byteArray18);
        boolean boolean22 = byteList19.add((java.lang.Byte) (byte) 100);
        boolean boolean23 = byteList10.addAll((java.util.Collection<java.lang.Byte>) byteList19);
        java.lang.Object obj24 = byteList10.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream25 = byteList10.stream();
        java.lang.Object[] objArray26 = byteList10.toArray();
        boolean boolean27 = shortList0.containsAll((java.util.Collection<java.lang.Byte>) byteList10);
        java.io.OutputStream outputStream28 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder29 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream28);
        byte byte31 = binaryEncoder29.internalEncodeAttributeType((byte) 100);
        byte byte33 = binaryEncoder29.internalEncodeAttributeType((byte) -1);
        byte byte35 = binaryEncoder29.internalEncodeAttributeType((byte) 1);
        try {
            shortList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(byteStream25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertTrue("'" + byte31 + "' != '" + (byte) 100 + "'", byte31 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte33 + "' != '" + (byte) -1 + "'", byte33 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte35 + "' != '" + (byte) 1 + "'", byte35 == (byte) 1);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        uShortList1.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element5 = uOctet4.createElement();
        int int6 = uShortList1.indexOf((java.lang.Object) element5);
        boolean boolean8 = uShortList1.contains((java.lang.Object) 100.0d);
        boolean boolean9 = uShortList1.isEmpty();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList19 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        int int22 = intList19.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream23 = intList19.stream();
        java.util.Iterator<java.lang.Integer> intItor24 = intList19.iterator();
        int int25 = uShortList1.lastIndexOf((java.lang.Object) intList19);
        org.ccsds.moims.mo.com.structures.ObjectType objectType31 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(18, (int) 'a', (int) ' ', 8);
        org.ccsds.moims.mo.mal.structures.Subscription subscription32 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("true", objectType31);
        boolean boolean33 = uShortList1.contains((java.lang.Object) subscription32);
        boolean boolean35 = uShortList1.contains((java.lang.Object) 281474993487874L);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor36 = uShortList1.listIterator();
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(intItor24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(objectType31);
        org.junit.Assert.assertNotNull(subscription32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(uShortItor36);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        double double12 = duration11.getValue();
        java.lang.Integer int13 = duration11.getTypeShortForm();
        java.io.OutputStream outputStream14 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder15 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream14);
        byte byte17 = binaryEncoder15.internalEncodeAttributeType((byte) 100);
        try {
            duration11.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.47E-322d + "'", double12 == 2.47E-322d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13.equals(3));
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 100 + "'", byte17 == (byte) 100);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        java.util.ListIterator<java.lang.Integer> intItor11 = integerList1.listIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(intItor11);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        java.math.BigInteger bigInteger10 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong11 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger10);
        java.lang.Integer int12 = uLong11.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element13 = uLong11.createElement();
        org.ccsds.moims.mo.mal.structures.Element element14 = uLong11.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = uLong11.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = uLong11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element17 = binaryDecoder9.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort16);
        try {
            binaryEncoder1.encodeNullableUShort(uShort16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(bigInteger10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 14 + "'", int12.equals(14));
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(uOctet15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(element17);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20, shortArray19);
        java.util.ListIterator<java.lang.Short> shortItor22 = shortList20.listIterator();
        int int23 = doubleList15.indexOf((java.lang.Object) shortList20);
        org.ccsds.moims.mo.mal.structures.Blob blob24 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean25 = blob24.isURLBased();
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.Element element31 = blob24.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder30);
        boolean boolean32 = doubleList15.contains((java.lang.Object) blob24);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray38 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList39, uRIArray38);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        boolean boolean50 = uRIList39.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean51 = strList36.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean52 = doubleList15.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55, doubleArray54);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList60 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList60, shortArray59);
        java.util.ListIterator<java.lang.Short> shortItor62 = shortList60.listIterator();
        int int63 = doubleList55.indexOf((java.lang.Object) shortList60);
        org.ccsds.moims.mo.mal.structures.Blob blob64 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean65 = blob64.isURLBased();
        byte[] byteArray69 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder70 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray69);
        org.ccsds.moims.mo.mal.structures.Element element71 = blob64.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder70);
        boolean boolean72 = doubleList55.contains((java.lang.Object) blob64);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray78 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList79 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList79, uRIArray78);
        java.lang.Byte[] byteArray85 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList86 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList86, byteArray85);
        boolean boolean89 = byteList86.add((java.lang.Byte) (byte) 100);
        boolean boolean90 = uRIList79.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean91 = strList76.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean92 = doubleList55.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean93 = doubleList15.removeAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean94 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList86);
        java.lang.Object obj95 = doubleList1.clone();
        int int96 = doubleList1.size();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(shortItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uRIArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(shortItor62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uRIArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        java.lang.Short short12 = binaryDecoder9.decodeShort();
        try {
            java.lang.String str13 = binaryDecoder9.decodeNullableString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertTrue("'" + short12 + "' != '" + (short) -64 + "'", short12.equals((short) -64));
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        stringList1.ensureCapacity((int) (short) 127);
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            stringList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uInteger6.getAreaVersion();
        java.lang.Long long8 = uInteger6.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList10 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        int int12 = uShortList10.lastIndexOf((java.lang.Object) true);
        boolean boolean13 = uInteger6.equals((java.lang.Object) int12);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = uInteger6.getAreaVersion();
        java.lang.Integer int15 = uInteger6.getTypeShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487884L + "'", long8.equals(281474993487884L));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 12 + "'", int15.equals(12));
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeAbstractElementType((java.lang.Long) 281475010265077L, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str2 = uRI1.toString();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Integer int9 = binaryDecoder8.decodeInteger();
        int int11 = binaryDecoder8.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Element element12 = uRI1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        try {
            java.lang.Integer int13 = binaryDecoder8.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9.equals(50));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(element12);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = doubleList1.getAreaVersion();
        try {
            java.lang.Object obj4 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) doubleList1, "[true]");
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchFieldException; message: [true]");
        } catch (java.lang.NoSuchFieldException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = new org.ccsds.moims.mo.mal.structures.UShort(4);
        try {
            binaryEncoder1.encodeUShort(uShort9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.Element element7 = uInteger6.createElement();
        org.ccsds.moims.mo.mal.structures.FloatList floatList8 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int10 = floatList8.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int11 = floatList8.getTypeShortForm();
        boolean boolean12 = floatList8.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator13 = floatList8.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = floatList8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = floatList8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = floatList8.getServiceNumber();
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = uShort16.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Element element23 = uInteger6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet24 = uInteger6.getAreaVersion();
        java.lang.String str25 = uInteger6.toString();
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder31 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.Blob blob32 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray29);
        org.ccsds.moims.mo.mal.structures.Blob blob35 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray29, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        boolean boolean38 = uInteger6.equals((java.lang.Object) byteArray29);
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = uInteger6.getAreaNumber();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(floatSpliterator13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(uOctet24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "100" + "'", str25.equals("100"));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(uShort39);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        int int14 = uRIList1.lastIndexOf((java.lang.Object) 0.0d);
        uRIList1.clear();
        boolean boolean16 = uRIList1.isEmpty();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor17 = uRIList1.listIterator();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor18 = uRIList1.iterator();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject20 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI22 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject20.setSourceURI(uRI22);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet24 = uRI22.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = uRI22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = uRI22.getAreaNumber();
        try {
            uRIList1.add(8, uRI22);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(uRIItor17);
        org.junit.Assert.assertNotNull(uRIItor18);
        org.junit.Assert.assertNotNull(uOctet24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(uShort26);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.Duration duration9 = new org.ccsds.moims.mo.mal.structures.Duration((double) (-1L));
        try {
            binaryEncoder1.encodeElement((org.ccsds.moims.mo.mal.structures.Element) duration9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList31 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList31, byteArray30);
        boolean boolean34 = byteList31.add((java.lang.Byte) (byte) 100);
        boolean boolean35 = byteList22.addAll((java.util.Collection<java.lang.Byte>) byteList31);
        java.lang.Object obj36 = byteList22.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream37 = byteList22.stream();
        boolean boolean38 = strList3.retainAll((java.util.Collection<java.lang.Byte>) byteList22);
        org.ccsds.moims.mo.mal.structures.OctetList octetList39 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean40 = strList3.containsAll((java.util.Collection<java.lang.Byte>) octetList39);
        boolean boolean42 = strList3.add("18446744073709551615");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter43 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger44 = archiveSyncGenAdapter43.getLastKnownIndex();
        boolean boolean45 = strList3.equals((java.lang.Object) uInteger44);
        org.ccsds.moims.mo.mal.structures.Element element46 = uInteger44.createElement();
        org.ccsds.moims.mo.mal.MALEncoder mALEncoder47 = null;
        try {
            uInteger44.encode(mALEncoder47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(byteStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(uInteger44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(element46);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = binaryDecoder5.decodeUShort();
        try {
            java.lang.Byte byte10 = binaryDecoder5.decodeNullableOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uShort9);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.LongList longList9 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        java.lang.Integer int10 = longList9.getTypeShortForm();
        boolean boolean12 = longList9.add((java.lang.Long) 1558616164233L);
        try {
            org.ccsds.moims.mo.mal.MALListEncoder mALListEncoder13 = binaryEncoder1.createListEncoder((java.util.List) longList9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-13) + "'", int10.equals((-13)));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList((int) (short) 10);
        java.lang.Long long2 = uRIList1.getShortForm();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger14 = binaryDecoder13.decodeUInteger();
        byte[] byteArray15 = binaryDecoder13.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = binaryDecoder13.decodeNullableUShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = uRIList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265070L + "'", long2.equals(281475010265070L));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uInteger14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(uShort16);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = new org.ccsds.moims.mo.mal.structures.FineTime((long) (-5));
        try {
            binaryEncoder1.encodeFineTime(fineTime5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        org.ccsds.moims.mo.mal.structures.URIList uRIList2 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int3 = uRIList2.getTypeShortForm();
        java.lang.Integer int4 = uRIList2.getTypeShortForm();
        java.lang.Object obj5 = uRIList2.clone();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        int int12 = uRIList2.lastIndexOf((java.lang.Object) binaryDecoder11);
        org.ccsds.moims.mo.mal.structures.Time time13 = binaryDecoder11.decodeTime();
        try {
            org.ccsds.moims.mo.mal.structures.Element element14 = uShortList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(time13);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) (-1L));
        org.ccsds.moims.mo.mal.structures.Element element2 = duration1.createElement();
        org.ccsds.moims.mo.mal.structures.URIList uRIList3 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int4 = uRIList3.getTypeShortForm();
        java.lang.Integer int5 = uRIList3.getTypeShortForm();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger12 = binaryDecoder11.decodeUInteger();
        java.lang.Byte byte13 = binaryDecoder11.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element14 = uRIList3.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = duration1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-18) + "'", int5.equals((-18)));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(uInteger12);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) -1 + "'", byte13.equals((byte) -1));
        org.junit.Assert.assertNotNull(element14);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        java.lang.Integer int77 = octetList18.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = octetList18.getAreaNumber();
        boolean boolean80 = octetList18.add((java.lang.Byte) (byte) 10);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-7) + "'", int77.equals((-7)));
        org.junit.Assert.assertNotNull(uShort78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (short) 1);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime10 = binaryDecoder9.decodeNullableFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, (int) (short) 100);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong16 = binaryDecoder15.decodeNullableULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) 100);
        byte byte7 = binaryEncoder3.internalEncodeAttributeType((byte) 10);
        try {
            union1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 100 + "'", byte5 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 10 + "'", byte7 == (byte) 10);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uInteger11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element13 = uInteger11.createElement();
        java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList18 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList18, shortArray17);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = uRIList26.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean38 = strList23.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean39 = shortList18.contains((java.lang.Object) byteList33);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray40 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList41, uRIArray40);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = uRIList41.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean53 = byteList48.isEmpty();
        boolean boolean54 = shortList18.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.util.stream.Stream<java.lang.Short> shortStream55 = shortList18.stream();
        boolean boolean56 = uInteger11.equals((java.lang.Object) shortList18);
        java.util.ListIterator<java.lang.Short> shortItor57 = shortList18.listIterator();
        shortList18.ensureCapacity((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(uRIArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(shortStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(shortItor57);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int1 = uRIList0.size();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList10 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray12 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList13, uRIArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        boolean boolean24 = uRIList13.containsAll((java.util.Collection<java.lang.Byte>) byteList20);
        boolean boolean25 = intList10.removeAll((java.util.Collection<java.lang.Byte>) byteList20);
        boolean boolean26 = uRIList0.removeAll((java.util.Collection<java.lang.Byte>) byteList20);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        boolean boolean45 = byteList32.addAll((java.util.Collection<java.lang.Byte>) byteList41);
        java.lang.Object obj46 = byteList32.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream47 = byteList32.stream();
        java.lang.Object[] objArray48 = byteList32.toArray();
        boolean boolean49 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList32);
        java.lang.Double[] doubleArray51 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList52 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList52, doubleArray51);
        java.lang.Short[] shortArray56 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList57 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList57, shortArray56);
        java.util.ListIterator<java.lang.Short> shortItor59 = shortList57.listIterator();
        int int60 = doubleList52.indexOf((java.lang.Object) shortList57);
        doubleList52.trimToSize();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject62 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject62.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier65 = eventCOMObject62.getNetworkZone();
        int int66 = doubleList52.indexOf((java.lang.Object) identifier65);
        int int67 = byteList32.lastIndexOf((java.lang.Object) doubleList52);
        org.ccsds.moims.mo.mal.structures.URI uRI69 = new org.ccsds.moims.mo.mal.structures.URI("0.0");
        int int70 = byteList32.indexOf((java.lang.Object) uRI69);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet71 = uRI69.getAreaVersion();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(uRIArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(byteStream47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertNotNull(shortItor59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(identifier65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(uOctet71);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        longList8.ensureCapacity((int) '4');
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity15 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((int) (byte) 0, "hi!");
        boolean boolean16 = longList8.remove((java.lang.Object) (byte) 0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject18 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject18.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType23 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription24 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType23);
        eventCOMObject18.setObjType(objectType23);
        org.ccsds.moims.mo.mal.structures.Subscription subscription26 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("1", objectType23);
        int int27 = longList8.lastIndexOf((java.lang.Object) subscription26);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(objectType23);
        org.junit.Assert.assertNotNull(subscription24);
        org.junit.Assert.assertNotNull(subscription26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableOctet((java.lang.Byte) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.Element element1 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList0.getAreaNumber();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId4 = eventCOMObject3.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = eventCOMObject3.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject6.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType11 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription12 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType11);
        eventCOMObject6.setObjType(objectType11);
        java.lang.Long long14 = eventCOMObject6.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId15 = eventCOMObject6.getObjectId();
        eventCOMObject3.setSource(objectId15);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList17 = eventCOMObject3.getDomain();
        boolean boolean18 = uShort2.equals((java.lang.Object) eventCOMObject3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet19 = uShort2.getAreaVersion();
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNull(objectId4);
        org.junit.Assert.assertNull(identifier5);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 4294967295L + "'", long14.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId15);
        org.junit.Assert.assertNull(identifierList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(uOctet19);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, 6);
        try {
            java.lang.Float float7 = binaryDecoder6.decodeFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        uShortList1.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element5 = uOctet4.createElement();
        int int6 = uShortList1.indexOf((java.lang.Object) element5);
        boolean boolean8 = uShortList1.contains((java.lang.Object) 100.0d);
        boolean boolean9 = uShortList1.isEmpty();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList19 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        int int22 = intList19.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream23 = intList19.stream();
        java.util.Iterator<java.lang.Integer> intItor24 = intList19.iterator();
        int int25 = uShortList1.lastIndexOf((java.lang.Object) intList19);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray26 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList27, uShortArray26);
        uShortList27.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet30 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element31 = uOctet30.createElement();
        int int32 = uShortList27.indexOf((java.lang.Object) element31);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator33 = uShortList27.spliterator();
        int int34 = intList19.indexOf((java.lang.Object) uShortList27);
        int int35 = uShortList27.size();
        org.ccsds.moims.mo.com.structures.ObjectType objectType38 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription39 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType38);
        boolean boolean40 = uShortList27.contains((java.lang.Object) objectType38);
        uShortList27.clear();
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(intItor24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(uShortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(uOctet30);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(uShortSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(objectType38);
        org.junit.Assert.assertNotNull(subscription39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = binaryDecoder10.decodeNullableUShort();
        java.lang.Long long14 = uShort13.getShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 281474993487882L + "'", long14.equals(281474993487882L));
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean64 = byteList37.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.ccsds.moims.mo.mal.structures.URIList uRIList65 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int66 = uRIList65.getTypeShortForm();
        java.lang.Integer int67 = uRIList65.getTypeShortForm();
        boolean boolean68 = byteList37.equals((java.lang.Object) uRIList65);
        java.lang.Object obj69 = uRIList65.clone();
        java.lang.String str70 = uRIList65.toString();
        java.io.OutputStream outputStream71 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder72 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream71);
        byte byte74 = binaryEncoder72.internalEncodeAttributeType((byte) -1);
        try {
            uRIList65.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-18) + "'", int66.equals((-18)));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "[]" + "'", str70.equals("[]"));
        org.junit.Assert.assertTrue("'" + byte74 + "' != '" + (byte) -1 + "'", byte74 == (byte) -1);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int7 = uRIList6.getTypeShortForm();
        java.lang.Integer int8 = uRIList6.getTypeShortForm();
        java.lang.Object obj9 = uRIList6.clone();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        int int16 = uRIList6.lastIndexOf((java.lang.Object) binaryDecoder15);
        org.ccsds.moims.mo.mal.structures.Time time17 = binaryDecoder15.decodeTime();
        org.ccsds.moims.mo.mal.structures.Duration duration18 = binaryDecoder15.decodeNullableDuration();
        try {
            binaryEncoder1.encodeDuration(duration18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-18) + "'", int7.equals((-18)));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(time17);
        org.junit.Assert.assertNotNull(duration18);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        java.lang.Float float9 = binaryDecoder7.decodeFloat();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute10 = binaryDecoder7.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertEquals((float) float9, Float.NaN, 0);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableShort((java.lang.Short) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList2 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob3 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean4 = blob3.isURLBased();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Element element10 = blob3.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
        boolean boolean11 = integerList2.equals((java.lang.Object) binaryDecoder9);
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = integerList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList(12);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList1.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Integer int9 = binaryDecoder8.decodeInteger();
        org.ccsds.moims.mo.mal.structures.Element element10 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort11 = binaryDecoder8.decodeUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9.equals(50));
        org.junit.Assert.assertNotNull(element10);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList9 = new org.ccsds.moims.mo.mal.structures.IntegerList((int) ' ');
        org.ccsds.moims.mo.mal.structures.Time time10 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int11 = time10.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element12 = time10.createElement();
        boolean boolean13 = integerList9.remove((java.lang.Object) time10);
        try {
            binaryEncoder1.encodeTime(time10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 16 + "'", int11.equals(16));
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = null;
        try {
            binaryEncoder1.encodeUOctet(uOctet4);
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Null value supplied in a non-nullable field");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Duration duration7 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = duration7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element9 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) duration7);
        org.ccsds.moims.mo.mal.structures.Union union11 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Long) 4294967295L);
        java.lang.Long long12 = union11.getLongValue();
        boolean boolean13 = duration7.equals((java.lang.Object) union11);
        java.io.OutputStream outputStream14 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder15 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream14);
        byte byte17 = binaryEncoder15.internalEncodeAttributeType((byte) 100);
        try {
            union11.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 4294967295L + "'", long12.equals(4294967295L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 100 + "'", byte17 == (byte) 100);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        java.lang.Double double6 = binaryDecoder5.decodeNullableDouble();
        byte[] byteArray7 = binaryDecoder5.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob8 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray7);
        boolean boolean9 = fineTime0.equals((java.lang.Object) blob8);
        int int10 = blob8.getOffset();
        byte[] byteArray14 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        java.lang.Double double16 = binaryDecoder15.decodeNullableDouble();
        byte[] byteArray17 = binaryDecoder15.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17, (int) (short) 1);
        try {
            org.ccsds.moims.mo.mal.structures.Element element21 = blob8.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder20);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals((double) double6, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals((double) double16, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray17);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeString("[100, 1, -64, 10, -64, 1]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uInteger6.getAreaVersion();
        java.lang.Long long8 = uInteger6.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = uInteger6.getAreaVersion();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487884L + "'", long8.equals(281474993487884L));
        org.junit.Assert.assertNotNull(uOctet9);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        java.lang.Long long6 = binaryDecoder4.decodeLong();
        try {
            java.lang.Double double7 = binaryDecoder4.decodeNullableDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-64L) + "'", long6.equals((-64L)));
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        int int8 = binaryDecoder4.internalDecodeAttributeType((byte) 10);
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = binaryDecoder4.decodeUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uRI1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRI1.getServiceNumber();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7, 6);
        boolean boolean11 = uShort3.equals((java.lang.Object) binaryDecoder10);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier12 = binaryDecoder10.decodeIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-4), "[false]");
        java.lang.String str3 = networkHolderEntity2.getNetworkString();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[false]" + "'", str3.equals("[false]"));
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        dictionary0.defineWord((java.lang.Integer) 0, "[0.0]");
        dictionary0.resetFastNetwork();
        dictionary0.defineWord((java.lang.Integer) 100, "[100, 1, -64, 10, -64, 1]");
        boolean boolean9 = dictionary0.exists((java.lang.Integer) (-18));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject3.getObjectId();
        eventCOMObject0.setSource(objectId12);
        org.ccsds.moims.mo.mal.structures.Time time14 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int15 = time14.getTypeShortForm();
        eventCOMObject0.setTimestamp(time14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = time14.getAreaVersion();
        java.lang.String str18 = time14.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = time14.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = time14.getServiceNumber();
        long long21 = time14.getValue();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 16 + "'", int15.equals(16));
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "0" + "'", str18.equals("0"));
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI8 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject6.setSourceURI(uRI8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = uRI8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = uRI8.getServiceNumber();
        java.lang.String str12 = uRI8.toString();
        try {
            binaryEncoder1.encodeNullableURI(uRI8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableBoolean((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob5 = binaryDecoder4.decodeBlob();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration6 = binaryDecoder4.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(blob5);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeFloat((java.lang.Float) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20, shortArray19);
        java.util.ListIterator<java.lang.Short> shortItor22 = shortList20.listIterator();
        int int23 = doubleList15.indexOf((java.lang.Object) shortList20);
        org.ccsds.moims.mo.mal.structures.Blob blob24 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean25 = blob24.isURLBased();
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.Element element31 = blob24.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder30);
        boolean boolean32 = doubleList15.contains((java.lang.Object) blob24);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray38 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList39, uRIArray38);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        boolean boolean50 = uRIList39.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean51 = strList36.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean52 = doubleList15.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55, doubleArray54);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList60 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList60, shortArray59);
        java.util.ListIterator<java.lang.Short> shortItor62 = shortList60.listIterator();
        int int63 = doubleList55.indexOf((java.lang.Object) shortList60);
        org.ccsds.moims.mo.mal.structures.Blob blob64 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean65 = blob64.isURLBased();
        byte[] byteArray69 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder70 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray69);
        org.ccsds.moims.mo.mal.structures.Element element71 = blob64.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder70);
        boolean boolean72 = doubleList55.contains((java.lang.Object) blob64);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray78 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList79 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList79, uRIArray78);
        java.lang.Byte[] byteArray85 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList86 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList86, byteArray85);
        boolean boolean89 = byteList86.add((java.lang.Byte) (byte) 100);
        boolean boolean90 = uRIList79.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean91 = strList76.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean92 = doubleList55.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean93 = doubleList15.removeAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean94 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList86);
        doubleList1.ensureCapacity((-7));
        try {
            java.lang.Double double99 = doubleList1.set(0, (java.lang.Double) 2.47E-322d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(shortItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uRIArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(shortItor62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uRIArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        dictionary0.defineWord((java.lang.Integer) 0, "[0.0]");
        dictionary0.resetFastNetwork();
        dictionary0.defineWord((java.lang.Integer) 100, "[100, 1, -64, 10, -64, 1]");
        try {
            java.lang.String str9 = dictionary0.getWord((java.lang.Integer) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: The word for the id: 8 is unknown!");
        } catch (java.lang.Exception e) {
        }
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean1 = blob0.isURLBased();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        int int9 = binaryDecoder6.internalDecodeAttributeType((byte) 0);
        try {
            java.lang.Integer int10 = binaryDecoder6.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", !boolean1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity2 = new esa.mo.com.impl.archive.entities.DomainHolderEntity(14, "[true]");
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = binaryDecoder11.decodeNullableUOctet();
        java.lang.Long long13 = uOctet12.getShortForm();
        java.lang.Long long14 = uOctet12.getShortForm();
        try {
            binaryEncoder1.encodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uOctet12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 281474993487880L + "'", long13.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 281474993487880L + "'", long14.equals(281474993487880L));
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uInteger11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = uInteger11.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList14 = new org.ccsds.moims.mo.mal.structures.LongList();
        java.lang.Integer int15 = longList14.getTypeShortForm();
        boolean boolean16 = uInteger11.equals((java.lang.Object) longList14);
        java.lang.String str17 = uInteger11.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-13) + "'", int15.equals((-13)));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "127" + "'", str17.equals("127"));
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, (int) (short) 100);
        try {
            java.lang.Float float16 = binaryDecoder15.decodeNullableFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger5 = binaryDecoder4.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uInteger5.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList7 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.ShortList shortList8 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = shortList8.getAreaNumber();
        java.lang.Object[] objArray10 = shortList8.toArray();
        boolean boolean11 = floatList7.remove((java.lang.Object) shortList8);
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.lang.Object obj22 = longList20.clone();
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList25 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList25, booleanArray24);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        boolean boolean45 = byteList32.addAll((java.util.Collection<java.lang.Byte>) byteList41);
        java.lang.Object obj46 = byteList32.clone();
        boolean boolean47 = booleanList25.contains((java.lang.Object) byteList32);
        boolean boolean48 = longList20.remove((java.lang.Object) boolean47);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray54 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList55 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList55, uRIArray54);
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList62, byteArray61);
        boolean boolean65 = byteList62.add((java.lang.Byte) (byte) 100);
        boolean boolean66 = uRIList55.containsAll((java.util.Collection<java.lang.Byte>) byteList62);
        boolean boolean67 = strList52.containsAll((java.util.Collection<java.lang.Byte>) byteList62);
        int int68 = longList20.lastIndexOf((java.lang.Object) boolean67);
        java.lang.Object obj69 = longList20.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList70 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int71 = uRIList70.getTypeShortForm();
        java.lang.Integer int72 = uRIList70.getTypeShortForm();
        java.lang.Object obj73 = uRIList70.clone();
        byte[] byteArray77 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder78 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray77);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray77);
        int int80 = uRIList70.lastIndexOf((java.lang.Object) binaryDecoder79);
        boolean boolean81 = longList20.remove((java.lang.Object) uRIList70);
        boolean boolean83 = longList20.add((java.lang.Long) 281475010265078L);
        boolean boolean84 = shortList8.remove((java.lang.Object) 281475010265078L);
        java.lang.Object[] objArray85 = shortList8.toArray();
        boolean boolean86 = uInteger5.equals((java.lang.Object) shortList8);
        java.util.stream.Stream<java.lang.Short> shortStream87 = shortList8.parallelStream();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(uRIArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-18) + "'", int71.equals((-18)));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-18) + "'", int72.equals((-18)));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
        org.junit.Assert.assertNotNull(shortStream87);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int1 = uRIList0.size();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor2 = uRIList0.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRIList0.getServiceNumber();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        try {
            uRIList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(uRIItor2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        uShortList1.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element5 = uOctet4.createElement();
        int int6 = uShortList1.indexOf((java.lang.Object) element5);
        boolean boolean8 = uShortList1.contains((java.lang.Object) 100.0d);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream9 = uShortList1.stream();
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.lang.Short[] shortArray16 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList17 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList17, shortArray16);
        java.util.ListIterator<java.lang.Short> shortItor19 = shortList17.listIterator();
        int int20 = doubleList12.indexOf((java.lang.Object) shortList17);
        doubleList12.ensureCapacity((-1));
        java.lang.Double[] doubleArray24 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList25 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList25, doubleArray24);
        java.lang.Short[] shortArray29 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList30 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList30, shortArray29);
        java.util.ListIterator<java.lang.Short> shortItor32 = shortList30.listIterator();
        int int33 = doubleList25.indexOf((java.lang.Object) shortList30);
        int int34 = doubleList12.lastIndexOf((java.lang.Object) shortList30);
        esa.mo.com.impl.sync.Dictionary dictionary35 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean37 = dictionary35.exists((java.lang.Integer) 16);
        java.lang.Integer int39 = dictionary35.getWordId("");
        int int40 = doubleList12.lastIndexOf((java.lang.Object) dictionary35);
        int int41 = uShortList1.lastIndexOf((java.lang.Object) doubleList12);
        doubleList12.trimToSize();
        boolean boolean44 = doubleList12.add((java.lang.Double) (-1.0d));
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(uShortStream9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(shortItor19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(shortItor32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39.equals(1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.lang.Object obj22 = longList20.clone();
        int int23 = strList10.indexOf((java.lang.Object) longList20);
        java.util.ListIterator<java.lang.String> strItor24 = strList10.listIterator();
        java.lang.String str25 = strList10.toString();
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList29 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList29, doubleArray28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        int int36 = strList34.size();
        boolean boolean37 = doubleList29.equals((java.lang.Object) strList34);
        boolean boolean38 = strList10.remove((java.lang.Object) strList34);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder39 = binaryDecoder5.createListDecoder((java.util.List) strList34);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong40 = binaryDecoder5.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[hi!, ]" + "'", str25.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(mALListDecoder39);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.LongList longList7 = new org.ccsds.moims.mo.mal.structures.LongList((int) '4');
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray8 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList9, uRIArray8);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator11 = uRIList9.spliterator();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList13 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray14 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList15 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList15, uRIArray14);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        boolean boolean26 = uRIList15.containsAll((java.util.Collection<java.lang.Byte>) byteList22);
        int int28 = uRIList15.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList43 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList43, byteArray42);
        boolean boolean46 = byteList43.add((java.lang.Byte) (byte) 100);
        boolean boolean47 = byteList34.addAll((java.util.Collection<java.lang.Byte>) byteList43);
        int int49 = byteList43.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean50 = uRIList15.removeAll((java.util.Collection<java.lang.Byte>) byteList43);
        int int51 = uShortList13.indexOf((java.lang.Object) uRIList15);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator52 = uRIList15.spliterator();
        java.util.Spliterator[] spliteratorArray54 = new java.util.Spliterator[2];
        @SuppressWarnings("unchecked") java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI>[] uRISpliteratorArray55 = (java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI>[]) spliteratorArray54;
        uRISpliteratorArray55[0] = uRISpliterator11;
        uRISpliteratorArray55[1] = uRISpliterator52;
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI>[] uRISpliteratorArray60 = longList7.toArray(uRISpliteratorArray55);
        org.ccsds.moims.mo.mal.structures.UShort uShort61 = longList7.getAreaNumber();
        try {
            binaryEncoder1.encodeElement((org.ccsds.moims.mo.mal.structures.Element) uShort61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(uRIArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uRISpliterator11);
        org.junit.Assert.assertNotNull(uRIArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uRISpliterator52);
        org.junit.Assert.assertNotNull(spliteratorArray54);
        org.junit.Assert.assertNotNull(uRISpliteratorArray55);
        org.junit.Assert.assertNotNull(uRISpliteratorArray60);
        org.junit.Assert.assertNotNull(uShort61);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder5.decodeNullableUInteger();
        try {
            java.lang.String str10 = binaryDecoder5.decodeString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uInteger9);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.String str1 = fineTime0.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = fineTime0.getAreaVersion();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger14 = binaryDecoder13.decodeUInteger();
        byte[] byteArray15 = binaryDecoder13.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        org.ccsds.moims.mo.mal.structures.Element element17 = fineTime0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
        try {
            java.lang.Integer int18 = binaryDecoder16.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0" + "'", str1.equals("0"));
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uInteger14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(element17);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Short short11 = binaryDecoder9.decodeNullableShort();
        try {
            java.lang.Boolean boolean12 = binaryDecoder9.decodeBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + short11 + "' != '" + (short) -64 + "'", short11.equals((short) -64));
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger5 = new org.ccsds.moims.mo.mal.structures.UInteger((long) 4);
        try {
            binaryEncoder1.encodeUInteger(uInteger5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (byte) 1);
        try {
            org.ccsds.moims.mo.mal.structures.Time time12 = binaryDecoder11.decodeTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = null;
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = duration1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList4 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        byteList13.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean21 = longList4.removeAll((java.util.Collection<java.lang.Byte>) byteList13);
        boolean boolean22 = duration1.equals((java.lang.Object) longList4);
        org.ccsds.moims.mo.mal.structures.StringList stringList24 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = stringList24.getAreaNumber();
        java.lang.Integer int26 = stringList24.getTypeShortForm();
        boolean boolean27 = duration1.equals((java.lang.Object) stringList24);
        byte[] byteArray31 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder32 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder33 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = binaryDecoder33.decodeNullableUOctet();
        java.lang.Long long35 = uOctet34.getShortForm();
        java.lang.Long long36 = uOctet34.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList37 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int38 = uRIList37.getTypeShortForm();
        java.lang.Integer int39 = uRIList37.getTypeShortForm();
        java.lang.Object obj40 = uRIList37.clone();
        byte[] byteArray44 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder45 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder46 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        int int47 = uRIList37.lastIndexOf((java.lang.Object) binaryDecoder46);
        org.ccsds.moims.mo.mal.structures.Duration duration48 = binaryDecoder46.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element49 = uOctet34.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder46);
        byte[] byteArray50 = binaryDecoder46.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder51 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray50);
        boolean boolean52 = duration1.equals((java.lang.Object) binaryDecoder51);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob53 = binaryDecoder51.decodeNullableBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-15) + "'", int26.equals((-15)));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281474993487880L + "'", long35.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 281474993487880L + "'", long36.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-18) + "'", int38.equals((-18)));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-18) + "'", int39.equals((-18)));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        byteList37.trimToSize();
        org.ccsds.moims.mo.mal.structures.URIList uRIList46 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int47 = uRIList46.getTypeShortForm();
        java.lang.Integer int48 = uRIList46.getTypeShortForm();
        java.lang.Object obj49 = uRIList46.clone();
        byte[] byteArray53 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder54 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray53);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder55 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray53);
        int int56 = uRIList46.lastIndexOf((java.lang.Object) binaryDecoder55);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger57 = binaryDecoder55.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = uInteger57.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort59 = uInteger57.getServiceNumber();
        boolean boolean60 = byteList37.equals((java.lang.Object) uInteger57);
        java.util.ListIterator<java.lang.Byte> byteItor61 = byteList37.listIterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-18) + "'", int47.equals((-18)));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-18) + "'", int48.equals((-18)));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(uInteger57);
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertNotNull(uShort59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(byteItor61);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.Object obj20 = doubleList2.clone();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList34 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList34, longArray33);
        java.lang.Object obj36 = longList34.clone();
        int int37 = strList24.indexOf((java.lang.Object) longList34);
        java.util.ListIterator<java.lang.String> strItor38 = strList24.listIterator();
        java.lang.String str39 = strList24.toString();
        java.lang.Object[] objArray40 = strList24.toArray();
        boolean boolean41 = doubleList2.contains((java.lang.Object) strList24);
        java.lang.String str42 = strList24.toString();
        java.util.ListIterator<java.lang.String> strItor43 = strList24.listIterator();
        try {
            java.util.ListIterator<java.lang.String> strItor45 = strList24.listIterator((int) (short) 255);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 255");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[hi!, ]" + "'", str39.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "[hi!, ]" + "'", str42.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(strItor43);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList(52);
        java.util.stream.Stream<java.lang.Boolean> booleanStream2 = booleanList1.parallelStream();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uRI5.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = uOctet7.getServiceNumber();
        boolean boolean9 = booleanList1.remove((java.lang.Object) uShort8);
        org.junit.Assert.assertNotNull(booleanStream2);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.lang.Object obj22 = longList20.clone();
        int int23 = strList10.indexOf((java.lang.Object) longList20);
        java.util.ListIterator<java.lang.String> strItor24 = strList10.listIterator();
        java.lang.String str25 = strList10.toString();
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList29 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList29, doubleArray28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        int int36 = strList34.size();
        boolean boolean37 = doubleList29.equals((java.lang.Object) strList34);
        boolean boolean38 = strList10.remove((java.lang.Object) strList34);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder39 = binaryDecoder5.createListDecoder((java.util.List) strList34);
        try {
            java.lang.Boolean boolean40 = binaryDecoder5.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[hi!, ]" + "'", str25.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(mALListDecoder39);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        int int14 = uRIList1.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        int int35 = byteList29.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean36 = uRIList1.removeAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList43 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList43, doubleArray42);
        org.ccsds.moims.mo.mal.structures.OctetList octetList45 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = octetList45.getServiceNumber();
        boolean boolean47 = doubleList43.containsAll((java.util.Collection<java.lang.Byte>) octetList45);
        boolean boolean48 = uRIList1.retainAll((java.util.Collection<java.lang.Byte>) octetList45);
        java.lang.Object obj49 = uRIList1.clone();
        org.ccsds.moims.mo.mal.structures.Time time50 = new org.ccsds.moims.mo.mal.structures.Time();
        int int51 = uRIList1.indexOf((java.lang.Object) time50);
        long long52 = time50.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = time50.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList54 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int55 = uRIList54.getTypeShortForm();
        java.lang.Integer int56 = uRIList54.getTypeShortForm();
        java.lang.Object obj57 = uRIList54.clone();
        byte[] byteArray61 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder62 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray61);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder63 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray61);
        int int64 = uRIList54.lastIndexOf((java.lang.Object) binaryDecoder63);
        java.lang.Short short65 = binaryDecoder63.decodeNullableShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element66 = time50.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(uShort53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-18) + "'", int55.equals((-18)));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-18) + "'", int56.equals((-18)));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + short65 + "' != '" + (short) -64 + "'", short65.equals((short) -64));
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.URIList uRIList4 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int5 = uRIList4.getTypeShortForm();
        java.lang.Integer int6 = uRIList4.getTypeShortForm();
        java.lang.Object obj7 = uRIList4.clone();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        int int14 = uRIList4.lastIndexOf((java.lang.Object) binaryDecoder13);
        java.lang.Boolean boolean15 = binaryDecoder13.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration16 = binaryDecoder13.decodeNullableDuration();
        double double17 = duration16.getValue();
        try {
            binaryEncoder1.encodeDuration(duration16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-18) + "'", int5.equals((-18)));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-18) + "'", int6.equals((-18)));
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15.equals(true));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray4 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList5, uShortArray4);
        uShortList5.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element9 = uOctet8.createElement();
        int int10 = uShortList5.indexOf((java.lang.Object) element9);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.lang.Long[] longArray23 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList24 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList24, longArray23);
        java.lang.Object obj26 = longList24.clone();
        int int27 = strList14.indexOf((java.lang.Object) longList24);
        java.util.ListIterator<java.lang.String> strItor28 = strList14.listIterator();
        java.lang.Short[] shortArray32 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList33 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList33, shortArray32);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray40 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList41, uRIArray40);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = uRIList41.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean53 = strList38.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean54 = shortList33.contains((java.lang.Object) byteList48);
        boolean boolean55 = strList14.removeAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean56 = uShortList5.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean57 = integerList1.retainAll((java.util.Collection<java.lang.Byte>) byteList48);
        integerList1.ensureCapacity((-10));
        byte[] byteArray63 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder64 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray63);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder65 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray63);
        java.lang.Float float66 = binaryDecoder65.decodeFloat();
        java.lang.Byte byte67 = binaryDecoder65.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element68 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder65);
        try {
            java.lang.Boolean boolean69 = binaryDecoder65.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShortArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(uRIArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 7.0E-44f + "'", float66.equals(7.0E-44f));
        org.junit.Assert.assertTrue("'" + byte67 + "' != '" + (byte) -1 + "'", byte67.equals((byte) -1));
        org.junit.Assert.assertNotNull(element68);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        int int20 = blob11.getOffset();
        boolean boolean21 = blob11.isURLBased();
        org.ccsds.moims.mo.mal.structures.Element element22 = blob11.createElement();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(element22);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        byteList37.trimToSize();
        org.ccsds.moims.mo.mal.structures.URIList uRIList46 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int47 = uRIList46.getTypeShortForm();
        java.lang.Integer int48 = uRIList46.getTypeShortForm();
        java.lang.Object obj49 = uRIList46.clone();
        byte[] byteArray53 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder54 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray53);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder55 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray53);
        int int56 = uRIList46.lastIndexOf((java.lang.Object) binaryDecoder55);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger57 = binaryDecoder55.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = uInteger57.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort59 = uInteger57.getServiceNumber();
        boolean boolean60 = byteList37.equals((java.lang.Object) uInteger57);
        byteList37.trimToSize();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-18) + "'", int47.equals((-18)));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-18) + "'", int48.equals((-18)));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(uInteger57);
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertNotNull(uShort59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        java.math.BigInteger bigInteger8 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong9 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger8);
        java.lang.Integer int10 = uLong9.getTypeShortForm();
        try {
            binaryEncoder1.encodeULong(uLong9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 14 + "'", int10.equals(14));
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        shortList0.ensureCapacity((int) (byte) 0);
        java.util.stream.Stream<java.lang.Short> shortStream6 = shortList0.parallelStream();
        java.io.OutputStream outputStream7 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder8 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream7);
        byte byte10 = binaryEncoder8.internalEncodeAttributeType((byte) 100);
        byte byte12 = binaryEncoder8.internalEncodeAttributeType((byte) -1);
        try {
            shortList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(shortStream6);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 100 + "'", byte10 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12 == (byte) -1);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
        java.util.ListIterator<java.lang.Short> shortItor5 = shortList3.listIterator();
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        org.ccsds.moims.mo.mal.structures.OctetList octetList14 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = octetList14.getServiceNumber();
        boolean boolean16 = doubleList12.containsAll((java.util.Collection<java.lang.Byte>) octetList14);
        boolean boolean17 = shortList3.retainAll((java.util.Collection<java.lang.Byte>) octetList14);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = octetList14.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        byte[] byteArray48 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder49 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray48);
        java.lang.Double double50 = binaryDecoder49.decodeNullableDouble();
        byte[] byteArray51 = binaryDecoder49.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder53 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray51, 15);
        try {
            org.ccsds.moims.mo.mal.structures.Element element54 = octetList14.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 15");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(shortItor5);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals((double) double50, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray51);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        doubleList2.ensureCapacity((-1));
        doubleList2.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream15 = doubleList2.parallelStream();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity18 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        int int19 = doubleList2.lastIndexOf((java.lang.Object) objectTypeHolderEntity18);
        java.util.stream.Stream<java.lang.Double> doubleStream20 = doubleList2.parallelStream();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(doubleStream15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(doubleStream20);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, 281474993487880L, 281475010265083L, 281474993487879L, 281474993487879L, 281474993487873L, 281475010265075L, 281474993487888L, 281475010265083L, 1L, 281474993487890L, 10L, 281474993487872L, 281474993487890L, 281475010265084L, 281475010265075L, 281474993487877L, 4294967295L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.util.ListIterator<java.lang.Long> longItor22 = longList20.listIterator();
        longList20.trimToSize();
        org.ccsds.moims.mo.mal.structures.ShortList shortList24 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = shortList24.getAreaNumber();
        java.lang.Object[] objArray26 = shortList24.toArray();
        java.lang.Long long27 = shortList24.getShortForm();
        shortList24.ensureCapacity((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray30 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList31, uRIArray30);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        boolean boolean51 = byteList38.addAll((java.util.Collection<java.lang.Byte>) byteList47);
        int int53 = byteList47.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean54 = uRIList31.retainAll((java.util.Collection<java.lang.Byte>) byteList47);
        boolean boolean55 = shortList24.removeAll((java.util.Collection<java.lang.Byte>) byteList47);
        org.ccsds.moims.mo.mal.structures.UShort uShort56 = shortList24.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray57 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList58, uShortArray57);
        uShortList58.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet61 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element62 = uOctet61.createElement();
        int int63 = uShortList58.indexOf((java.lang.Object) element62);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator64 = uShortList58.spliterator();
        uShortList58.clear();
        org.ccsds.moims.mo.mal.structures.ShortList shortList66 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Integer int67 = shortList66.getTypeShortForm();
        byte[] byteArray71 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder72 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray71);
        org.ccsds.moims.mo.mal.structures.Blob blob73 = binaryDecoder72.decodeBlob();
        boolean boolean74 = shortList66.equals((java.lang.Object) blob73);
        org.ccsds.moims.mo.mal.structures.ShortList shortList75 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort76 = shortList75.getAreaNumber();
        java.lang.Object[] objArray77 = shortList75.toArray();
        java.lang.Long long78 = shortList75.getShortForm();
        shortList75.ensureCapacity((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray81 = new org.ccsds.moims.mo.mal.structures.ShortList[] { shortList66, shortList75 };
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray82 = uShortList58.toArray(shortListArray81);
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray83 = shortList24.toArray(shortListArray82);
        try {
            org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray84 = longList20.toArray(shortListArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(longItor22);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 281475010265079L + "'", long27.equals(281475010265079L));
        org.junit.Assert.assertNotNull(uRIArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(uShort56);
        org.junit.Assert.assertNotNull(uShortArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(uOctet61);
        org.junit.Assert.assertNotNull(element62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(uShortSpliterator64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-9) + "'", int67.equals((-9)));
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertNotNull(blob73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(uShort76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 281475010265079L + "'", long78.equals(281475010265079L));
        org.junit.Assert.assertNotNull(shortListArray81);
        org.junit.Assert.assertNotNull(shortListArray82);
        org.junit.Assert.assertNotNull(shortListArray83);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uInteger6.getAreaVersion();
        java.lang.Long long8 = uOctet7.getShortForm();
        java.lang.String str9 = uOctet7.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "1" + "'", str9.equals("1"));
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        try {
            java.lang.Long long15 = binaryDecoder13.decodeAbstractElementType(false);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList5 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = doubleList5.getAreaNumber();
        java.lang.Object obj7 = doubleList5.clone();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = binaryDecoder13.decodeNullableUOctet();
        int int15 = doubleList5.lastIndexOf((java.lang.Object) binaryDecoder13);
        byte[] byteArray16 = binaryDecoder13.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16, (int) (short) 100);
        try {
            binaryEncoder1.directEncodeBytes(byteArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        boolean boolean3 = uRIList0.isEmpty();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray9 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList10, uRIArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        boolean boolean21 = uRIList10.containsAll((java.util.Collection<java.lang.Byte>) byteList17);
        boolean boolean22 = strList7.containsAll((java.util.Collection<java.lang.Byte>) byteList17);
        java.util.Iterator<java.lang.String> strItor23 = strList7.iterator();
        int int24 = uRIList0.indexOf((java.lang.Object) strList7);
        int int25 = uRIList0.size();
        java.lang.String str26 = uRIList0.toString();
        java.math.BigInteger bigInteger27 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong28 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger27);
        java.lang.Integer int29 = uLong28.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element30 = uLong28.createElement();
        org.ccsds.moims.mo.mal.structures.Element element31 = uLong28.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet32 = uLong28.getAreaVersion();
        int int33 = uRIList0.indexOf((java.lang.Object) uLong28);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject35 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI37 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject35.setSourceURI(uRI37);
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = uRI37.getServiceNumber();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI40 = uRIList0.set((int) (short) 0, uRI37);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(uRIArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]" + "'", str26.equals("[]"));
        org.junit.Assert.assertNotNull(bigInteger27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 14 + "'", int29.equals(14));
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(uOctet32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(uShort39);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        boolean boolean3 = uRIList0.isEmpty();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray9 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList10, uRIArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        boolean boolean21 = uRIList10.containsAll((java.util.Collection<java.lang.Byte>) byteList17);
        boolean boolean22 = strList7.containsAll((java.util.Collection<java.lang.Byte>) byteList17);
        java.util.Iterator<java.lang.String> strItor23 = strList7.iterator();
        int int24 = uRIList0.indexOf((java.lang.Object) strList7);
        int int25 = uRIList0.size();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor26 = uRIList0.listIterator();
        byte[] byteArray30 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder31 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray30);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder32 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray30);
        org.ccsds.moims.mo.mal.structures.Duration duration34 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = duration34.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element36 = binaryDecoder32.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) duration34);
        try {
            org.ccsds.moims.mo.mal.structures.Element element37 = uRIList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(uRIArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(uRIItor26);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertNotNull(uShort35);
        org.junit.Assert.assertNotNull(element36);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int7 = uRIList6.size();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray18 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList19 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList19, uRIArray18);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = uRIList19.containsAll((java.util.Collection<java.lang.Byte>) byteList26);
        boolean boolean31 = intList16.removeAll((java.util.Collection<java.lang.Byte>) byteList26);
        boolean boolean32 = uRIList6.removeAll((java.util.Collection<java.lang.Byte>) byteList26);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder33 = binaryDecoder4.createListDecoder((java.util.List) byteList26);
        try {
            java.lang.Short short34 = binaryDecoder4.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uRIArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(mALListDecoder33);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        int int10 = blob9.getLength();
        java.lang.String str11 = blob9.getURL();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = blob9.getAreaNumber();
        boolean boolean13 = blob9.isURLBased();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList((int) '4');
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        try {
            longList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((-11), "[100, 1, -64, 10, -64, 1]");
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        java.lang.String str13 = binaryDecoder10.decodeString();
        try {
            java.lang.Double double14 = binaryDecoder10.decodeDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob5 = binaryDecoder4.decodeBlob();
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder4.decodeNullableUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(blob5);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        esa.mo.com.impl.archive.db.COMObjectEntityPK cOMObjectEntityPK3 = esa.mo.com.impl.archive.entities.COMObjectEntity.generatePK((java.lang.Integer) 7, (java.lang.Integer) (-13), (java.lang.Long) 281474993487873L);
        org.junit.Assert.assertNotNull(cOMObjectEntityPK3);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.Element element2 = doubleList1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) -1);
        try {
            doubleList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7 == (byte) -1);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        java.lang.Long[] longArray25 = new java.lang.Long[] { 281474993487886L, 281474993487875L, 281475010265070L, (-1L), 281474993487887L, 281475010265086L, 281475010265084L, 1L, 1558616164233L, 100L, 281474993487882L, 281474993487876L, 281474993487888L, 281474993487886L, 281474993487878L, 281474993487885L, 1558616163157L };
        java.util.ArrayList<java.lang.Long> longList26 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList26, longArray25);
        java.util.List<java.lang.Long> longList30 = longList26.subList(6, 13);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime31 = new org.ccsds.moims.mo.mal.structures.FineTime();
        byte[] byteArray35 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        java.lang.Double double37 = binaryDecoder36.decodeNullableDouble();
        byte[] byteArray38 = binaryDecoder36.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob39 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray38);
        boolean boolean40 = fineTime31.equals((java.lang.Object) blob39);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = fineTime31.getAreaVersion();
        int int42 = longList26.lastIndexOf((java.lang.Object) fineTime31);
        org.ccsds.moims.mo.mal.structures.UShort uShort43 = fineTime31.getServiceNumber();
        try {
            binaryEncoder1.encodeNullableFineTime(fineTime31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(longList30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals((double) double37, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(uShort43);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = duration12.getAreaNumber();
        java.lang.Short[] shortArray16 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList17 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList17, shortArray16);
        java.util.ListIterator<java.lang.Short> shortItor19 = shortList17.listIterator();
        java.lang.String str20 = shortList17.toString();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        boolean boolean29 = uShortList22.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor30 = uShortList22.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean32 = uShortList22.add(uShort31);
        int int33 = shortList17.lastIndexOf((java.lang.Object) uShort31);
        org.ccsds.moims.mo.mal.structures.ShortList shortList34 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.Element element35 = shortList34.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort36 = shortList34.getAreaNumber();
        shortList34.clear();
        int int38 = shortList17.indexOf((java.lang.Object) shortList34);
        java.util.Iterator<java.lang.Short> shortItor39 = shortList17.iterator();
        boolean boolean40 = duration12.equals((java.lang.Object) shortItor39);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(shortItor19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "[0, 10]" + "'", str20.equals("[0, 10]"));
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(uShortItor30);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(uShort36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(shortItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (-11));
        java.io.OutputStream outputStream10 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder11 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream10);
        byte byte13 = binaryEncoder11.internalEncodeAttributeType((byte) -1);
        try {
            blob9.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) -1 + "'", byte13 == (byte) -1);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList((int) '#');
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList6 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList6, shortArray5);
        java.util.ListIterator<java.lang.Short> shortItor8 = shortList6.listIterator();
        int int9 = uRIList1.lastIndexOf((java.lang.Object) shortList6);
        org.ccsds.moims.mo.mal.structures.ShortList shortList10 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = shortList10.getAreaNumber();
        java.lang.Object[] objArray12 = shortList10.toArray();
        java.lang.Long long13 = shortList10.getShortForm();
        shortList10.ensureCapacity((int) (byte) 0);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity18 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str19 = networkHolderEntity18.getNetworkString();
        int int20 = shortList10.lastIndexOf((java.lang.Object) networkHolderEntity18);
        boolean boolean21 = uRIList1.contains((java.lang.Object) networkHolderEntity18);
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder26 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray25);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = binaryDecoder26.decodeNullableUOctet();
        int int28 = uRIList1.lastIndexOf((java.lang.Object) uOctet27);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator29 = uRIList1.spliterator();
        byte[] byteArray33 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder34 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder35 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        org.ccsds.moims.mo.mal.structures.Blob blob36 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray33);
        org.ccsds.moims.mo.mal.structures.Blob blob39 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray33, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger41 = binaryDecoder40.decodeUInteger();
        byte[] byteArray42 = binaryDecoder40.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder43 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray42);
        org.ccsds.moims.mo.mal.structures.ULong uLong44 = binaryDecoder43.decodeNullableULong();
        try {
            org.ccsds.moims.mo.mal.structures.Element element45 = uRIList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(shortItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 281475010265079L + "'", long13.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[0, 10]" + "'", str19.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(uRISpliterator29);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertNotNull(uInteger41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNull(uLong44);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList8 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        boolean boolean21 = byteList18.add((java.lang.Byte) (byte) 100);
        boolean boolean22 = uRIList11.containsAll((java.util.Collection<java.lang.Byte>) byteList18);
        boolean boolean23 = intList8.removeAll((java.util.Collection<java.lang.Byte>) byteList18);
        boolean boolean25 = intList8.remove((java.lang.Object) '4');
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList43 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList43, byteArray42);
        boolean boolean46 = byteList43.add((java.lang.Byte) (byte) 100);
        boolean boolean47 = byteList34.addAll((java.util.Collection<java.lang.Byte>) byteList43);
        int int49 = byteList43.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean50 = uRIList27.retainAll((java.util.Collection<java.lang.Byte>) byteList43);
        boolean boolean51 = intList8.contains((java.lang.Object) uRIList27);
        intList8.clear();
        java.lang.Byte[] byteArray57 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList58 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList58, byteArray57);
        boolean boolean61 = byteList58.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray66 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList67 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList67, byteArray66);
        boolean boolean70 = byteList67.add((java.lang.Byte) (byte) 100);
        boolean boolean71 = byteList58.addAll((java.util.Collection<java.lang.Byte>) byteList67);
        java.lang.Object obj72 = byteList58.clone();
        boolean boolean73 = intList8.contains(obj72);
        java.util.Spliterator<java.lang.Integer> intSpliterator74 = intList8.spliterator();
        org.ccsds.moims.mo.mal.structures.URIList uRIList75 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int76 = uRIList75.getTypeShortForm();
        java.lang.Integer int77 = uRIList75.getTypeShortForm();
        java.lang.Object obj78 = uRIList75.clone();
        byte[] byteArray82 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder83 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray82);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder84 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray82);
        int int85 = uRIList75.lastIndexOf((java.lang.Object) binaryDecoder84);
        org.ccsds.moims.mo.mal.structures.Duration duration86 = binaryDecoder84.decodeDuration();
        java.lang.Byte byte87 = binaryDecoder84.decodeOctet();
        java.lang.Long long88 = binaryDecoder84.decodeNullableLong();
        byte[] byteArray89 = binaryDecoder84.getRemainingEncodedData();
        boolean boolean90 = intList8.contains((java.lang.Object) binaryDecoder84);
        try {
            java.lang.Short short91 = binaryDecoder84.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertNotNull(intSpliterator74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-18) + "'", int76.equals((-18)));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-18) + "'", int77.equals((-18)));
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + byte87 + "' != '" + (byte) -1 + "'", byte87.equals((byte) -1));
        org.junit.Assert.assertNull(long88);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        int int14 = uRIList1.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        int int35 = byteList29.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean36 = uRIList1.removeAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList43 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList43, doubleArray42);
        org.ccsds.moims.mo.mal.structures.OctetList octetList45 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = octetList45.getServiceNumber();
        boolean boolean47 = doubleList43.containsAll((java.util.Collection<java.lang.Byte>) octetList45);
        boolean boolean48 = uRIList1.retainAll((java.util.Collection<java.lang.Byte>) octetList45);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet49 = octetList45.getAreaVersion();
        org.ccsds.moims.mo.com.archive.structures.ExpressionOperator expressionOperator50 = null;
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = org.ccsds.moims.mo.mal.structures.DoubleList.SERVICE_SHORT_FORM;
        java.lang.Boolean boolean52 = esa.mo.com.impl.util.HelperCOM.evaluateExpression((org.ccsds.moims.mo.mal.structures.Element) octetList45, expressionOperator50, (org.ccsds.moims.mo.mal.structures.Attribute) uShort51);
        octetList45.trimToSize();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(uOctet49);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertNull(boolean52);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean64 = byteList37.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.ccsds.moims.mo.mal.structures.URIList uRIList65 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int66 = uRIList65.getTypeShortForm();
        java.lang.Integer int67 = uRIList65.getTypeShortForm();
        boolean boolean68 = byteList37.equals((java.lang.Object) uRIList65);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet69 = uRIList65.getAreaVersion();
        java.io.OutputStream outputStream70 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder71 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream70);
        byte byte73 = binaryEncoder71.internalEncodeAttributeType((byte) 100);
        byte byte75 = binaryEncoder71.internalEncodeAttributeType((byte) -1);
        byte byte77 = binaryEncoder71.internalEncodeAttributeType((byte) 1);
        try {
            uOctet69.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-18) + "'", int66.equals((-18)));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uOctet69);
        org.junit.Assert.assertTrue("'" + byte73 + "' != '" + (byte) 100 + "'", byte73 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte75 + "' != '" + (byte) -1 + "'", byte75 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte77 + "' != '" + (byte) 1 + "'", byte77 == (byte) 1);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.ShortList shortList3 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList3.getAreaNumber();
        java.lang.Object[] objArray5 = shortList3.toArray();
        java.lang.Long long6 = shortList3.getShortForm();
        java.lang.Long long7 = shortList3.getShortForm();
        java.lang.Object[] objArray8 = shortList3.toArray();
        org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
        boolean boolean18 = byteList15.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        boolean boolean28 = byteList15.addAll((java.util.Collection<java.lang.Byte>) byteList24);
        java.lang.Object obj29 = byteList15.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream30 = byteList15.stream();
        boolean boolean31 = floatList9.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        byteList15.ensureCapacity((-4));
        byteList15.clear();
        boolean boolean35 = shortList3.retainAll((java.util.Collection<java.lang.Byte>) byteList15);
        boolean boolean36 = integerList1.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        java.lang.Integer int37 = integerList1.getTypeShortForm();
        integerList1.trimToSize();
        java.lang.String str39 = integerList1.toString();
        java.io.OutputStream outputStream40 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder41 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream40);
        byte byte43 = binaryEncoder41.internalEncodeAttributeType((byte) -1);
        try {
            integerList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265079L + "'", long6.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265079L + "'", long7.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-11) + "'", int37.equals((-11)));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[]" + "'", str39.equals("[]"));
        org.junit.Assert.assertTrue("'" + byte43 + "' != '" + (byte) -1 + "'", byte43 == (byte) -1);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Float float35 = floatList6.remove(2);
        byte[] byteArray39 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder41 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet42 = binaryDecoder41.decodeNullableUOctet();
        int int43 = floatList6.lastIndexOf((java.lang.Object) binaryDecoder41);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject44 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject44.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType49 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription50 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType49);
        eventCOMObject44.setObjType(objectType49);
        org.ccsds.moims.mo.com.structures.ObjectId objectId52 = eventCOMObject44.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType53 = eventCOMObject44.getObjType();
        try {
            org.ccsds.moims.mo.mal.structures.Element element54 = binaryDecoder41.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) objectType53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + (-1.0f) + "'", float35.equals((-1.0f)));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(uOctet42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(objectType49);
        org.junit.Assert.assertNotNull(subscription50);
        org.junit.Assert.assertNull(objectId52);
        org.junit.Assert.assertNotNull(objectType53);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 100);
        boolean boolean16 = uRIList5.containsAll((java.util.Collection<java.lang.Byte>) byteList12);
        int int18 = uRIList5.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        int int39 = byteList33.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean40 = uRIList5.removeAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Double[] doubleArray46 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList47 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList47, doubleArray46);
        org.ccsds.moims.mo.mal.structures.OctetList octetList49 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = octetList49.getServiceNumber();
        boolean boolean51 = doubleList47.containsAll((java.util.Collection<java.lang.Byte>) octetList49);
        boolean boolean52 = uRIList5.retainAll((java.util.Collection<java.lang.Byte>) octetList49);
        java.lang.Object obj53 = uRIList5.clone();
        org.ccsds.moims.mo.mal.structures.Time time54 = new org.ccsds.moims.mo.mal.structures.Time();
        int int55 = uRIList5.indexOf((java.lang.Object) time54);
        long long56 = time54.getValue();
        org.ccsds.moims.mo.mal.structures.Element element57 = time54.createElement();
        try {
            binaryEncoder1.encodeNullableTime(time54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNotNull(element57);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeLong((java.lang.Long) 281474993487877L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uLong1.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity5 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long6 = objectTypeHolderEntity5.getObjectType();
        boolean boolean7 = uLong1.equals((java.lang.Object) long6);
        java.lang.Integer int8 = uLong1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = uLong1.getAreaNumber();
        java.math.BigInteger bigInteger10 = uLong1.getValue();
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487879L + "'", long6.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 14 + "'", int8.equals(14));
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(bigInteger10);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.Duration duration7 = new org.ccsds.moims.mo.mal.structures.Duration((double) (-1L));
        java.lang.Integer int8 = duration7.getTypeShortForm();
        try {
            binaryEncoder1.encodeNullableDuration(duration7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8.equals(3));
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject6.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = eventCOMObject6.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        java.lang.Long long17 = eventCOMObject9.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId18 = eventCOMObject9.getObjectId();
        eventCOMObject6.setSource(objectId18);
        org.ccsds.moims.mo.mal.structures.Time time20 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int21 = time20.getTypeShortForm();
        eventCOMObject6.setTimestamp(time20);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = time20.getAreaVersion();
        java.lang.String str24 = time20.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = time20.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = time20.getServiceNumber();
        try {
            binaryEncoder1.encodeTime(time20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertNull(identifier8);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 4294967295L + "'", long17.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 16 + "'", int21.equals(16));
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "0" + "'", str24.equals("0"));
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(uShort26);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeBoolean((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        java.math.BigInteger bigInteger56 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong57 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger56);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = uLong57.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity61 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long62 = objectTypeHolderEntity61.getObjectType();
        boolean boolean63 = uLong57.equals((java.lang.Object) long62);
        boolean boolean64 = booleanList10.remove((java.lang.Object) uLong57);
        java.lang.Integer int65 = uLong57.getTypeShortForm();
        java.lang.Long long66 = uLong57.getShortForm();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 281474993487879L + "'", long62.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 14 + "'", int65.equals(14));
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 281474993487886L + "'", long66.equals(281474993487886L));
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uInteger11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element13 = uInteger11.createElement();
        java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList18 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList18, shortArray17);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = uRIList26.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean38 = strList23.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean39 = shortList18.contains((java.lang.Object) byteList33);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray40 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList41, uRIArray40);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = uRIList41.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean53 = byteList48.isEmpty();
        boolean boolean54 = shortList18.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.util.stream.Stream<java.lang.Short> shortStream55 = shortList18.stream();
        boolean boolean56 = uInteger11.equals((java.lang.Object) shortList18);
        java.util.ListIterator<java.lang.Short> shortItor57 = shortList18.listIterator();
        java.util.List<java.lang.Short> shortList60 = shortList18.subList(0, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(uRIArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(shortStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(shortItor57);
        org.junit.Assert.assertNotNull(shortList60);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl3 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl4 = cOMServicesConsumer0.getArchiveSyncService();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl3);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl4);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableString("100");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter0 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = archiveSyncGenAdapter0.getLastKnownIndex();
        java.lang.Integer int2 = uInteger1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList3 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int4 = uRIList3.getTypeShortForm();
        java.lang.Integer int5 = uRIList3.getTypeShortForm();
        java.lang.Object obj6 = uRIList3.clone();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        int int13 = uRIList3.lastIndexOf((java.lang.Object) binaryDecoder12);
        org.ccsds.moims.mo.mal.structures.Duration duration14 = binaryDecoder12.decodeDuration();
        java.lang.Byte byte15 = binaryDecoder12.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Time time16 = binaryDecoder12.decodeNullableTime();
        byte[] byteArray17 = binaryDecoder12.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Element element18 = uInteger1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uInteger1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 12 + "'", int2.equals(12));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-18) + "'", int5.equals((-18)));
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -1 + "'", byte15.equals((byte) -1));
        org.junit.Assert.assertNull(time16);
        org.junit.Assert.assertNotNull(byteArray17);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Integer int7 = binaryDecoder5.decodeInteger();
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime8 = binaryDecoder5.decodeNullableFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-64) + "'", int7.equals((-64)));
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("[-1, -1, -1, -1, 100]");
        org.ccsds.moims.mo.mal.structures.URI uRI3 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uRI3.getAreaVersion();
        boolean boolean5 = uRI1.equals((java.lang.Object) uOctet4);
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.Duration duration13 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = duration13.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element15 = binaryDecoder11.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) duration13);
        try {
            org.ccsds.moims.mo.mal.structures.Element element16 = uRI1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(element15);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        integerList1.ensureCapacity((int) 'a');
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        int int19 = uRIList6.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = byteList25.addAll((java.util.Collection<java.lang.Byte>) byteList34);
        int int40 = byteList34.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean41 = uRIList6.removeAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.lang.Byte byte43 = byteList34.get(0);
        boolean boolean44 = integerList1.retainAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.io.OutputStream outputStream45 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder46 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream45);
        byte byte48 = binaryEncoder46.internalEncodeAttributeType((byte) -1);
        try {
            integerList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + byte43 + "' != '" + (byte) -1 + "'", byte43.equals((byte) -1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + byte48 + "' != '" + (byte) -1 + "'", byte48 == (byte) -1);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        java.lang.Integer int77 = octetList18.getTypeShortForm();
        java.util.Iterator<java.lang.Byte> byteItor78 = octetList18.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort79 = octetList18.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort80 = octetList18.getAreaNumber();
        byte[] byteArray84 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder85 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray84);
        java.lang.Double double86 = binaryDecoder85.decodeNullableDouble();
        int int87 = octetList18.indexOf((java.lang.Object) double86);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-7) + "'", int77.equals((-7)));
        org.junit.Assert.assertNotNull(byteItor78);
        org.junit.Assert.assertNotNull(uShort79);
        org.junit.Assert.assertNotNull(uShort80);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals((double) double86, Double.NaN, 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectType objectType11 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription12 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType11);
        java.lang.Boolean boolean13 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType11);
        java.lang.Boolean boolean14 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType11);
        java.lang.Long long15 = esa.mo.com.impl.util.HelperCOM.generateSubKey(objectType11);
        eventCOMObject0.setObjType(objectType11);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject17 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject17.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType22 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription23 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType22);
        eventCOMObject17.setObjType(objectType22);
        java.lang.Long long25 = eventCOMObject17.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId26 = eventCOMObject17.getObjectId();
        eventCOMObject0.setSource(objectId26);
        java.lang.Long long28 = eventCOMObject0.getObjId();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13.equals(true));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14.equals(true));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487885L + "'", long15.equals(281474993487885L));
        org.junit.Assert.assertNotNull(objectType22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 4294967295L + "'", long25.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 4294967295L + "'", long28.equals(4294967295L));
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        java.util.ListIterator<java.lang.Short> shortItor6 = shortList4.listIterator();
        int int7 = shortList4.size();
        java.lang.Class<?> wildcardClass8 = shortList4.getClass();
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = shortList9.getAreaNumber();
        java.lang.Object[] objArray11 = shortList9.toArray();
        java.lang.Long long12 = shortList9.getShortForm();
        java.lang.Object[] objArray13 = shortList9.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = shortList9.getServiceNumber();
        java.lang.Integer int15 = shortList9.getTypeShortForm();
        int int16 = shortList4.indexOf((java.lang.Object) shortList9);
        org.ccsds.moims.mo.mal.structures.StringList stringList18 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int19 = stringList18.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = stringList18.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray21 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList22, uRIArray21);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        boolean boolean42 = byteList29.addAll((java.util.Collection<java.lang.Byte>) byteList38);
        int int44 = byteList38.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean45 = uRIList22.retainAll((java.util.Collection<java.lang.Byte>) byteList38);
        int int46 = stringList18.lastIndexOf((java.lang.Object) uRIList22);
        java.lang.Long long47 = stringList18.getShortForm();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList49 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = doubleList49.getAreaNumber();
        java.lang.Object obj51 = doubleList49.clone();
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder56 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray55);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder57 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray55);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = binaryDecoder57.decodeNullableUOctet();
        int int59 = doubleList49.lastIndexOf((java.lang.Object) binaryDecoder57);
        java.util.stream.Stream<java.lang.Double> doubleStream60 = doubleList49.stream();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer61 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl62 = cOMServicesConsumer61.getArchiveService();
        cOMServicesConsumer61.closeConnections();
        cOMServicesConsumer61.closeConnections();
        boolean boolean65 = doubleList49.contains((java.lang.Object) cOMServicesConsumer61);
        boolean boolean66 = stringList18.contains((java.lang.Object) boolean65);
        java.lang.String str67 = stringList18.toString();
        int int68 = shortList4.lastIndexOf((java.lang.Object) stringList18);
        java.lang.Object[] objArray69 = shortList4.toArray();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(shortItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281475010265079L + "'", long12.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-9) + "'", int15.equals((-9)));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-15) + "'", int19.equals((-15)));
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertNotNull(uRIArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 281475010265073L + "'", long47.equals(281475010265073L));
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(doubleStream60);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "[]" + "'", str67.equals("[]"));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(objArray69);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.Element element4 = uRI2.createElement();
        org.ccsds.moims.mo.mal.structures.Element element5 = uRI2.createElement();
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int7 = uRIList6.getTypeShortForm();
        java.lang.Integer int8 = uRIList6.getTypeShortForm();
        java.lang.Object obj9 = uRIList6.clone();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        int int16 = uRIList6.lastIndexOf((java.lang.Object) binaryDecoder15);
        org.ccsds.moims.mo.mal.structures.Duration duration17 = binaryDecoder15.decodeDuration();
        java.lang.Byte byte18 = binaryDecoder15.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element19 = uRI2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
        try {
            org.ccsds.moims.mo.mal.structures.Time time20 = binaryDecoder15.decodeTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-18) + "'", int7.equals((-18)));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) -1 + "'", byte18.equals((byte) -1));
        org.junit.Assert.assertNotNull(element19);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.Element element13 = blob12.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = blob12.getAreaVersion();
        int int15 = blob12.getLength();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = uRIList26.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean38 = strList23.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean39 = doubleList2.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Double[] doubleArray41 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList42 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList42, doubleArray41);
        java.lang.Short[] shortArray46 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList47 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList47, shortArray46);
        java.util.ListIterator<java.lang.Short> shortItor49 = shortList47.listIterator();
        int int50 = doubleList42.indexOf((java.lang.Object) shortList47);
        org.ccsds.moims.mo.mal.structures.Blob blob51 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean52 = blob51.isURLBased();
        byte[] byteArray56 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder57 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray56);
        org.ccsds.moims.mo.mal.structures.Element element58 = blob51.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder57);
        boolean boolean59 = doubleList42.contains((java.lang.Object) blob51);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray65 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList66 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList66, uRIArray65);
        java.lang.Byte[] byteArray72 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList73 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList73, byteArray72);
        boolean boolean76 = byteList73.add((java.lang.Byte) (byte) 100);
        boolean boolean77 = uRIList66.containsAll((java.util.Collection<java.lang.Byte>) byteList73);
        boolean boolean78 = strList63.containsAll((java.util.Collection<java.lang.Byte>) byteList73);
        boolean boolean79 = doubleList42.containsAll((java.util.Collection<java.lang.Byte>) byteList73);
        boolean boolean80 = doubleList2.removeAll((java.util.Collection<java.lang.Byte>) byteList73);
        java.util.Iterator<java.lang.Byte> byteItor81 = byteList73.iterator();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(shortItor49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertNotNull(uRIArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertNotNull(byteItor81);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        java.util.stream.Stream<java.lang.Long> longStream2 = longList1.stream();
        java.lang.Integer int3 = longList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = longList1.getAreaVersion();
        longList1.trimToSize();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime11 = binaryDecoder10.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int13 = uRIList12.size();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList22 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray24 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList25, uRIArray24);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        boolean boolean36 = uRIList25.containsAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean37 = intList22.removeAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean38 = uRIList12.removeAll((java.util.Collection<java.lang.Byte>) byteList32);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder39 = binaryDecoder10.createListDecoder((java.util.List) byteList32);
        try {
            org.ccsds.moims.mo.mal.structures.Element element40 = longList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longStream2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-13) + "'", int3.equals((-13)));
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(fineTime11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uRIArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(mALListDecoder39);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject3.getObjectId();
        eventCOMObject0.setSource(objectId12);
        org.ccsds.moims.mo.mal.structures.Time time14 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int15 = time14.getTypeShortForm();
        eventCOMObject0.setTimestamp(time14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = time14.getAreaVersion();
        java.lang.String str18 = time14.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = time14.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = time14.getServiceNumber();
        java.io.OutputStream outputStream21 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder22 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream21);
        byte byte24 = binaryEncoder22.internalEncodeAttributeType((byte) 100);
        byte byte26 = binaryEncoder22.internalEncodeAttributeType((byte) -1);
        try {
            uShort20.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 16 + "'", int15.equals(16));
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "0" + "'", str18.equals("0"));
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertTrue("'" + byte24 + "' != '" + (byte) 100 + "'", byte24 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte26 + "' != '" + (byte) -1 + "'", byte26 == (byte) -1);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime13 = binaryDecoder10.decodeFineTime();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.Element element19 = fineTime13.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Time time20 = binaryDecoder18.decodeNullableTime();
        org.ccsds.moims.mo.mal.structures.Element element21 = time20.createElement();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(fineTime13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(time20);
        org.junit.Assert.assertNotNull(element21);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList9 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) 'a');
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = doubleList9.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        doubleList9.ensureCapacity((-10));
        boolean boolean79 = blob7.equals((java.lang.Object) doubleList9);
        java.util.Spliterator<java.lang.Double> doubleSpliterator80 = doubleList9.spliterator();
        doubleList9.ensureCapacity((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertNotNull(doubleSpliterator80);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity(65535, "");
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        uShortList1.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element5 = uOctet4.createElement();
        int int6 = uShortList1.indexOf((java.lang.Object) element5);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator7 = uShortList1.spliterator();
        uShortList1.clear();
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Integer int10 = shortList9.getTypeShortForm();
        byte[] byteArray14 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        org.ccsds.moims.mo.mal.structures.Blob blob16 = binaryDecoder15.decodeBlob();
        boolean boolean17 = shortList9.equals((java.lang.Object) blob16);
        org.ccsds.moims.mo.mal.structures.ShortList shortList18 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = shortList18.getAreaNumber();
        java.lang.Object[] objArray20 = shortList18.toArray();
        java.lang.Long long21 = shortList18.getShortForm();
        shortList18.ensureCapacity((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray24 = new org.ccsds.moims.mo.mal.structures.ShortList[] { shortList9, shortList18 };
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray25 = uShortList1.toArray(shortListArray24);
        boolean boolean26 = uShortList1.isEmpty();
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(uShortSpliterator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-9) + "'", int10.equals((-9)));
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(blob16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 281475010265079L + "'", long21.equals(281475010265079L));
        org.junit.Assert.assertNotNull(shortListArray24);
        org.junit.Assert.assertNotNull(shortListArray25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeDuration();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = duration12.getAreaNumber();
        java.io.OutputStream outputStream14 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder15 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream14);
        byte byte17 = binaryEncoder15.internalEncodeAttributeType((byte) -1);
        try {
            duration12.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) -1 + "'", byte17 == (byte) -1);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        java.lang.Long long4 = floatList0.getShortForm();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        java.lang.Object obj20 = longList18.clone();
        int int21 = strList8.indexOf((java.lang.Object) longList18);
        java.util.ListIterator<java.lang.String> strItor22 = strList8.listIterator();
        java.lang.Short[] shortArray26 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList27 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList27, shortArray26);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray34 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList35, uRIArray34);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        boolean boolean46 = uRIList35.containsAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean47 = strList32.containsAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean48 = shortList27.contains((java.lang.Object) byteList42);
        boolean boolean49 = strList8.removeAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean50 = strList8.isEmpty();
        int int51 = floatList0.indexOf((java.lang.Object) strList8);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray52 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList53 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList53, uShortArray52);
        uShortList53.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet56 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element57 = uOctet56.createElement();
        int int58 = uShortList53.indexOf((java.lang.Object) element57);
        boolean boolean60 = uShortList53.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor61 = uShortList53.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort62 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean63 = uShortList53.add(uShort62);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray64 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList65 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList65, uRIArray64);
        java.lang.Byte[] byteArray71 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList72 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList72, byteArray71);
        boolean boolean75 = byteList72.add((java.lang.Byte) (byte) 100);
        boolean boolean76 = uRIList65.containsAll((java.util.Collection<java.lang.Byte>) byteList72);
        boolean boolean77 = uShortList53.retainAll((java.util.Collection<java.lang.Byte>) byteList72);
        org.ccsds.moims.mo.mal.structures.OctetList octetList78 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = octetList78.getAreaVersion();
        boolean boolean80 = byteList72.addAll((java.util.Collection<java.lang.Byte>) octetList78);
        boolean boolean81 = floatList0.removeAll((java.util.Collection<java.lang.Byte>) octetList78);
        org.ccsds.moims.mo.mal.structures.URIList uRIList82 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int83 = uRIList82.getTypeShortForm();
        java.lang.Integer int84 = uRIList82.getTypeShortForm();
        java.lang.Object obj85 = uRIList82.clone();
        byte[] byteArray89 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder90 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder91 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        int int92 = uRIList82.lastIndexOf((java.lang.Object) binaryDecoder91);
        org.ccsds.moims.mo.mal.structures.Duration duration93 = binaryDecoder91.decodeDuration();
        java.lang.Byte byte94 = binaryDecoder91.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element95 = octetList78.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder91);
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger96 = binaryDecoder91.decodeNullableUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265084L + "'", long4.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(uRIArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uShortArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(uOctet56);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(uShortItor61);
        org.junit.Assert.assertNotNull(uShort62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(uRIArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uOctet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-18) + "'", int83.equals((-18)));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-18) + "'", int84.equals((-18)));
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertTrue("'" + byte94 + "' != '" + (byte) -1 + "'", byte94.equals((byte) -1));
        org.junit.Assert.assertNotNull(element95);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Time time13 = binaryDecoder9.decodeNullableTime();
        try {
            java.lang.Float float14 = binaryDecoder9.decodeFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12.equals((byte) -1));
        org.junit.Assert.assertNull(time13);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream3 = uShortList1.parallelStream();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream4 = uShortList1.stream();
        uShortList1.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream6 = uShortList1.stream();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        java.lang.Double double12 = binaryDecoder11.decodeNullableDouble();
        byte[] byteArray13 = binaryDecoder11.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = blob16.getAreaVersion();
        int int18 = uShortList1.indexOf((java.lang.Object) blob16);
        int int19 = blob16.getLength();
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uShortStream3);
        org.junit.Assert.assertNotNull(uShortStream4);
        org.junit.Assert.assertNotNull(uShortStream6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals((double) double12, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = binaryDecoder4.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute6 = binaryDecoder4.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet5);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType4 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType((int) (byte) 100, (int) (byte) -1, (-10), (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UShort argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Blob blob10 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray7);
        org.ccsds.moims.mo.mal.structures.Blob blob13 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray7, 14, 18);
        try {
            binaryEncoder1.directEncodeBytes(byteArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(byteArray7);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableOctet((java.lang.Byte) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uLong1.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity5 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long6 = objectTypeHolderEntity5.getObjectType();
        boolean boolean7 = uLong1.equals((java.lang.Object) long6);
        java.lang.Integer int8 = uLong1.getTypeShortForm();
        java.lang.Long long9 = uLong1.getShortForm();
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487879L + "'", long6.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 14 + "'", int8.equals(14));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281474993487886L + "'", long9.equals(281474993487886L));
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.stream();
        org.ccsds.moims.mo.mal.structures.OctetList octetList42 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean43 = strList35.retainAll((java.util.Collection<java.lang.Byte>) octetList42);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray44 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList45 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList45, uRIArray44);
        java.lang.Byte[] byteArray51 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList52 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList52, byteArray51);
        boolean boolean55 = byteList52.add((java.lang.Byte) (byte) 100);
        boolean boolean56 = uRIList45.containsAll((java.util.Collection<java.lang.Byte>) byteList52);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = byteList65.isEmpty();
        boolean boolean71 = uRIList45.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean72 = strList35.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean74 = strList35.add("true");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(uRIArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.URI uRI3 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uRI3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRI3.getServiceNumber();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9, 6);
        boolean boolean13 = uShort5.equals((java.lang.Object) binaryDecoder12);
        try {
            binaryEncoder1.encodeNullableUShort(uShort5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime3 = new org.ccsds.moims.mo.mal.structures.FineTime(281474993487881L);
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.lang.Long[] longArray16 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList17 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList17, longArray16);
        java.lang.Object obj19 = longList17.clone();
        int int20 = strList7.indexOf((java.lang.Object) longList17);
        java.util.ListIterator<java.lang.String> strItor21 = strList7.listIterator();
        java.lang.Short[] shortArray25 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList26 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList26, shortArray25);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray33 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList34, uRIArray33);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        boolean boolean45 = uRIList34.containsAll((java.util.Collection<java.lang.Byte>) byteList41);
        boolean boolean46 = strList31.containsAll((java.util.Collection<java.lang.Byte>) byteList41);
        boolean boolean47 = shortList26.contains((java.lang.Object) byteList41);
        boolean boolean48 = strList7.removeAll((java.util.Collection<java.lang.Byte>) byteList41);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList63 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList63, byteArray62);
        boolean boolean66 = byteList63.add((java.lang.Byte) (byte) 100);
        boolean boolean67 = byteList54.addAll((java.util.Collection<java.lang.Byte>) byteList63);
        boolean boolean68 = byteList41.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        boolean boolean69 = fineTime3.equals((java.lang.Object) byteList41);
        try {
            binaryEncoder1.encodeFineTime(fineTime3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(uRIArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        boolean boolean21 = byteList8.addAll((java.util.Collection<java.lang.Byte>) byteList17);
        int int23 = byteList17.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean24 = uRIList1.retainAll((java.util.Collection<java.lang.Byte>) byteList17);
        java.lang.Double[] doubleArray26 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList27 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList27, doubleArray26);
        java.lang.Short[] shortArray31 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList32 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList32, shortArray31);
        java.util.ListIterator<java.lang.Short> shortItor34 = shortList32.listIterator();
        int int35 = doubleList27.indexOf((java.lang.Object) shortList32);
        org.ccsds.moims.mo.mal.structures.Blob blob36 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean37 = blob36.isURLBased();
        byte[] byteArray41 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder42 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray41);
        org.ccsds.moims.mo.mal.structures.Element element43 = blob36.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder42);
        boolean boolean44 = doubleList27.contains((java.lang.Object) blob36);
        java.util.ListIterator<java.lang.Double> doubleItor46 = doubleList27.listIterator(1);
        doubleList27.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray48 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList49 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList49, uShortArray48);
        uShortList49.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet52 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element53 = uOctet52.createElement();
        int int54 = uShortList49.indexOf((java.lang.Object) element53);
        boolean boolean56 = uShortList49.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor57 = uShortList49.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean59 = uShortList49.add(uShort58);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray73 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList74 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList74, byteArray73);
        boolean boolean77 = byteList74.add((java.lang.Byte) (byte) 100);
        boolean boolean78 = byteList65.addAll((java.util.Collection<java.lang.Byte>) byteList74);
        java.lang.Object obj79 = byteList65.clone();
        boolean boolean80 = uShortList49.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean81 = doubleList27.retainAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean82 = uRIList1.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList84 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor86 = uShortList84.listIterator((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet87 = uShortList84.getAreaVersion();
        uShortList84.clear();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream89 = uShortList84.parallelStream();
        int int90 = byteList65.lastIndexOf((java.lang.Object) uShortStream89);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(shortItor34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(doubleItor46);
        org.junit.Assert.assertNotNull(uShortArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertNotNull(uOctet52);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(uShortItor57);
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
        org.junit.Assert.assertNotNull(uShortItor86);
        org.junit.Assert.assertNotNull(uOctet87);
        org.junit.Assert.assertNotNull(uShortStream89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        org.ccsds.moims.mo.mal.structures.Element element12 = time11.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = time11.getServiceNumber();
        java.io.OutputStream outputStream14 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder15 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream14);
        byte byte17 = binaryEncoder15.internalEncodeAttributeType((byte) 100);
        byte byte19 = binaryEncoder15.internalEncodeAttributeType((byte) -1);
        try {
            time11.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 100 + "'", byte17 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) -1 + "'", byte19 == (byte) -1);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Float float12 = binaryDecoder11.decodeFloat();
        java.lang.Boolean boolean13 = binaryDecoder11.decodeBoolean();
        java.lang.Float float14 = binaryDecoder11.decodeFloat();
        try {
            java.lang.Long long16 = binaryDecoder11.decodeAbstractElementType(true);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 7.0E-44f + "'", float12.equals(7.0E-44f));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13.equals(true));
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14.equals(0.0f));
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        org.ccsds.moims.mo.mal.structures.Element element8 = blob0.createElement();
        int int9 = blob0.getLength();
        org.ccsds.moims.mo.mal.structures.StringList stringList11 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray12 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList13, uShortArray12);
        uShortList13.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element17 = uOctet16.createElement();
        int int18 = uShortList13.indexOf((java.lang.Object) element17);
        boolean boolean20 = uShortList13.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor21 = uShortList13.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean23 = uShortList13.add(uShort22);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray24 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList25, uRIArray24);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        boolean boolean36 = uRIList25.containsAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean37 = uShortList13.retainAll((java.util.Collection<java.lang.Byte>) byteList32);
        org.ccsds.moims.mo.mal.structures.OctetList octetList38 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet39 = octetList38.getAreaVersion();
        boolean boolean40 = byteList32.addAll((java.util.Collection<java.lang.Byte>) octetList38);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = octetList38.getAreaVersion();
        int int42 = stringList11.indexOf((java.lang.Object) uOctet41);
        int int43 = stringList11.size();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList45 = new org.ccsds.moims.mo.mal.structures.IntegerList(1);
        java.lang.String str46 = integerList45.toString();
        java.util.stream.Stream<java.lang.Integer> intStream47 = integerList45.parallelStream();
        boolean boolean48 = stringList11.remove((java.lang.Object) integerList45);
        boolean boolean49 = blob0.equals((java.lang.Object) boolean48);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(uShortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(uShortItor21);
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uRIArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uOctet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "[]" + "'", str46.equals("[]"));
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = binaryDecoder9.decodeUShort();
        try {
            java.lang.Long long15 = binaryDecoder9.decodeAbstractElementType(false);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(uShort13);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 281474993487878L);
        org.ccsds.moims.mo.mal.structures.ShortList shortList3 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Integer int4 = shortList3.getTypeShortForm();
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) shortList3);
        org.ccsds.moims.mo.mal.structures.Time time6 = eventCOMObject0.getTimestamp();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-9) + "'", int4.equals((-9)));
        org.junit.Assert.assertNull(time6);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, 18);
        org.ccsds.moims.mo.mal.structures.Union union9 = new org.ccsds.moims.mo.mal.structures.Union("0.0");
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = union9.getServiceNumber();
        try {
            org.ccsds.moims.mo.mal.structures.Element element11 = binaryDecoder7.decodeElement((org.ccsds.moims.mo.mal.structures.Element) uShort10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 18");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uShort10);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Integer) 4);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = union1.getServiceNumber();
        java.lang.String str3 = union1.toString();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder5.internalEncodeAttributeType((byte) -1);
        byte byte11 = binaryEncoder5.internalEncodeAttributeType((byte) 1);
        try {
            union1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "4" + "'", str3.equals("4"));
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -1 + "'", byte9 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 1 + "'", byte11 == (byte) 1);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.Identifier identifier7 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.Long long8 = identifier7.getShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList9 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element10 = booleanList9.createElement();
        int int12 = booleanList9.indexOf((java.lang.Object) 281474993487875L);
        boolean boolean13 = identifier7.equals((java.lang.Object) int12);
        java.lang.Integer int14 = identifier7.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = identifier7.getAreaVersion();
        try {
            binaryEncoder1.encodeAttribute((org.ccsds.moims.mo.mal.structures.Attribute) identifier7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487878L + "'", long8.equals(281474993487878L));
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14.equals(6));
        org.junit.Assert.assertNotNull(uOctet15);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-5), "true");
        int int3 = networkHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-5) + "'", int3 == (-5));
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Object[] objArray8 = new java.lang.Object[] { "", '#' };
        java.lang.Object[] objArray9 = strList3.toArray(objArray8);
        java.lang.Object[] objArray10 = strList3.toArray();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int13 = floatList11.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int14 = floatList11.getTypeShortForm();
        boolean boolean15 = floatList11.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator16 = floatList11.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList11.getServiceNumber();
        int int19 = floatList11.lastIndexOf((java.lang.Object) (-11));
        java.lang.String str20 = floatList11.toString();
        java.util.stream.Stream<java.lang.Float> floatStream21 = floatList11.stream();
        java.util.Iterator<java.lang.Float> floatItor22 = floatList11.iterator();
        java.lang.Integer int23 = floatList11.getTypeShortForm();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.lang.Long[] longArray36 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList37 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList37, longArray36);
        java.lang.Object obj39 = longList37.clone();
        int int40 = strList27.indexOf((java.lang.Object) longList37);
        java.util.ListIterator<java.lang.String> strItor41 = strList27.listIterator();
        java.lang.String str42 = strList27.toString();
        byte[] byteArray46 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder47 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray46);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder48 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray46);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet49 = binaryDecoder48.decodeNullableUOctet();
        java.lang.Long long50 = uOctet49.getShortForm();
        short short51 = uOctet49.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort52 = uOctet49.getServiceNumber();
        boolean boolean53 = strList27.remove((java.lang.Object) uShort52);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray54 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList55 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList55, uRIArray54);
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList62, byteArray61);
        boolean boolean65 = byteList62.add((java.lang.Byte) (byte) 100);
        boolean boolean66 = uRIList55.containsAll((java.util.Collection<java.lang.Byte>) byteList62);
        int int68 = uRIList55.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray73 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList74 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList74, byteArray73);
        boolean boolean77 = byteList74.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray82 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList83 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList83, byteArray82);
        boolean boolean86 = byteList83.add((java.lang.Byte) (byte) 100);
        boolean boolean87 = byteList74.addAll((java.util.Collection<java.lang.Byte>) byteList83);
        int int89 = byteList83.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean90 = uRIList55.removeAll((java.util.Collection<java.lang.Byte>) byteList83);
        boolean boolean91 = strList27.removeAll((java.util.Collection<java.lang.Byte>) byteList83);
        boolean boolean92 = floatList11.retainAll((java.util.Collection<java.lang.Byte>) byteList83);
        boolean boolean93 = strList3.containsAll((java.util.Collection<java.lang.Byte>) byteList83);
        boolean boolean95 = byteList83.add((java.lang.Byte) (byte) 0);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-4) + "'", int14.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(floatSpliterator16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "[]" + "'", str20.equals("[]"));
        org.junit.Assert.assertNotNull(floatStream21);
        org.junit.Assert.assertNotNull(floatItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-4) + "'", int23.equals((-4)));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "[hi!, ]" + "'", str42.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(uOctet49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 281474993487880L + "'", long50.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short51 + "' != '" + (short) 127 + "'", short51 == (short) 127);
        org.junit.Assert.assertNotNull(uShort52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(uRIArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.ccsds.moims.mo.com.structures.ObjectType objectType4 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(18, (int) 'a', (int) ' ', 8);
        java.lang.Boolean boolean5 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType4);
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5.equals(false));
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.URI uRI78 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = uRI78.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort80 = uRI78.getServiceNumber();
        boolean boolean81 = uRIList8.add(uRI78);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor83 = uRIList8.listIterator(0);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNotNull(uOctet79);
        org.junit.Assert.assertNotNull(uShort80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertNotNull(uRIItor83);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Integer int12 = binaryDecoder9.decodeNullableInteger();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort13 = binaryDecoder9.decodeNullableUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12.equals(0));
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        java.lang.Long long8 = uOctet6.getShortForm();
        short short9 = uOctet6.getValue();
        java.lang.Long long10 = uOctet6.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = uOctet6.getAreaNumber();
        java.io.OutputStream outputStream12 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder13 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream12);
        byte byte15 = binaryEncoder13.internalEncodeAttributeType((byte) 100);
        byte byte17 = binaryEncoder13.internalEncodeAttributeType((byte) 10);
        try {
            uOctet6.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short9 + "' != '" + (short) 127 + "'", short9 == (short) 127);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487880L + "'", long10.equals(281474993487880L));
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) 100 + "'", byte15 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 10 + "'", byte17 == (byte) 10);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("[-1, -1, -1, -1, 100]");
        java.lang.String str6 = uRI5.getValue();
        try {
            binaryEncoder1.encodeURI(uRI5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "[-1, -1, -1, -1, 100]" + "'", str6.equals("[-1, -1, -1, -1, 100]"));
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
        java.lang.Long long13 = binaryDecoder9.decodeLong();
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime14 = binaryDecoder9.decodeNullableFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12.equals((byte) -1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13.equals(0L));
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList3 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList3, intArray2);
        int int6 = intList3.lastIndexOf((java.lang.Object) 0.0f);
        java.util.ListIterator<java.lang.Integer> intItor8 = intList3.listIterator(0);
        boolean boolean9 = time0.equals((java.lang.Object) intList3);
        org.ccsds.moims.mo.mal.structures.URIList uRIList10 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int11 = uRIList10.getTypeShortForm();
        java.lang.Integer int12 = uRIList10.getTypeShortForm();
        java.lang.Object obj13 = uRIList10.clone();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        int int20 = uRIList10.lastIndexOf((java.lang.Object) binaryDecoder19);
        java.lang.Boolean boolean21 = binaryDecoder19.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Element element22 = time0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder19);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong23 = binaryDecoder19.decodeNullableULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(intItor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-18) + "'", int12.equals((-18)));
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21.equals(true));
        org.junit.Assert.assertNotNull(element22);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableShort((java.lang.Short) (short) 255);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.Time time8 = null;
        try {
            binaryEncoder1.encodeNullableTime(time8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeOctet((java.lang.Byte) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeLong((java.lang.Long) 281475010265073L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uRI2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRI2.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = uRI2.getAreaNumber();
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uShort6);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20, shortArray19);
        java.util.ListIterator<java.lang.Short> shortItor22 = shortList20.listIterator();
        int int23 = doubleList15.indexOf((java.lang.Object) shortList20);
        org.ccsds.moims.mo.mal.structures.Blob blob24 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean25 = blob24.isURLBased();
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.Element element31 = blob24.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder30);
        boolean boolean32 = doubleList15.contains((java.lang.Object) blob24);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray38 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList39, uRIArray38);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        boolean boolean50 = uRIList39.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean51 = strList36.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean52 = doubleList15.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55, doubleArray54);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList60 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList60, shortArray59);
        java.util.ListIterator<java.lang.Short> shortItor62 = shortList60.listIterator();
        int int63 = doubleList55.indexOf((java.lang.Object) shortList60);
        org.ccsds.moims.mo.mal.structures.Blob blob64 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean65 = blob64.isURLBased();
        byte[] byteArray69 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder70 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray69);
        org.ccsds.moims.mo.mal.structures.Element element71 = blob64.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder70);
        boolean boolean72 = doubleList55.contains((java.lang.Object) blob64);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray78 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList79 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList79, uRIArray78);
        java.lang.Byte[] byteArray85 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList86 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList86, byteArray85);
        boolean boolean89 = byteList86.add((java.lang.Byte) (byte) 100);
        boolean boolean90 = uRIList79.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean91 = strList76.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean92 = doubleList55.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean93 = doubleList15.removeAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean94 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList86);
        doubleList1.clear();
        org.ccsds.moims.mo.mal.structures.UShort uShort96 = doubleList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element97 = doubleList1.createElement();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(shortItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uRIArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(shortItor62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uRIArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
        org.junit.Assert.assertNotNull(uShort96);
        org.junit.Assert.assertNotNull(element97);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableString("[2, 10, -11, -7, 100, 8, 6, -7]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Duration duration3 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        java.lang.Long long4 = duration3.getShortForm();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8);
        org.ccsds.moims.mo.mal.structures.Blob blob14 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger16 = binaryDecoder15.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.Element element17 = duration3.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
        try {
            binaryEncoder1.encodeElement((org.ccsds.moims.mo.mal.structures.Element) duration3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487875L + "'", long4.equals(281474993487875L));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(uInteger16);
        org.junit.Assert.assertNotNull(element17);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList9 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = doubleList9.getAreaNumber();
        java.lang.Object obj11 = doubleList9.clone();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = binaryDecoder17.decodeNullableUOctet();
        int int19 = doubleList9.lastIndexOf((java.lang.Object) binaryDecoder17);
        java.util.stream.Stream<java.lang.Double> doubleStream20 = doubleList9.stream();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer21 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl22 = cOMServicesConsumer21.getArchiveService();
        cOMServicesConsumer21.closeConnections();
        cOMServicesConsumer21.closeConnections();
        boolean boolean25 = doubleList9.contains((java.lang.Object) cOMServicesConsumer21);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger31 = binaryDecoder30.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = uInteger31.getServiceNumber();
        boolean boolean33 = doubleList9.contains((java.lang.Object) uShort32);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = doubleList9.getAreaVersion();
        try {
            binaryEncoder1.encodeUOctet(uOctet34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(uOctet18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(doubleStream20);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(uInteger31);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertNotNull(uOctet34);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        uRIList0.trimToSize();
        org.ccsds.moims.mo.mal.structures.URIList uRIList2 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int3 = uRIList2.getTypeShortForm();
        java.lang.Integer int4 = uRIList2.getTypeShortForm();
        java.lang.Object obj5 = uRIList2.clone();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        int int12 = uRIList2.lastIndexOf((java.lang.Object) binaryDecoder11);
        org.ccsds.moims.mo.mal.structures.Duration duration13 = binaryDecoder11.decodeDuration();
        java.lang.Byte byte14 = binaryDecoder11.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Time time15 = binaryDecoder11.decodeNullableTime();
        byte[] byteArray16 = binaryDecoder11.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = uRIList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) -1 + "'", byte14.equals((byte) -1));
        org.junit.Assert.assertNull(time15);
        org.junit.Assert.assertNotNull(byteArray16);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.lang.Object obj22 = longList20.clone();
        int int23 = strList10.indexOf((java.lang.Object) longList20);
        java.util.ListIterator<java.lang.String> strItor24 = strList10.listIterator();
        java.lang.String str25 = strList10.toString();
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList29 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList29, doubleArray28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        int int36 = strList34.size();
        boolean boolean37 = doubleList29.equals((java.lang.Object) strList34);
        boolean boolean38 = strList10.remove((java.lang.Object) strList34);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder39 = binaryDecoder5.createListDecoder((java.util.List) strList34);
        try {
            java.lang.Integer int40 = binaryDecoder5.decodeInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[hi!, ]" + "'", str25.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(mALListDecoder39);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.util.Spliterator<java.lang.String> strSpliterator18 = strList3.spliterator();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject19 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI21 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject19.setSourceURI(uRI21);
        org.ccsds.moims.mo.mal.structures.URI uRI24 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element25 = uRI24.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI21, uRI24 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Double[] doubleArray34 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList35 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList35, doubleArray34);
        org.ccsds.moims.mo.mal.structures.OctetList octetList37 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort38 = octetList37.getServiceNumber();
        boolean boolean39 = doubleList35.containsAll((java.util.Collection<java.lang.Byte>) octetList37);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray40 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList41, uShortArray40);
        uShortList41.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet44 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element45 = uOctet44.createElement();
        int int46 = uShortList41.indexOf((java.lang.Object) element45);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.lang.Long[] longArray59 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList60 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList60, longArray59);
        java.lang.Object obj62 = longList60.clone();
        int int63 = strList50.indexOf((java.lang.Object) longList60);
        java.util.ListIterator<java.lang.String> strItor64 = strList50.listIterator();
        java.lang.Short[] shortArray68 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList69 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList69, shortArray68);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray76 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList77 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList77, uRIArray76);
        java.lang.Byte[] byteArray83 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList84 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList84, byteArray83);
        boolean boolean87 = byteList84.add((java.lang.Byte) (byte) 100);
        boolean boolean88 = uRIList77.containsAll((java.util.Collection<java.lang.Byte>) byteList84);
        boolean boolean89 = strList74.containsAll((java.util.Collection<java.lang.Byte>) byteList84);
        boolean boolean90 = shortList69.contains((java.lang.Object) byteList84);
        boolean boolean91 = strList50.removeAll((java.util.Collection<java.lang.Byte>) byteList84);
        boolean boolean92 = uShortList41.containsAll((java.util.Collection<java.lang.Byte>) byteList84);
        int int93 = byteList84.size();
        boolean boolean94 = octetList37.containsAll((java.util.Collection<java.lang.Byte>) byteList84);
        boolean boolean95 = uRIList27.retainAll((java.util.Collection<java.lang.Byte>) octetList37);
        java.lang.Object obj96 = uRIList27.clone();
        boolean boolean97 = strList3.contains(obj96);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(strSpliterator18);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(uShort38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(uShortArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(uOctet44);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertNotNull(uRIArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 5 + "'", int93 == 5);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", !boolean97);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str2 = uRI1.toString();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        java.lang.Integer int9 = binaryDecoder8.decodeInteger();
        int int11 = binaryDecoder8.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Element element12 = uRI1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier13 = binaryDecoder8.decodeNullableIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9.equals(50));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(element12);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        stringList1.ensureCapacity((-15));
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray4 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList5, uShortArray4);
        uShortList5.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element9 = uOctet8.createElement();
        int int10 = uShortList5.indexOf((java.lang.Object) element9);
        boolean boolean12 = uShortList5.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor13 = uShortList5.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean15 = uShortList5.add(uShort14);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray16 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList17 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList17, uRIArray16);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        boolean boolean28 = uRIList17.containsAll((java.util.Collection<java.lang.Byte>) byteList24);
        boolean boolean29 = uShortList5.retainAll((java.util.Collection<java.lang.Byte>) byteList24);
        org.ccsds.moims.mo.mal.structures.OctetList octetList30 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet31 = octetList30.getAreaVersion();
        boolean boolean32 = byteList24.addAll((java.util.Collection<java.lang.Byte>) octetList30);
        boolean boolean33 = stringList1.containsAll((java.util.Collection<java.lang.Byte>) byteList24);
        byte[] byteArray37 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder38 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray37);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder39 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray37);
        java.lang.Float float40 = binaryDecoder39.decodeFloat();
        try {
            org.ccsds.moims.mo.mal.structures.Element element41 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(uShortItor13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(uRIArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(uOctet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 7.0E-44f + "'", float40.equals(7.0E-44f));
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList7 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = integerList7.getAreaVersion();
        try {
            binaryEncoder1.encodeNullableUOctet(uOctet8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(uOctet8);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableString("2.47E-322");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str9 = identifier8.toString();
        org.ccsds.moims.mo.mal.structures.Element element10 = identifier8.createElement();
        try {
            binaryEncoder1.encodeIdentifier(identifier8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(element10);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.lang.Long long4 = doubleList1.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream5 = doubleList1.parallelStream();
        boolean boolean7 = doubleList1.add((java.lang.Double) 0.0d);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) 10 };
        java.util.ArrayList<java.lang.Byte> byteList10 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList10, byteArray9);
        java.util.Spliterator<java.lang.Byte> byteSpliterator12 = byteList10.spliterator();
        boolean boolean13 = doubleList1.containsAll((java.util.Collection<java.lang.Byte>) byteList10);
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int21 = blob20.getOffset();
        boolean boolean22 = doubleList1.equals((java.lang.Object) blob20);
        try {
            java.util.List<java.lang.Double> doubleList25 = doubleList1.subList(7, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 12");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265083L + "'", long4.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = binaryDecoder9.decodeNullableUOctet();
        try {
            java.lang.Boolean boolean12 = binaryDecoder9.decodeNullableBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uOctet11);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(9);
        java.lang.String str2 = longList1.toString();
        java.util.Iterator<java.lang.Long> longItor3 = longList1.iterator();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder5.internalEncodeAttributeType((byte) -1);
        try {
            longList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "[]" + "'", str2.equals("[]"));
        org.junit.Assert.assertNotNull(longItor3);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -1 + "'", byte9 == (byte) -1);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        shortList0.ensureCapacity(18);
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder5.internalEncodeAttributeType((byte) -1);
        try {
            shortList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -1 + "'", byte9 == (byte) -1);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType2 = eventCOMObject0.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        eventCOMObject0.setSourceURI(uRI5);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject8.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier10 = eventCOMObject8.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject11 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject11.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType16 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription17 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType16);
        eventCOMObject11.setObjType(objectType16);
        java.lang.Long long19 = eventCOMObject11.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId20 = eventCOMObject11.getObjectId();
        eventCOMObject8.setSource(objectId20);
        org.ccsds.moims.mo.mal.structures.Time time22 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int23 = time22.getTypeShortForm();
        eventCOMObject8.setTimestamp(time22);
        eventCOMObject0.setTimestamp(time22);
        org.ccsds.moims.mo.mal.structures.Identifier identifier26 = null;
        eventCOMObject0.setNetworkZone(identifier26);
        org.ccsds.moims.mo.mal.structures.URI uRI28 = eventCOMObject0.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject29 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId30 = eventCOMObject29.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier31 = eventCOMObject29.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject32 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject32.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType37 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription38 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType37);
        eventCOMObject32.setObjType(objectType37);
        java.lang.Long long40 = eventCOMObject32.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId41 = eventCOMObject32.getObjectId();
        eventCOMObject29.setSource(objectId41);
        org.ccsds.moims.mo.mal.structures.Time time43 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int44 = time43.getTypeShortForm();
        eventCOMObject29.setTimestamp(time43);
        long long46 = time43.getValue();
        eventCOMObject0.setTimestamp(time43);
        eventCOMObject0.setRelated((java.lang.Long) 281475010265078L);
        org.ccsds.moims.mo.com.structures.ObjectId objectId50 = eventCOMObject0.getSource();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject51 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject51.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier54 = null;
        eventCOMObject51.setNetworkZone(identifier54);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject56 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId57 = eventCOMObject56.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier58 = eventCOMObject56.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject59 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject59.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType64 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription65 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType64);
        eventCOMObject59.setObjType(objectType64);
        java.lang.Long long67 = eventCOMObject59.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId68 = eventCOMObject59.getObjectId();
        eventCOMObject56.setSource(objectId68);
        eventCOMObject51.setSource(objectId68);
        eventCOMObject0.setSource(objectId68);
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(objectType2);
        org.junit.Assert.assertNull(objectId9);
        org.junit.Assert.assertNull(identifier10);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 4294967295L + "'", long19.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 16 + "'", int23.equals(16));
        org.junit.Assert.assertNotNull(uRI28);
        org.junit.Assert.assertNull(objectId30);
        org.junit.Assert.assertNull(identifier31);
        org.junit.Assert.assertNotNull(objectType37);
        org.junit.Assert.assertNotNull(subscription38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 4294967295L + "'", long40.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 16 + "'", int44.equals(16));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNull(objectId50);
        org.junit.Assert.assertNull(objectId57);
        org.junit.Assert.assertNull(identifier58);
        org.junit.Assert.assertNotNull(objectType64);
        org.junit.Assert.assertNotNull(subscription65);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 4294967295L + "'", long67.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId68);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream3 = uShortList1.parallelStream();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream4 = uShortList1.stream();
        uShortList1.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream6 = uShortList1.stream();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        java.lang.Double double12 = binaryDecoder11.decodeNullableDouble();
        byte[] byteArray13 = binaryDecoder11.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = blob16.getAreaVersion();
        int int18 = uShortList1.indexOf((java.lang.Object) blob16);
        java.lang.String str19 = uShortList1.toString();
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uShortStream3);
        org.junit.Assert.assertNotNull(uShortStream4);
        org.junit.Assert.assertNotNull(uShortStream6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals((double) double12, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[]" + "'", str19.equals("[]"));
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        java.lang.Float[] floatArray2 = new java.lang.Float[] { 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList3 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList3, floatArray2);
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        int int15 = strList13.size();
        boolean boolean16 = doubleList8.equals((java.lang.Object) strList13);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.lang.Long[] longArray29 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList30 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList30, longArray29);
        java.lang.Object obj32 = longList30.clone();
        int int33 = strList20.indexOf((java.lang.Object) longList30);
        java.util.ListIterator<java.lang.String> strItor34 = strList20.listIterator();
        java.lang.Short[] shortArray38 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList39 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList39, shortArray38);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray46 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList47 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList47, uRIArray46);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        boolean boolean58 = uRIList47.containsAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean59 = strList44.containsAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean60 = shortList39.contains((java.lang.Object) byteList54);
        boolean boolean61 = strList20.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean62 = doubleList8.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean63 = floatList3.remove((java.lang.Object) byteList54);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList65 = new org.ccsds.moims.mo.mal.structures.UShortList(16);
        boolean boolean66 = floatList3.remove((java.lang.Object) uShortList65);
        byte[] byteArray70 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder71 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder72 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet73 = binaryDecoder72.decodeNullableUOctet();
        java.lang.Long long74 = uOctet73.getShortForm();
        short short75 = uOctet73.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort76 = uOctet73.getServiceNumber();
        java.lang.Integer int77 = uOctet73.getTypeShortForm();
        boolean boolean78 = uShortList65.equals((java.lang.Object) uOctet73);
        org.ccsds.moims.mo.mal.structures.UShort uShort79 = uShortList65.getServiceNumber();
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(uRIArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertNotNull(uOctet73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 281474993487880L + "'", long74.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short75 + "' != '" + (short) 127 + "'", short75 == (short) 127);
        org.junit.Assert.assertNotNull(uShort76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 8 + "'", int77.equals(8));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertNotNull(uShort79);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((int) ' ', "[0.0]");
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.util.ListIterator<java.lang.Double> doubleItor21 = doubleList2.listIterator(1);
        doubleList2.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray23 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList24 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList24, uShortArray23);
        uShortList24.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element28 = uOctet27.createElement();
        int int29 = uShortList24.indexOf((java.lang.Object) element28);
        boolean boolean31 = uShortList24.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor32 = uShortList24.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean34 = uShortList24.add(uShort33);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
        boolean boolean43 = byteList40.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList49 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList49, byteArray48);
        boolean boolean52 = byteList49.add((java.lang.Byte) (byte) 100);
        boolean boolean53 = byteList40.addAll((java.util.Collection<java.lang.Byte>) byteList49);
        java.lang.Object obj54 = byteList40.clone();
        boolean boolean55 = uShortList24.removeAll((java.util.Collection<java.lang.Byte>) byteList40);
        boolean boolean56 = doubleList2.retainAll((java.util.Collection<java.lang.Byte>) byteList40);
        org.ccsds.moims.mo.mal.structures.FloatList floatList57 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int59 = floatList57.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int60 = floatList57.getTypeShortForm();
        boolean boolean61 = floatList57.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator62 = floatList57.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort63 = floatList57.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort64 = floatList57.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = floatList57.getServiceNumber();
        int int66 = doubleList2.lastIndexOf((java.lang.Object) floatList57);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray72 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList73 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList73, uRIArray72);
        java.lang.Byte[] byteArray79 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList80 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList80, byteArray79);
        boolean boolean83 = byteList80.add((java.lang.Byte) (byte) 100);
        boolean boolean84 = uRIList73.containsAll((java.util.Collection<java.lang.Byte>) byteList80);
        boolean boolean85 = strList70.containsAll((java.util.Collection<java.lang.Byte>) byteList80);
        java.lang.String str86 = strList70.toString();
        java.lang.Object[] objArray87 = strList70.toArray();
        org.ccsds.moims.mo.mal.structures.Identifier identifier89 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.Long long90 = identifier89.getShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList91 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element92 = booleanList91.createElement();
        int int94 = booleanList91.indexOf((java.lang.Object) 281474993487875L);
        boolean boolean95 = identifier89.equals((java.lang.Object) int94);
        java.lang.Long long96 = identifier89.getShortForm();
        java.lang.Integer int97 = identifier89.getTypeShortForm();
        boolean boolean98 = strList70.contains((java.lang.Object) int97);
        int int99 = doubleList2.indexOf((java.lang.Object) boolean98);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(doubleItor21);
        org.junit.Assert.assertNotNull(uShortArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uShortItor32);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-4) + "'", int60.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(floatSpliterator62);
        org.junit.Assert.assertNotNull(uShort63);
        org.junit.Assert.assertNotNull(uShort64);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(uRIArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", !boolean85);
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "[hi!, ]" + "'", str86.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 281474993487878L + "'", long90.equals(281474993487878L));
        org.junit.Assert.assertNotNull(element92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", !boolean95);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 281474993487878L + "'", long96.equals(281474993487878L));
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 6 + "'", int97.equals(6));
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", !boolean98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.lang.Long long4 = doubleList1.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream5 = doubleList1.parallelStream();
        boolean boolean7 = doubleList1.add((java.lang.Double) 0.0d);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) 10 };
        java.util.ArrayList<java.lang.Byte> byteList10 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList10, byteArray9);
        java.util.Spliterator<java.lang.Byte> byteSpliterator12 = byteList10.spliterator();
        boolean boolean13 = doubleList1.containsAll((java.util.Collection<java.lang.Byte>) byteList10);
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int21 = blob20.getOffset();
        boolean boolean22 = doubleList1.equals((java.lang.Object) blob20);
        org.ccsds.moims.mo.mal.structures.Element element23 = blob20.createElement();
        boolean boolean24 = blob20.isURLBased();
        blob20.detach();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265083L + "'", long4.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        try {
            java.lang.Boolean boolean12 = binaryDecoder9.decodeBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.Element element1 = eventCOMObject0.getBody();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        try {
            java.lang.Class<?> wildcardClass3 = identifier2.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(element1);
        org.junit.Assert.assertNull(identifier2);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType4 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType((int) ' ', (-2), (-11), (int) (short) 127);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UShort argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        java.lang.Long long8 = uOctet6.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList9 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int10 = uRIList9.getTypeShortForm();
        java.lang.Integer int11 = uRIList9.getTypeShortForm();
        java.lang.Object obj12 = uRIList9.clone();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        int int19 = uRIList9.lastIndexOf((java.lang.Object) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Duration duration20 = binaryDecoder18.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element21 = uOctet6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        byte[] byteArray22 = binaryDecoder18.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray23 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList24 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList24, uShortArray23);
        uShortList24.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element28 = uOctet27.createElement();
        int int29 = uShortList24.indexOf((java.lang.Object) element28);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.lang.Long[] longArray42 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList43 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList43, longArray42);
        java.lang.Object obj45 = longList43.clone();
        int int46 = strList33.indexOf((java.lang.Object) longList43);
        java.util.ListIterator<java.lang.String> strItor47 = strList33.listIterator();
        java.lang.Short[] shortArray51 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList52 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList52, shortArray51);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray59 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList60 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList60, uRIArray59);
        java.lang.Byte[] byteArray66 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList67 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList67, byteArray66);
        boolean boolean70 = byteList67.add((java.lang.Byte) (byte) 100);
        boolean boolean71 = uRIList60.containsAll((java.util.Collection<java.lang.Byte>) byteList67);
        boolean boolean72 = strList57.containsAll((java.util.Collection<java.lang.Byte>) byteList67);
        boolean boolean73 = shortList52.contains((java.lang.Object) byteList67);
        boolean boolean74 = strList33.removeAll((java.util.Collection<java.lang.Byte>) byteList67);
        boolean boolean75 = uShortList24.containsAll((java.util.Collection<java.lang.Byte>) byteList67);
        int int76 = byteList67.size();
        java.util.stream.Stream<java.lang.Byte> byteStream77 = byteList67.parallelStream();
        try {
            org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder78 = binaryDecoder18.createListDecoder((java.util.List) byteList67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(uShortArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertNotNull(uRIArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 5 + "'", int76 == 5);
        org.junit.Assert.assertNotNull(byteStream77);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = binaryDecoder5.decodeUOctet();
        try {
            java.lang.Integer int10 = binaryDecoder5.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uOctet9);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uLong1.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity5 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long6 = objectTypeHolderEntity5.getObjectType();
        boolean boolean7 = uLong1.equals((java.lang.Object) long6);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = uLong1.getServiceNumber();
        int int9 = uShort8.getValue();
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487879L + "'", long6.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger5 = binaryDecoder4.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uInteger5.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList7 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.ShortList shortList8 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = shortList8.getAreaNumber();
        java.lang.Object[] objArray10 = shortList8.toArray();
        boolean boolean11 = floatList7.remove((java.lang.Object) shortList8);
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.lang.Object obj22 = longList20.clone();
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList25 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList25, booleanArray24);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        boolean boolean45 = byteList32.addAll((java.util.Collection<java.lang.Byte>) byteList41);
        java.lang.Object obj46 = byteList32.clone();
        boolean boolean47 = booleanList25.contains((java.lang.Object) byteList32);
        boolean boolean48 = longList20.remove((java.lang.Object) boolean47);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray54 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList55 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList55, uRIArray54);
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList62, byteArray61);
        boolean boolean65 = byteList62.add((java.lang.Byte) (byte) 100);
        boolean boolean66 = uRIList55.containsAll((java.util.Collection<java.lang.Byte>) byteList62);
        boolean boolean67 = strList52.containsAll((java.util.Collection<java.lang.Byte>) byteList62);
        int int68 = longList20.lastIndexOf((java.lang.Object) boolean67);
        java.lang.Object obj69 = longList20.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList70 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int71 = uRIList70.getTypeShortForm();
        java.lang.Integer int72 = uRIList70.getTypeShortForm();
        java.lang.Object obj73 = uRIList70.clone();
        byte[] byteArray77 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder78 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray77);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray77);
        int int80 = uRIList70.lastIndexOf((java.lang.Object) binaryDecoder79);
        boolean boolean81 = longList20.remove((java.lang.Object) uRIList70);
        boolean boolean83 = longList20.add((java.lang.Long) 281475010265078L);
        boolean boolean84 = shortList8.remove((java.lang.Object) 281475010265078L);
        java.lang.Object[] objArray85 = shortList8.toArray();
        boolean boolean86 = uInteger5.equals((java.lang.Object) shortList8);
        boolean boolean87 = shortList8.isEmpty();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(uRIArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-18) + "'", int71.equals((-18)));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-18) + "'", int72.equals((-18)));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeDuration();
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob13 = binaryDecoder9.decodeBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.Time time7 = new org.ccsds.moims.mo.mal.structures.Time((long) (-5));
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList8 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element9 = booleanList8.createElement();
        int int11 = booleanList8.lastIndexOf((java.lang.Object) 281474993487878L);
        boolean boolean12 = time7.equals((java.lang.Object) booleanList8);
        java.lang.Integer int13 = time7.getTypeShortForm();
        try {
            binaryEncoder1.encodeTime(time7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 16 + "'", int13.equals(16));
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = duration1.getAreaVersion();
        java.lang.String str4 = duration1.toString();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) 100);
        byte byte10 = binaryEncoder6.internalEncodeAttributeType((byte) -1);
        byte byte12 = binaryEncoder6.internalEncodeAttributeType((byte) 1);
        try {
            duration1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "0.0" + "'", str4.equals("0.0"));
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 100 + "'", byte8 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -1 + "'", byte10 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 1 + "'", byte12 == (byte) 1);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        int int14 = doubleList1.indexOf((java.lang.Object) false);
        java.util.stream.Stream<java.lang.Double> doubleStream15 = doubleList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = doubleList1.getServiceNumber();
        java.io.OutputStream outputStream17 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder18 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream17);
        byte byte20 = binaryEncoder18.internalEncodeAttributeType((byte) 100);
        byte byte22 = binaryEncoder18.internalEncodeAttributeType((byte) -1);
        byte byte24 = binaryEncoder18.internalEncodeAttributeType((byte) 1);
        try {
            doubleList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(doubleStream15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertTrue("'" + byte20 + "' != '" + (byte) 100 + "'", byte20 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte22 + "' != '" + (byte) -1 + "'", byte22 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte24 + "' != '" + (byte) 1 + "'", byte24 == (byte) 1);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str1 = identifier0.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = identifier0.getAreaNumber();
        java.lang.Long long3 = identifier0.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = identifier0.getAreaVersion();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) 100);
        try {
            identifier0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487878L + "'", long3.equals(281474993487878L));
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 100 + "'", byte8 == (byte) 100);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
        java.util.ListIterator<java.lang.Short> shortItor5 = shortList3.listIterator();
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        org.ccsds.moims.mo.mal.structures.OctetList octetList14 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = octetList14.getServiceNumber();
        boolean boolean16 = doubleList12.containsAll((java.util.Collection<java.lang.Byte>) octetList14);
        boolean boolean17 = shortList3.retainAll((java.util.Collection<java.lang.Byte>) octetList14);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = octetList14.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        byte[] byteArray48 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder49 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray48);
        java.lang.Double double50 = binaryDecoder49.decodeNullableDouble();
        byte[] byteArray51 = binaryDecoder49.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob54 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray51, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet55 = blob54.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList56 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int58 = floatList56.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int59 = floatList56.getTypeShortForm();
        boolean boolean60 = floatList56.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator61 = floatList56.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort62 = floatList56.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort63 = floatList56.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort64 = floatList56.getServiceNumber();
        byte[] byteArray68 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder69 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray68);
        org.ccsds.moims.mo.mal.structures.Element element70 = uShort64.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder69);
        org.ccsds.moims.mo.mal.structures.Element element71 = uOctet55.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder69);
        try {
            org.ccsds.moims.mo.mal.structures.Element element72 = octetList14.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(shortItor5);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals((double) double50, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertNotNull(uOctet55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-4) + "'", int59.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(floatSpliterator61);
        org.junit.Assert.assertNotNull(uShort62);
        org.junit.Assert.assertNotNull(uShort63);
        org.junit.Assert.assertNotNull(uShort64);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertNotNull(element71);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) 16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = uRIList58.getAreaNumber();
        boolean boolean71 = uRIList58.isEmpty();
        byte[] byteArray75 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder76 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray75);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime77 = binaryDecoder76.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI78 = binaryDecoder76.decodeURI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = uRI78.getAreaVersion();
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList89 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList89, intArray88);
        int int92 = intList89.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream93 = intList89.stream();
        java.util.Iterator<java.lang.Integer> intItor94 = intList89.iterator();
        boolean boolean95 = uRI78.equals((java.lang.Object) intItor94);
        boolean boolean96 = uRIList58.add(uRI78);
        uRIList58.clear();
        java.lang.Object obj98 = uRIList58.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort99 = uRIList58.getAreaNumber();
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertNotNull(fineTime77);
        org.junit.Assert.assertNotNull(uRI78);
        org.junit.Assert.assertNotNull(uOctet79);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(intStream93);
        org.junit.Assert.assertNotNull(intItor94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", !boolean95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(uShort99);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList3 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList3, intArray2);
        int int6 = intList3.lastIndexOf((java.lang.Object) 0.0f);
        java.util.ListIterator<java.lang.Integer> intItor8 = intList3.listIterator(0);
        boolean boolean9 = time0.equals((java.lang.Object) intList3);
        org.ccsds.moims.mo.mal.structures.URIList uRIList10 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int11 = uRIList10.getTypeShortForm();
        java.lang.Integer int12 = uRIList10.getTypeShortForm();
        java.lang.Object obj13 = uRIList10.clone();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        int int20 = uRIList10.lastIndexOf((java.lang.Object) binaryDecoder19);
        java.lang.Boolean boolean21 = binaryDecoder19.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Element element22 = time0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder19);
        try {
            java.lang.Integer int23 = binaryDecoder19.decodeNullableInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(intItor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-18) + "'", int12.equals((-18)));
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21.equals(true));
        org.junit.Assert.assertNotNull(element22);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        org.ccsds.moims.mo.mal.structures.Union union3 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = union3.getAreaVersion();
        java.lang.String str5 = union3.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = union3.getAreaNumber();
        boolean boolean7 = uShortList1.add(uShort6);
        java.math.BigInteger bigInteger9 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong10 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger9);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = uLong10.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity14 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long15 = objectTypeHolderEntity14.getObjectType();
        boolean boolean16 = uLong10.equals((java.lang.Object) long15);
        java.lang.Integer int17 = uLong10.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = uLong10.getAreaNumber();
        try {
            uShortList1.add((int) (short) 100, uShort18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "true" + "'", str5.equals("true"));
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(bigInteger9);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487879L + "'", long15.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 14 + "'", int17.equals(14));
        org.junit.Assert.assertNotNull(uShort18);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        java.lang.String str10 = blob9.getURL();
        int int11 = blob9.getLength();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime6 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        org.ccsds.moims.mo.mal.structures.Element element14 = blob7.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = fineTime6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(fineTime6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(element14);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeLong((java.lang.Long) 281474993487884L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.Blob blob5 = new org.ccsds.moims.mo.mal.structures.Blob("18446744073709551615".getBytes());
        int int6 = blob5.getLength();
        try {
            binaryEncoder1.encodeNullableBlob(blob5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 20 + "'", int6 == 20);
    }
}
