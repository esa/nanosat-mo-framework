package esa.nmf.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        java.util.ListIterator<java.lang.Short> shortItor6 = shortList4.listIterator();
        shortList4.ensureCapacity(7);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI11 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject9.setSourceURI(uRI11);
        org.ccsds.moims.mo.mal.structures.URI uRI14 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element15 = uRI14.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray16 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI11, uRI14 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList17 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList17, uRIArray16);
        java.lang.Double[] doubleArray24 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList25 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList25, doubleArray24);
        org.ccsds.moims.mo.mal.structures.OctetList octetList27 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = octetList27.getServiceNumber();
        boolean boolean29 = doubleList25.containsAll((java.util.Collection<java.lang.Byte>) octetList27);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray30 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList31, uShortArray30);
        uShortList31.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element35 = uOctet34.createElement();
        int int36 = uShortList31.indexOf((java.lang.Object) element35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.lang.Long[] longArray49 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList50 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList50, longArray49);
        java.lang.Object obj52 = longList50.clone();
        int int53 = strList40.indexOf((java.lang.Object) longList50);
        java.util.ListIterator<java.lang.String> strItor54 = strList40.listIterator();
        java.lang.Short[] shortArray58 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList59 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList59, shortArray58);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray66 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList67 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList67, uRIArray66);
        java.lang.Byte[] byteArray73 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList74 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList74, byteArray73);
        boolean boolean77 = byteList74.add((java.lang.Byte) (byte) 100);
        boolean boolean78 = uRIList67.containsAll((java.util.Collection<java.lang.Byte>) byteList74);
        boolean boolean79 = strList64.containsAll((java.util.Collection<java.lang.Byte>) byteList74);
        boolean boolean80 = shortList59.contains((java.lang.Object) byteList74);
        boolean boolean81 = strList40.removeAll((java.util.Collection<java.lang.Byte>) byteList74);
        boolean boolean82 = uShortList31.containsAll((java.util.Collection<java.lang.Byte>) byteList74);
        int int83 = byteList74.size();
        boolean boolean84 = octetList27.containsAll((java.util.Collection<java.lang.Byte>) byteList74);
        boolean boolean85 = uRIList17.retainAll((java.util.Collection<java.lang.Byte>) octetList27);
        org.ccsds.moims.mo.mal.structures.UShort uShort86 = octetList27.getServiceNumber();
        java.util.stream.Stream<java.lang.Byte> byteStream87 = octetList27.stream();
        boolean boolean88 = shortList4.retainAll((java.util.Collection<java.lang.Byte>) octetList27);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(shortItor6);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(uRIArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(uShortArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertNotNull(uRIArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 5 + "'", int83 == 5);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
        org.junit.Assert.assertNotNull(uShort86);
        org.junit.Assert.assertNotNull(byteStream87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeBoolean((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-1), "[-1.0]");
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeInteger((java.lang.Integer) (-9));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("[-1, -1, -1, -1, 100]");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uRI1.getAreaVersion();
        java.lang.String str3 = uRI1.getValue();
        org.ccsds.moims.mo.mal.structures.Element element4 = uRI1.createElement();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        try {
            uRI1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[-1, -1, -1, -1, 100]" + "'", str3.equals("[-1, -1, -1, -1, 100]"));
        org.junit.Assert.assertNotNull(element4);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        int int11 = uRIList0.size();
        java.lang.Integer int12 = uRIList0.getTypeShortForm();
        int int14 = uRIList0.lastIndexOf((java.lang.Object) "");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray15 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList16 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList16, uShortArray15);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream18 = uShortList16.parallelStream();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream19 = uShortList16.stream();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray20 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList21 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList21, uRIArray20);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        boolean boolean32 = uRIList21.containsAll((java.util.Collection<java.lang.Byte>) byteList28);
        int int34 = uRIList21.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
        boolean boolean43 = byteList40.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList49 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList49, byteArray48);
        boolean boolean52 = byteList49.add((java.lang.Byte) (byte) 100);
        boolean boolean53 = byteList40.addAll((java.util.Collection<java.lang.Byte>) byteList49);
        int int55 = byteList49.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean56 = uRIList21.removeAll((java.util.Collection<java.lang.Byte>) byteList49);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.lang.Long[] longArray69 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList70 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList70, longArray69);
        java.lang.Object obj72 = longList70.clone();
        int int73 = strList60.indexOf((java.lang.Object) longList70);
        java.util.stream.Stream<java.lang.Long> longStream74 = longList70.parallelStream();
        boolean boolean75 = byteList49.remove((java.lang.Object) longList70);
        boolean boolean76 = uShortList16.retainAll((java.util.Collection<java.lang.Byte>) byteList49);
        boolean boolean77 = uRIList0.contains((java.lang.Object) uShortList16);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-18) + "'", int12.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(uShortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(uShortStream18);
        org.junit.Assert.assertNotNull(uShortStream19);
        org.junit.Assert.assertNotNull(uRIArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(longStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList31 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList31, byteArray30);
        boolean boolean34 = byteList31.add((java.lang.Byte) (byte) 100);
        boolean boolean35 = byteList22.addAll((java.util.Collection<java.lang.Byte>) byteList31);
        java.lang.Object obj36 = byteList22.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream37 = byteList22.stream();
        boolean boolean38 = strList3.retainAll((java.util.Collection<java.lang.Byte>) byteList22);
        org.ccsds.moims.mo.mal.structures.OctetList octetList39 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean40 = strList3.containsAll((java.util.Collection<java.lang.Byte>) octetList39);
        octetList39.trimToSize();
        byte[] byteArray45 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder46 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray45);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder47 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray45);
        org.ccsds.moims.mo.mal.structures.Blob blob48 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray45);
        org.ccsds.moims.mo.mal.structures.Blob blob51 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray45, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder52 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray45);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder53 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray45);
        java.lang.Float float54 = binaryDecoder53.decodeNullableFloat();
        try {
            org.ccsds.moims.mo.mal.structures.Element element55 = octetList39.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(byteStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals((float) float54, Float.NaN, 0);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = union1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.OctetList octetList4 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 0);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity7 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((int) (short) 1, "[false]");
        int int8 = networkHolderEntity7.getId();
        int int9 = octetList4.lastIndexOf((java.lang.Object) networkHolderEntity7);
        boolean boolean10 = union1.equals((java.lang.Object) octetList4);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList((int) '4');
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray2 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList3, uRIArray2);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator5 = uRIList3.spliterator();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList7 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray8 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList9, uRIArray8);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        boolean boolean19 = byteList16.add((java.lang.Byte) (byte) 100);
        boolean boolean20 = uRIList9.containsAll((java.util.Collection<java.lang.Byte>) byteList16);
        int int22 = uRIList9.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = byteList28.addAll((java.util.Collection<java.lang.Byte>) byteList37);
        int int43 = byteList37.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean44 = uRIList9.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        int int45 = uShortList7.indexOf((java.lang.Object) uRIList9);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator46 = uRIList9.spliterator();
        java.util.Spliterator[] spliteratorArray48 = new java.util.Spliterator[2];
        @SuppressWarnings("unchecked") java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI>[] uRISpliteratorArray49 = (java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI>[]) spliteratorArray48;
        uRISpliteratorArray49[0] = uRISpliterator5;
        uRISpliteratorArray49[1] = uRISpliterator46;
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI>[] uRISpliteratorArray54 = longList1.toArray(uRISpliteratorArray49);
        java.lang.Integer int55 = longList1.getTypeShortForm();
        byte[] byteArray59 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder60 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray59);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder61 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray59);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger62 = binaryDecoder61.decodeUInteger();
        boolean boolean63 = longList1.contains((java.lang.Object) binaryDecoder61);
        org.ccsds.moims.mo.mal.structures.Duration duration64 = binaryDecoder61.decodeNullableDuration();
        org.junit.Assert.assertNotNull(uRIArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(uRISpliterator5);
        org.junit.Assert.assertNotNull(uRIArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(uRISpliterator46);
        org.junit.Assert.assertNotNull(spliteratorArray48);
        org.junit.Assert.assertNotNull(uRISpliteratorArray49);
        org.junit.Assert.assertNotNull(uRISpliteratorArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-13) + "'", int55.equals((-13)));
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(uInteger62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertNotNull(duration64);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableString("2.47E-322");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        boolean boolean41 = strList35.isEmpty();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList43 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort44 = doubleList43.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort45 = doubleList43.getAreaNumber();
        java.lang.Integer int46 = doubleList43.getTypeShortForm();
        java.util.Spliterator<java.lang.Double> doubleSpliterator47 = doubleList43.spliterator();
        java.util.stream.Stream<java.lang.Double> doubleStream48 = doubleList43.parallelStream();
        doubleList43.trimToSize();
        int int50 = strList35.indexOf((java.lang.Object) doubleList43);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(uShort44);
        org.junit.Assert.assertNotNull(uShort45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-5) + "'", int46.equals((-5)));
        org.junit.Assert.assertNotNull(doubleSpliterator47);
        org.junit.Assert.assertNotNull(doubleStream48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        org.ccsds.moims.mo.mal.structures.Time time9 = binaryDecoder7.decodeNullableTime();
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime10 = binaryDecoder7.decodeNullableFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(time9);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList((int) '4');
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray2 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList3, uRIArray2);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator5 = uRIList3.spliterator();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList7 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray8 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList9, uRIArray8);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        boolean boolean19 = byteList16.add((java.lang.Byte) (byte) 100);
        boolean boolean20 = uRIList9.containsAll((java.util.Collection<java.lang.Byte>) byteList16);
        int int22 = uRIList9.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = byteList28.addAll((java.util.Collection<java.lang.Byte>) byteList37);
        int int43 = byteList37.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean44 = uRIList9.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        int int45 = uShortList7.indexOf((java.lang.Object) uRIList9);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator46 = uRIList9.spliterator();
        java.util.Spliterator[] spliteratorArray48 = new java.util.Spliterator[2];
        @SuppressWarnings("unchecked") java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI>[] uRISpliteratorArray49 = (java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI>[]) spliteratorArray48;
        uRISpliteratorArray49[0] = uRISpliterator5;
        uRISpliteratorArray49[1] = uRISpliterator46;
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI>[] uRISpliteratorArray54 = longList1.toArray(uRISpliteratorArray49);
        java.util.ListIterator<java.lang.Long> longItor55 = longList1.listIterator();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject56 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject56.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType61 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription62 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType61);
        eventCOMObject56.setObjType(objectType61);
        java.lang.Long long64 = eventCOMObject56.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject65 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject65.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType70 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription71 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType70);
        eventCOMObject65.setObjType(objectType70);
        eventCOMObject56.setObjType(objectType70);
        org.ccsds.moims.mo.com.structures.ObjectId objectId74 = eventCOMObject56.getObjectId();
        int int75 = longList1.indexOf((java.lang.Object) objectId74);
        org.junit.Assert.assertNotNull(uRIArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(uRISpliterator5);
        org.junit.Assert.assertNotNull(uRIArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(uRISpliterator46);
        org.junit.Assert.assertNotNull(spliteratorArray48);
        org.junit.Assert.assertNotNull(uRISpliteratorArray49);
        org.junit.Assert.assertNotNull(uRISpliteratorArray54);
        org.junit.Assert.assertNotNull(longItor55);
        org.junit.Assert.assertNotNull(objectType61);
        org.junit.Assert.assertNotNull(subscription62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 4294967295L + "'", long64.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType70);
        org.junit.Assert.assertNotNull(subscription71);
        org.junit.Assert.assertNotNull(objectId74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        shortList0.ensureCapacity((int) (byte) 0);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity8 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str9 = networkHolderEntity8.getNetworkString();
        int int10 = shortList0.lastIndexOf((java.lang.Object) networkHolderEntity8);
        boolean boolean12 = shortList0.add((java.lang.Short) (short) 255);
        java.lang.Long long13 = shortList0.getShortForm();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[0, 10]" + "'", str9.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 281475010265079L + "'", long13.equals(281475010265079L));
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter0 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = archiveSyncGenAdapter0.getLastKnownIndex();
        java.util.ArrayList<byte[]> byteArrayList2 = archiveSyncGenAdapter0.getReceivedChunks();
        boolean boolean3 = archiveSyncGenAdapter0.transactionCompleted();
        org.junit.Assert.assertNotNull(uInteger1);
        org.junit.Assert.assertNotNull(byteArrayList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Integer int12 = binaryDecoder9.decodeNullableInteger();
        try {
            java.lang.Short short13 = binaryDecoder9.decodeShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12.equals(0));
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject12.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType17 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription18 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType17);
        eventCOMObject12.setObjType(objectType17);
        eventCOMObject3.setObjType(objectType17);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("18446744073709551615", objectType17);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList22 = fastObjectType1.getObjectTypeIds(objectType17);
        boolean boolean24 = fastObjectType1.exists((java.lang.Long) 281474993487874L);
        boolean boolean26 = fastObjectType1.exists((java.lang.Long) 1558616178307L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType31 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(18, (int) 'a', (int) ' ', 8);
        try {
            org.ccsds.moims.mo.mal.structures.IntegerList integerList32 = fastObjectType1.getObjectTypeIds(objectType31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(integerList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(objectType31);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.Object obj20 = doubleList2.clone();
        int int21 = doubleList2.size();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeNullableOctet((java.lang.Byte) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, (int) (short) 100);
        try {
            java.lang.Long long17 = binaryDecoder15.decodeAbstractElementType(true);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = fineTime0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element2 = fineTime0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = fineTime0.getAreaNumber();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Blob blob10 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray7);
        org.ccsds.moims.mo.mal.structures.Blob blob13 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray7, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        java.lang.Float float16 = binaryDecoder15.decodeNullableFloat();
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = fineTime0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals((float) float16, Float.NaN, 0);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        boolean boolean3 = fastObjectType1.exists((java.lang.Long) 1558616177410L);
        boolean boolean5 = fastObjectType1.exists((java.lang.Long) 281474993487874L);
        boolean boolean7 = fastObjectType1.exists((java.lang.Integer) 9);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject8.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType11 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject8.setObjType(objectType11);
        try {
            java.lang.Integer int13 = fastObjectType1.getObjectTypeId(objectType11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNull(objectId9);
        org.junit.Assert.assertNotNull(objectType11);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        java.lang.Long long8 = uOctet6.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList9 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int10 = uRIList9.getTypeShortForm();
        java.lang.Integer int11 = uRIList9.getTypeShortForm();
        java.lang.Object obj12 = uRIList9.clone();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        int int19 = uRIList9.lastIndexOf((java.lang.Object) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Duration duration20 = binaryDecoder18.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element21 = uOctet6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        byte[] byteArray22 = binaryDecoder18.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob25 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray22, (int) (short) -1, 50);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(byteArray22);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.Duration duration5 = new org.ccsds.moims.mo.mal.structures.Duration((double) 10L);
        try {
            binaryEncoder1.encodeDuration(duration5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.ccsds.moims.mo.mal.structures.Identifier identifier1 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.Long long2 = identifier1.getShortForm();
        java.lang.String str3 = identifier1.getValue();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = identifier1.getAreaVersion();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        try {
            identifier1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487878L + "'", long2.equals(281474993487878L));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[hi!, ]" + "'", str3.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(uOctet4);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        java.util.stream.Stream<java.lang.Double> doubleStream2 = doubleList1.parallelStream();
        boolean boolean4 = doubleList1.add((java.lang.Double) 10.0d);
        org.ccsds.moims.mo.mal.structures.Element element5 = doubleList1.createElement();
        java.lang.Long[] longArray13 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList14 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList14, longArray13);
        java.lang.Object obj16 = longList14.clone();
        java.lang.Boolean[] booleanArray18 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList19 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList19, booleanArray18);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        boolean boolean38 = byteList35.add((java.lang.Byte) (byte) 100);
        boolean boolean39 = byteList26.addAll((java.util.Collection<java.lang.Byte>) byteList35);
        java.lang.Object obj40 = byteList26.clone();
        boolean boolean41 = booleanList19.contains((java.lang.Object) byteList26);
        boolean boolean42 = longList14.remove((java.lang.Object) boolean41);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        int int52 = longList14.lastIndexOf((java.lang.Object) byteList48);
        java.util.ListIterator<java.lang.Long> longItor53 = longList14.listIterator();
        org.ccsds.moims.mo.mal.structures.Time time55 = new org.ccsds.moims.mo.mal.structures.Time((long) (-5));
        int int56 = longList14.indexOf((java.lang.Object) time55);
        boolean boolean57 = doubleList1.equals((java.lang.Object) time55);
        java.io.OutputStream outputStream58 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder59 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream58);
        byte byte61 = binaryEncoder59.internalEncodeAttributeType((byte) 100);
        byte byte63 = binaryEncoder59.internalEncodeAttributeType((byte) -1);
        byte byte65 = binaryEncoder59.internalEncodeAttributeType((byte) 100);
        try {
            time55.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(doubleStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(longItor53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + byte61 + "' != '" + (byte) 100 + "'", byte61 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte63 + "' != '" + (byte) -1 + "'", byte63 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte65 + "' != '" + (byte) 100 + "'", byte65 == (byte) 100);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        try {
            java.lang.Integer int13 = binaryDecoder9.decodeInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity2 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        int int3 = objectTypeHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-11) + "'", int3 == (-11));
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        java.lang.Integer int6 = floatList0.getTypeShortForm();
        boolean boolean7 = floatList0.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = floatList0.getAreaVersion();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI11 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject9.setSourceURI(uRI11);
        org.ccsds.moims.mo.mal.structures.URI uRI14 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element15 = uRI14.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray16 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI11, uRI14 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList17 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList17, uRIArray16);
        java.lang.Double[] doubleArray24 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList25 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList25, doubleArray24);
        org.ccsds.moims.mo.mal.structures.OctetList octetList27 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = octetList27.getServiceNumber();
        boolean boolean29 = doubleList25.containsAll((java.util.Collection<java.lang.Byte>) octetList27);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray30 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList31, uShortArray30);
        uShortList31.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element35 = uOctet34.createElement();
        int int36 = uShortList31.indexOf((java.lang.Object) element35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.lang.Long[] longArray49 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList50 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList50, longArray49);
        java.lang.Object obj52 = longList50.clone();
        int int53 = strList40.indexOf((java.lang.Object) longList50);
        java.util.ListIterator<java.lang.String> strItor54 = strList40.listIterator();
        java.lang.Short[] shortArray58 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList59 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList59, shortArray58);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray66 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList67 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList67, uRIArray66);
        java.lang.Byte[] byteArray73 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList74 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList74, byteArray73);
        boolean boolean77 = byteList74.add((java.lang.Byte) (byte) 100);
        boolean boolean78 = uRIList67.containsAll((java.util.Collection<java.lang.Byte>) byteList74);
        boolean boolean79 = strList64.containsAll((java.util.Collection<java.lang.Byte>) byteList74);
        boolean boolean80 = shortList59.contains((java.lang.Object) byteList74);
        boolean boolean81 = strList40.removeAll((java.util.Collection<java.lang.Byte>) byteList74);
        boolean boolean82 = uShortList31.containsAll((java.util.Collection<java.lang.Byte>) byteList74);
        int int83 = byteList74.size();
        boolean boolean84 = octetList27.containsAll((java.util.Collection<java.lang.Byte>) byteList74);
        boolean boolean85 = uRIList17.retainAll((java.util.Collection<java.lang.Byte>) octetList27);
        int int86 = octetList27.size();
        java.lang.Integer int87 = octetList27.getTypeShortForm();
        octetList27.clear();
        java.lang.Integer int89 = octetList27.getTypeShortForm();
        boolean boolean90 = floatList0.retainAll((java.util.Collection<java.lang.Byte>) octetList27);
        byte[] byteArray94 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder95 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray94);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder97 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray94, (int) (byte) -1);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder98 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray94);
        try {
            org.ccsds.moims.mo.mal.structures.Element element99 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder98);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-4) + "'", int6.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(uRIArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(uShortArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertNotNull(uRIArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 5 + "'", int83 == 5);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-7) + "'", int87.equals((-7)));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-7) + "'", int89.equals((-7)));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertNotNull(byteArray94);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity2 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity(5, (java.lang.Long) 281474993487887L);
        java.lang.Long long3 = objectTypeHolderEntity2.getObjectType();
        int int4 = objectTypeHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487887L + "'", long3.equals(281474993487887L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int1 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element2 = time0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = time0.getServiceNumber();
        java.lang.Object obj4 = null;
        boolean boolean5 = time0.equals(obj4);
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int7 = uRIList6.getTypeShortForm();
        java.lang.Integer int8 = uRIList6.getTypeShortForm();
        java.lang.Object obj9 = uRIList6.clone();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        int int16 = uRIList6.lastIndexOf((java.lang.Object) binaryDecoder15);
        java.lang.Boolean boolean17 = binaryDecoder15.decodeBoolean();
        byte[] byteArray18 = binaryDecoder15.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Duration duration19 = binaryDecoder15.decodeDuration();
        try {
            org.ccsds.moims.mo.mal.structures.Element element20 = time0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 16 + "'", int1.equals(16));
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-18) + "'", int7.equals((-18)));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17.equals(true));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uShortList1.getAreaVersion();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        byte byte6 = binaryEncoder4.internalEncodeAttributeType((byte) 100);
        byte byte8 = binaryEncoder4.internalEncodeAttributeType((byte) -1);
        try {
            uShortList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -1 + "'", byte8 == (byte) -1);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean1 = blob0.isURLBased();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob8 = binaryDecoder6.decodeNullableBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", !boolean1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) (short) 1);
        long long2 = archiveSyncGenAdapter1.noUpdatesReceivedForThisDuration();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger3 = archiveSyncGenAdapter1.getLastKnownIndex();
        java.lang.String str4 = uInteger3.toString();
// flaky:         org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1558616204108L + "'", long2 == 1558616204108L);
        org.junit.Assert.assertNotNull(uInteger3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "0" + "'", str4.equals("0"));
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray11 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList12, uRIArray11);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19, byteArray18);
        boolean boolean22 = byteList19.add((java.lang.Byte) (byte) 100);
        boolean boolean23 = uRIList12.containsAll((java.util.Collection<java.lang.Byte>) byteList19);
        boolean boolean24 = strList9.containsAll((java.util.Collection<java.lang.Byte>) byteList19);
        boolean boolean25 = shortList4.contains((java.lang.Object) byteList19);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = uRIList27.containsAll((java.util.Collection<java.lang.Byte>) byteList34);
        boolean boolean39 = byteList34.isEmpty();
        boolean boolean40 = shortList4.containsAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList43 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList43, doubleArray42);
        java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList48 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList48, shortArray47);
        java.util.ListIterator<java.lang.Short> shortItor50 = shortList48.listIterator();
        int int51 = doubleList43.indexOf((java.lang.Object) shortList48);
        doubleList43.ensureCapacity((-1));
        java.lang.Double[] doubleArray55 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList56 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList56, doubleArray55);
        java.lang.Short[] shortArray60 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList61 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList61, shortArray60);
        java.util.ListIterator<java.lang.Short> shortItor63 = shortList61.listIterator();
        int int64 = doubleList56.indexOf((java.lang.Object) shortList61);
        int int65 = doubleList43.lastIndexOf((java.lang.Object) shortList61);
        esa.mo.com.impl.sync.Dictionary dictionary66 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean68 = dictionary66.exists((java.lang.Integer) 16);
        java.lang.Integer int70 = dictionary66.getWordId("");
        int int71 = doubleList43.lastIndexOf((java.lang.Object) dictionary66);
        boolean boolean73 = dictionary66.exists((java.lang.Integer) 32);
        boolean boolean74 = shortList4.equals((java.lang.Object) boolean73);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(uRIArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(shortItor50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertNotNull(shortItor63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70.equals(1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        java.math.BigInteger bigInteger56 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong57 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger56);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = uLong57.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity61 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long62 = objectTypeHolderEntity61.getObjectType();
        boolean boolean63 = uLong57.equals((java.lang.Object) long62);
        boolean boolean64 = booleanList10.remove((java.lang.Object) uLong57);
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = uLong57.getAreaNumber();
        java.lang.Integer int66 = uLong57.getTypeShortForm();
        java.io.OutputStream outputStream67 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder68 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream67);
        byte byte70 = binaryEncoder68.internalEncodeAttributeType((byte) 100);
        byte byte72 = binaryEncoder68.internalEncodeAttributeType((byte) -1);
        try {
            uLong57.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 281474993487879L + "'", long62.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 14 + "'", int66.equals(14));
        org.junit.Assert.assertTrue("'" + byte70 + "' != '" + (byte) 100 + "'", byte70 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte72 + "' != '" + (byte) -1 + "'", byte72 == (byte) -1);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = fineTime0.getServiceNumber();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Double double7 = binaryDecoder6.decodeNullableDouble();
        byte[] byteArray8 = binaryDecoder6.getRemainingEncodedData();
        boolean boolean9 = fineTime0.equals((java.lang.Object) byteArray8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = fineTime0.getAreaVersion();
        long long11 = fineTime0.getValue();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = fineTime0.getAreaVersion();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals((double) double7, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(uOctet12);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl3 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl4 = cOMServicesConsumer0.getEventService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl5 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl6 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl7 = cOMServicesConsumer0.getArchiveService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl8 = cOMServicesConsumer0.getArchiveSyncService();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl3);
        org.junit.Assert.assertNull(eventConsumerServiceImpl4);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl5);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl6);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl7);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl8);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType1 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 1558616189251L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UOctet argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        eventCOMObject0.setObjType(objectType14);
        java.lang.Boolean boolean18 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType14);
        java.lang.Long long19 = esa.mo.com.impl.util.HelperCOM.generateSubKey(objectType14);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18.equals(true));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 281474993487885L + "'", long19.equals(281474993487885L));
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        boolean boolean3 = fastObjectType1.exists((java.lang.Long) 1558616177410L);
        boolean boolean5 = fastObjectType1.exists((java.lang.Long) 281474993487874L);
        boolean boolean7 = fastObjectType1.exists((java.lang.Integer) 9);
        org.ccsds.moims.mo.com.structures.ObjectType objectType13 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType((int) ' ', 65535, (int) '4', 100);
        org.ccsds.moims.mo.mal.structures.Subscription subscription14 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("18446744073709551615", objectType13);
        try {
            java.lang.Integer int15 = fastObjectType1.getObjectTypeId(objectType13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(objectType13);
        org.junit.Assert.assertNotNull(subscription14);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(65535);
        int int2 = longList1.size();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = longList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = longList1.getAreaVersion();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        java.lang.Integer int11 = binaryDecoder10.decodeInteger();
        int int13 = binaryDecoder10.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = binaryDecoder10.decodeUShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element15 = longList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11.equals(50));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(uShort14);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Time time13 = binaryDecoder9.decodeNullableTime();
        org.ccsds.moims.mo.mal.structures.StringList stringList15 = new org.ccsds.moims.mo.mal.structures.StringList(100);
        try {
            org.ccsds.moims.mo.mal.structures.Element element16 = binaryDecoder9.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) stringList15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12.equals((byte) -1));
        org.junit.Assert.assertNull(time13);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.FloatList floatList6 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element7 = floatList6.createElement();
        java.util.stream.Stream<java.lang.Float> floatStream8 = floatList6.parallelStream();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = floatList6.getAreaVersion();
        try {
            binaryEncoder1.encodeNullableUOctet(uOctet9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(floatStream8);
        org.junit.Assert.assertNotNull(uOctet9);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (-64), (-18));
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong14 = binaryDecoder13.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = stringList1.getServiceNumber();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId4 = eventCOMObject3.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = eventCOMObject3.getNetworkZone();
        boolean boolean6 = stringList1.remove((java.lang.Object) eventCOMObject3);
        java.util.ListIterator<java.lang.String> strItor7 = stringList1.listIterator();
        boolean boolean8 = stringList1.isEmpty();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNull(objectId4);
        org.junit.Assert.assertNull(identifier5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(strItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder5.decodeNullableUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder5.decodeUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uInteger9);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Short) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = union1.getAreaNumber();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        org.ccsds.moims.mo.mal.structures.URI uRI8 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element9 = uRI8.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI5, uRI8 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Double[] doubleArray18 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList19 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList19, doubleArray18);
        org.ccsds.moims.mo.mal.structures.OctetList octetList21 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = octetList21.getServiceNumber();
        boolean boolean23 = doubleList19.containsAll((java.util.Collection<java.lang.Byte>) octetList21);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray24 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25, uShortArray24);
        uShortList25.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet28 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element29 = uOctet28.createElement();
        int int30 = uShortList25.indexOf((java.lang.Object) element29);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.lang.Long[] longArray43 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList44 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList44, longArray43);
        java.lang.Object obj46 = longList44.clone();
        int int47 = strList34.indexOf((java.lang.Object) longList44);
        java.util.ListIterator<java.lang.String> strItor48 = strList34.listIterator();
        java.lang.Short[] shortArray52 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList53 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList53, shortArray52);
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray60 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList61 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList61, uRIArray60);
        java.lang.Byte[] byteArray67 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList68 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList68, byteArray67);
        boolean boolean71 = byteList68.add((java.lang.Byte) (byte) 100);
        boolean boolean72 = uRIList61.containsAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean73 = strList58.containsAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean74 = shortList53.contains((java.lang.Object) byteList68);
        boolean boolean75 = strList34.removeAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean76 = uShortList25.containsAll((java.util.Collection<java.lang.Byte>) byteList68);
        int int77 = byteList68.size();
        boolean boolean78 = octetList21.containsAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean79 = uRIList11.retainAll((java.util.Collection<java.lang.Byte>) octetList21);
        java.lang.Integer int80 = octetList21.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort81 = octetList21.getAreaNumber();
        java.util.Iterator<java.lang.Byte> byteItor82 = octetList21.iterator();
        java.util.ListIterator<java.lang.Byte> byteItor83 = octetList21.listIterator();
        boolean boolean84 = union1.equals((java.lang.Object) octetList21);
        try {
            java.lang.Long long85 = union1.getLongValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Short cannot be cast to java.lang.Long");
        } catch (java.lang.ClassCastException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uShortArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(uOctet28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(uRIArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-7) + "'", int80.equals((-7)));
        org.junit.Assert.assertNotNull(uShort81);
        org.junit.Assert.assertNotNull(byteItor82);
        org.junit.Assert.assertNotNull(byteItor83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("");
        boolean boolean4 = dictionary0.exists("127");
        dictionary0.defineWord((java.lang.Integer) (-7), "[-1, -1, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = blob12.getAreaNumber();
        byte[] byteArray14 = blob12.getValue();
        boolean boolean15 = blob12.isURLBased();
        blob12.detach();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = fineTime0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element2 = fineTime0.createElement();
        java.lang.String str3 = fineTime0.toString();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder5.internalEncodeAttributeType((byte) -1);
        try {
            fineTime0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0" + "'", str3.equals("0"));
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -1 + "'", byte9 == (byte) -1);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList((int) ' ');
        boolean boolean2 = integerList1.isEmpty();
        java.util.stream.Stream<java.lang.Integer> intStream3 = integerList1.parallelStream();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        java.lang.Integer int10 = binaryDecoder9.decodeInteger();
        java.lang.Double double11 = binaryDecoder9.decodeDouble();
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNotNull(intStream3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10.equals(50));
        org.junit.Assert.assertEquals((double) double11, Double.NaN, 0);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableBoolean((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong7 = binaryDecoder4.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.Element element1 = eventCOMObject0.getBody();
        java.lang.Long long2 = eventCOMObject0.getObjId();
        org.junit.Assert.assertNull(element1);
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList6 = eventCOMObject0.getDomain();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Element element8 = eventCOMObject0.getBody();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(identifierList6);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertNull(element8);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity2 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-7), (java.lang.Long) 281475010265081L);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.LongList longList8 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray9 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList10, uRIArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        boolean boolean21 = uRIList10.containsAll((java.util.Collection<java.lang.Byte>) byteList17);
        byteList17.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean25 = longList8.removeAll((java.util.Collection<java.lang.Byte>) byteList17);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet26 = longList8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = longList8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet28 = uOctet27.getAreaVersion();
        try {
            binaryEncoder1.encodeNullableUOctet(uOctet27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertNotNull(uRIArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uOctet26);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertNotNull(uOctet28);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId5 = eventCOMObject4.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType6 = eventCOMObject4.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject7 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI9 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject7.setSourceURI(uRI9);
        eventCOMObject4.setSourceURI(uRI9);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId13 = eventCOMObject12.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier14 = eventCOMObject12.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject15 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject15.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType20 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType20);
        eventCOMObject15.setObjType(objectType20);
        java.lang.Long long23 = eventCOMObject15.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId24 = eventCOMObject15.getObjectId();
        eventCOMObject12.setSource(objectId24);
        org.ccsds.moims.mo.mal.structures.Time time26 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int27 = time26.getTypeShortForm();
        eventCOMObject12.setTimestamp(time26);
        eventCOMObject4.setTimestamp(time26);
        org.ccsds.moims.mo.mal.structures.Identifier identifier30 = null;
        eventCOMObject4.setNetworkZone(identifier30);
        org.ccsds.moims.mo.mal.structures.URI uRI32 = eventCOMObject4.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject33 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId34 = eventCOMObject33.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier35 = eventCOMObject33.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject36 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject36.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType41 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription42 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType41);
        eventCOMObject36.setObjType(objectType41);
        java.lang.Long long44 = eventCOMObject36.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId45 = eventCOMObject36.getObjectId();
        eventCOMObject33.setSource(objectId45);
        org.ccsds.moims.mo.mal.structures.Time time47 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int48 = time47.getTypeShortForm();
        eventCOMObject33.setTimestamp(time47);
        long long50 = time47.getValue();
        eventCOMObject4.setTimestamp(time47);
        try {
            binaryEncoder1.encodeTime(time47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNull(objectId5);
        org.junit.Assert.assertNull(objectType6);
        org.junit.Assert.assertNull(objectId13);
        org.junit.Assert.assertNull(identifier14);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 4294967295L + "'", long23.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 16 + "'", int27.equals(16));
        org.junit.Assert.assertNotNull(uRI32);
        org.junit.Assert.assertNull(objectId34);
        org.junit.Assert.assertNull(identifier35);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertNotNull(subscription42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 4294967295L + "'", long44.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48.equals(16));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        int int14 = doubleList1.indexOf((java.lang.Object) false);
        java.util.stream.Stream<java.lang.Double> doubleStream15 = doubleList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = doubleList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList17 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = integerList17.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = integerList17.getAreaNumber();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = uShort19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.Element element26 = uShort16.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(doubleStream15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(uOctet18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element26);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Duration duration23 = binaryDecoder21.decodeDuration();
        int int24 = integerList1.lastIndexOf((java.lang.Object) binaryDecoder21);
        java.lang.String str25 = binaryDecoder21.decodeNullableString();
        org.ccsds.moims.mo.com.structures.ObjectType objectType28 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription29 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType28);
        try {
            org.ccsds.moims.mo.mal.structures.Element element30 = binaryDecoder21.decodeElement((org.ccsds.moims.mo.mal.structures.Element) subscription29);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(objectType28);
        org.junit.Assert.assertNotNull(subscription29);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str1 = identifier0.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = identifier0.getAreaNumber();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        byte byte6 = binaryEncoder4.internalEncodeAttributeType((byte) 100);
        byte byte8 = binaryEncoder4.internalEncodeAttributeType((byte) -1);
        byte byte10 = binaryEncoder4.internalEncodeAttributeType((byte) 1);
        try {
            identifier0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -1 + "'", byte8 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 1 + "'", byte10 == (byte) 1);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration7 = binaryDecoder5.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Long) 281474993487885L);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Integer int8 = binaryDecoder7.decodeInteger();
        int int10 = binaryDecoder7.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = binaryDecoder7.decodeUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = union1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8.equals(50));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(uOctet11);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        int int46 = longList8.lastIndexOf((java.lang.Object) byteList42);
        org.ccsds.moims.mo.mal.structures.OctetList octetList47 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = octetList47.getServiceNumber();
        boolean boolean49 = longList8.removeAll((java.util.Collection<java.lang.Byte>) octetList47);
        longList8.add(6, (java.lang.Long) 281475010265078L);
        longList8.trimToSize();
        org.ccsds.moims.mo.mal.structures.URIList uRIList54 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int55 = uRIList54.getTypeShortForm();
        java.lang.Integer int56 = uRIList54.getTypeShortForm();
        java.lang.Object obj57 = uRIList54.clone();
        byte[] byteArray61 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder62 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray61);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder63 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray61);
        int int64 = uRIList54.lastIndexOf((java.lang.Object) binaryDecoder63);
        org.ccsds.moims.mo.mal.structures.Time time65 = binaryDecoder63.decodeTime();
        java.lang.Long long66 = time65.getShortForm();
        java.lang.Integer int67 = time65.getTypeShortForm();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject68 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject68.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier71 = null;
        eventCOMObject68.setNetworkZone(identifier71);
        org.ccsds.moims.mo.mal.structures.URI uRI73 = eventCOMObject68.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList74 = eventCOMObject68.getDomain();
        org.ccsds.moims.mo.com.structures.ObjectId objectId75 = eventCOMObject68.getSource();
        org.ccsds.moims.mo.mal.structures.URI uRI77 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.Integer int78 = uRI77.getTypeShortForm();
        eventCOMObject68.setSourceURI(uRI77);
        boolean boolean80 = time65.equals((java.lang.Object) eventCOMObject68);
        boolean boolean81 = longList8.contains((java.lang.Object) boolean80);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-18) + "'", int55.equals((-18)));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-18) + "'", int56.equals((-18)));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(time65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 281474993487888L + "'", long66.equals(281474993487888L));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 16 + "'", int67.equals(16));
        org.junit.Assert.assertNull(uRI73);
        org.junit.Assert.assertNull(identifierList74);
        org.junit.Assert.assertNull(objectId75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 18 + "'", int78.equals(18));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 281474993487889L);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime7 = binaryDecoder6.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI8 = binaryDecoder6.decodeURI();
        try {
            org.ccsds.moims.mo.mal.structures.Element element9 = duration1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(fineTime7);
        org.junit.Assert.assertNotNull(uRI8);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType2 = eventCOMObject0.getObjType();
        org.ccsds.moims.mo.mal.structures.URI uRI3 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList4 = eventCOMObject0.getDomain();
        org.ccsds.moims.mo.mal.structures.Time time5 = eventCOMObject0.getTimestamp();
        org.ccsds.moims.mo.com.structures.ObjectId objectId6 = eventCOMObject0.getObjectId();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(objectType2);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNull(identifierList4);
        org.junit.Assert.assertNull(time5);
        org.junit.Assert.assertNotNull(objectId6);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = octetList0.getAreaVersion();
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) 100);
        byte byte7 = binaryEncoder3.internalEncodeAttributeType((byte) -1);
        byte byte9 = binaryEncoder3.internalEncodeAttributeType((byte) 1);
        try {
            uOctet1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 100 + "'", byte5 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 1 + "'", byte9 == (byte) 1);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("0");
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) 100);
        byte byte7 = binaryEncoder3.internalEncodeAttributeType((byte) 10);
        try {
            uRI1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 100 + "'", byte5 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 10 + "'", byte7 == (byte) 10);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        java.lang.Long long9 = binaryDecoder5.decodeLong();
        try {
            java.lang.Long long10 = binaryDecoder5.decodeLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-64L) + "'", long9.equals((-64L)));
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        double double12 = duration11.getValue();
        java.lang.Short[] shortArray16 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList17 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList17, shortArray16);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray24 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList25, uRIArray24);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        boolean boolean36 = uRIList25.containsAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean37 = strList22.containsAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean38 = shortList17.contains((java.lang.Object) byteList32);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray39 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList40 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList40, uRIArray39);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        boolean boolean51 = uRIList40.containsAll((java.util.Collection<java.lang.Byte>) byteList47);
        boolean boolean52 = byteList47.isEmpty();
        boolean boolean53 = shortList17.containsAll((java.util.Collection<java.lang.Byte>) byteList47);
        java.lang.String str54 = shortList17.toString();
        boolean boolean55 = duration11.equals((java.lang.Object) str54);
        java.lang.String str56 = duration11.toString();
        java.lang.String str57 = duration11.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.47E-322d + "'", double12 == 2.47E-322d);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uRIArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(uRIArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "[-1, 0, 100]" + "'", str54.equals("[-1, 0, 100]"));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "2.47E-322" + "'", str56.equals("2.47E-322"));
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "2.47E-322" + "'", str57.equals("2.47E-322"));
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("[false]");
        dictionary0.resetFastNetwork();
        java.lang.Integer int5 = dictionary0.getWordId("[-1, -1, -1, -1, 100]");
        boolean boolean7 = dictionary0.exists((java.lang.Integer) (-10));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5.equals(1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((-10), "[true]");
        java.lang.String str3 = providerURIHolderEntity2.getProviderURIString();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[true]" + "'", str3.equals("[true]"));
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        java.lang.Double double13 = binaryDecoder12.decodeNullableDouble();
        byte[] byteArray14 = binaryDecoder12.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14);
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14);
        try {
            binaryEncoder1.encodeBlob(blob16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals((double) double13, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray14);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        java.lang.Integer int3 = integerList1.getTypeShortForm();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            integerList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-11) + "'", int3.equals((-11)));
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        org.ccsds.moims.mo.mal.structures.OctetList octetList12 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = octetList12.getServiceNumber();
        boolean boolean14 = doubleList10.containsAll((java.util.Collection<java.lang.Byte>) octetList12);
        org.ccsds.moims.mo.com.structures.ObjectType objectType17 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription18 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType17);
        java.lang.Boolean boolean19 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType17);
        int int20 = octetList12.lastIndexOf((java.lang.Object) boolean19);
        boolean boolean21 = shortList0.retainAll((java.util.Collection<java.lang.Byte>) octetList12);
        try {
            java.lang.Short short23 = shortList0.get(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19.equals(true));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        java.lang.Float[] floatArray2 = new java.lang.Float[] { 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList3 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList3, floatArray2);
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        int int15 = strList13.size();
        boolean boolean16 = doubleList8.equals((java.lang.Object) strList13);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.lang.Long[] longArray29 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList30 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList30, longArray29);
        java.lang.Object obj32 = longList30.clone();
        int int33 = strList20.indexOf((java.lang.Object) longList30);
        java.util.ListIterator<java.lang.String> strItor34 = strList20.listIterator();
        java.lang.Short[] shortArray38 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList39 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList39, shortArray38);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray46 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList47 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList47, uRIArray46);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        boolean boolean58 = uRIList47.containsAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean59 = strList44.containsAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean60 = shortList39.contains((java.lang.Object) byteList54);
        boolean boolean61 = strList20.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean62 = doubleList8.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean63 = floatList3.remove((java.lang.Object) byteList54);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList65 = new org.ccsds.moims.mo.mal.structures.UShortList(16);
        boolean boolean66 = floatList3.remove((java.lang.Object) uShortList65);
        byte[] byteArray70 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder71 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder72 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet73 = binaryDecoder72.decodeNullableUOctet();
        java.lang.Long long74 = uOctet73.getShortForm();
        short short75 = uOctet73.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort76 = uOctet73.getServiceNumber();
        java.lang.Integer int77 = uOctet73.getTypeShortForm();
        boolean boolean78 = uShortList65.equals((java.lang.Object) uOctet73);
        java.lang.Integer int79 = uShortList65.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort80 = uShortList65.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList81 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int82 = uRIList81.getTypeShortForm();
        java.lang.Integer int83 = uRIList81.getTypeShortForm();
        java.lang.Object obj84 = uRIList81.clone();
        byte[] byteArray88 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder89 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray88);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder90 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray88);
        int int91 = uRIList81.lastIndexOf((java.lang.Object) binaryDecoder90);
        java.lang.Boolean boolean92 = binaryDecoder90.decodeBoolean();
        java.lang.String str93 = binaryDecoder90.decodeString();
        boolean boolean94 = uShortList65.remove((java.lang.Object) binaryDecoder90);
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration95 = binaryDecoder90.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(uRIArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertNotNull(uOctet73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 281474993487880L + "'", long74.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short75 + "' != '" + (short) 127 + "'", short75 == (short) 127);
        org.junit.Assert.assertNotNull(uShort76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 8 + "'", int77.equals(8));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-10) + "'", int79.equals((-10)));
        org.junit.Assert.assertNotNull(uShort80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-18) + "'", int82.equals((-18)));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-18) + "'", int83.equals((-18)));
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92.equals(true));
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int7 = uRIList6.size();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray18 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList19 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList19, uRIArray18);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = uRIList19.containsAll((java.util.Collection<java.lang.Byte>) byteList26);
        boolean boolean31 = intList16.removeAll((java.util.Collection<java.lang.Byte>) byteList26);
        boolean boolean32 = uRIList6.removeAll((java.util.Collection<java.lang.Byte>) byteList26);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder33 = binaryDecoder4.createListDecoder((java.util.List) byteList26);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier34 = binaryDecoder4.decodeNullableIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uRIArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(mALListDecoder33);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeString("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeNullableLong((java.lang.Long) 281474993487873L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (-64), (-18));
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = binaryDecoder13.decodeUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        esa.mo.com.impl.archive.db.COMObjectEntityPK cOMObjectEntityPK3 = esa.mo.com.impl.archive.entities.COMObjectEntity.generatePK((java.lang.Integer) (-64), (java.lang.Integer) 15, (java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(cOMObjectEntityPK3);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) 'a');
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 97");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        java.lang.Integer[] intArray1 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList2 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList2, intArray1);
        int int5 = intList2.lastIndexOf((java.lang.Object) 0.0f);
        int int7 = intList2.lastIndexOf((java.lang.Object) (-1));
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray8 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList9, uRIArray8);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        boolean boolean19 = byteList16.add((java.lang.Byte) (byte) 100);
        boolean boolean20 = uRIList9.containsAll((java.util.Collection<java.lang.Byte>) byteList16);
        boolean boolean21 = byteList16.isEmpty();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList24 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        int int27 = intList24.lastIndexOf((java.lang.Object) 0.0f);
        int int28 = byteList16.lastIndexOf((java.lang.Object) intList24);
        java.lang.String str29 = intList24.toString();
        int int30 = intList24.size();
        java.util.Spliterator<java.lang.Integer> intSpliterator31 = intList24.spliterator();
        boolean boolean32 = intList2.equals((java.lang.Object) intSpliterator31);
        byte[] byteArray36 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray36);
        java.lang.Double double38 = binaryDecoder37.decodeNullableDouble();
        byte[] byteArray39 = binaryDecoder37.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob40 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray39);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.Long[] longArray53 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList54 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList54, longArray53);
        java.lang.Object obj56 = longList54.clone();
        int int57 = strList44.indexOf((java.lang.Object) longList54);
        java.util.ListIterator<java.lang.String> strItor58 = strList44.listIterator();
        java.lang.String str59 = strList44.toString();
        java.lang.Double[] doubleArray62 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList63 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList63, doubleArray62);
        java.lang.String[] strArray67 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        int int70 = strList68.size();
        boolean boolean71 = doubleList63.equals((java.lang.Object) strList68);
        boolean boolean72 = strList44.remove((java.lang.Object) strList68);
        boolean boolean73 = blob40.equals((java.lang.Object) strList68);
        java.util.stream.Stream<java.lang.String> strStream74 = strList68.stream();
        org.ccsds.moims.mo.mal.structures.OctetList octetList75 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean76 = strList68.retainAll((java.util.Collection<java.lang.Byte>) octetList75);
        java.lang.Double[] doubleArray78 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList79 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList79, doubleArray78);
        java.lang.Short[] shortArray83 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList84 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList84, shortArray83);
        java.util.ListIterator<java.lang.Short> shortItor86 = shortList84.listIterator();
        int int87 = doubleList79.indexOf((java.lang.Object) shortList84);
        doubleList79.trimToSize();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime89 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort90 = fineTime89.getServiceNumber();
        java.lang.Long long91 = uShort90.getShortForm();
        int int92 = doubleList79.lastIndexOf((java.lang.Object) uShort90);
        boolean boolean93 = strList68.contains((java.lang.Object) int92);
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter95 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter(5);
        org.ccsds.moims.mo.mal.consumer.MALInteractionAdapter[] mALInteractionAdapterArray96 = new org.ccsds.moims.mo.mal.consumer.MALInteractionAdapter[] { archiveSyncGenAdapter95 };
        org.ccsds.moims.mo.mal.consumer.MALInteractionAdapter[] mALInteractionAdapterArray97 = strList68.toArray(mALInteractionAdapterArray96);
        int int98 = intList2.indexOf((java.lang.Object) mALInteractionAdapterArray96);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(uRIArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "[10]" + "'", str29.equals("[10]"));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(intSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals((double) double38, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "[hi!, ]" + "'", str59.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertNotNull(strStream74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80);
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
        org.junit.Assert.assertNotNull(shortItor86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(uShort90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 281474993487882L + "'", long91.equals(281474993487882L));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
        org.junit.Assert.assertNotNull(mALInteractionAdapterArray96);
        org.junit.Assert.assertNotNull(mALInteractionAdapterArray97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger5 = binaryDecoder4.decodeNullableUInteger();
        long long6 = uInteger5.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uInteger5.getServiceNumber();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 127L + "'", long6 == 127L);
        org.junit.Assert.assertNotNull(uShort7);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        java.util.stream.Stream<java.lang.Double> doubleStream2 = doubleList1.parallelStream();
        boolean boolean4 = doubleList1.add((java.lang.Double) 10.0d);
        org.ccsds.moims.mo.mal.structures.Element element5 = doubleList1.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList7 = new org.ccsds.moims.mo.mal.structures.BooleanList(52);
        java.util.stream.Stream<java.lang.Boolean> booleanStream8 = booleanList7.parallelStream();
        boolean boolean9 = doubleList1.contains((java.lang.Object) booleanList7);
        org.ccsds.moims.mo.mal.structures.URIList uRIList10 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int11 = uRIList10.getTypeShortForm();
        java.lang.Integer int12 = uRIList10.getTypeShortForm();
        java.lang.Object obj13 = uRIList10.clone();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        int int20 = uRIList10.lastIndexOf((java.lang.Object) binaryDecoder19);
        java.lang.Boolean boolean21 = binaryDecoder19.decodeBoolean();
        byte[] byteArray22 = binaryDecoder19.getRemainingEncodedData();
        java.lang.Boolean boolean23 = binaryDecoder19.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger24 = binaryDecoder19.decodeUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element25 = doubleList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(booleanStream8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-18) + "'", int12.equals((-18)));
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21.equals(true));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23.equals(true));
        org.junit.Assert.assertNotNull(uInteger24);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        org.ccsds.moims.mo.mal.structures.Time time6 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int7 = time6.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element8 = time6.createElement();
        java.lang.Integer int9 = time6.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = time6.getServiceNumber();
        try {
            binaryEncoder1.encodeTime(time6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 16 + "'", int7.equals(16));
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 16 + "'", int9.equals(16));
        org.junit.Assert.assertNotNull(uShort10);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        esa.mo.com.impl.archive.db.COMObjectEntityPK cOMObjectEntityPK3 = esa.mo.com.impl.archive.entities.COMObjectEntity.generatePK((java.lang.Integer) (-9), (java.lang.Integer) 17, (java.lang.Long) 281474993487879L);
        org.junit.Assert.assertNotNull(cOMObjectEntityPK3);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = identifier0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = identifier0.getAreaVersion();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 14, 18);
        blob12.detach();
        boolean boolean14 = identifier0.equals((java.lang.Object) blob12);
        java.lang.String str15 = identifier0.getValue();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = identifier0.getAreaVersion();
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertNotNull(uOctet16);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) '#');
        java.util.ArrayList<byte[]> byteArrayList2 = archiveSyncGenAdapter1.getReceivedChunks();
        org.junit.Assert.assertNotNull(byteArrayList2);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger13 = binaryDecoder12.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = uInteger13.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList15 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.ShortList shortList16 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = shortList16.getAreaNumber();
        java.lang.Object[] objArray18 = shortList16.toArray();
        boolean boolean19 = floatList15.remove((java.lang.Object) shortList16);
        java.lang.Long[] longArray27 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList28 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList28, longArray27);
        java.lang.Object obj30 = longList28.clone();
        java.lang.Boolean[] booleanArray32 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList33 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList33, booleanArray32);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
        boolean boolean43 = byteList40.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList49 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList49, byteArray48);
        boolean boolean52 = byteList49.add((java.lang.Byte) (byte) 100);
        boolean boolean53 = byteList40.addAll((java.util.Collection<java.lang.Byte>) byteList49);
        java.lang.Object obj54 = byteList40.clone();
        boolean boolean55 = booleanList33.contains((java.lang.Object) byteList40);
        boolean boolean56 = longList28.remove((java.lang.Object) boolean55);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray62 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList63 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList63, uRIArray62);
        java.lang.Byte[] byteArray69 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList70 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList70, byteArray69);
        boolean boolean73 = byteList70.add((java.lang.Byte) (byte) 100);
        boolean boolean74 = uRIList63.containsAll((java.util.Collection<java.lang.Byte>) byteList70);
        boolean boolean75 = strList60.containsAll((java.util.Collection<java.lang.Byte>) byteList70);
        int int76 = longList28.lastIndexOf((java.lang.Object) boolean75);
        java.lang.Object obj77 = longList28.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList78 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int79 = uRIList78.getTypeShortForm();
        java.lang.Integer int80 = uRIList78.getTypeShortForm();
        java.lang.Object obj81 = uRIList78.clone();
        byte[] byteArray85 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder86 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray85);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder87 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray85);
        int int88 = uRIList78.lastIndexOf((java.lang.Object) binaryDecoder87);
        boolean boolean89 = longList28.remove((java.lang.Object) uRIList78);
        boolean boolean91 = longList28.add((java.lang.Long) 281475010265078L);
        boolean boolean92 = shortList16.remove((java.lang.Object) 281475010265078L);
        java.lang.Object[] objArray93 = shortList16.toArray();
        boolean boolean94 = uInteger13.equals((java.lang.Object) shortList16);
        java.lang.Long long95 = uInteger13.getShortForm();
        try {
            binaryEncoder1.encodeUInteger(uInteger13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(uInteger13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(uRIArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-18) + "'", int79.equals((-18)));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-18) + "'", int80.equals((-18)));
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 281474993487884L + "'", long95.equals(281474993487884L));
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration7 = binaryDecoder5.decodeDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.Identifier identifier4 = eventCOMObject0.getNetworkZone();
        org.ccsds.moims.mo.mal.structures.Identifier identifier6 = new org.ccsds.moims.mo.mal.structures.Identifier("100");
        eventCOMObject0.setNetworkZone(identifier6);
        org.ccsds.moims.mo.mal.structures.Time time8 = eventCOMObject0.getTimestamp();
        org.ccsds.moims.mo.com.structures.ObjectType objectType9 = eventCOMObject0.getObjType();
        org.junit.Assert.assertNull(identifier4);
        org.junit.Assert.assertNull(time8);
        org.junit.Assert.assertNull(objectType9);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) (-64));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity2 = new esa.mo.com.impl.archive.entities.DomainHolderEntity(4, "hi!");
        int int3 = domainHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("");
        boolean boolean4 = dictionary0.exists("127");
        dictionary0.defineWord((java.lang.Integer) 32, "[10, -1, 100]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Blob blob10 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray7);
        try {
            binaryEncoder1.encodeNullableBlob(blob10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
        org.junit.Assert.assertNotNull(byteArray7);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 281474993487878L);
        org.ccsds.moims.mo.mal.structures.ShortList shortList3 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Integer int4 = shortList3.getTypeShortForm();
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) shortList3);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject6.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType11 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription12 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType11);
        eventCOMObject6.setObjType(objectType11);
        java.lang.Long long14 = eventCOMObject6.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject15 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject15.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType20 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType20);
        eventCOMObject15.setObjType(objectType20);
        eventCOMObject6.setObjType(objectType20);
        eventCOMObject0.setObjType(objectType20);
        eventCOMObject0.setRelated((java.lang.Long) 281475010265084L);
        org.ccsds.moims.mo.com.structures.ObjectId objectId27 = eventCOMObject0.getObjectId();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-9) + "'", int4.equals((-9)));
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 4294967295L + "'", long14.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(objectId27);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = floatList0.getAreaVersion();
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList11 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList11, shortArray10);
        java.util.ListIterator<java.lang.Short> shortItor13 = shortList11.listIterator();
        int int14 = doubleList6.indexOf((java.lang.Object) shortList11);
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean16 = blob15.isURLBased();
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = blob15.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        boolean boolean23 = doubleList6.contains((java.lang.Object) blob15);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = doubleList6.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean44 = floatList0.contains((java.lang.Object) doubleList6);
        org.ccsds.moims.mo.mal.structures.Element element45 = floatList0.createElement();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(shortItor13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(element45);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream4 = uRIList0.stream();
        uRIList0.trimToSize();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI8 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject6.setSourceURI(uRI8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = uRI8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = uRI8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uRI8.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element13 = uRI8.createElement();
        boolean boolean14 = uRIList0.add(uRI8);
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = uRIList0.getServiceNumber();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(uRIStream4);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(uShort15);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList6 = eventCOMObject0.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject7 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId8 = eventCOMObject7.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = eventCOMObject7.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject10 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject10.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType15 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription16 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType15);
        eventCOMObject10.setObjType(objectType15);
        java.lang.Long long18 = eventCOMObject10.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId19 = eventCOMObject10.getObjectId();
        eventCOMObject7.setSource(objectId19);
        eventCOMObject0.setSource(objectId19);
        org.ccsds.moims.mo.com.structures.ObjectId objectId22 = eventCOMObject0.getSource();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject23 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject23.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier26 = null;
        eventCOMObject23.setNetworkZone(identifier26);
        org.ccsds.moims.mo.mal.structures.URI uRI28 = eventCOMObject23.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList29 = eventCOMObject23.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject30 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId31 = eventCOMObject30.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier32 = eventCOMObject30.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject33 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject33.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType38 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription39 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType38);
        eventCOMObject33.setObjType(objectType38);
        java.lang.Long long41 = eventCOMObject33.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId42 = eventCOMObject33.getObjectId();
        eventCOMObject30.setSource(objectId42);
        eventCOMObject23.setSource(objectId42);
        eventCOMObject0.setSource(objectId42);
        org.ccsds.moims.mo.com.structures.ObjectType objectType46 = eventCOMObject0.getObjType();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(identifierList6);
        org.junit.Assert.assertNull(objectId8);
        org.junit.Assert.assertNull(identifier9);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 4294967295L + "'", long18.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId19);
        org.junit.Assert.assertNotNull(objectId22);
        org.junit.Assert.assertNull(uRI28);
        org.junit.Assert.assertNull(identifierList29);
        org.junit.Assert.assertNull(objectId31);
        org.junit.Assert.assertNull(identifier32);
        org.junit.Assert.assertNotNull(objectType38);
        org.junit.Assert.assertNotNull(subscription39);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 4294967295L + "'", long41.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId42);
        org.junit.Assert.assertNull(objectType46);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        org.ccsds.moims.mo.mal.structures.OctetList octetList34 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = octetList34.getServiceNumber();
        boolean boolean36 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) octetList34);
        java.math.BigInteger bigInteger37 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong38 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger37);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet39 = uLong38.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity42 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long43 = objectTypeHolderEntity42.getObjectType();
        boolean boolean44 = uLong38.equals((java.lang.Object) long43);
        boolean boolean45 = booleanList10.remove((java.lang.Object) long43);
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity48 = new esa.mo.com.impl.archive.entities.DomainHolderEntity(0, "[]");
        int int49 = booleanList10.lastIndexOf((java.lang.Object) domainHolderEntity48);
        boolean boolean50 = booleanList10.isEmpty();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(uShort35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(bigInteger37);
        org.junit.Assert.assertNotNull(uOctet39);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 281474993487879L + "'", long43.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList10 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = doubleList10.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = doubleList10.getAreaNumber();
        java.lang.Integer int13 = doubleList10.getTypeShortForm();
        java.util.Spliterator<java.lang.Double> doubleSpliterator14 = doubleList10.spliterator();
        org.ccsds.moims.mo.mal.structures.Element element15 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) doubleList10);
        java.util.ListIterator<java.lang.Double> doubleItor16 = doubleList10.listIterator();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13.equals((-5)));
        org.junit.Assert.assertNotNull(doubleSpliterator14);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(doubleItor16);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeLong((java.lang.Long) 1558616172555L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = uRIList26.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean38 = strList23.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean39 = doubleList2.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        doubleList2.ensureCapacity(10);
        java.lang.Object obj42 = null;
        boolean boolean43 = doubleList2.equals(obj42);
        java.util.stream.Stream<java.lang.Double> doubleStream44 = doubleList2.parallelStream();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertNotNull(doubleStream44);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime13 = binaryDecoder10.decodeFineTime();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute14 = binaryDecoder10.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(fineTime13);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI78 = uRIList8.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject3.getObjectId();
        eventCOMObject0.setSource(objectId12);
        org.ccsds.moims.mo.com.structures.ObjectId objectId14 = eventCOMObject0.getObjectId();
        org.ccsds.moims.mo.mal.structures.Time time15 = eventCOMObject0.getTimestamp();
        org.ccsds.moims.mo.mal.structures.Time time16 = eventCOMObject0.getTimestamp();
        eventCOMObject0.setObjId((java.lang.Long) (-64L));
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId12);
        org.junit.Assert.assertNotNull(objectId14);
        org.junit.Assert.assertNull(time15);
        org.junit.Assert.assertNull(time16);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.com.structures.ObjectType objectType4 = eventCOMObject0.getObjType();
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = eventCOMObject0.getNetworkZone();
        org.ccsds.moims.mo.mal.structures.Identifier identifier6 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str7 = identifier6.toString();
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) identifier6);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList9 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int10 = booleanList9.getTypeShortForm();
        java.util.stream.Stream<java.lang.Boolean> booleanStream11 = booleanList9.stream();
        boolean boolean12 = booleanList9.isEmpty();
        org.ccsds.moims.mo.mal.structures.URIList uRIList13 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int14 = uRIList13.getTypeShortForm();
        java.lang.Integer int15 = uRIList13.getTypeShortForm();
        java.lang.Object obj16 = uRIList13.clone();
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder22 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        int int23 = uRIList13.lastIndexOf((java.lang.Object) binaryDecoder22);
        int int24 = uRIList13.size();
        java.lang.Integer int25 = uRIList13.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.LongList longList26 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray27 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList28 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList28, uRIArray27);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        boolean boolean38 = byteList35.add((java.lang.Byte) (byte) 100);
        boolean boolean39 = uRIList28.containsAll((java.util.Collection<java.lang.Byte>) byteList35);
        byteList35.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean43 = longList26.removeAll((java.util.Collection<java.lang.Byte>) byteList35);
        boolean boolean44 = uRIList13.containsAll((java.util.Collection<java.lang.Byte>) byteList35);
        boolean boolean45 = booleanList9.contains((java.lang.Object) byteList35);
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) booleanList9);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime47 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = fineTime47.getAreaNumber();
        java.lang.String str49 = fineTime47.toString();
        java.lang.Long long50 = fineTime47.getShortForm();
        java.lang.Long long51 = fineTime47.getShortForm();
        long long52 = fineTime47.getValue();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet53 = fineTime47.getAreaVersion();
        boolean boolean54 = booleanList9.remove((java.lang.Object) fineTime47);
        org.junit.Assert.assertNull(objectType4);
        org.junit.Assert.assertNull(identifier5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-2) + "'", int10.equals((-2)));
        org.junit.Assert.assertNotNull(booleanStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-18) + "'", int15.equals((-18)));
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-18) + "'", int25.equals((-18)));
        org.junit.Assert.assertNotNull(uRIArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "0" + "'", str49.equals("0"));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 281474993487889L + "'", long50.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 281474993487889L + "'", long51.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(uOctet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl3 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl4 = cOMServicesConsumer0.getEventService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl5 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl6 = cOMServicesConsumer0.getArchiveSyncService();
        cOMServicesConsumer0.closeConnections();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl3);
        org.junit.Assert.assertNull(eventConsumerServiceImpl4);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl5);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl6);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        int int7 = blob6.getOffset();
        int int8 = blob6.getOffset();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        java.lang.Integer int15 = binaryDecoder14.decodeInteger();
        org.ccsds.moims.mo.mal.structures.ULong uLong16 = binaryDecoder14.decodeNullableULong();
        try {
            org.ccsds.moims.mo.mal.structures.Element element17 = blob6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15.equals(50));
        org.junit.Assert.assertNull(uLong16);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject1 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject1.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier4 = null;
        eventCOMObject1.setNetworkZone(identifier4);
        org.ccsds.moims.mo.mal.structures.URI uRI6 = eventCOMObject1.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList7 = eventCOMObject1.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject8.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier10 = eventCOMObject8.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject11 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject11.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType16 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription17 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType16);
        eventCOMObject11.setObjType(objectType16);
        java.lang.Long long19 = eventCOMObject11.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId20 = eventCOMObject11.getObjectId();
        eventCOMObject8.setSource(objectId20);
        eventCOMObject1.setSource(objectId20);
        org.ccsds.moims.mo.com.structures.ObjectId objectId23 = eventCOMObject1.getSource();
        eventCOMObject0.setSource(objectId23);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList25 = eventCOMObject0.getDomain();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = uRIList27.containsAll((java.util.Collection<java.lang.Byte>) byteList34);
        int int40 = uRIList27.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        boolean boolean59 = byteList46.addAll((java.util.Collection<java.lang.Byte>) byteList55);
        int int61 = byteList55.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean62 = uRIList27.removeAll((java.util.Collection<java.lang.Byte>) byteList55);
        java.lang.Double[] doubleArray68 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList69 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList69, doubleArray68);
        org.ccsds.moims.mo.mal.structures.OctetList octetList71 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort72 = octetList71.getServiceNumber();
        boolean boolean73 = doubleList69.containsAll((java.util.Collection<java.lang.Byte>) octetList71);
        boolean boolean74 = uRIList27.retainAll((java.util.Collection<java.lang.Byte>) octetList71);
        java.lang.Object obj75 = uRIList27.clone();
        org.ccsds.moims.mo.mal.structures.Time time76 = new org.ccsds.moims.mo.mal.structures.Time();
        int int77 = uRIList27.indexOf((java.lang.Object) time76);
        long long78 = time76.getValue();
        java.lang.Integer int79 = time76.getTypeShortForm();
        byte[] byteArray83 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder84 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray83);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder85 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray83);
        java.lang.Byte byte86 = binaryDecoder85.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element87 = time76.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder85);
        eventCOMObject0.setTimestamp(time76);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertNull(identifierList7);
        org.junit.Assert.assertNull(objectId9);
        org.junit.Assert.assertNull(identifier10);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 4294967295L + "'", long19.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId20);
        org.junit.Assert.assertNotNull(objectId23);
        org.junit.Assert.assertNull(identifierList25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertNotNull(uShort72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 16 + "'", int79.equals(16));
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertTrue("'" + byte86 + "' != '" + (byte) 100 + "'", byte86.equals((byte) 100));
        org.junit.Assert.assertNotNull(element87);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        java.math.BigInteger bigInteger56 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong57 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger56);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = uLong57.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity61 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long62 = objectTypeHolderEntity61.getObjectType();
        boolean boolean63 = uLong57.equals((java.lang.Object) long62);
        boolean boolean64 = booleanList10.remove((java.lang.Object) uLong57);
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = uLong57.getAreaNumber();
        java.lang.Long long66 = uLong57.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element67 = uLong57.createElement();
        java.lang.Integer int68 = uLong57.getTypeShortForm();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 281474993487879L + "'", long62.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 281474993487886L + "'", long66.equals(281474993487886L));
        org.junit.Assert.assertNotNull(element67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 14 + "'", int68.equals(14));
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = fineTime0.getAreaNumber();
        java.lang.String str2 = fineTime0.toString();
        java.lang.Long long3 = fineTime0.getShortForm();
        java.lang.Long long4 = fineTime0.getShortForm();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList6 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = doubleList6.getAreaNumber();
        java.lang.Object obj8 = doubleList6.clone();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = binaryDecoder14.decodeNullableUOctet();
        int int16 = doubleList6.lastIndexOf((java.lang.Object) binaryDecoder14);
        byte[] byteArray17 = binaryDecoder14.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        try {
            org.ccsds.moims.mo.mal.structures.Element element19 = fineTime0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "0" + "'", str2.equals("0"));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487889L + "'", long3.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487889L + "'", long4.equals(281474993487889L));
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(uOctet15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        doubleList2.ensureCapacity((-1));
        doubleList2.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream15 = doubleList2.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList17 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = stringList17.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = stringList17.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = stringList17.getServiceNumber();
        stringList17.trimToSize();
        boolean boolean22 = doubleList2.equals((java.lang.Object) stringList17);
        stringList17.trimToSize();
        java.util.ListIterator<java.lang.String> strItor24 = stringList17.listIterator();
        java.lang.Object obj25 = stringList17.clone();
        java.io.OutputStream outputStream26 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder27 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream26);
        byte byte29 = binaryEncoder27.internalEncodeAttributeType((byte) -1);
        try {
            stringList17.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(doubleStream15);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + byte29 + "' != '" + (byte) -1 + "'", byte29 == (byte) -1);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableString("[hi!, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        int int46 = longList8.lastIndexOf((java.lang.Object) byteList42);
        java.util.ListIterator<java.lang.Long> longItor47 = longList8.listIterator();
        org.ccsds.moims.mo.mal.structures.Time time49 = new org.ccsds.moims.mo.mal.structures.Time((long) (-5));
        int int50 = longList8.indexOf((java.lang.Object) time49);
        byte[] byteArray54 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder55 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray54);
        java.lang.Double double56 = binaryDecoder55.decodeNullableDouble();
        byte[] byteArray57 = binaryDecoder55.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob58 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray57);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.lang.Long[] longArray71 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList72 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList72, longArray71);
        java.lang.Object obj74 = longList72.clone();
        int int75 = strList62.indexOf((java.lang.Object) longList72);
        java.util.ListIterator<java.lang.String> strItor76 = strList62.listIterator();
        java.lang.String str77 = strList62.toString();
        java.lang.Double[] doubleArray80 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList81 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList81, doubleArray80);
        java.lang.String[] strArray85 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        int int88 = strList86.size();
        boolean boolean89 = doubleList81.equals((java.lang.Object) strList86);
        boolean boolean90 = strList62.remove((java.lang.Object) strList86);
        boolean boolean91 = blob58.equals((java.lang.Object) strList86);
        org.ccsds.moims.mo.mal.structures.UShort uShort92 = blob58.getServiceNumber();
        boolean boolean93 = time49.equals((java.lang.Object) uShort92);
        java.lang.Long long94 = time49.getShortForm();
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(longItor47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals((double) double56, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strItor76);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "[hi!, ]" + "'", str77.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertNotNull(uShort92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 281474993487888L + "'", long94.equals(281474993487888L));
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) (-5L));
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) -1);
        try {
            duration1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "[-1, -1, -1, -1, 100]", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        strList4.clear();
        java.util.ListIterator<java.lang.String> strItor7 = strList4.listIterator();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.Short[] shortArray29 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList30 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList30, shortArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray37 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList38 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList38, uRIArray37);
        java.lang.Byte[] byteArray44 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList45 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList45, byteArray44);
        boolean boolean48 = byteList45.add((java.lang.Byte) (byte) 100);
        boolean boolean49 = uRIList38.containsAll((java.util.Collection<java.lang.Byte>) byteList45);
        boolean boolean50 = strList35.containsAll((java.util.Collection<java.lang.Byte>) byteList45);
        boolean boolean51 = shortList30.contains((java.lang.Object) byteList45);
        boolean boolean52 = strList11.removeAll((java.util.Collection<java.lang.Byte>) byteList45);
        boolean boolean53 = strList11.isEmpty();
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray67 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList68 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList68, byteArray67);
        boolean boolean71 = byteList68.add((java.lang.Byte) (byte) 100);
        boolean boolean72 = byteList59.addAll((java.util.Collection<java.lang.Byte>) byteList68);
        java.lang.Object obj73 = byteList59.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream74 = byteList59.stream();
        boolean boolean75 = strList11.removeAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList77 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = doubleList77.getAreaNumber();
        java.lang.Object obj79 = doubleList77.clone();
        byte[] byteArray83 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder84 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray83);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder85 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray83);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet86 = binaryDecoder85.decodeNullableUOctet();
        int int87 = doubleList77.lastIndexOf((java.lang.Object) binaryDecoder85);
        byte[] byteArray88 = binaryDecoder85.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder89 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray88);
        int int90 = byteList59.lastIndexOf((java.lang.Object) byteArray88);
        boolean boolean91 = strList4.retainAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(strItor7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(uRIArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(byteStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertNotNull(uShort78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertNotNull(uOctet86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        java.lang.Long long12 = time11.getShortForm();
        java.lang.Integer int13 = time11.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = time11.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = time11.getAreaNumber();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281474993487888L + "'", long12.equals(281474993487888L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 16 + "'", int13.equals(16));
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(uShort15);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, 18);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong8 = binaryDecoder7.decodeNullableULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 18");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList15 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList15, shortArray14);
        java.util.ListIterator<java.lang.Short> shortItor17 = shortList15.listIterator();
        int int18 = doubleList10.indexOf((java.lang.Object) shortList15);
        org.ccsds.moims.mo.mal.structures.Blob blob19 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean20 = blob19.isURLBased();
        byte[] byteArray24 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder25 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray24);
        org.ccsds.moims.mo.mal.structures.Element element26 = blob19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder25);
        boolean boolean27 = doubleList10.contains((java.lang.Object) blob19);
        int int28 = blob19.getOffset();
        try {
            binaryEncoder1.encodeBlob(blob19);
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Null value supplied in a non-nullable field");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(shortItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.util.ListIterator<java.lang.Double> doubleItor21 = doubleList2.listIterator(1);
        doubleList2.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray23 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList24 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList24, uShortArray23);
        uShortList24.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element28 = uOctet27.createElement();
        int int29 = uShortList24.indexOf((java.lang.Object) element28);
        boolean boolean31 = uShortList24.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor32 = uShortList24.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean34 = uShortList24.add(uShort33);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
        boolean boolean43 = byteList40.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList49 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList49, byteArray48);
        boolean boolean52 = byteList49.add((java.lang.Byte) (byte) 100);
        boolean boolean53 = byteList40.addAll((java.util.Collection<java.lang.Byte>) byteList49);
        java.lang.Object obj54 = byteList40.clone();
        boolean boolean55 = uShortList24.removeAll((java.util.Collection<java.lang.Byte>) byteList40);
        boolean boolean56 = doubleList2.retainAll((java.util.Collection<java.lang.Byte>) byteList40);
        org.ccsds.moims.mo.mal.structures.FloatList floatList57 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int59 = floatList57.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int60 = floatList57.getTypeShortForm();
        boolean boolean61 = floatList57.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator62 = floatList57.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort63 = floatList57.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort64 = floatList57.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = floatList57.getServiceNumber();
        int int66 = doubleList2.lastIndexOf((java.lang.Object) floatList57);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList67 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UShort uShort68 = integerList67.getAreaNumber();
        int int69 = doubleList2.lastIndexOf((java.lang.Object) uShort68);
        boolean boolean71 = doubleList2.add((java.lang.Double) 100.0d);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(doubleItor21);
        org.junit.Assert.assertNotNull(uShortArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uShortItor32);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-4) + "'", int60.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(floatSpliterator62);
        org.junit.Assert.assertNotNull(uShort63);
        org.junit.Assert.assertNotNull(uShort64);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(uShort68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        longList1.ensureCapacity((-5));
        java.lang.Integer int4 = longList1.getTypeShortForm();
        boolean boolean6 = longList1.contains((java.lang.Object) 100L);
        java.util.Spliterator<java.lang.Long> longSpliterator7 = longList1.spliterator();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList8 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray9 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList10, uShortArray9);
        uShortList10.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element14 = uOctet13.createElement();
        int int15 = uShortList10.indexOf((java.lang.Object) element14);
        boolean boolean16 = booleanList8.contains((java.lang.Object) uShortList10);
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = booleanList8.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList18 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int19 = uRIList18.size();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList28 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray30 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList31, uRIArray30);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        boolean boolean42 = uRIList31.containsAll((java.util.Collection<java.lang.Byte>) byteList38);
        boolean boolean43 = intList28.removeAll((java.util.Collection<java.lang.Byte>) byteList38);
        boolean boolean44 = uRIList18.removeAll((java.util.Collection<java.lang.Byte>) byteList38);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        java.lang.Object obj64 = byteList50.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream65 = byteList50.stream();
        java.lang.Object[] objArray66 = byteList50.toArray();
        boolean boolean67 = byteList38.addAll((java.util.Collection<java.lang.Byte>) byteList50);
        java.lang.Double[] doubleArray69 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList70 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList70, doubleArray69);
        java.lang.Short[] shortArray74 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList75 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList75, shortArray74);
        java.util.ListIterator<java.lang.Short> shortItor77 = shortList75.listIterator();
        int int78 = doubleList70.indexOf((java.lang.Object) shortList75);
        doubleList70.trimToSize();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject80 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject80.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier83 = eventCOMObject80.getNetworkZone();
        int int84 = doubleList70.indexOf((java.lang.Object) identifier83);
        int int85 = byteList50.lastIndexOf((java.lang.Object) doubleList70);
        boolean boolean86 = booleanList8.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        java.util.ListIterator<java.lang.Byte> byteItor87 = byteList50.listIterator();
        boolean boolean88 = longList1.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        java.lang.Object[] objArray89 = byteList50.toArray();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-13) + "'", int4.equals((-13)));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(longSpliterator7);
        org.junit.Assert.assertNotNull(uShortArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(uRIArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(byteStream65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNotNull(shortItor77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(identifier83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
        org.junit.Assert.assertNotNull(byteItor87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
        org.junit.Assert.assertNotNull(objArray89);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList6 = eventCOMObject0.getDomain();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = eventCOMObject0.getNetworkZone();
        org.ccsds.moims.mo.mal.structures.Time time9 = eventCOMObject0.getTimestamp();
        org.ccsds.moims.mo.com.structures.ObjectId objectId10 = eventCOMObject0.getSource();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(identifierList6);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertNull(identifier8);
        org.junit.Assert.assertNull(time9);
        org.junit.Assert.assertNull(objectId10);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter(5);
        java.util.ArrayList<byte[]> byteArrayList2 = archiveSyncGenAdapter1.getReceivedChunks();
        java.util.ArrayList<byte[]> byteArrayList3 = archiveSyncGenAdapter1.getReceivedChunks();
        org.junit.Assert.assertNotNull(byteArrayList2);
        org.junit.Assert.assertNotNull(byteArrayList3);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        org.ccsds.moims.mo.com.structures.ObjectId objectId8 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = identifier9.getAreaVersion();
        java.lang.String str11 = identifier9.getValue();
        eventCOMObject0.setNetworkZone(identifier9);
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime18 = binaryDecoder17.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.Element element19 = identifier9.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        try {
            org.ccsds.moims.mo.mal.structures.Time time20 = binaryDecoder17.decodeNullableTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertNull(objectId8);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(fineTime18);
        org.junit.Assert.assertNotNull(element19);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity(5, "[-1, -1, -1, -1, 100]");
        java.lang.String str3 = providerURIHolderEntity2.getProviderURIString();
        int int4 = providerURIHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[-1, -1, -1, -1, 100]" + "'", str3.equals("[-1, -1, -1, -1, 100]"));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        java.lang.Integer int9 = binaryDecoder7.decodeInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Time time10 = binaryDecoder7.decodeTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-64) + "'", int9.equals((-64)));
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        int int11 = uRIList0.size();
        java.lang.Integer int12 = uRIList0.getTypeShortForm();
        int int13 = uRIList0.size();
        try {
            java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor15 = uRIList0.listIterator((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-18) + "'", int12.equals((-18)));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20, shortArray19);
        java.util.ListIterator<java.lang.Short> shortItor22 = shortList20.listIterator();
        int int23 = doubleList15.indexOf((java.lang.Object) shortList20);
        org.ccsds.moims.mo.mal.structures.Blob blob24 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean25 = blob24.isURLBased();
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.Element element31 = blob24.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder30);
        boolean boolean32 = doubleList15.contains((java.lang.Object) blob24);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray38 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList39, uRIArray38);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        boolean boolean50 = uRIList39.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean51 = strList36.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean52 = doubleList15.containsAll((java.util.Collection<java.lang.Byte>) byteList46);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55, doubleArray54);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList60 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList60, shortArray59);
        java.util.ListIterator<java.lang.Short> shortItor62 = shortList60.listIterator();
        int int63 = doubleList55.indexOf((java.lang.Object) shortList60);
        org.ccsds.moims.mo.mal.structures.Blob blob64 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean65 = blob64.isURLBased();
        byte[] byteArray69 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder70 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray69);
        org.ccsds.moims.mo.mal.structures.Element element71 = blob64.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder70);
        boolean boolean72 = doubleList55.contains((java.lang.Object) blob64);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray78 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList79 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList79, uRIArray78);
        java.lang.Byte[] byteArray85 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList86 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList86, byteArray85);
        boolean boolean89 = byteList86.add((java.lang.Byte) (byte) 100);
        boolean boolean90 = uRIList79.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean91 = strList76.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean92 = doubleList55.containsAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean93 = doubleList15.removeAll((java.util.Collection<java.lang.Byte>) byteList86);
        boolean boolean94 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList86);
        doubleList1.ensureCapacity((-7));
        java.util.Iterator<java.lang.Double> doubleItor97 = doubleList1.iterator();
        boolean boolean99 = doubleList1.add((java.lang.Double) 1.0d);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(shortItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uRIArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(shortItor62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uRIArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
        org.junit.Assert.assertNotNull(doubleItor97);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        int int46 = longList8.lastIndexOf((java.lang.Object) byteList42);
        java.util.ListIterator<java.lang.Long> longItor47 = longList8.listIterator();
        org.ccsds.moims.mo.mal.structures.Time time49 = new org.ccsds.moims.mo.mal.structures.Time((long) (-5));
        int int50 = longList8.indexOf((java.lang.Object) time49);
        java.io.OutputStream outputStream51 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder52 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream51);
        byte byte54 = binaryEncoder52.internalEncodeAttributeType((byte) -1);
        try {
            time49.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(longItor47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + byte54 + "' != '" + (byte) -1 + "'", byte54 == (byte) -1);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableString("2.47E-322");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean64 = byteList37.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.ccsds.moims.mo.mal.structures.URIList uRIList65 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int66 = uRIList65.getTypeShortForm();
        java.lang.Integer int67 = uRIList65.getTypeShortForm();
        boolean boolean68 = byteList37.equals((java.lang.Object) uRIList65);
        java.lang.Object obj69 = uRIList65.clone();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.lang.Long[] longArray82 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList83 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList83, longArray82);
        java.lang.Object obj85 = longList83.clone();
        int int86 = strList73.indexOf((java.lang.Object) longList83);
        java.util.Iterator<java.lang.String> strItor87 = strList73.iterator();
        java.util.stream.Stream<java.lang.String> strStream88 = strList73.stream();
        boolean boolean89 = uRIList65.contains((java.lang.Object) strList73);
        try {
            java.lang.Object obj91 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) boolean89, "[-1.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchFieldException; message: [-1");
        } catch (java.lang.NoSuchFieldException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-18) + "'", int66.equals((-18)));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strItor87);
        org.junit.Assert.assertNotNull(strStream88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        strList3.ensureCapacity(16);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI10 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject8.setSourceURI(uRI10);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = uRI10.getAreaVersion();
        boolean boolean13 = strList3.contains((java.lang.Object) uRI10);
        java.lang.Integer int14 = uRI10.getTypeShortForm();
        java.lang.Integer int15 = uRI10.getTypeShortForm();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 18 + "'", int14.equals(18));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 18 + "'", int15.equals(18));
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl2 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl3 = cOMServicesConsumer0.getEventService();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl4 = cOMServicesConsumer0.getEventService();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl2);
        org.junit.Assert.assertNull(eventConsumerServiceImpl3);
        org.junit.Assert.assertNull(eventConsumerServiceImpl4);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject3.getObjectId();
        eventCOMObject0.setSource(objectId12);
        org.ccsds.moims.mo.mal.structures.Time time14 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int15 = time14.getTypeShortForm();
        eventCOMObject0.setTimestamp(time14);
        eventCOMObject0.setRelated((java.lang.Long) 1558616165304L);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList19 = eventCOMObject0.getDomain();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 16 + "'", int15.equals(16));
        org.junit.Assert.assertNull(identifierList19);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList13 = new org.ccsds.moims.mo.mal.structures.DoubleList(14);
        java.util.ListIterator<java.lang.Double> doubleItor14 = doubleList13.listIterator();
        org.ccsds.moims.mo.mal.structures.Identifier identifier15 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = identifier15.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = identifier15.getAreaVersion();
        java.lang.String str18 = identifier15.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = identifier15.getAreaNumber();
        int int20 = doubleList13.indexOf((java.lang.Object) uShort19);
        boolean boolean21 = duration11.equals((java.lang.Object) int20);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(doubleItor14);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("");
        dictionary0.defineWord((java.lang.Integer) (-2), "");
        dictionary0.defineWord((java.lang.Integer) 12, "18446744073709551615");
        dictionary0.resetFastNetwork();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeURI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uRI6.getAreaVersion();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList17 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        int int20 = intList17.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream21 = intList17.stream();
        java.util.Iterator<java.lang.Integer> intItor22 = intList17.iterator();
        boolean boolean23 = uRI6.equals((java.lang.Object) intItor22);
        java.lang.String str24 = uRI6.getValue();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = uRI6.getAreaVersion();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(uRI6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(intItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertNotNull(uOctet25);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, 5);
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray12);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder5.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uInteger9.getServiceNumber();
        java.lang.String str11 = uInteger9.toString();
        long long12 = uInteger9.getValue();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "0" + "'", str11.equals("0"));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRIList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRIList0.getAreaNumber();
        uRIList0.clear();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uRIList0.getAreaVersion();
        java.lang.Long long7 = uRIList0.getShortForm();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime14 = binaryDecoder13.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI15 = binaryDecoder13.decodeURI();
        org.ccsds.moims.mo.mal.structures.Element element16 = uRI15.createElement();
        java.lang.String str17 = uRI15.toString();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI18 = uRIList0.set((-2), uRI15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265070L + "'", long7.equals(281475010265070L));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(fineTime14);
        org.junit.Assert.assertNotNull(uRI15);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        org.ccsds.moims.mo.mal.structures.Element element12 = time11.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = time11.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = uOctet13.getServiceNumber();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertNotNull(uShort14);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.lang.Integer int2 = uLong1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.Element element4 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uLong1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int7 = uRIList6.getTypeShortForm();
        java.lang.Integer int8 = uRIList6.getTypeShortForm();
        java.lang.Object obj9 = uRIList6.clone();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        int int16 = uRIList6.lastIndexOf((java.lang.Object) binaryDecoder15);
        java.lang.Boolean boolean17 = binaryDecoder15.decodeBoolean();
        byte[] byteArray18 = binaryDecoder15.getRemainingEncodedData();
        java.lang.Boolean boolean19 = binaryDecoder15.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger20 = binaryDecoder15.decodeUInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element21 = uLong1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 14 + "'", int2.equals(14));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-18) + "'", int7.equals((-18)));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17.equals(true));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19.equals(true));
        org.junit.Assert.assertNotNull(uInteger20);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        int int11 = uRIList0.size();
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList19 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList19, shortArray18);
        java.util.ListIterator<java.lang.Short> shortItor21 = shortList19.listIterator();
        int int22 = doubleList14.indexOf((java.lang.Object) shortList19);
        doubleList14.ensureCapacity((-1));
        doubleList14.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream27 = doubleList14.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob29 = new org.ccsds.moims.mo.mal.structures.Blob("[hi!, ]".getBytes());
        int int30 = doubleList14.lastIndexOf((java.lang.Object) blob29);
        boolean boolean31 = uRIList0.equals((java.lang.Object) doubleList14);
        java.lang.Object obj32 = uRIList0.clone();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor33 = uRIList0.iterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = uRIList0.getAreaVersion();
        java.lang.Long long35 = uOctet34.getShortForm();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(shortItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(doubleStream27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(uRIItor33);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281474993487880L + "'", long35.equals(281474993487880L));
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        eventCOMObject0.setObjType(objectType14);
        org.ccsds.moims.mo.com.structures.ObjectId objectId18 = eventCOMObject0.getObjectId();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList19 = eventCOMObject0.getDomain();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(objectId18);
        org.junit.Assert.assertNull(identifierList19);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) 'a');
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        org.ccsds.moims.mo.mal.structures.OctetList octetList10 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = octetList10.getServiceNumber();
        boolean boolean12 = doubleList8.containsAll((java.util.Collection<java.lang.Byte>) octetList10);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray13 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList14 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList14, uShortArray13);
        uShortList14.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element18 = uOctet17.createElement();
        int int19 = uShortList14.indexOf((java.lang.Object) element18);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.lang.Long[] longArray32 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList33 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList33, longArray32);
        java.lang.Object obj35 = longList33.clone();
        int int36 = strList23.indexOf((java.lang.Object) longList33);
        java.util.ListIterator<java.lang.String> strItor37 = strList23.listIterator();
        java.lang.Short[] shortArray41 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList42 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList42, shortArray41);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray49 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList50 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList50, uRIArray49);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
        boolean boolean60 = byteList57.add((java.lang.Byte) (byte) 100);
        boolean boolean61 = uRIList50.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean62 = strList47.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean63 = shortList42.contains((java.lang.Object) byteList57);
        boolean boolean64 = strList23.removeAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean65 = uShortList14.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        int int66 = byteList57.size();
        boolean boolean67 = octetList10.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean68 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) octetList10);
        org.ccsds.moims.mo.mal.structures.OctetList octetList69 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = octetList69.getServiceNumber();
        boolean boolean71 = doubleList1.removeAll((java.util.Collection<java.lang.Byte>) octetList69);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject72 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId73 = eventCOMObject72.getSource();
        java.lang.Long long74 = eventCOMObject72.getObjId();
        boolean boolean75 = doubleList1.contains((java.lang.Object) long74);
        org.ccsds.moims.mo.mal.structures.UShort uShort76 = doubleList1.getAreaNumber();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(uShortArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(uRIArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertNull(objectId73);
        org.junit.Assert.assertNull(long74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertNotNull(uShort76);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean45 = strList3.isEmpty();
        java.lang.Byte[] byteArray50 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList51 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList51, byteArray50);
        boolean boolean54 = byteList51.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray59 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList60 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList60, byteArray59);
        boolean boolean63 = byteList60.add((java.lang.Byte) (byte) 100);
        boolean boolean64 = byteList51.addAll((java.util.Collection<java.lang.Byte>) byteList60);
        java.lang.Object obj65 = byteList51.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream66 = byteList51.stream();
        boolean boolean67 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList51);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList69 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = doubleList69.getAreaNumber();
        java.lang.Object obj71 = doubleList69.clone();
        byte[] byteArray75 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder76 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray75);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder77 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray75);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet78 = binaryDecoder77.decodeNullableUOctet();
        int int79 = doubleList69.lastIndexOf((java.lang.Object) binaryDecoder77);
        byte[] byteArray80 = binaryDecoder77.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder81 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray80);
        int int82 = byteList51.lastIndexOf((java.lang.Object) byteArray80);
        java.lang.Byte byte84 = byteList51.remove(3);
        byteList51.ensureCapacity(11);
        java.util.ListIterator<java.lang.Byte> byteItor87 = byteList51.listIterator();
        java.util.ListIterator<java.lang.Byte> byteItor88 = byteList51.listIterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(byteStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertNotNull(uOctet78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + byte84 + "' != '" + (byte) -1 + "'", byte84.equals((byte) -1));
        org.junit.Assert.assertNotNull(byteItor87);
        org.junit.Assert.assertNotNull(byteItor88);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.com.structures.ObjectType objectType3 = eventCOMObject0.getObjType();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNull(objectType3);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        try {
            java.lang.Long long8 = binaryDecoder6.decodeNullableLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl4 = cOMServicesConsumer0.getArchiveSyncService();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl5 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl4);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl5);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList18 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList18, booleanArray17);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = byteList25.addAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.lang.Object obj39 = byteList25.clone();
        boolean boolean40 = booleanList18.contains((java.lang.Object) byteList25);
        boolean boolean41 = longList13.remove((java.lang.Object) boolean40);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        int int51 = longList13.lastIndexOf((java.lang.Object) byteList47);
        org.ccsds.moims.mo.mal.structures.OctetList octetList52 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = octetList52.getServiceNumber();
        boolean boolean54 = longList13.removeAll((java.util.Collection<java.lang.Byte>) octetList52);
        boolean boolean55 = floatList0.remove((java.lang.Object) boolean54);
        java.lang.Long long56 = floatList0.getShortForm();
        floatList0.clear();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList66 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray68 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList69 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList69, uRIArray68);
        java.lang.Byte[] byteArray75 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList76 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList76, byteArray75);
        boolean boolean79 = byteList76.add((java.lang.Byte) (byte) 100);
        boolean boolean80 = uRIList69.containsAll((java.util.Collection<java.lang.Byte>) byteList76);
        boolean boolean81 = intList66.removeAll((java.util.Collection<java.lang.Byte>) byteList76);
        boolean boolean83 = intList66.remove((java.lang.Object) '4');
        byte[] byteArray87 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder88 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray87);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder89 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray87);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger90 = binaryDecoder89.decodeUInteger();
        boolean boolean91 = intList66.remove((java.lang.Object) binaryDecoder89);
        try {
            org.ccsds.moims.mo.mal.structures.Element element92 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uShort53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 281475010265084L + "'", long56.equals(281475010265084L));
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertNotNull(uRIArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", !boolean83);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertNotNull(uInteger90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        java.lang.Double double13 = binaryDecoder12.decodeNullableDouble();
        byte[] byteArray14 = binaryDecoder12.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14, (int) (short) 10, (int) (byte) -1);
        int int21 = blob20.getLength();
        try {
            binaryEncoder1.encodeBlob(blob20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals((double) double13, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int2 = dictionary0.getWordId("");
        dictionary0.defineWord((java.lang.Integer) (-2), "");
        boolean boolean7 = dictionary0.exists((java.lang.Integer) 1);
        boolean boolean9 = dictionary0.exists("[-1, 0, 100]");
        dictionary0.defineWord((java.lang.Integer) 0, "4294967295");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2.equals(1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder8.decodeUInteger();
        java.lang.Byte byte10 = binaryDecoder8.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element11 = uRIList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier12 = binaryDecoder8.decodeNullableIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -1 + "'", byte10.equals((byte) -1));
        org.junit.Assert.assertNotNull(element11);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        java.lang.Float float14 = binaryDecoder13.decodeNullableFloat();
        try {
            java.lang.Byte byte15 = binaryDecoder13.decodeOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14.equals(0.0f));
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        longList8.ensureCapacity((int) '4');
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        boolean boolean21 = byteList18.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray26 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList27 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList27, byteArray26);
        boolean boolean30 = byteList27.add((java.lang.Byte) (byte) 100);
        boolean boolean31 = byteList18.addAll((java.util.Collection<java.lang.Byte>) byteList27);
        java.lang.Object obj32 = byteList18.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream33 = byteList18.stream();
        java.lang.Object[] objArray34 = byteList18.toArray();
        boolean boolean35 = longList8.remove((java.lang.Object) byteList18);
        longList8.trimToSize();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList46 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        int int49 = intList46.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream50 = intList46.parallelStream();
        byte[] byteArray54 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder55 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray54);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder56 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray54);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet57 = binaryDecoder56.decodeNullableUOctet();
        java.lang.Long long58 = uOctet57.getShortForm();
        java.lang.Long long59 = uOctet57.getShortForm();
        int int60 = intList46.lastIndexOf((java.lang.Object) uOctet57);
        java.lang.Integer int61 = uOctet57.getTypeShortForm();
        java.lang.Long long62 = uOctet57.getShortForm();
        int int63 = longList8.indexOf((java.lang.Object) uOctet57);
        org.ccsds.moims.mo.mal.structures.UShort uShort64 = uOctet57.getAreaNumber();
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(byteStream33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertNotNull(uOctet57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 281474993487880L + "'", long58.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 281474993487880L + "'", long59.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 8 + "'", int61.equals(8));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 281474993487880L + "'", long62.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(uShort64);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList6 = eventCOMObject0.getDomain();
        eventCOMObject0.setObjId((java.lang.Long) 1558616165304L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType9 = eventCOMObject0.getObjType();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(identifierList6);
        org.junit.Assert.assertNull(objectType9);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("[false]");
        org.ccsds.moims.mo.mal.structures.URIList uRIList2 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int3 = uRIList2.getTypeShortForm();
        java.lang.Integer int4 = uRIList2.getTypeShortForm();
        java.lang.Object obj5 = uRIList2.clone();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        int int12 = uRIList2.lastIndexOf((java.lang.Object) binaryDecoder11);
        java.lang.Boolean boolean13 = binaryDecoder11.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration14 = binaryDecoder11.decodeDuration();
        java.lang.Integer int15 = duration14.getTypeShortForm();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        org.ccsds.moims.mo.mal.structures.Blob blob22 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray19);
        org.ccsds.moims.mo.mal.structures.Blob blob25 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray19, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder26 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        java.lang.Boolean boolean27 = binaryDecoder26.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Element element28 = duration14.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder26);
        try {
            org.ccsds.moims.mo.mal.structures.Element element29 = uRI1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13.equals(true));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15.equals(3));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27.equals(true));
        org.junit.Assert.assertNotNull(element28);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        boolean boolean13 = byteList8.isEmpty();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        int int19 = intList16.lastIndexOf((java.lang.Object) 0.0f);
        int int20 = byteList8.lastIndexOf((java.lang.Object) intList16);
        java.lang.String str21 = intList16.toString();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray22 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList23, uShortArray22);
        uShortList23.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet26 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element27 = uOctet26.createElement();
        int int28 = uShortList23.indexOf((java.lang.Object) element27);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.lang.Long[] longArray41 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList42 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList42, longArray41);
        java.lang.Object obj44 = longList42.clone();
        int int45 = strList32.indexOf((java.lang.Object) longList42);
        java.util.ListIterator<java.lang.String> strItor46 = strList32.listIterator();
        java.lang.Short[] shortArray50 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList51 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList51, shortArray50);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray58 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList59 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList59, uRIArray58);
        java.lang.Byte[] byteArray65 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList66 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList66, byteArray65);
        boolean boolean69 = byteList66.add((java.lang.Byte) (byte) 100);
        boolean boolean70 = uRIList59.containsAll((java.util.Collection<java.lang.Byte>) byteList66);
        boolean boolean71 = strList56.containsAll((java.util.Collection<java.lang.Byte>) byteList66);
        boolean boolean72 = shortList51.contains((java.lang.Object) byteList66);
        boolean boolean73 = strList32.removeAll((java.util.Collection<java.lang.Byte>) byteList66);
        boolean boolean74 = uShortList23.containsAll((java.util.Collection<java.lang.Byte>) byteList66);
        int int75 = byteList66.size();
        java.util.stream.Stream<java.lang.Byte> byteStream76 = byteList66.parallelStream();
        boolean boolean77 = intList16.contains((java.lang.Object) byteList66);
        byte[] byteArray81 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder82 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray81);
        java.lang.Short short83 = binaryDecoder82.decodeNullableShort();
        boolean boolean84 = intList16.contains((java.lang.Object) short83);
        intList16.trimToSize();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[10]" + "'", str21.equals("[10]"));
        org.junit.Assert.assertNotNull(uShortArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(uOctet26);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(uRIArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 5 + "'", int75 == 5);
        org.junit.Assert.assertNotNull(byteStream76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) -64 + "'", short83.equals((short) -64));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        int int10 = blob9.getLength();
        java.lang.String str11 = blob9.getURL();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = blob9.getAreaNumber();
        int int13 = blob9.getOffset();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 18 + "'", int13 == 18);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeDuration();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = duration12.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = duration12.getAreaNumber();
        java.lang.String str15 = duration12.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "NaN" + "'", str15.equals("NaN"));
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, (int) (short) 100);
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray12, 2, 18);
        blob18.detach();
        blob18.detach();
        byte[] byteArray24 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder25 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray24);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder26 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray24);
        org.ccsds.moims.mo.mal.structures.Blob blob27 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray24);
        org.ccsds.moims.mo.mal.structures.Blob blob30 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray24, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder31 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray24);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger32 = binaryDecoder31.decodeUInteger();
        int int34 = binaryDecoder31.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Identifier identifier36 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.Long long37 = identifier36.getShortForm();
        java.lang.String str38 = identifier36.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = identifier36.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element40 = binaryDecoder31.decodeElement((org.ccsds.moims.mo.mal.structures.Element) identifier36);
        try {
            org.ccsds.moims.mo.mal.structures.Element element41 = blob18.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder31);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(uInteger32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 281474993487878L + "'", long37.equals(281474993487878L));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "[hi!, ]" + "'", str38.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertNotNull(element40);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl3 = cOMServicesConsumer0.getArchiveService();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl3);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        java.lang.Short[] shortArray13 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList14 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList14, shortArray13);
        java.util.ListIterator<java.lang.Short> shortItor16 = shortList14.listIterator();
        int int17 = shortList14.size();
        java.lang.Class<?> wildcardClass18 = shortList14.getClass();
        shortList14.trimToSize();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder25 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Blob blob26 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray23);
        org.ccsds.moims.mo.mal.structures.Blob blob29 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray23, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder31 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        boolean boolean32 = shortList14.equals((java.lang.Object) byteArray23);
        try {
            org.ccsds.moims.mo.mal.MALListEncoder mALListEncoder33 = binaryEncoder1.createListEncoder((java.util.List) shortList14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(shortItor16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element1 = floatList0.createElement();
        java.util.stream.Stream<java.lang.Float> floatStream2 = floatList0.stream();
        java.lang.Short[] shortArray8 = new java.lang.Short[] { (short) -64, (short) 1, (short) 127, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList9 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList9, shortArray8);
        java.lang.Long[] longArray18 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList19 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList19, longArray18);
        java.lang.Object obj21 = longList19.clone();
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList24 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList24, booleanArray23);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList31 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList31, byteArray30);
        boolean boolean34 = byteList31.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
        boolean boolean43 = byteList40.add((java.lang.Byte) (byte) 100);
        boolean boolean44 = byteList31.addAll((java.util.Collection<java.lang.Byte>) byteList40);
        java.lang.Object obj45 = byteList31.clone();
        boolean boolean46 = booleanList24.contains((java.lang.Object) byteList31);
        boolean boolean47 = longList19.remove((java.lang.Object) boolean46);
        java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53, byteArray52);
        boolean boolean56 = byteList53.add((java.lang.Byte) (byte) 100);
        int int57 = longList19.lastIndexOf((java.lang.Object) byteList53);
        org.ccsds.moims.mo.mal.structures.OctetList octetList58 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort59 = octetList58.getServiceNumber();
        boolean boolean60 = longList19.removeAll((java.util.Collection<java.lang.Byte>) octetList58);
        java.lang.Double[] doubleArray67 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList68 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList68, doubleArray67);
        org.ccsds.moims.mo.mal.structures.OctetList octetList70 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort71 = octetList70.getServiceNumber();
        boolean boolean72 = doubleList68.containsAll((java.util.Collection<java.lang.Byte>) octetList70);
        boolean boolean73 = octetList58.addAll(0, (java.util.Collection<java.lang.Byte>) octetList70);
        boolean boolean74 = shortList9.removeAll((java.util.Collection<java.lang.Byte>) octetList70);
        boolean boolean75 = floatList0.retainAll((java.util.Collection<java.lang.Byte>) octetList70);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList76 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        doubleList76.clear();
        boolean boolean78 = floatList0.contains((java.lang.Object) doubleList76);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = floatList0.getAreaVersion();
        java.io.InputStream inputStream80 = null;
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder81 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(inputStream80);
        try {
            org.ccsds.moims.mo.mal.structures.Element element82 = uOctet79.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(floatStream2);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(uShort59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertNotNull(uShort71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertNotNull(uOctet79);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeFloat((java.lang.Float) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList(50);
        int int2 = booleanList1.size();
        org.ccsds.moims.mo.mal.structures.Element element3 = booleanList1.createElement();
        java.lang.Long long4 = booleanList1.getShortForm();
        java.lang.Float[] floatArray10 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList11 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList11, floatArray10);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15, booleanArray14);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList31 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList31, byteArray30);
        boolean boolean34 = byteList31.add((java.lang.Byte) (byte) 100);
        boolean boolean35 = byteList22.addAll((java.util.Collection<java.lang.Byte>) byteList31);
        java.lang.Object obj36 = byteList22.clone();
        boolean boolean37 = booleanList15.contains((java.lang.Object) byteList22);
        int int38 = floatList11.lastIndexOf((java.lang.Object) booleanList15);
        java.lang.Byte[] byteArray43 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList44 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList44, byteArray43);
        boolean boolean47 = byteList44.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53, byteArray52);
        boolean boolean56 = byteList53.add((java.lang.Byte) (byte) 100);
        boolean boolean57 = byteList44.addAll((java.util.Collection<java.lang.Byte>) byteList53);
        java.lang.Object obj58 = byteList44.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream59 = byteList44.stream();
        boolean boolean60 = booleanList15.equals((java.lang.Object) byteList44);
        boolean boolean61 = booleanList1.retainAll((java.util.Collection<java.lang.Byte>) byteList44);
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        org.ccsds.moims.mo.mal.structures.Blob blob68 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray65);
        org.ccsds.moims.mo.mal.structures.Blob blob71 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray65, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder72 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger73 = binaryDecoder72.decodeUInteger();
        byte[] byteArray74 = binaryDecoder72.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.Element element75 = booleanList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265086L + "'", long4.equals(281475010265086L));
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(byteStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(uInteger73);
        org.junit.Assert.assertNotNull(byteArray74);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject3.getObjectId();
        eventCOMObject0.setSource(objectId12);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject14 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject14.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType19 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription20 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType19);
        eventCOMObject14.setObjType(objectType19);
        java.lang.Long long22 = eventCOMObject14.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId23 = eventCOMObject14.getObjectId();
        eventCOMObject0.setSource(objectId23);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList25 = eventCOMObject0.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject26 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI28 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject26.setSourceURI(uRI28);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet30 = uRI28.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = uRI28.getAreaNumber();
        eventCOMObject0.setSourceURI(uRI28);
        org.ccsds.moims.mo.mal.structures.URIList uRIList33 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int34 = uRIList33.getTypeShortForm();
        java.lang.Integer int35 = uRIList33.getTypeShortForm();
        byte[] byteArray39 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder41 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray39);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger42 = binaryDecoder41.decodeUInteger();
        java.lang.Byte byte43 = binaryDecoder41.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element44 = uRIList33.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder41);
        try {
            org.ccsds.moims.mo.mal.structures.Element element45 = uRI28.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId12);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 4294967295L + "'", long22.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId23);
        org.junit.Assert.assertNull(identifierList25);
        org.junit.Assert.assertNotNull(uOctet30);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-18) + "'", int34.equals((-18)));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-18) + "'", int35.equals((-18)));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(uInteger42);
        org.junit.Assert.assertTrue("'" + byte43 + "' != '" + (byte) -1 + "'", byte43.equals((byte) -1));
        org.junit.Assert.assertNotNull(element44);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = blob9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int13 = floatList11.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int14 = floatList11.getTypeShortForm();
        boolean boolean15 = floatList11.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator16 = floatList11.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = floatList11.getServiceNumber();
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = uShort19.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder24);
        byte[] byteArray27 = binaryDecoder24.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong28 = binaryDecoder24.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-4) + "'", int14.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(floatSpliterator16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(byteArray27);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        int int20 = blob11.getOffset();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet21 = blob11.getAreaVersion();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(uOctet21);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int2 = stringList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        byte byte7 = binaryEncoder5.internalEncodeAttributeType((byte) -1);
        try {
            stringList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-15) + "'", int2.equals((-15)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7 == (byte) -1);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl2 = cOMServicesConsumer0.getEventService();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl4 = cOMServicesConsumer0.getArchiveService();
        org.junit.Assert.assertNull(eventConsumerServiceImpl2);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl4);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        java.lang.Float[] floatArray9 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList10 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList10, floatArray9);
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14, booleanArray13);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        boolean boolean24 = byteList21.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        boolean boolean34 = byteList21.addAll((java.util.Collection<java.lang.Byte>) byteList30);
        java.lang.Object obj35 = byteList21.clone();
        boolean boolean36 = booleanList14.contains((java.lang.Object) byteList21);
        int int37 = floatList10.lastIndexOf((java.lang.Object) booleanList14);
        java.lang.Float float39 = floatList10.remove(2);
        byte[] byteArray43 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder44 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray43);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder45 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray43);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet46 = binaryDecoder45.decodeNullableUOctet();
        int int47 = floatList10.lastIndexOf((java.lang.Object) binaryDecoder45);
        try {
            org.ccsds.moims.mo.mal.structures.Element element48 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + (-1.0f) + "'", float39.equals((-1.0f)));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertNotNull(uOctet46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Time time6 = binaryDecoder5.decodeTime();
        java.lang.Short short7 = binaryDecoder5.decodeShort();
        try {
            java.lang.Byte byte8 = binaryDecoder5.decodeOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(time6);
        org.junit.Assert.assertTrue("'" + short7 + "' != '" + (short) -64 + "'", short7.equals((short) -64));
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        boolean boolean70 = uRIList58.isEmpty();
        uRIList58.ensureCapacity(100);
        org.ccsds.moims.mo.mal.structures.Element element73 = uRIList58.createElement();
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertNotNull(element73);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Byte byte6 = binaryDecoder5.decodeOctet();
        java.lang.Short short7 = binaryDecoder5.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = binaryDecoder5.decodeNullableUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6.equals((byte) 100));
        org.junit.Assert.assertTrue("'" + short7 + "' != '" + (short) -64 + "'", short7.equals((short) -64));
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = duration1.getAreaVersion();
        java.lang.Integer int4 = duration1.getTypeShortForm();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) -1);
        try {
            duration1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4.equals(3));
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -1 + "'", byte8 == (byte) -1);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        java.lang.Integer int6 = fineTime5.getTypeShortForm();
        java.lang.Long long7 = fineTime5.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = fineTime5.getAreaVersion();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 17 + "'", int6.equals(17));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487889L + "'", long7.equals(281474993487889L));
        org.junit.Assert.assertNotNull(uOctet8);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject0.getObjectId();
        org.ccsds.moims.mo.mal.structures.Time time10 = eventCOMObject0.getTimestamp();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject11 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject11.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier14 = null;
        eventCOMObject11.setNetworkZone(identifier14);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject16 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId17 = eventCOMObject16.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier18 = eventCOMObject16.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject19 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject19.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType24 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription25 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType24);
        eventCOMObject19.setObjType(objectType24);
        java.lang.Long long27 = eventCOMObject19.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId28 = eventCOMObject19.getObjectId();
        eventCOMObject16.setSource(objectId28);
        eventCOMObject11.setSource(objectId28);
        org.ccsds.moims.mo.mal.structures.FloatList floatList31 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element32 = floatList31.createElement();
        java.util.stream.Stream<java.lang.Float> floatStream33 = floatList31.parallelStream();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = floatList31.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList35 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element36 = booleanList35.createElement();
        int int38 = booleanList35.lastIndexOf((java.lang.Object) 281474993487878L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet39 = booleanList35.getAreaVersion();
        boolean boolean40 = floatList31.contains((java.lang.Object) booleanList35);
        org.ccsds.moims.mo.mal.structures.Element element41 = floatList31.createElement();
        eventCOMObject11.setBody(element41);
        org.ccsds.moims.mo.com.structures.ObjectId objectId43 = eventCOMObject11.getSource();
        eventCOMObject0.setSource(objectId43);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId9);
        org.junit.Assert.assertNull(time10);
        org.junit.Assert.assertNull(objectId17);
        org.junit.Assert.assertNull(identifier18);
        org.junit.Assert.assertNotNull(objectType24);
        org.junit.Assert.assertNotNull(subscription25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 4294967295L + "'", long27.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId28);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(floatStream33);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(uOctet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(objectId43);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Object obj3 = floatList0.clone();
        java.lang.Integer int4 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.LongList longList6 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        boolean boolean8 = longList6.equals((java.lang.Object) 6);
        java.lang.Integer int9 = longList6.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element10 = longList6.createElement();
        boolean boolean11 = floatList0.contains((java.lang.Object) longList6);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList13 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream14 = integerList13.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element15 = integerList13.createElement();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray16 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList17 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList17, uShortArray16);
        uShortList17.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element21 = uOctet20.createElement();
        int int22 = uShortList17.indexOf((java.lang.Object) element21);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.lang.Long[] longArray35 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList36 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList36, longArray35);
        java.lang.Object obj38 = longList36.clone();
        int int39 = strList26.indexOf((java.lang.Object) longList36);
        java.util.ListIterator<java.lang.String> strItor40 = strList26.listIterator();
        java.lang.Short[] shortArray44 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList45 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList45, shortArray44);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray52 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList53 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList53, uRIArray52);
        java.lang.Byte[] byteArray59 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList60 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList60, byteArray59);
        boolean boolean63 = byteList60.add((java.lang.Byte) (byte) 100);
        boolean boolean64 = uRIList53.containsAll((java.util.Collection<java.lang.Byte>) byteList60);
        boolean boolean65 = strList50.containsAll((java.util.Collection<java.lang.Byte>) byteList60);
        boolean boolean66 = shortList45.contains((java.lang.Object) byteList60);
        boolean boolean67 = strList26.removeAll((java.util.Collection<java.lang.Byte>) byteList60);
        boolean boolean68 = uShortList17.containsAll((java.util.Collection<java.lang.Byte>) byteList60);
        boolean boolean69 = integerList13.retainAll((java.util.Collection<java.lang.Byte>) byteList60);
        integerList13.ensureCapacity((-10));
        byte[] byteArray75 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder76 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray75);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder77 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray75);
        java.lang.Float float78 = binaryDecoder77.decodeFloat();
        java.lang.Byte byte79 = binaryDecoder77.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element80 = integerList13.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder77);
        try {
            org.ccsds.moims.mo.mal.structures.Element element81 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-4) + "'", int4.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-13) + "'", int9.equals((-13)));
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(intStream14);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(uShortArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(uOctet20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(uRIArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + 7.0E-44f + "'", float78.equals(7.0E-44f));
        org.junit.Assert.assertTrue("'" + byte79 + "' != '" + (byte) -1 + "'", byte79.equals((byte) -1));
        org.junit.Assert.assertNotNull(element80);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        java.math.BigInteger bigInteger8 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong9 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger8);
        java.lang.Integer int10 = uLong9.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element11 = uLong9.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uLong9.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = uLong9.getAreaNumber();
        java.lang.Integer int14 = uLong9.getTypeShortForm();
        java.lang.String str15 = uLong9.toString();
        try {
            binaryEncoder1.encodeULong(uLong9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 14 + "'", int10.equals(14));
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 14 + "'", int14.equals(14));
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "18446744073709551615" + "'", str15.equals("18446744073709551615"));
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.String str18 = strList3.toString();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = binaryDecoder24.decodeNullableUOctet();
        java.lang.Long long26 = uOctet25.getShortForm();
        short short27 = uOctet25.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = uOctet25.getServiceNumber();
        boolean boolean29 = strList3.remove((java.lang.Object) uShort28);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray30 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList31, uRIArray30);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        boolean boolean42 = uRIList31.containsAll((java.util.Collection<java.lang.Byte>) byteList38);
        int int44 = uRIList31.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        int int65 = byteList59.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean66 = uRIList31.removeAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean67 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList59);
        byteList59.clear();
        java.lang.Object obj69 = null;
        int int70 = byteList59.lastIndexOf(obj69);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "[hi!, ]" + "'", str18.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281474993487880L + "'", long26.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short27 + "' != '" + (short) 127 + "'", short27 == (short) 127);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(uRIArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.math.BigInteger bigInteger6 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong7 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger6);
        java.lang.Integer int8 = uLong7.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element9 = uLong7.createElement();
        org.ccsds.moims.mo.mal.structures.Element element10 = uLong7.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = uLong7.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uLong7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element13 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort12);
        try {
            java.lang.Long long14 = binaryDecoder5.decodeLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 14 + "'", int8.equals(14));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(element13);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType3 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject0.setObjType(objectType3);
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        java.lang.Object obj20 = longList18.clone();
        int int21 = strList8.indexOf((java.lang.Object) longList18);
        java.util.stream.Stream<java.lang.Long> longStream22 = longList18.parallelStream();
        longList18.add(2, (java.lang.Long) 281475010265070L);
        java.util.stream.Stream<java.lang.Long> longStream26 = longList18.parallelStream();
        org.ccsds.moims.mo.mal.structures.URI uRI28 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        java.lang.String str29 = uRI28.toString();
        int int30 = longList18.indexOf((java.lang.Object) uRI28);
        eventCOMObject0.setSourceURI(uRI28);
        java.lang.Integer int32 = uRI28.getTypeShortForm();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNotNull(objectType3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(longStream22);
        org.junit.Assert.assertNotNull(longStream26);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 18 + "'", int32.equals(18));
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.ULong uLong14 = binaryDecoder13.decodeNullableULong();
        byte[] byteArray15 = binaryDecoder13.getRemainingEncodedData();
        try {
            java.lang.Byte byte16 = binaryDecoder13.decodeNullableOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNull(uLong14);
        org.junit.Assert.assertNotNull(byteArray15);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int7 = uRIList6.size();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray18 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList19 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList19, uRIArray18);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = uRIList19.containsAll((java.util.Collection<java.lang.Byte>) byteList26);
        boolean boolean31 = intList16.removeAll((java.util.Collection<java.lang.Byte>) byteList26);
        boolean boolean32 = uRIList6.removeAll((java.util.Collection<java.lang.Byte>) byteList26);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder33 = binaryDecoder4.createListDecoder((java.util.List) byteList26);
        boolean boolean34 = byteList26.isEmpty();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uRIArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(mALListDecoder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        java.lang.Integer int77 = octetList18.getTypeShortForm();
        java.lang.String str78 = octetList18.toString();
        int int79 = octetList18.size();
        java.lang.Object obj80 = octetList18.clone();
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-7) + "'", int77.equals((-7)));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "[]" + "'", str78.equals("[]"));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = eventCOMObject0.getNetworkZone();
        org.ccsds.moims.mo.com.structures.ObjectId objectId4 = eventCOMObject0.getObjectId();
        java.lang.Long long5 = eventCOMObject0.getObjId();
        org.junit.Assert.assertNull(identifier3);
        org.junit.Assert.assertNotNull(objectId4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 4294967295L + "'", long5.equals(4294967295L));
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = eventCOMObject0.getNetworkZone();
        org.ccsds.moims.mo.mal.structures.Element element4 = eventCOMObject0.getBody();
        org.ccsds.moims.mo.com.structures.ObjectId objectId5 = eventCOMObject0.getSource();
        org.junit.Assert.assertNull(identifier3);
        org.junit.Assert.assertNull(element4);
        org.junit.Assert.assertNull(objectId5);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3, 6);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier7 = binaryDecoder6.decodeNullableIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        floatList0.ensureCapacity(12);
        try {
            java.lang.Object obj7 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) 12, "1");
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchFieldException; message: 1");
        } catch (java.lang.NoSuchFieldException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRI2.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRI2.getServiceNumber();
        java.lang.Class<?> wildcardClass6 = uRI2.getClass();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uRI2.getAreaNumber();
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(uShort7);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.lang.Long[] longArray16 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList17 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList17, longArray16);
        java.lang.Object obj19 = longList17.clone();
        int int20 = strList7.indexOf((java.lang.Object) longList17);
        java.util.ListIterator<java.lang.String> strItor21 = strList7.listIterator();
        java.lang.Short[] shortArray25 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList26 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList26, shortArray25);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray33 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList34, uRIArray33);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        boolean boolean45 = uRIList34.containsAll((java.util.Collection<java.lang.Byte>) byteList41);
        boolean boolean46 = strList31.containsAll((java.util.Collection<java.lang.Byte>) byteList41);
        boolean boolean47 = shortList26.contains((java.lang.Object) byteList41);
        boolean boolean48 = strList7.removeAll((java.util.Collection<java.lang.Byte>) byteList41);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList63 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList63, byteArray62);
        boolean boolean66 = byteList63.add((java.lang.Byte) (byte) 100);
        boolean boolean67 = byteList54.addAll((java.util.Collection<java.lang.Byte>) byteList63);
        boolean boolean68 = byteList41.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        org.ccsds.moims.mo.mal.structures.URI uRI70 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet71 = uRI70.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort72 = uRI70.getServiceNumber();
        byte[] byteArray76 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder77 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray76, 6);
        boolean boolean80 = uShort72.equals((java.lang.Object) binaryDecoder79);
        int int81 = byteList63.indexOf((java.lang.Object) boolean80);
        boolean boolean82 = floatList0.containsAll((java.util.Collection<java.lang.Byte>) byteList63);
        java.lang.Integer int83 = floatList0.getTypeShortForm();
        floatList0.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort uShort85 = floatList0.getServiceNumber();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(uRIArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertNotNull(uOctet71);
        org.junit.Assert.assertNotNull(uShort72);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-4) + "'", int83.equals((-4)));
        org.junit.Assert.assertNotNull(uShort85);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime12 = binaryDecoder10.decodeNullableFineTime();
        java.lang.String str13 = fineTime12.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(fineTime12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "0" + "'", str13.equals("0"));
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int2 = stringList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        boolean boolean24 = byteList21.add((java.lang.Byte) (byte) 100);
        boolean boolean25 = byteList12.addAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int27 = byteList21.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean28 = uRIList5.retainAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int29 = stringList1.lastIndexOf((java.lang.Object) uRIList5);
        java.lang.Long long30 = stringList1.getShortForm();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList32 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = doubleList32.getAreaNumber();
        java.lang.Object obj34 = doubleList32.clone();
        byte[] byteArray38 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder39 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = binaryDecoder40.decodeNullableUOctet();
        int int42 = doubleList32.lastIndexOf((java.lang.Object) binaryDecoder40);
        java.util.stream.Stream<java.lang.Double> doubleStream43 = doubleList32.stream();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer44 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl45 = cOMServicesConsumer44.getArchiveService();
        cOMServicesConsumer44.closeConnections();
        cOMServicesConsumer44.closeConnections();
        boolean boolean48 = doubleList32.contains((java.lang.Object) cOMServicesConsumer44);
        boolean boolean49 = stringList1.contains((java.lang.Object) boolean48);
        java.lang.String str50 = stringList1.toString();
        java.io.OutputStream outputStream51 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder52 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream51);
        byte byte54 = binaryEncoder52.internalEncodeAttributeType((byte) -1);
        try {
            stringList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-15) + "'", int2.equals((-15)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 281475010265073L + "'", long30.equals(281475010265073L));
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(doubleStream43);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "[]" + "'", str50.equals("[]"));
        org.junit.Assert.assertTrue("'" + byte54 + "' != '" + (byte) -1 + "'", byte54 == (byte) -1);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        int int3 = booleanList0.lastIndexOf((java.lang.Object) 281474993487878L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = booleanList0.getAreaVersion();
        java.lang.Integer int5 = booleanList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList6 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element7 = booleanList6.createElement();
        int int9 = booleanList6.indexOf((java.lang.Object) 281474993487875L);
        org.ccsds.moims.mo.mal.structures.FloatList floatList10 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element11 = floatList10.createElement();
        java.lang.Integer int12 = floatList10.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.ShortList shortList13 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = shortList13.getAreaNumber();
        java.lang.Object[] objArray15 = shortList13.toArray();
        java.lang.Long long16 = shortList13.getShortForm();
        java.lang.Long long17 = shortList13.getShortForm();
        java.lang.Object[] objArray18 = shortList13.toArray();
        org.ccsds.moims.mo.mal.structures.FloatList floatList19 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = byteList25.addAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.lang.Object obj39 = byteList25.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream40 = byteList25.stream();
        boolean boolean41 = floatList19.containsAll((java.util.Collection<java.lang.Byte>) byteList25);
        byteList25.ensureCapacity((-4));
        byteList25.clear();
        boolean boolean45 = shortList13.retainAll((java.util.Collection<java.lang.Byte>) byteList25);
        boolean boolean46 = floatList10.removeAll((java.util.Collection<java.lang.Byte>) byteList25);
        boolean boolean47 = booleanList6.containsAll((java.util.Collection<java.lang.Byte>) byteList25);
        booleanList6.trimToSize();
        boolean boolean49 = booleanList0.remove((java.lang.Object) booleanList6);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList51 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        esa.mo.com.impl.util.EventCOMObject eventCOMObject53 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI55 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject53.setSourceURI(uRI55);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet57 = uRI55.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = uRI55.getServiceNumber();
        uShortList51.add(0, uShort58);
        int int60 = booleanList6.lastIndexOf((java.lang.Object) uShortList51);
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-2) + "'", int5.equals((-2)));
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-4) + "'", int12.equals((-4)));
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281475010265079L + "'", long16.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 281475010265079L + "'", long17.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(byteStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(uOctet57);
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject12.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType17 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription18 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType17);
        eventCOMObject12.setObjType(objectType17);
        eventCOMObject3.setObjType(objectType17);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("18446744073709551615", objectType17);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList22 = fastObjectType1.getObjectTypeIds(objectType17);
        boolean boolean24 = fastObjectType1.exists((java.lang.Long) 281474993487874L);
        boolean boolean26 = fastObjectType1.exists((java.lang.Long) 1558616178307L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType27 = null;
        try {
            java.lang.Integer int28 = fastObjectType1.getObjectTypeId(objectType27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(integerList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = binaryDecoder9.decodeNullableDuration();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = duration12.getAreaNumber();
        java.io.OutputStream outputStream14 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder15 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream14);
        byte byte17 = binaryEncoder15.internalEncodeAttributeType((byte) 100);
        byte byte19 = binaryEncoder15.internalEncodeAttributeType((byte) 10);
        try {
            duration12.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 100 + "'", byte17 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 10 + "'", byte19 == (byte) 10);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.lang.Integer int2 = uLong1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.Element element4 = uLong1.createElement();
        java.lang.String str5 = uLong1.toString();
        java.lang.String str6 = uLong1.toString();
        java.lang.String str7 = uLong1.toString();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer8 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl9 = cOMServicesConsumer8.getArchiveService();
        cOMServicesConsumer8.closeConnections();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl11 = cOMServicesConsumer8.getEventService();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl12 = cOMServicesConsumer8.getEventService();
        boolean boolean13 = uLong1.equals((java.lang.Object) cOMServicesConsumer8);
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl14 = cOMServicesConsumer8.getArchiveService();
        cOMServicesConsumer8.closeConnections();
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 14 + "'", int2.equals(14));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "18446744073709551615" + "'", str5.equals("18446744073709551615"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "18446744073709551615" + "'", str6.equals("18446744073709551615"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "18446744073709551615" + "'", str7.equals("18446744073709551615"));
        org.junit.Assert.assertNull(archiveConsumerServiceImpl9);
        org.junit.Assert.assertNull(eventConsumerServiceImpl11);
        org.junit.Assert.assertNull(eventConsumerServiceImpl12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl14);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7 == (byte) -1);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType3 = fastObjectType1.getObjectType((java.lang.Integer) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: null");
        } catch (java.lang.Exception e) {
        }
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        java.lang.Long long8 = uOctet6.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList9 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int10 = uRIList9.getTypeShortForm();
        java.lang.Integer int11 = uRIList9.getTypeShortForm();
        java.lang.Object obj12 = uRIList9.clone();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        int int19 = uRIList9.lastIndexOf((java.lang.Object) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Duration duration20 = binaryDecoder18.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element21 = uOctet6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        byte[] byteArray22 = binaryDecoder18.getRemainingEncodedData();
        try {
            java.lang.String str23 = binaryDecoder18.decodeString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(byteArray22);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uInteger6.getAreaVersion();
        java.lang.Long long8 = uInteger6.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList10 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        int int12 = uShortList10.lastIndexOf((java.lang.Object) true);
        boolean boolean13 = uInteger6.equals((java.lang.Object) int12);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = uInteger6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = uInteger6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = uInteger6.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = uInteger6.getAreaVersion();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487884L + "'", long8.equals(281474993487884L));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertNotNull(uOctet15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(uOctet17);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        java.lang.Double double6 = binaryDecoder5.decodeNullableDouble();
        boolean boolean7 = octetList0.remove((java.lang.Object) binaryDecoder5);
        try {
            java.lang.Short short8 = binaryDecoder5.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals((double) double6, Double.NaN, 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        int int14 = uRIList1.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        int int35 = byteList29.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean36 = uRIList1.removeAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList43 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList43, doubleArray42);
        org.ccsds.moims.mo.mal.structures.OctetList octetList45 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = octetList45.getServiceNumber();
        boolean boolean47 = doubleList43.containsAll((java.util.Collection<java.lang.Byte>) octetList45);
        boolean boolean48 = uRIList1.retainAll((java.util.Collection<java.lang.Byte>) octetList45);
        java.lang.Object obj49 = uRIList1.clone();
        org.ccsds.moims.mo.mal.structures.Time time50 = new org.ccsds.moims.mo.mal.structures.Time();
        int int51 = uRIList1.indexOf((java.lang.Object) time50);
        long long52 = time50.getValue();
        java.lang.Integer int53 = time50.getTypeShortForm();
        byte[] byteArray57 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder58 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray57);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder59 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray57);
        java.lang.Byte byte60 = binaryDecoder59.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element61 = time50.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder59);
        org.ccsds.moims.mo.mal.structures.Element element62 = time50.createElement();
        java.lang.String str63 = time50.toString();
        java.lang.Long long64 = time50.getShortForm();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 16 + "'", int53.equals(16));
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertTrue("'" + byte60 + "' != '" + (byte) 100 + "'", byte60.equals((byte) 100));
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element62);
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "0" + "'", str63.equals("0"));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 281474993487888L + "'", long64.equals(281474993487888L));
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        boolean boolean3 = floatList0.isEmpty();
        java.lang.Long long4 = floatList0.getShortForm();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        java.lang.Object obj20 = longList18.clone();
        int int21 = strList8.indexOf((java.lang.Object) longList18);
        java.util.ListIterator<java.lang.String> strItor22 = strList8.listIterator();
        java.lang.Short[] shortArray26 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList27 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList27, shortArray26);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray34 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList35, uRIArray34);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        boolean boolean46 = uRIList35.containsAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean47 = strList32.containsAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean48 = shortList27.contains((java.lang.Object) byteList42);
        boolean boolean49 = strList8.removeAll((java.util.Collection<java.lang.Byte>) byteList42);
        boolean boolean50 = strList8.isEmpty();
        int int51 = floatList0.indexOf((java.lang.Object) strList8);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray52 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList53 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList53, uShortArray52);
        uShortList53.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet56 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element57 = uOctet56.createElement();
        int int58 = uShortList53.indexOf((java.lang.Object) element57);
        boolean boolean60 = uShortList53.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor61 = uShortList53.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort62 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean63 = uShortList53.add(uShort62);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray64 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList65 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList65, uRIArray64);
        java.lang.Byte[] byteArray71 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList72 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList72, byteArray71);
        boolean boolean75 = byteList72.add((java.lang.Byte) (byte) 100);
        boolean boolean76 = uRIList65.containsAll((java.util.Collection<java.lang.Byte>) byteList72);
        boolean boolean77 = uShortList53.retainAll((java.util.Collection<java.lang.Byte>) byteList72);
        org.ccsds.moims.mo.mal.structures.OctetList octetList78 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = octetList78.getAreaVersion();
        boolean boolean80 = byteList72.addAll((java.util.Collection<java.lang.Byte>) octetList78);
        boolean boolean81 = floatList0.removeAll((java.util.Collection<java.lang.Byte>) octetList78);
        org.ccsds.moims.mo.mal.structures.URIList uRIList82 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int83 = uRIList82.getTypeShortForm();
        java.lang.Integer int84 = uRIList82.getTypeShortForm();
        java.lang.Object obj85 = uRIList82.clone();
        byte[] byteArray89 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder90 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder91 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray89);
        int int92 = uRIList82.lastIndexOf((java.lang.Object) binaryDecoder91);
        org.ccsds.moims.mo.mal.structures.Duration duration93 = binaryDecoder91.decodeDuration();
        java.lang.Byte byte94 = binaryDecoder91.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element95 = octetList78.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder91);
        java.util.Spliterator<java.lang.Byte> byteSpliterator96 = octetList78.spliterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265084L + "'", long4.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(uRIArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uShortArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(uOctet56);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(uShortItor61);
        org.junit.Assert.assertNotNull(uShort62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(uRIArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uOctet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-18) + "'", int83.equals((-18)));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-18) + "'", int84.equals((-18)));
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertTrue("'" + byte94 + "' != '" + (byte) -1 + "'", byte94.equals((byte) -1));
        org.junit.Assert.assertNotNull(element95);
        org.junit.Assert.assertNotNull(byteSpliterator96);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        java.lang.Float float9 = binaryDecoder5.decodeNullableFloat();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9.equals(0.0f));
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        boolean boolean3 = fastObjectType1.exists((java.lang.Long) 1558616177410L);
        boolean boolean5 = fastObjectType1.exists((java.lang.Long) 281474993487874L);
        boolean boolean7 = fastObjectType1.exists((java.lang.Integer) 7);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.stream();
        org.ccsds.moims.mo.mal.structures.OctetList octetList42 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean43 = strList35.retainAll((java.util.Collection<java.lang.Byte>) octetList42);
        java.lang.String str44 = strList35.toString();
        strList35.clear();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject46 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject46.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType51 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription52 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType51);
        eventCOMObject46.setObjType(objectType51);
        java.lang.Long long54 = eventCOMObject46.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId55 = eventCOMObject46.getObjectId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId56 = eventCOMObject46.getObjectId();
        int int57 = strList35.lastIndexOf((java.lang.Object) eventCOMObject46);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList58 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int59 = booleanList58.getTypeShortForm();
        java.util.ListIterator<java.lang.Boolean> booleanItor60 = booleanList58.listIterator();
        int int61 = strList35.indexOf((java.lang.Object) booleanItor60);
        boolean boolean62 = strList35.isEmpty();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "[]" + "'", str44.equals("[]"));
        org.junit.Assert.assertNotNull(objectType51);
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 4294967295L + "'", long54.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId55);
        org.junit.Assert.assertNotNull(objectId56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-2) + "'", int59.equals((-2)));
        org.junit.Assert.assertNotNull(booleanItor60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType4 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(9, 32, 8, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UShort argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeOctet((java.lang.Byte) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        stringList1.ensureCapacity((-15));
        java.lang.Float[] floatArray9 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList10 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList10, floatArray9);
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14, booleanArray13);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        boolean boolean24 = byteList21.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        boolean boolean34 = byteList21.addAll((java.util.Collection<java.lang.Byte>) byteList30);
        java.lang.Object obj35 = byteList21.clone();
        boolean boolean36 = booleanList14.contains((java.lang.Object) byteList21);
        int int37 = floatList10.lastIndexOf((java.lang.Object) booleanList14);
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator38 = booleanList14.spliterator();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList47 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray49 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList50 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList50, uRIArray49);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
        boolean boolean60 = byteList57.add((java.lang.Byte) (byte) 100);
        boolean boolean61 = uRIList50.containsAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean62 = intList47.removeAll((java.util.Collection<java.lang.Byte>) byteList57);
        org.ccsds.moims.mo.mal.structures.Union union64 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        int int65 = byteList57.lastIndexOf((java.lang.Object) union64);
        boolean boolean66 = booleanList14.removeAll((java.util.Collection<java.lang.Byte>) byteList57);
        boolean boolean67 = stringList1.equals((java.lang.Object) boolean66);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList68 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet69 = integerList68.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = integerList68.getAreaNumber();
        byte[] byteArray74 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder75 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray74);
        org.ccsds.moims.mo.mal.structures.Element element76 = uShort70.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder75);
        org.ccsds.moims.mo.mal.structures.Time time77 = binaryDecoder75.decodeTime();
        try {
            org.ccsds.moims.mo.mal.structures.Element element78 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(booleanSpliterator38);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(uRIArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertNotNull(uOctet69);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertNotNull(time77);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte[] byteArray11 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray11);
        java.lang.Double double13 = binaryDecoder12.decodeNullableDouble();
        byte[] byteArray14 = binaryDecoder12.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = blob17.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList19 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int21 = floatList19.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int22 = floatList19.getTypeShortForm();
        boolean boolean23 = floatList19.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator24 = floatList19.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = floatList19.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = floatList19.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = floatList19.getServiceNumber();
        byte[] byteArray31 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder32 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        org.ccsds.moims.mo.mal.structures.Element element33 = uShort27.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder32);
        org.ccsds.moims.mo.mal.structures.Element element34 = uOctet18.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder32);
        byte[] byteArray35 = binaryDecoder32.getRemainingEncodedData();
        try {
            binaryEncoder1.directEncodeBytes(byteArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7 == (byte) -1);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals((double) double13, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(uOctet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(floatSpliterator24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(byteArray35);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.ccsds.moims.mo.com.structures.ObjectType objectType1 = null;
        try {
            org.ccsds.moims.mo.mal.structures.Subscription subscription2 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("1", objectType1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.lang.Integer int2 = uLong1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.Element element4 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uLong1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uLong1.getAreaVersion();
        java.io.OutputStream outputStream7 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder8 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream7);
        byte byte10 = binaryEncoder8.internalEncodeAttributeType((byte) 100);
        byte byte12 = binaryEncoder8.internalEncodeAttributeType((byte) -1);
        byte byte14 = binaryEncoder8.internalEncodeAttributeType((byte) 100);
        try {
            uLong1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 14 + "'", int2.equals(14));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 100 + "'", byte10 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 100 + "'", byte14 == (byte) 100);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        try {
            org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = binaryDecoder9.decodeNullableUOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        int int11 = uRIList0.size();
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList19 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList19, shortArray18);
        java.util.ListIterator<java.lang.Short> shortItor21 = shortList19.listIterator();
        int int22 = doubleList14.indexOf((java.lang.Object) shortList19);
        doubleList14.ensureCapacity((-1));
        doubleList14.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream27 = doubleList14.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob29 = new org.ccsds.moims.mo.mal.structures.Blob("[hi!, ]".getBytes());
        int int30 = doubleList14.lastIndexOf((java.lang.Object) blob29);
        boolean boolean31 = uRIList0.equals((java.lang.Object) doubleList14);
        java.lang.Object obj32 = uRIList0.clone();
        int int33 = uRIList0.size();
        java.io.OutputStream outputStream34 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder35 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream34);
        byte byte37 = binaryEncoder35.internalEncodeAttributeType((byte) 100);
        byte byte39 = binaryEncoder35.internalEncodeAttributeType((byte) -1);
        byte byte41 = binaryEncoder35.internalEncodeAttributeType((byte) 100);
        try {
            uRIList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(shortItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(doubleStream27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + byte37 + "' != '" + (byte) 100 + "'", byte37 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte39 + "' != '" + (byte) -1 + "'", byte39 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte41 + "' != '" + (byte) 100 + "'", byte41 == (byte) 100);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList3 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList3, intArray2);
        int int6 = intList3.lastIndexOf((java.lang.Object) 0.0f);
        java.util.ListIterator<java.lang.Integer> intItor8 = intList3.listIterator(0);
        boolean boolean9 = time0.equals((java.lang.Object) intList3);
        org.ccsds.moims.mo.mal.structures.URIList uRIList10 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int11 = uRIList10.getTypeShortForm();
        java.lang.Integer int12 = uRIList10.getTypeShortForm();
        java.lang.Object obj13 = uRIList10.clone();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        int int20 = uRIList10.lastIndexOf((java.lang.Object) binaryDecoder19);
        java.lang.Boolean boolean21 = binaryDecoder19.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Element element22 = time0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder19);
        try {
            java.lang.Float float23 = binaryDecoder19.decodeNullableFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(intItor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-18) + "'", int12.equals((-18)));
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21.equals(true));
        org.junit.Assert.assertNotNull(element22);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList(5);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Double double7 = binaryDecoder6.decodeNullableDouble();
        byte[] byteArray8 = binaryDecoder6.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8, 15);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8);
        int int12 = shortList1.lastIndexOf((java.lang.Object) blob11);
        shortList1.clear();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals((double) double7, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        java.lang.Integer int8 = blob0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = blob0.getServiceNumber();
        java.lang.String str10 = blob0.getURL();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = blob0.getAreaVersion();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8.equals(1));
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(uOctet11);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob8 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        boolean boolean10 = blob9.isURLBased();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = blob9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray12 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList13, uShortArray12);
        uShortList13.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element17 = uOctet16.createElement();
        int int18 = uShortList13.indexOf((java.lang.Object) element17);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.lang.Long[] longArray31 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList32 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList32, longArray31);
        java.lang.Object obj34 = longList32.clone();
        int int35 = strList22.indexOf((java.lang.Object) longList32);
        java.util.ListIterator<java.lang.String> strItor36 = strList22.listIterator();
        java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList41 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList41, shortArray40);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray48 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList49 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList49, uRIArray48);
        java.lang.Byte[] byteArray55 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList56 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList56, byteArray55);
        boolean boolean59 = byteList56.add((java.lang.Byte) (byte) 100);
        boolean boolean60 = uRIList49.containsAll((java.util.Collection<java.lang.Byte>) byteList56);
        boolean boolean61 = strList46.containsAll((java.util.Collection<java.lang.Byte>) byteList56);
        boolean boolean62 = shortList41.contains((java.lang.Object) byteList56);
        boolean boolean63 = strList22.removeAll((java.util.Collection<java.lang.Byte>) byteList56);
        boolean boolean64 = uShortList13.containsAll((java.util.Collection<java.lang.Byte>) byteList56);
        java.lang.String str65 = uShortList13.toString();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream66 = uShortList13.stream();
        java.lang.Object obj67 = null;
        boolean boolean68 = uShortList13.remove(obj67);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream69 = uShortList13.stream();
        boolean boolean70 = blob9.equals((java.lang.Object) uShortStream69);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(uShortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(uRIArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "[]" + "'", str65.equals("[]"));
        org.junit.Assert.assertNotNull(uShortStream66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uShortStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 1);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI10 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject8.setSourceURI(uRI10);
        org.ccsds.moims.mo.com.structures.ObjectType objectType12 = eventCOMObject8.getObjType();
        org.ccsds.moims.mo.mal.structures.Identifier identifier13 = eventCOMObject8.getNetworkZone();
        org.ccsds.moims.mo.mal.structures.Identifier identifier14 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str15 = identifier14.toString();
        eventCOMObject8.setBody((org.ccsds.moims.mo.mal.structures.Element) identifier14);
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
        org.junit.Assert.assertNull(objectType12);
        org.junit.Assert.assertNull(identifier13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int2 = stringList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        boolean boolean24 = byteList21.add((java.lang.Byte) (byte) 100);
        boolean boolean25 = byteList12.addAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int27 = byteList21.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean28 = uRIList5.retainAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int29 = stringList1.lastIndexOf((java.lang.Object) uRIList5);
        byte[] byteArray33 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder34 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder35 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        boolean boolean36 = stringList1.remove((java.lang.Object) binaryDecoder35);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet37 = stringList1.getAreaVersion();
        try {
            java.lang.String str40 = stringList1.set((int) '4', "[2, 10, -11, -7, 100, 8, 6, -7, 0]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-15) + "'", int2.equals((-15)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(uOctet37);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Float[] floatArray12 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList13 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList13, floatArray12);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Object obj38 = byteList24.clone();
        boolean boolean39 = booleanList17.contains((java.lang.Object) byteList24);
        int int40 = floatList13.lastIndexOf((java.lang.Object) booleanList17);
        boolean boolean41 = floatList13.isEmpty();
        boolean boolean42 = uInteger6.equals((java.lang.Object) boolean41);
        long long43 = uInteger6.getValue();
        long long44 = uInteger6.getValue();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 100L + "'", long43 == 100L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 100L + "'", long44 == 100L);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.ccsds.moims.mo.mal.structures.Blob blob0 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray4 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray4);
        org.ccsds.moims.mo.mal.structures.Element element7 = blob0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder6);
        java.lang.Integer int8 = blob0.getTypeShortForm();
        java.lang.String str9 = blob0.getURL();
        java.io.OutputStream outputStream10 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder11 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream10);
        byte byte13 = binaryEncoder11.internalEncodeAttributeType((byte) 100);
        byte byte15 = binaryEncoder11.internalEncodeAttributeType((byte) -1);
        byte byte17 = binaryEncoder11.internalEncodeAttributeType((byte) 100);
        byte byte19 = binaryEncoder11.internalEncodeAttributeType((byte) 100);
        try {
            blob0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder11);
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Null value supplied in a non-nullable field");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8.equals(1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 100 + "'", byte13 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -1 + "'", byte15 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 100 + "'", byte17 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 100 + "'", byte19 == (byte) 100);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.Duration duration9 = new org.ccsds.moims.mo.mal.structures.Duration((double) 1558616178307L);
        try {
            binaryEncoder1.encodeNullableDuration(duration9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        org.ccsds.moims.mo.mal.structures.ULong uLong7 = binaryDecoder5.decodeNullableULong();
        try {
            java.lang.String str8 = binaryDecoder5.decodeString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertNull(uLong7);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        java.lang.Short short12 = binaryDecoder9.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong13 = binaryDecoder9.decodeULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertTrue("'" + short12 + "' != '" + (short) -64 + "'", short12.equals((short) -64));
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        java.lang.Integer int77 = octetList18.getTypeShortForm();
        java.util.Iterator<java.lang.Byte> byteItor78 = octetList18.iterator();
        octetList18.clear();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet80 = octetList18.getAreaVersion();
        try {
            java.util.ListIterator<java.lang.Byte> byteItor82 = octetList18.listIterator(15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 15");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-7) + "'", int77.equals((-7)));
        org.junit.Assert.assertNotNull(byteItor78);
        org.junit.Assert.assertNotNull(uOctet80);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity2 = new esa.mo.com.impl.archive.entities.DomainHolderEntity(10, "[281474993487878, 100, -1, 100, 1, 1, 1]");
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.Element element1 = eventCOMObject0.getBody();
        org.ccsds.moims.mo.com.structures.ObjectId objectId2 = eventCOMObject0.getObjectId();
        org.junit.Assert.assertNull(element1);
        org.junit.Assert.assertNotNull(objectId2);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        boolean boolean3 = longList1.equals((java.lang.Object) 6);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime9 = binaryDecoder8.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList10 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int11 = uRIList10.size();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray22 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList23, uRIArray22);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        boolean boolean34 = uRIList23.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean35 = intList20.removeAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean36 = uRIList10.removeAll((java.util.Collection<java.lang.Byte>) byteList30);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder37 = binaryDecoder8.createListDecoder((java.util.List) byteList30);
        boolean boolean38 = longList1.retainAll((java.util.Collection<java.lang.Byte>) byteList30);
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = longList1.getServiceNumber();
        java.io.OutputStream outputStream40 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder41 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream40);
        byte byte43 = binaryEncoder41.internalEncodeAttributeType((byte) 100);
        byte byte45 = binaryEncoder41.internalEncodeAttributeType((byte) -1);
        byte byte47 = binaryEncoder41.internalEncodeAttributeType((byte) 100);
        try {
            uShort39.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(fineTime9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(uRIArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(mALListDecoder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + byte43 + "' != '" + (byte) 100 + "'", byte43 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte45 + "' != '" + (byte) -1 + "'", byte45 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte47 + "' != '" + (byte) 100 + "'", byte47 == (byte) 100);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.stream();
        strList35.trimToSize();
        int int43 = strList35.size();
        strList35.ensureCapacity(50);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.lang.Integer int2 = uLong1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uLong1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uLong1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uLong1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uLong1.getAreaNumber();
        java.io.OutputStream outputStream8 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder9 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream8);
        byte byte11 = binaryEncoder9.internalEncodeAttributeType((byte) 100);
        byte byte13 = binaryEncoder9.internalEncodeAttributeType((byte) 10);
        byte byte15 = binaryEncoder9.internalEncodeAttributeType((byte) -1);
        try {
            uShort7.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 14 + "'", int2.equals(14));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 100 + "'", byte11 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 10 + "'", byte13 == (byte) 10);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -1 + "'", byte15 == (byte) -1);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = duration1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList4 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        byteList13.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean21 = longList4.removeAll((java.util.Collection<java.lang.Byte>) byteList13);
        boolean boolean22 = duration1.equals((java.lang.Object) longList4);
        org.ccsds.moims.mo.mal.structures.StringList stringList24 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = stringList24.getAreaNumber();
        java.lang.Integer int26 = stringList24.getTypeShortForm();
        boolean boolean27 = duration1.equals((java.lang.Object) stringList24);
        byte[] byteArray31 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder32 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder33 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray31);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = binaryDecoder33.decodeNullableUOctet();
        java.lang.Long long35 = uOctet34.getShortForm();
        java.lang.Long long36 = uOctet34.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList37 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int38 = uRIList37.getTypeShortForm();
        java.lang.Integer int39 = uRIList37.getTypeShortForm();
        java.lang.Object obj40 = uRIList37.clone();
        byte[] byteArray44 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder45 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder46 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray44);
        int int47 = uRIList37.lastIndexOf((java.lang.Object) binaryDecoder46);
        org.ccsds.moims.mo.mal.structures.Duration duration48 = binaryDecoder46.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element49 = uOctet34.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder46);
        byte[] byteArray50 = binaryDecoder46.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder51 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray50);
        boolean boolean52 = duration1.equals((java.lang.Object) binaryDecoder51);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI53 = binaryDecoder51.decodeURI();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-15) + "'", int26.equals((-15)));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281474993487880L + "'", long35.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 281474993487880L + "'", long36.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-18) + "'", int38.equals((-18)));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-18) + "'", int39.equals((-18)));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.com.structures.ObjectType objectType4 = eventCOMObject0.getObjType();
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = eventCOMObject0.getNetworkZone();
        org.ccsds.moims.mo.mal.structures.Identifier identifier6 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str7 = identifier6.toString();
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) identifier6);
        org.ccsds.moims.mo.mal.structures.Element element9 = identifier6.createElement();
        org.junit.Assert.assertNull(objectType4);
        org.junit.Assert.assertNull(identifier5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        org.junit.Assert.assertNotNull(element9);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeURI();
        org.ccsds.moims.mo.mal.structures.Element element7 = uRI6.createElement();
        java.lang.String str8 = uRI6.toString();
        org.ccsds.moims.mo.mal.structures.Element element9 = uRI6.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = uRI6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = uRI6.getAreaNumber();
        java.lang.Integer int12 = uRI6.getTypeShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(uRI6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 18 + "'", int12.equals(18));
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = binaryDecoder5.decodeNullableUOctet();
        java.lang.Long long7 = uOctet6.getShortForm();
        java.lang.Long long8 = uOctet6.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList9 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int10 = uRIList9.getTypeShortForm();
        java.lang.Integer int11 = uRIList9.getTypeShortForm();
        java.lang.Object obj12 = uRIList9.clone();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        int int19 = uRIList9.lastIndexOf((java.lang.Object) binaryDecoder18);
        org.ccsds.moims.mo.mal.structures.Duration duration20 = binaryDecoder18.decodeDuration();
        org.ccsds.moims.mo.mal.structures.Element element21 = uOctet6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
        byte[] byteArray22 = binaryDecoder18.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        try {
            org.ccsds.moims.mo.mal.structures.FineTime fineTime24 = binaryDecoder23.decodeFineTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487880L + "'", long7.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487880L + "'", long8.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(byteArray22);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.lang.Long long4 = doubleList1.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream5 = doubleList1.parallelStream();
        boolean boolean7 = doubleList1.add((java.lang.Double) 0.0d);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) 10 };
        java.util.ArrayList<java.lang.Byte> byteList10 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList10, byteArray9);
        java.util.Spliterator<java.lang.Byte> byteSpliterator12 = byteList10.spliterator();
        boolean boolean13 = doubleList1.containsAll((java.util.Collection<java.lang.Byte>) byteList10);
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int21 = blob20.getOffset();
        boolean boolean22 = doubleList1.equals((java.lang.Object) blob20);
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList25 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream26 = integerList25.parallelStream();
        integerList25.ensureCapacity((int) 'a');
        org.ccsds.moims.mo.mal.structures.UShort uShort29 = integerList25.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = integerList25.getAreaNumber();
        boolean boolean31 = doubleList1.remove((java.lang.Object) uShort30);
        java.util.Spliterator<java.lang.Double> doubleSpliterator32 = doubleList1.spliterator();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265083L + "'", long4.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(uShort29);
        org.junit.Assert.assertNotNull(uShort30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(doubleSpliterator32);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        java.lang.Long[] longArray11 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
        java.lang.Object obj14 = longList12.clone();
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Object obj38 = byteList24.clone();
        boolean boolean39 = booleanList17.contains((java.lang.Object) byteList24);
        boolean boolean40 = longList12.remove((java.lang.Object) boolean39);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        int int50 = longList12.lastIndexOf((java.lang.Object) byteList46);
        org.ccsds.moims.mo.mal.structures.OctetList octetList51 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort52 = octetList51.getServiceNumber();
        boolean boolean53 = longList12.removeAll((java.util.Collection<java.lang.Byte>) octetList51);
        int int54 = longList12.size();
        org.ccsds.moims.mo.mal.structures.Identifier identifier55 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.Integer int56 = identifier55.getTypeShortForm();
        int int57 = longList12.lastIndexOf((java.lang.Object) identifier55);
        java.lang.String str58 = identifier55.getValue();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList67 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList67, intArray66);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray69 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList70 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList70, uRIArray69);
        java.lang.Byte[] byteArray76 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList77 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList77, byteArray76);
        boolean boolean80 = byteList77.add((java.lang.Byte) (byte) 100);
        boolean boolean81 = uRIList70.containsAll((java.util.Collection<java.lang.Byte>) byteList77);
        boolean boolean82 = intList67.removeAll((java.util.Collection<java.lang.Byte>) byteList77);
        boolean boolean84 = intList67.remove((java.lang.Object) '4');
        java.util.stream.Stream<java.lang.Integer> intStream85 = intList67.parallelStream();
        java.util.ListIterator<java.lang.Integer> intItor86 = intList67.listIterator();
        java.lang.Object obj87 = intList67.clone();
        boolean boolean88 = identifier55.equals(obj87);
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(uShort52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 6 + "'", int56.equals(6));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertNotNull(uRIArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertNotNull(intStream85);
        org.junit.Assert.assertNotNull(intItor86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        try {
            java.lang.Byte byte11 = binaryDecoder8.decodeNullableOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeDouble((java.lang.Double) 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int1 = booleanList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = booleanList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = uOctet2.getAreaVersion();
        java.lang.String str4 = uOctet3.toString();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8);
        org.ccsds.moims.mo.mal.structures.Blob blob14 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Element element17 = uOctet3.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
        org.ccsds.moims.mo.mal.structures.Blob blob18 = binaryDecoder16.decodeNullableBlob();
        try {
            org.ccsds.moims.mo.mal.structures.Duration duration19 = binaryDecoder16.decodeNullableDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2) + "'", int1.equals((-2)));
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "1" + "'", str4.equals("1"));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNull(blob18);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = integerList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = integerList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList6 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int7 = stringList6.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = stringList6.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray9 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList10, uRIArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        int int32 = byteList26.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean33 = uRIList10.retainAll((java.util.Collection<java.lang.Byte>) byteList26);
        int int34 = stringList6.lastIndexOf((java.lang.Object) uRIList10);
        byte[] byteArray38 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder39 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        boolean boolean41 = stringList6.remove((java.lang.Object) binaryDecoder40);
        org.ccsds.moims.mo.mal.structures.UShort uShort42 = stringList6.getAreaNumber();
        int int43 = integerList0.indexOf((java.lang.Object) stringList6);
        org.ccsds.moims.mo.mal.structures.Union union45 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet46 = union45.getAreaVersion();
        int int47 = stringList6.lastIndexOf((java.lang.Object) union45);
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-15) + "'", int7.equals((-15)));
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(uRIArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(uShort42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(uOctet46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, (int) (short) 1);
        try {
            java.lang.Long long11 = binaryDecoder9.decodeAbstractElementType(false);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Duration duration7 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = duration7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element9 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) duration7);
        try {
            java.lang.Byte byte10 = binaryDecoder5.decodeOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(element9);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.ccsds.moims.mo.com.structures.ObjectType objectType6 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType((int) ' ', 65535, (int) '4', 100);
        org.ccsds.moims.mo.mal.structures.Subscription subscription7 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("18446744073709551615", objectType6);
        org.ccsds.moims.mo.mal.structures.Subscription subscription8 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("NaN", objectType6);
        org.junit.Assert.assertNotNull(objectType6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertNotNull(subscription8);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity2 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-13), (java.lang.Long) 281474993487877L);
        java.lang.Long long3 = objectTypeHolderEntity2.getObjectType();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487877L + "'", long3.equals(281474993487877L));
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) ' ');
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList3 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int4 = uRIList3.getTypeShortForm();
        java.lang.Integer int5 = uRIList3.getTypeShortForm();
        java.lang.Object obj6 = uRIList3.clone();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        int int13 = uRIList3.lastIndexOf((java.lang.Object) binaryDecoder12);
        java.lang.Boolean boolean14 = binaryDecoder12.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Element element15 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort16 = binaryDecoder12.decodeUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-18) + "'", int4.equals((-18)));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-18) + "'", int5.equals((-18)));
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14.equals(true));
        org.junit.Assert.assertNotNull(element15);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        uShortList1.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element5 = uOctet4.createElement();
        int int6 = uShortList1.indexOf((java.lang.Object) element5);
        boolean boolean8 = uShortList1.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor9 = uShortList1.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean11 = uShortList1.add(uShort10);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray12 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList13, uRIArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        boolean boolean24 = uRIList13.containsAll((java.util.Collection<java.lang.Byte>) byteList20);
        boolean boolean25 = uShortList1.retainAll((java.util.Collection<java.lang.Byte>) byteList20);
        org.ccsds.moims.mo.mal.structures.OctetList octetList26 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = octetList26.getAreaVersion();
        boolean boolean28 = byteList20.addAll((java.util.Collection<java.lang.Byte>) octetList26);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList30 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = doubleList30.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = doubleList30.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = doubleList30.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream34 = doubleList30.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob35 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean36 = blob35.isURLBased();
        byte[] byteArray40 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder41 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray40);
        org.ccsds.moims.mo.mal.structures.Element element42 = blob35.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder41);
        boolean boolean43 = doubleList30.equals((java.lang.Object) element42);
        int int44 = byteList20.lastIndexOf((java.lang.Object) element42);
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(uShortItor9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(uRIArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(doubleStream34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int7 = uRIList6.size();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray18 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList19 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList19, uRIArray18);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = uRIList19.containsAll((java.util.Collection<java.lang.Byte>) byteList26);
        boolean boolean31 = intList16.removeAll((java.util.Collection<java.lang.Byte>) byteList26);
        boolean boolean32 = uRIList6.removeAll((java.util.Collection<java.lang.Byte>) byteList26);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder33 = binaryDecoder4.createListDecoder((java.util.List) byteList26);
        try {
            java.lang.Byte byte34 = binaryDecoder4.decodeNullableOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uRIArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(mALListDecoder33);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = uRIList26.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean38 = strList23.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean39 = doubleList2.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.String str40 = doubleList2.toString();
        org.ccsds.moims.mo.mal.structures.URI uRI42 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet43 = uRI42.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort44 = uRI42.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet45 = uRI42.getAreaVersion();
        int int46 = doubleList2.indexOf((java.lang.Object) uOctet45);
        try {
            doubleList2.add(14, (java.lang.Double) 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 14, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[0.0]" + "'", str40.equals("[0.0]"));
        org.junit.Assert.assertNotNull(uOctet43);
        org.junit.Assert.assertNotNull(uShort44);
        org.junit.Assert.assertNotNull(uOctet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((-2), "[hi!, ]");
        java.lang.Object obj4 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) (-2), "");
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (-2) + "'", obj4.equals((-2)));
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.stream();
        org.ccsds.moims.mo.mal.structures.OctetList octetList42 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean43 = strList35.retainAll((java.util.Collection<java.lang.Byte>) octetList42);
        java.lang.String str44 = strList35.toString();
        strList35.clear();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject46 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject46.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType51 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription52 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType51);
        eventCOMObject46.setObjType(objectType51);
        java.lang.Long long54 = eventCOMObject46.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId55 = eventCOMObject46.getObjectId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId56 = eventCOMObject46.getObjectId();
        int int57 = strList35.lastIndexOf((java.lang.Object) eventCOMObject46);
        org.ccsds.moims.mo.com.structures.ObjectId objectId58 = eventCOMObject46.getSource();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "[]" + "'", str44.equals("[]"));
        org.junit.Assert.assertNotNull(objectType51);
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 4294967295L + "'", long54.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId55);
        org.junit.Assert.assertNotNull(objectId56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(objectId58);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.Object obj20 = doubleList2.clone();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList34 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList34, longArray33);
        java.lang.Object obj36 = longList34.clone();
        int int37 = strList24.indexOf((java.lang.Object) longList34);
        java.util.ListIterator<java.lang.String> strItor38 = strList24.listIterator();
        java.lang.String str39 = strList24.toString();
        java.lang.Object[] objArray40 = strList24.toArray();
        boolean boolean41 = doubleList2.contains((java.lang.Object) strList24);
        org.ccsds.moims.mo.mal.structures.URIList uRIList43 = new org.ccsds.moims.mo.mal.structures.URIList((int) '#');
        java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList48 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList48, shortArray47);
        java.util.ListIterator<java.lang.Short> shortItor50 = shortList48.listIterator();
        int int51 = uRIList43.lastIndexOf((java.lang.Object) shortList48);
        org.ccsds.moims.mo.mal.structures.ShortList shortList52 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = shortList52.getAreaNumber();
        java.lang.Object[] objArray54 = shortList52.toArray();
        java.lang.Long long55 = shortList52.getShortForm();
        shortList52.ensureCapacity((int) (byte) 0);
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity60 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity((-11), "[0, 10]");
        java.lang.String str61 = networkHolderEntity60.getNetworkString();
        int int62 = shortList52.lastIndexOf((java.lang.Object) networkHolderEntity60);
        boolean boolean63 = uRIList43.contains((java.lang.Object) networkHolderEntity60);
        boolean boolean64 = doubleList2.contains((java.lang.Object) boolean63);
        int int65 = doubleList2.size();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[hi!, ]" + "'", str39.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(shortItor50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uShort53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 281475010265079L + "'", long55.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "[0, 10]" + "'", str61.equals("[0, 10]"));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 281474993487878L);
        org.ccsds.moims.mo.mal.structures.ShortList shortList3 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Integer int4 = shortList3.getTypeShortForm();
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) shortList3);
        java.lang.Long long6 = eventCOMObject0.getRelated();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject7 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject7.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType12 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription13 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType12);
        eventCOMObject7.setObjType(objectType12);
        java.lang.Long long15 = eventCOMObject7.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject16 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject16.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType21 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription22 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType21);
        eventCOMObject16.setObjType(objectType21);
        eventCOMObject7.setObjType(objectType21);
        org.ccsds.moims.mo.mal.structures.Time time25 = eventCOMObject7.getTimestamp();
        eventCOMObject7.setRelated((java.lang.Long) 281475010265073L);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject28 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId29 = eventCOMObject28.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier30 = eventCOMObject28.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject31 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject31.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType36 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription37 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType36);
        eventCOMObject31.setObjType(objectType36);
        java.lang.Long long39 = eventCOMObject31.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId40 = eventCOMObject31.getObjectId();
        eventCOMObject28.setSource(objectId40);
        org.ccsds.moims.mo.mal.structures.Time time42 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int43 = time42.getTypeShortForm();
        eventCOMObject28.setTimestamp(time42);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet45 = time42.getAreaVersion();
        eventCOMObject7.setTimestamp(time42);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet47 = time42.getAreaVersion();
        eventCOMObject0.setTimestamp(time42);
        java.math.BigInteger bigInteger49 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong50 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger49);
        org.ccsds.moims.mo.mal.structures.ULong uLong51 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger49);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList52 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        doubleList52.trimToSize();
        org.ccsds.moims.mo.mal.structures.Element element54 = doubleList52.createElement();
        boolean boolean55 = uLong51.equals((java.lang.Object) element54);
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) uLong51);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-9) + "'", int4.equals((-9)));
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertNotNull(subscription13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 4294967295L + "'", long15.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNull(time25);
        org.junit.Assert.assertNull(objectId29);
        org.junit.Assert.assertNull(identifier30);
        org.junit.Assert.assertNotNull(objectType36);
        org.junit.Assert.assertNotNull(subscription37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 4294967295L + "'", long39.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 16 + "'", int43.equals(16));
        org.junit.Assert.assertNotNull(uOctet45);
        org.junit.Assert.assertNotNull(uOctet47);
        org.junit.Assert.assertNotNull(bigInteger49);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uLong1.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity5 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long6 = objectTypeHolderEntity5.getObjectType();
        boolean boolean7 = uLong1.equals((java.lang.Object) long6);
        java.lang.Integer int8 = uLong1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = uLong1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element10 = uLong1.createElement();
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487879L + "'", long6.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 14 + "'", int8.equals(14));
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(element10);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        doubleList1.ensureCapacity(52);
        doubleList1.clear();
        java.util.stream.Stream<java.lang.Double> doubleStream15 = doubleList1.stream();
        java.lang.Integer int16 = doubleList1.getTypeShortForm();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-5) + "'", int16.equals((-5)));
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uInteger11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element13 = uInteger11.createElement();
        java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList18 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList18, shortArray17);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = uRIList26.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean38 = strList23.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean39 = shortList18.contains((java.lang.Object) byteList33);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray40 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList41, uRIArray40);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = uRIList41.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean53 = byteList48.isEmpty();
        boolean boolean54 = shortList18.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.util.stream.Stream<java.lang.Short> shortStream55 = shortList18.stream();
        boolean boolean56 = uInteger11.equals((java.lang.Object) shortList18);
        java.lang.String str57 = uInteger11.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = uInteger11.getAreaNumber();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(uRIArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(shortStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "127" + "'", str57.equals("127"));
        org.junit.Assert.assertNotNull(uShort58);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        integerList1.ensureCapacity((int) 'a');
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = integerList1.getServiceNumber();
        java.lang.Object obj6 = integerList1.clone();
        java.io.OutputStream outputStream7 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder8 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream7);
        byte byte10 = binaryEncoder8.internalEncodeAttributeType((byte) -1);
        try {
            integerList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -1 + "'", byte10 == (byte) -1);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        boolean boolean3 = booleanList0.add((java.lang.Boolean) true);
        boolean boolean5 = booleanList0.remove((java.lang.Object) 281474993487884L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = booleanList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Union union8 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        int int9 = booleanList0.lastIndexOf((java.lang.Object) (-1.0d));
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = booleanList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = booleanList0.getServiceNumber();
        java.lang.Object obj12 = booleanList0.clone();
        booleanList0.trimToSize();
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator14 = booleanList0.spliterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream15 = booleanList0.stream();
        java.io.OutputStream outputStream16 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder17 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream16);
        byte byte19 = binaryEncoder17.internalEncodeAttributeType((byte) 100);
        byte byte21 = binaryEncoder17.internalEncodeAttributeType((byte) 10);
        try {
            booleanList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(booleanSpliterator14);
        org.junit.Assert.assertNotNull(booleanStream15);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 100 + "'", byte19 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte21 + "' != '" + (byte) 10 + "'", byte21 == (byte) 10);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime12 = binaryDecoder11.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = fineTime12.getServiceNumber();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = binaryDecoder19.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Element element21 = fineTime12.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(uOctet20);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int1 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element2 = time0.createElement();
        java.lang.Integer int3 = time0.getTypeShortForm();
        java.lang.Long long4 = time0.getShortForm();
        java.lang.Integer int5 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int7 = uRIList6.getTypeShortForm();
        java.lang.Integer int8 = uRIList6.getTypeShortForm();
        java.lang.Object obj9 = uRIList6.clone();
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        int int16 = uRIList6.lastIndexOf((java.lang.Object) binaryDecoder15);
        org.ccsds.moims.mo.mal.structures.Time time17 = binaryDecoder15.decodeTime();
        org.ccsds.moims.mo.mal.structures.Duration duration18 = binaryDecoder15.decodeNullableDuration();
        try {
            org.ccsds.moims.mo.mal.structures.Element element19 = time0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 16 + "'", int1.equals(16));
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 16 + "'", int3.equals(16));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487888L + "'", long4.equals(281474993487888L));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 16 + "'", int5.equals(16));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-18) + "'", int7.equals((-18)));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(time17);
        org.junit.Assert.assertNotNull(duration18);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        int int13 = blob12.getLength();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = blob12.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList16 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean18 = blob17.isURLBased();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.Element element24 = blob17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
        boolean boolean25 = integerList16.equals((java.lang.Object) binaryDecoder23);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet26 = integerList16.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList27 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int28 = uRIList27.getTypeShortForm();
        java.lang.Integer int29 = uRIList27.getTypeShortForm();
        java.lang.Object obj30 = uRIList27.clone();
        byte[] byteArray34 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder35 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray34);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray34);
        int int37 = uRIList27.lastIndexOf((java.lang.Object) binaryDecoder36);
        org.ccsds.moims.mo.mal.structures.Duration duration38 = binaryDecoder36.decodeDuration();
        int int39 = integerList16.lastIndexOf((java.lang.Object) binaryDecoder36);
        java.lang.Boolean boolean40 = binaryDecoder36.decodeNullableBoolean();
        byte[] byteArray41 = binaryDecoder36.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Element element42 = uOctet14.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder36);
        try {
            org.ccsds.moims.mo.mal.structures.ULong uLong43 = binaryDecoder36.decodeNullableULong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uOctet26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-18) + "'", int28.equals((-18)));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-18) + "'", int29.equals((-18)));
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40.equals(false));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(element42);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder9.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uInteger11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element13 = uInteger11.createElement();
        java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList18 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList18, shortArray17);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = uRIList26.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean38 = strList23.containsAll((java.util.Collection<java.lang.Byte>) byteList33);
        boolean boolean39 = shortList18.contains((java.lang.Object) byteList33);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray40 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList41, uRIArray40);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = uRIList41.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean53 = byteList48.isEmpty();
        boolean boolean54 = shortList18.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.util.stream.Stream<java.lang.Short> shortStream55 = shortList18.stream();
        boolean boolean56 = uInteger11.equals((java.lang.Object) shortList18);
        java.lang.Object obj57 = shortList18.clone();
        boolean boolean58 = shortList18.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(uRIArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(shortStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        int int46 = longList8.lastIndexOf((java.lang.Object) byteList42);
        int int47 = longList8.size();
        byte[] byteArray51 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder52 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray51);
        java.lang.Double double53 = binaryDecoder52.decodeNullableDouble();
        byte[] byteArray54 = binaryDecoder52.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob55 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray54);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.lang.Long[] longArray68 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList69 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList69, longArray68);
        java.lang.Object obj71 = longList69.clone();
        int int72 = strList59.indexOf((java.lang.Object) longList69);
        java.util.ListIterator<java.lang.String> strItor73 = strList59.listIterator();
        java.lang.String str74 = strList59.toString();
        java.lang.Double[] doubleArray77 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList78 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList78, doubleArray77);
        java.lang.String[] strArray82 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        int int85 = strList83.size();
        boolean boolean86 = doubleList78.equals((java.lang.Object) strList83);
        boolean boolean87 = strList59.remove((java.lang.Object) strList83);
        boolean boolean88 = blob55.equals((java.lang.Object) strList83);
        org.ccsds.moims.mo.mal.structures.UShort uShort89 = blob55.getServiceNumber();
        int int90 = longList8.lastIndexOf((java.lang.Object) uShort89);
        longList8.clear();
        try {
            java.lang.Long long93 = longList8.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals((double) double53, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "[hi!, ]" + "'", str74.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", !boolean87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
        org.junit.Assert.assertNotNull(uShort89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList7 = new org.ccsds.moims.mo.mal.structures.UShortList(16);
        java.lang.Integer int8 = uShortList7.getTypeShortForm();
        java.lang.Long long9 = uShortList7.getShortForm();
        uShortList7.clear();
        try {
            org.ccsds.moims.mo.mal.MALListEncoder mALListEncoder11 = binaryEncoder1.createListEncoder((java.util.List) uShortList7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-10) + "'", int8.equals((-10)));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265078L + "'", long9.equals(281475010265078L));
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob5 = binaryDecoder4.decodeBlob();
        java.lang.Long long6 = blob5.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = blob5.getAreaNumber();
        boolean boolean8 = blob5.isURLBased();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = blob5.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = blob5.getServiceNumber();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(blob5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487873L + "'", long6.equals(281474993487873L));
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(uShort10);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        java.lang.Object[] objArray4 = shortList0.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = shortList0.getServiceNumber();
        java.lang.Integer int6 = shortList0.getTypeShortForm();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = binaryDecoder12.decodeNullableUOctet();
        java.lang.Long long14 = uOctet13.getShortForm();
        java.lang.Long long15 = uOctet13.getShortForm();
        int int16 = shortList0.indexOf((java.lang.Object) long15);
        java.util.stream.Stream<java.lang.Short> shortStream17 = shortList0.stream();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-9) + "'", int6.equals((-9)));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 281474993487880L + "'", long14.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487880L + "'", long15.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(shortStream17);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Duration duration23 = binaryDecoder21.decodeDuration();
        int int24 = integerList1.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.Element element25 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray26 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList27, uShortArray26);
        uShortList27.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet30 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element31 = uOctet30.createElement();
        int int32 = uShortList27.indexOf((java.lang.Object) element31);
        boolean boolean34 = uShortList27.contains((java.lang.Object) 100.0d);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream35 = uShortList27.stream();
        int int36 = integerList1.lastIndexOf((java.lang.Object) uShortStream35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(uShortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(uOctet30);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertNotNull(uShortStream35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableString("100");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Byte byte7 = binaryDecoder5.decodeOctet();
        java.lang.Float float8 = binaryDecoder5.decodeNullableFloat();
        org.ccsds.moims.mo.mal.structures.Union union10 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = union10.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uOctet11.getServiceNumber();
        try {
            org.ccsds.moims.mo.mal.structures.Element element13 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7.equals((byte) -1));
        org.junit.Assert.assertNull(float8);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(uShort12);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, 15);
        try {
            java.lang.Float float9 = binaryDecoder8.decodeNullableFloat();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 15");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
        java.lang.Long long13 = binaryDecoder9.decodeNullableLong();
        byte[] byteArray14 = binaryDecoder9.getRemainingEncodedData();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort15 = binaryDecoder9.decodeNullableUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12.equals((byte) -1));
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNotNull(byteArray14);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Element element2 = eventCOMObject0.getBody();
        org.ccsds.moims.mo.com.structures.ObjectId objectId3 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Element element4 = eventCOMObject0.getBody();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(element2);
        org.junit.Assert.assertNull(objectId3);
        org.junit.Assert.assertNull(element4);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType2 = eventCOMObject0.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        eventCOMObject0.setSourceURI(uRI5);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId9 = eventCOMObject8.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier10 = eventCOMObject8.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject11 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject11.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType16 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription17 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType16);
        eventCOMObject11.setObjType(objectType16);
        java.lang.Long long19 = eventCOMObject11.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId20 = eventCOMObject11.getObjectId();
        eventCOMObject8.setSource(objectId20);
        org.ccsds.moims.mo.mal.structures.Time time22 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int23 = time22.getTypeShortForm();
        eventCOMObject8.setTimestamp(time22);
        eventCOMObject0.setTimestamp(time22);
        org.ccsds.moims.mo.mal.structures.Identifier identifier26 = null;
        eventCOMObject0.setNetworkZone(identifier26);
        org.ccsds.moims.mo.mal.structures.URI uRI28 = eventCOMObject0.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject29 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId30 = eventCOMObject29.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier31 = eventCOMObject29.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject32 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject32.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType37 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription38 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType37);
        eventCOMObject32.setObjType(objectType37);
        java.lang.Long long40 = eventCOMObject32.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId41 = eventCOMObject32.getObjectId();
        eventCOMObject29.setSource(objectId41);
        org.ccsds.moims.mo.mal.structures.Time time43 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int44 = time43.getTypeShortForm();
        eventCOMObject29.setTimestamp(time43);
        long long46 = time43.getValue();
        eventCOMObject0.setTimestamp(time43);
        org.ccsds.moims.mo.mal.structures.Element element48 = eventCOMObject0.getBody();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(objectType2);
        org.junit.Assert.assertNull(objectId9);
        org.junit.Assert.assertNull(identifier10);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 4294967295L + "'", long19.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 16 + "'", int23.equals(16));
        org.junit.Assert.assertNotNull(uRI28);
        org.junit.Assert.assertNull(objectId30);
        org.junit.Assert.assertNull(identifier31);
        org.junit.Assert.assertNotNull(objectType37);
        org.junit.Assert.assertNotNull(subscription38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 4294967295L + "'", long40.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 16 + "'", int44.equals(16));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNull(element48);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        java.lang.Long long12 = time11.getShortForm();
        java.lang.Integer int13 = time11.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = time11.getAreaNumber();
        java.lang.Long long15 = time11.getShortForm();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281474993487888L + "'", long12.equals(281474993487888L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 16 + "'", int13.equals(16));
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487888L + "'", long15.equals(281474993487888L));
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        shortList0.ensureCapacity((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray6 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList7 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList7, uRIArray6);
        java.lang.Byte[] byteArray13 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList14 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList14, byteArray13);
        boolean boolean17 = byteList14.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList23 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList23, byteArray22);
        boolean boolean26 = byteList23.add((java.lang.Byte) (byte) 100);
        boolean boolean27 = byteList14.addAll((java.util.Collection<java.lang.Byte>) byteList23);
        int int29 = byteList23.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean30 = uRIList7.retainAll((java.util.Collection<java.lang.Byte>) byteList23);
        boolean boolean31 = shortList0.removeAll((java.util.Collection<java.lang.Byte>) byteList23);
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = shortList0.getServiceNumber();
        java.io.OutputStream outputStream33 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder34 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream33);
        byte byte36 = binaryEncoder34.internalEncodeAttributeType((byte) 100);
        byte byte38 = binaryEncoder34.internalEncodeAttributeType((byte) 10);
        byte byte40 = binaryEncoder34.internalEncodeAttributeType((byte) -1);
        try {
            shortList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(uRIArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertTrue("'" + byte36 + "' != '" + (byte) 100 + "'", byte36 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte38 + "' != '" + (byte) 10 + "'", byte38 == (byte) 10);
        org.junit.Assert.assertTrue("'" + byte40 + "' != '" + (byte) -1 + "'", byte40 == (byte) -1);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.LongList longList3 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 100);
        boolean boolean16 = uRIList5.containsAll((java.util.Collection<java.lang.Byte>) byteList12);
        byteList12.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean20 = longList3.removeAll((java.util.Collection<java.lang.Byte>) byteList12);
        boolean boolean21 = uShortList1.removeAll((java.util.Collection<java.lang.Byte>) byteList12);
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder26 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray25);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder27 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray25);
        java.math.BigInteger bigInteger28 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong29 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger28);
        java.lang.Integer int30 = uLong29.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element31 = uLong29.createElement();
        org.ccsds.moims.mo.mal.structures.Element element32 = uLong29.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet33 = uLong29.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort34 = uLong29.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element35 = binaryDecoder27.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort34);
        try {
            org.ccsds.moims.mo.mal.structures.Element element36 = uShortList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertNotNull(bigInteger28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 14 + "'", int30.equals(14));
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(uOctet33);
        org.junit.Assert.assertNotNull(uShort34);
        org.junit.Assert.assertNotNull(element35);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        doubleList2.trimToSize();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject12.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier15 = eventCOMObject12.getNetworkZone();
        int int16 = doubleList2.indexOf((java.lang.Object) identifier15);
        java.util.stream.Stream<java.lang.Double> doubleStream17 = doubleList2.stream();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(identifier15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(doubleStream17);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = stringList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element4 = stringList1.createElement();
        java.lang.Integer int5 = stringList1.getTypeShortForm();
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        java.lang.Float float12 = binaryDecoder11.decodeFloat();
        try {
            org.ccsds.moims.mo.mal.structures.Element element13 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-15) + "'", int5.equals((-15)));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 7.0E-44f + "'", float12.equals(7.0E-44f));
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.String str18 = strList3.toString();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder24 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = binaryDecoder24.decodeNullableUOctet();
        java.lang.Long long26 = uOctet25.getShortForm();
        short short27 = uOctet25.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = uOctet25.getServiceNumber();
        boolean boolean29 = strList3.remove((java.lang.Object) uShort28);
        org.ccsds.moims.mo.mal.structures.Identifier identifier31 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.String str32 = identifier31.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet33 = identifier31.getAreaVersion();
        boolean boolean34 = strList3.remove((java.lang.Object) uOctet33);
        boolean boolean35 = strList3.isEmpty();
        try {
            java.util.List<java.lang.String> strList38 = strList3.subList((int) (byte) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "[hi!, ]" + "'", str18.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281474993487880L + "'", long26.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short27 + "' != '" + (short) 127 + "'", short27 == (short) 127);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "[hi!, ]" + "'", str32.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(uOctet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = blob12.getAreaNumber();
        byte[] byteArray14 = blob12.getValue();
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14);
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray14, (-1), 18);
        int int19 = blob18.getLength();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 18 + "'", int19 == 18);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity2 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((-2), "[hi!, ]");
        java.lang.String str3 = providerURIHolderEntity2.getProviderURIString();
        java.lang.String str4 = providerURIHolderEntity2.getProviderURIString();
        int int5 = providerURIHolderEntity2.getId();
        java.lang.String str6 = providerURIHolderEntity2.getProviderURIString();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[hi!, ]" + "'", str3.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "[hi!, ]" + "'", str4.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-2) + "'", int5 == (-2));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "[hi!, ]" + "'", str6.equals("[hi!, ]"));
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeDouble((java.lang.Double) 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = stringList1.getAreaNumber();
        java.lang.Long long3 = stringList1.getShortForm();
        org.ccsds.moims.mo.mal.structures.Blob blob4 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Element element11 = blob4.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
        org.ccsds.moims.mo.mal.structures.Element element12 = blob4.createElement();
        int int13 = blob4.getLength();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = blob4.getServiceNumber();
        int int15 = stringList1.indexOf((java.lang.Object) blob4);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265073L + "'", long3.equals(281475010265073L));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element1 = floatList0.createElement();
        java.lang.Integer int2 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.OctetList octetList3 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = octetList3.getServiceNumber();
        java.lang.Integer int5 = octetList3.getTypeShortForm();
        boolean boolean6 = floatList0.equals((java.lang.Object) int5);
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime12 = binaryDecoder11.decodeFineTime();
        java.lang.Long long13 = binaryDecoder11.decodeLong();
        int int14 = floatList0.lastIndexOf((java.lang.Object) binaryDecoder11);
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger15 = binaryDecoder11.decodeUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-4) + "'", int2.equals((-4)));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-7) + "'", int5.equals((-7)));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(fineTime12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-64L) + "'", long13.equals((-64L)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        int int46 = longList8.lastIndexOf((java.lang.Object) byteList42);
        org.ccsds.moims.mo.mal.structures.OctetList octetList47 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = octetList47.getServiceNumber();
        boolean boolean49 = longList8.removeAll((java.util.Collection<java.lang.Byte>) octetList47);
        int int50 = longList8.size();
        org.ccsds.moims.mo.mal.structures.Identifier identifier51 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.Integer int52 = identifier51.getTypeShortForm();
        int int53 = longList8.lastIndexOf((java.lang.Object) identifier51);
        org.ccsds.moims.mo.mal.structures.Element element54 = identifier51.createElement();
        org.ccsds.moims.mo.mal.structures.URIList uRIList55 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int56 = uRIList55.getTypeShortForm();
        java.lang.Integer int57 = uRIList55.getTypeShortForm();
        java.lang.Object obj58 = uRIList55.clone();
        byte[] byteArray62 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder63 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray62);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder64 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray62);
        int int65 = uRIList55.lastIndexOf((java.lang.Object) binaryDecoder64);
        org.ccsds.moims.mo.mal.structures.Time time66 = binaryDecoder64.decodeTime();
        java.lang.Short short67 = binaryDecoder64.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element68 = identifier51.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 7 + "'", int50 == 7);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 6 + "'", int52.equals(6));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-18) + "'", int56.equals((-18)));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-18) + "'", int57.equals((-18)));
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(time66);
        org.junit.Assert.assertTrue("'" + short67 + "' != '" + (short) -64 + "'", short67.equals((short) -64));
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.String str1 = fineTime0.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = fineTime0.getAreaVersion();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger14 = binaryDecoder13.decodeUInteger();
        byte[] byteArray15 = binaryDecoder13.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        org.ccsds.moims.mo.mal.structures.Element element17 = fineTime0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
        java.io.OutputStream outputStream18 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder19 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream18);
        byte byte21 = binaryEncoder19.internalEncodeAttributeType((byte) 100);
        byte byte23 = binaryEncoder19.internalEncodeAttributeType((byte) -1);
        try {
            fineTime0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0" + "'", str1.equals("0"));
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uInteger14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertTrue("'" + byte21 + "' != '" + (byte) 100 + "'", byte21 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) -1 + "'", byte23 == (byte) -1);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        java.lang.Float[] floatArray2 = new java.lang.Float[] { 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList3 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList3, floatArray2);
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        int int15 = strList13.size();
        boolean boolean16 = doubleList8.equals((java.lang.Object) strList13);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.lang.Long[] longArray29 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList30 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList30, longArray29);
        java.lang.Object obj32 = longList30.clone();
        int int33 = strList20.indexOf((java.lang.Object) longList30);
        java.util.ListIterator<java.lang.String> strItor34 = strList20.listIterator();
        java.lang.Short[] shortArray38 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList39 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList39, shortArray38);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray46 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList47 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList47, uRIArray46);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54, byteArray53);
        boolean boolean57 = byteList54.add((java.lang.Byte) (byte) 100);
        boolean boolean58 = uRIList47.containsAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean59 = strList44.containsAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean60 = shortList39.contains((java.lang.Object) byteList54);
        boolean boolean61 = strList20.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean62 = doubleList8.removeAll((java.util.Collection<java.lang.Byte>) byteList54);
        boolean boolean63 = floatList3.remove((java.lang.Object) byteList54);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList65 = new org.ccsds.moims.mo.mal.structures.UShortList(16);
        boolean boolean66 = floatList3.remove((java.lang.Object) uShortList65);
        byte[] byteArray70 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder71 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder72 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet73 = binaryDecoder72.decodeNullableUOctet();
        java.lang.Long long74 = uOctet73.getShortForm();
        short short75 = uOctet73.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort76 = uOctet73.getServiceNumber();
        java.lang.Integer int77 = uOctet73.getTypeShortForm();
        boolean boolean78 = uShortList65.equals((java.lang.Object) uOctet73);
        java.lang.Integer int79 = uShortList65.getTypeShortForm();
        java.lang.Integer int80 = uShortList65.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element81 = uShortList65.createElement();
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(uRIArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertNotNull(uOctet73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 281474993487880L + "'", long74.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + short75 + "' != '" + (short) 127 + "'", short75 == (short) 127);
        org.junit.Assert.assertNotNull(uShort76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 8 + "'", int77.equals(8));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-10) + "'", int79.equals((-10)));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-10) + "'", int80.equals((-10)));
        org.junit.Assert.assertNotNull(element81);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType4 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(32, 0, (int) (byte) -1, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UOctet argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableOctet((java.lang.Byte) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.Object obj20 = doubleList2.clone();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList34 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList34, longArray33);
        java.lang.Object obj36 = longList34.clone();
        int int37 = strList24.indexOf((java.lang.Object) longList34);
        java.util.ListIterator<java.lang.String> strItor38 = strList24.listIterator();
        java.lang.String str39 = strList24.toString();
        java.lang.Object[] objArray40 = strList24.toArray();
        boolean boolean41 = doubleList2.contains((java.lang.Object) strList24);
        strList24.trimToSize();
        strList24.add((int) (short) 0, "[1, 100, 100, 1, 8, 8, 8]");
        org.ccsds.moims.mo.mal.structures.Union union47 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Short) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = union47.getAreaNumber();
        boolean boolean49 = strList24.contains((java.lang.Object) uShort48);
        java.lang.String str50 = strList24.toString();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[hi!, ]" + "'", str39.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "[[1, 100, 100, 1, 8, 8, 8], hi!, ]" + "'", str50.equals("[[1, 100, 100, 1, 8, 8, 8], hi!, ]"));
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeLong((java.lang.Long) 281475010265070L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        strList3.ensureCapacity(16);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject8 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI10 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject8.setSourceURI(uRI10);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = uRI10.getAreaVersion();
        boolean boolean13 = strList3.contains((java.lang.Object) uRI10);
        java.lang.Integer int14 = uRI10.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = uRI10.getServiceNumber();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 18 + "'", int14.equals(18));
        org.junit.Assert.assertNotNull(uShort15);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean2 = dictionary0.exists((java.lang.Integer) 16);
        dictionary0.resetFastNetwork();
        java.lang.Integer int5 = dictionary0.getWordId("0.0");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5.equals(1));
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        java.lang.Object[] objArray4 = shortList0.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = shortList0.getServiceNumber();
        boolean boolean7 = shortList0.add((java.lang.Short) (short) 0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList8 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int9 = uRIList8.getTypeShortForm();
        java.lang.Integer int10 = uRIList8.getTypeShortForm();
        java.lang.Object obj11 = uRIList8.clone();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        int int18 = uRIList8.lastIndexOf((java.lang.Object) binaryDecoder17);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger19 = binaryDecoder17.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = uInteger19.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet21 = uInteger19.getAreaVersion();
        boolean boolean22 = shortList0.remove((java.lang.Object) uOctet21);
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-18) + "'", int9.equals((-18)));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(uInteger19);
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertNotNull(uOctet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) 10, (short) -1, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        java.util.ListIterator<java.lang.Short> shortItor6 = shortList4.listIterator();
        int int7 = shortList4.size();
        java.lang.Class<?> wildcardClass8 = shortList4.getClass();
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = shortList9.getAreaNumber();
        java.lang.Object[] objArray11 = shortList9.toArray();
        java.lang.Long long12 = shortList9.getShortForm();
        java.lang.Object[] objArray13 = shortList9.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = shortList9.getServiceNumber();
        java.lang.Integer int15 = shortList9.getTypeShortForm();
        int int16 = shortList4.indexOf((java.lang.Object) shortList9);
        org.ccsds.moims.mo.mal.structures.StringList stringList18 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int19 = stringList18.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = stringList18.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray21 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList22, uRIArray21);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        boolean boolean42 = byteList29.addAll((java.util.Collection<java.lang.Byte>) byteList38);
        int int44 = byteList38.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean45 = uRIList22.retainAll((java.util.Collection<java.lang.Byte>) byteList38);
        int int46 = stringList18.lastIndexOf((java.lang.Object) uRIList22);
        java.lang.Long long47 = stringList18.getShortForm();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList49 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = doubleList49.getAreaNumber();
        java.lang.Object obj51 = doubleList49.clone();
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder56 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray55);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder57 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray55);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = binaryDecoder57.decodeNullableUOctet();
        int int59 = doubleList49.lastIndexOf((java.lang.Object) binaryDecoder57);
        java.util.stream.Stream<java.lang.Double> doubleStream60 = doubleList49.stream();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer61 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl62 = cOMServicesConsumer61.getArchiveService();
        cOMServicesConsumer61.closeConnections();
        cOMServicesConsumer61.closeConnections();
        boolean boolean65 = doubleList49.contains((java.lang.Object) cOMServicesConsumer61);
        boolean boolean66 = stringList18.contains((java.lang.Object) boolean65);
        java.lang.String str67 = stringList18.toString();
        int int68 = shortList4.lastIndexOf((java.lang.Object) stringList18);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet69 = stringList18.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet70 = stringList18.getAreaVersion();
        java.util.Spliterator<java.lang.String> strSpliterator71 = stringList18.spliterator();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(shortItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281475010265079L + "'", long12.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-9) + "'", int15.equals((-9)));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-15) + "'", int19.equals((-15)));
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertNotNull(uRIArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 281475010265073L + "'", long47.equals(281475010265073L));
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(doubleStream60);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "[]" + "'", str67.equals("[]"));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(uOctet69);
        org.junit.Assert.assertNotNull(uOctet70);
        org.junit.Assert.assertNotNull(strSpliterator71);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        java.lang.Float float14 = binaryDecoder13.decodeNullableFloat();
        try {
            java.lang.Short short15 = binaryDecoder13.decodeNullableShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14.equals(0.0f));
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(16);
        java.lang.Integer int2 = uShortList1.getTypeShortForm();
        java.lang.Long long3 = uShortList1.getShortForm();
        uShortList1.clear();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8);
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8);
        boolean boolean13 = uShortList1.equals((java.lang.Object) byteArray8);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-10) + "'", int2.equals((-10)));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265078L + "'", long3.equals(281475010265078L));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob8 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        boolean boolean10 = blob9.isURLBased();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = blob9.getServiceNumber();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uShort11);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime4 = new org.ccsds.moims.mo.mal.structures.FineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = fineTime4.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element6 = fineTime4.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = fineTime4.getAreaNumber();
        try {
            binaryEncoder1.encodeUShort(uShort7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uShort7);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        int int11 = uRIList0.size();
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList19 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList19, shortArray18);
        java.util.ListIterator<java.lang.Short> shortItor21 = shortList19.listIterator();
        int int22 = doubleList14.indexOf((java.lang.Object) shortList19);
        doubleList14.ensureCapacity((-1));
        doubleList14.ensureCapacity((int) (byte) 10);
        java.util.stream.Stream<java.lang.Double> doubleStream27 = doubleList14.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob29 = new org.ccsds.moims.mo.mal.structures.Blob("[hi!, ]".getBytes());
        int int30 = doubleList14.lastIndexOf((java.lang.Object) blob29);
        boolean boolean31 = uRIList0.equals((java.lang.Object) doubleList14);
        java.lang.Object obj32 = uRIList0.clone();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor33 = uRIList0.iterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = uRIList0.getAreaVersion();
        uRIList0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(shortItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(doubleStream27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(uRIItor33);
        org.junit.Assert.assertNotNull(uOctet34);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        java.lang.Float[] floatArray15 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList16 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList16, floatArray15);
        java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList20 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList20, booleanArray19);
        java.lang.Byte[] byteArray26 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList27 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList27, byteArray26);
        boolean boolean30 = byteList27.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray35 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList36 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList36, byteArray35);
        boolean boolean39 = byteList36.add((java.lang.Byte) (byte) 100);
        boolean boolean40 = byteList27.addAll((java.util.Collection<java.lang.Byte>) byteList36);
        java.lang.Object obj41 = byteList27.clone();
        boolean boolean42 = booleanList20.contains((java.lang.Object) byteList27);
        int int43 = floatList16.lastIndexOf((java.lang.Object) booleanList20);
        java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList49 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList49, byteArray48);
        boolean boolean52 = byteList49.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray57 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList58 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList58, byteArray57);
        boolean boolean61 = byteList58.add((java.lang.Byte) (byte) 100);
        boolean boolean62 = byteList49.addAll((java.util.Collection<java.lang.Byte>) byteList58);
        java.lang.Object obj63 = byteList49.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream64 = byteList49.stream();
        boolean boolean65 = booleanList20.equals((java.lang.Object) byteList49);
        org.ccsds.moims.mo.mal.structures.LongList longList66 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray67 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList68 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList68, uRIArray67);
        java.lang.Byte[] byteArray74 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList75 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList75, byteArray74);
        boolean boolean78 = byteList75.add((java.lang.Byte) (byte) 100);
        boolean boolean79 = uRIList68.containsAll((java.util.Collection<java.lang.Byte>) byteList75);
        byteList75.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean83 = longList66.removeAll((java.util.Collection<java.lang.Byte>) byteList75);
        boolean boolean84 = booleanList20.containsAll((java.util.Collection<java.lang.Byte>) byteList75);
        byte[] byteArray88 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder89 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray88);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime90 = binaryDecoder89.decodeFineTime();
        boolean boolean91 = booleanList20.remove((java.lang.Object) fineTime90);
        java.lang.Long long92 = fineTime90.getShortForm();
        try {
            binaryEncoder1.encodeNullableFineTime(fineTime90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(byteStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(uRIArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", !boolean83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertNotNull(fineTime90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 281474993487889L + "'", long92.equals(281474993487889L));
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        int int14 = doubleList1.indexOf((java.lang.Object) false);
        java.util.stream.Stream<java.lang.Double> doubleStream15 = doubleList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = doubleList1.getServiceNumber();
        java.lang.Short[] shortArray20 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList21 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList21, shortArray20);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray28 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList29, uRIArray28);
        java.lang.Byte[] byteArray35 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList36 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList36, byteArray35);
        boolean boolean39 = byteList36.add((java.lang.Byte) (byte) 100);
        boolean boolean40 = uRIList29.containsAll((java.util.Collection<java.lang.Byte>) byteList36);
        boolean boolean41 = strList26.containsAll((java.util.Collection<java.lang.Byte>) byteList36);
        boolean boolean42 = shortList21.contains((java.lang.Object) byteList36);
        org.ccsds.moims.mo.mal.structures.OctetList octetList43 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet44 = octetList43.getAreaVersion();
        boolean boolean45 = shortList21.removeAll((java.util.Collection<java.lang.Byte>) octetList43);
        org.ccsds.moims.mo.mal.structures.Element element46 = octetList43.createElement();
        java.lang.Long long47 = octetList43.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = octetList43.getServiceNumber();
        int int49 = doubleList1.indexOf((java.lang.Object) octetList43);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(doubleStream15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(uRIArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(uOctet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 281475010265081L + "'", long47.equals(281475010265081L));
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(52);
        java.lang.String str2 = integerList1.toString();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = integerList1.getServiceNumber();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8);
        org.ccsds.moims.mo.mal.structures.Blob blob14 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray8, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger16 = binaryDecoder15.decodeUInteger();
        byte[] byteArray17 = binaryDecoder15.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime18 = binaryDecoder15.decodeFineTime();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.Element element24 = fineTime18.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
        java.lang.Boolean boolean25 = binaryDecoder23.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Element element26 = uShort4.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "[]" + "'", str2.equals("[]"));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(uInteger16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(fineTime18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25.equals(true));
        org.junit.Assert.assertNotNull(element26);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element3 = uShortList1.createElement();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator4 = uShortList1.spliterator();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject5 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI7 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject5.setSourceURI(uRI7);
        org.ccsds.moims.mo.mal.structures.URI uRI10 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element11 = uRI10.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray12 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI7, uRI10 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList13, uRIArray12);
        java.lang.Double[] doubleArray20 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList21 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList21, doubleArray20);
        org.ccsds.moims.mo.mal.structures.OctetList octetList23 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = octetList23.getServiceNumber();
        boolean boolean25 = doubleList21.containsAll((java.util.Collection<java.lang.Byte>) octetList23);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray26 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList27, uShortArray26);
        uShortList27.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet30 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element31 = uOctet30.createElement();
        int int32 = uShortList27.indexOf((java.lang.Object) element31);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.lang.Long[] longArray45 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList46 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList46, longArray45);
        java.lang.Object obj48 = longList46.clone();
        int int49 = strList36.indexOf((java.lang.Object) longList46);
        java.util.ListIterator<java.lang.String> strItor50 = strList36.listIterator();
        java.lang.Short[] shortArray54 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList55 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList55, shortArray54);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray62 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList63 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList63, uRIArray62);
        java.lang.Byte[] byteArray69 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList70 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList70, byteArray69);
        boolean boolean73 = byteList70.add((java.lang.Byte) (byte) 100);
        boolean boolean74 = uRIList63.containsAll((java.util.Collection<java.lang.Byte>) byteList70);
        boolean boolean75 = strList60.containsAll((java.util.Collection<java.lang.Byte>) byteList70);
        boolean boolean76 = shortList55.contains((java.lang.Object) byteList70);
        boolean boolean77 = strList36.removeAll((java.util.Collection<java.lang.Byte>) byteList70);
        boolean boolean78 = uShortList27.containsAll((java.util.Collection<java.lang.Byte>) byteList70);
        int int79 = byteList70.size();
        boolean boolean80 = octetList23.containsAll((java.util.Collection<java.lang.Byte>) byteList70);
        boolean boolean81 = uRIList13.retainAll((java.util.Collection<java.lang.Byte>) octetList23);
        java.lang.Integer int82 = octetList23.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort83 = octetList23.getAreaNumber();
        octetList23.trimToSize();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject85 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId86 = eventCOMObject85.getSource();
        boolean boolean87 = octetList23.contains((java.lang.Object) eventCOMObject85);
        boolean boolean88 = uShortList1.removeAll((java.util.Collection<java.lang.Byte>) octetList23);
        byte[] byteArray92 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder93 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray92);
        java.lang.Double double94 = binaryDecoder93.decodeNullableDouble();
        byte[] byteArray95 = binaryDecoder93.getRemainingEncodedData();
        int int97 = binaryDecoder93.internalDecodeAttributeType((byte) 10);
        try {
            org.ccsds.moims.mo.mal.structures.Element element98 = octetList23.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShortSpliterator4);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(uRIArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(uShortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(uOctet30);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(uRIArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 5 + "'", int79 == 5);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-7) + "'", int82.equals((-7)));
        org.junit.Assert.assertNotNull(uShort83);
        org.junit.Assert.assertNull(objectId86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", !boolean87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals((double) double94, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray95);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 10 + "'", int97 == 10);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob2 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean3 = blob2.isURLBased();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.Element element9 = blob2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        boolean boolean10 = integerList1.equals((java.lang.Object) binaryDecoder8);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort11 = binaryDecoder8.decodeNullableUShort();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.ccsds.moims.mo.com.structures.ObjectType objectType6 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(18, (int) 'a', (int) ' ', 8);
        org.ccsds.moims.mo.mal.structures.Subscription subscription7 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType6);
        org.ccsds.moims.mo.mal.structures.Subscription subscription8 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("[0.0]", objectType6);
        org.junit.Assert.assertNotNull(objectType6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertNotNull(subscription8);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        org.ccsds.moims.mo.mal.structures.FloatList floatList6 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int8 = floatList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean9 = floatList6.isEmpty();
        java.lang.Long long10 = floatList6.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = floatList6.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = floatList6.getServiceNumber();
        try {
            org.ccsds.moims.mo.mal.structures.Element element13 = binaryDecoder4.decodeElement((org.ccsds.moims.mo.mal.structures.Element) floatList6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281475010265084L + "'", long10.equals(281475010265084L));
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(uShort12);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList((int) '4');
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray2 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList3, uRIArray2);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator5 = uRIList3.spliterator();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList7 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray8 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList9, uRIArray8);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        boolean boolean19 = byteList16.add((java.lang.Byte) (byte) 100);
        boolean boolean20 = uRIList9.containsAll((java.util.Collection<java.lang.Byte>) byteList16);
        int int22 = uRIList9.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = byteList28.addAll((java.util.Collection<java.lang.Byte>) byteList37);
        int int43 = byteList37.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean44 = uRIList9.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        int int45 = uShortList7.indexOf((java.lang.Object) uRIList9);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator46 = uRIList9.spliterator();
        java.util.Spliterator[] spliteratorArray48 = new java.util.Spliterator[2];
        @SuppressWarnings("unchecked") java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI>[] uRISpliteratorArray49 = (java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI>[]) spliteratorArray48;
        uRISpliteratorArray49[0] = uRISpliterator5;
        uRISpliteratorArray49[1] = uRISpliterator46;
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI>[] uRISpliteratorArray54 = longList1.toArray(uRISpliteratorArray49);
        java.lang.Integer int55 = longList1.getTypeShortForm();
        byte[] byteArray59 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder60 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray59);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder61 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray59);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger62 = binaryDecoder61.decodeUInteger();
        boolean boolean63 = longList1.contains((java.lang.Object) binaryDecoder61);
        org.ccsds.moims.mo.mal.structures.UShort uShort64 = longList1.getAreaNumber();
        org.junit.Assert.assertNotNull(uRIArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(uRISpliterator5);
        org.junit.Assert.assertNotNull(uRIArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(uRISpliterator46);
        org.junit.Assert.assertNotNull(spliteratorArray48);
        org.junit.Assert.assertNotNull(uRISpliteratorArray49);
        org.junit.Assert.assertNotNull(uRISpliteratorArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-13) + "'", int55.equals((-13)));
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(uInteger62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertNotNull(uShort64);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = blob12.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = uShort13.getServiceNumber();
        java.lang.Integer int15 = uShort13.getTypeShortForm();
        java.lang.Integer int16 = uShort13.getTypeShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15.equals(10));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16.equals(10));
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.Duration duration3 = new org.ccsds.moims.mo.mal.structures.Duration((double) (-1L));
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = duration3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = duration3.getAreaVersion();
        try {
            binaryEncoder1.encodeNullableDuration(duration3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uOctet5);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.parallelStream();
        java.lang.Object[] objArray42 = strList35.toArray();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertNotNull(objArray42);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject3.getObjectId();
        eventCOMObject0.setSource(objectId12);
        org.ccsds.moims.mo.mal.structures.Element element14 = null;
        eventCOMObject0.setBody(element14);
        java.lang.Long long16 = eventCOMObject0.getObjId();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId12);
        org.junit.Assert.assertNull(long16);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.lang.Long long4 = doubleList1.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream5 = doubleList1.parallelStream();
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList13 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList13, shortArray12);
        java.util.ListIterator<java.lang.Short> shortItor15 = shortList13.listIterator();
        int int16 = doubleList8.indexOf((java.lang.Object) shortList13);
        org.ccsds.moims.mo.mal.structures.Blob blob17 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean18 = blob17.isURLBased();
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        org.ccsds.moims.mo.mal.structures.Element element24 = blob17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
        boolean boolean25 = doubleList8.contains((java.lang.Object) blob17);
        java.util.ListIterator<java.lang.Double> doubleItor27 = doubleList8.listIterator(1);
        doubleList8.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray29 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList30, uShortArray29);
        uShortList30.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet33 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element34 = uOctet33.createElement();
        int int35 = uShortList30.indexOf((java.lang.Object) element34);
        boolean boolean37 = uShortList30.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor38 = uShortList30.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean40 = uShortList30.add(uShort39);
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
        boolean boolean49 = byteList46.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        boolean boolean59 = byteList46.addAll((java.util.Collection<java.lang.Byte>) byteList55);
        java.lang.Object obj60 = byteList46.clone();
        boolean boolean61 = uShortList30.removeAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean62 = doubleList8.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        boolean boolean63 = doubleList1.retainAll((java.util.Collection<java.lang.Byte>) byteList46);
        try {
            java.lang.Double double65 = doubleList1.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265083L + "'", long4.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(shortItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(doubleItor27);
        org.junit.Assert.assertNotNull(uShortArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uOctet33);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertNotNull(uShortItor38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity2 = new esa.mo.com.impl.archive.entities.DomainHolderEntity(0, "[]");
        int int3 = domainHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        boolean boolean3 = fastObjectType1.exists((java.lang.Long) 1558616177410L);
        boolean boolean5 = fastObjectType1.exists((java.lang.Integer) (-2));
        boolean boolean7 = fastObjectType1.exists((java.lang.Long) 1558616185365L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.ccsds.moims.mo.com.structures.ObjectType objectType1 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487875L);
        org.junit.Assert.assertNotNull(objectType1);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uShortList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uShortList1.getServiceNumber();
        int int4 = uShortList1.size();
        java.lang.Long long5 = uShortList1.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uShortList1.getAreaVersion();
        java.io.OutputStream outputStream7 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder8 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream7);
        byte byte10 = binaryEncoder8.internalEncodeAttributeType((byte) 100);
        byte byte12 = binaryEncoder8.internalEncodeAttributeType((byte) -1);
        byte byte14 = binaryEncoder8.internalEncodeAttributeType((byte) 100);
        byte byte16 = binaryEncoder8.internalEncodeAttributeType((byte) 100);
        try {
            uShortList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265078L + "'", long5.equals(281475010265078L));
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 100 + "'", byte10 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 100 + "'", byte14 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 100 + "'", byte16 == (byte) 100);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        org.ccsds.moims.mo.mal.structures.Element element4 = uRIList0.createElement();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList13 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray15 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList16 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList16, uRIArray15);
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList23 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList23, byteArray22);
        boolean boolean26 = byteList23.add((java.lang.Byte) (byte) 100);
        boolean boolean27 = uRIList16.containsAll((java.util.Collection<java.lang.Byte>) byteList23);
        boolean boolean28 = intList13.removeAll((java.util.Collection<java.lang.Byte>) byteList23);
        boolean boolean30 = intList13.remove((java.lang.Object) '4');
        byte[] byteArray34 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder35 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray34);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray34);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger37 = binaryDecoder36.decodeUInteger();
        boolean boolean38 = intList13.remove((java.lang.Object) binaryDecoder36);
        try {
            org.ccsds.moims.mo.mal.structures.Element element39 = uRIList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(uRIArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(uInteger37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = floatList0.getAreaVersion();
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList11 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList11, shortArray10);
        java.util.ListIterator<java.lang.Short> shortItor13 = shortList11.listIterator();
        int int14 = doubleList6.indexOf((java.lang.Object) shortList11);
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean16 = blob15.isURLBased();
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = blob15.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        boolean boolean23 = doubleList6.contains((java.lang.Object) blob15);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = doubleList6.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean44 = floatList0.contains((java.lang.Object) doubleList6);
        try {
            java.lang.Double double46 = doubleList6.get(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(shortItor13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        boolean boolean3 = fastObjectType1.exists((java.lang.Long) 1558616177410L);
        try {
            fastObjectType1.init();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) (short) -64);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = duration1.getAreaVersion();
        java.lang.Integer int3 = duration1.getTypeShortForm();
        java.lang.Long long4 = duration1.getShortForm();
        java.io.OutputStream outputStream5 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder6 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream5);
        byte byte8 = binaryEncoder6.internalEncodeAttributeType((byte) 100);
        try {
            duration1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3.equals(3));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487875L + "'", long4.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 100 + "'", byte8 == (byte) 100);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        int int14 = uRIList1.lastIndexOf((java.lang.Object) 0.0d);
        uRIList1.clear();
        boolean boolean16 = uRIList1.isEmpty();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList17 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element18 = booleanList17.createElement();
        boolean boolean20 = booleanList17.add((java.lang.Boolean) true);
        boolean boolean22 = booleanList17.remove((java.lang.Object) 281474993487884L);
        java.util.Iterator<java.lang.Boolean> booleanItor23 = booleanList17.iterator();
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator24 = booleanList17.spliterator();
        int int25 = uRIList1.lastIndexOf((java.lang.Object) booleanList17);
        org.ccsds.moims.mo.mal.structures.URIList uRIList26 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int27 = uRIList26.getTypeShortForm();
        java.lang.Integer int28 = uRIList26.getTypeShortForm();
        java.lang.Object obj29 = uRIList26.clone();
        byte[] byteArray33 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder34 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder35 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray33);
        int int36 = uRIList26.lastIndexOf((java.lang.Object) binaryDecoder35);
        org.ccsds.moims.mo.mal.structures.Time time37 = binaryDecoder35.decodeTime();
        java.lang.Short short38 = binaryDecoder35.decodeShort();
        try {
            org.ccsds.moims.mo.mal.structures.Element element39 = booleanList17.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(booleanItor23);
        org.junit.Assert.assertNotNull(booleanSpliterator24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-18) + "'", int27.equals((-18)));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-18) + "'", int28.equals((-18)));
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(time37);
        org.junit.Assert.assertTrue("'" + short38 + "' != '" + (short) -64 + "'", short38.equals((short) -64));
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectType objectType11 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription12 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType11);
        java.lang.Boolean boolean13 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType11);
        java.lang.Boolean boolean14 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType11);
        java.lang.Long long15 = esa.mo.com.impl.util.HelperCOM.generateSubKey(objectType11);
        eventCOMObject0.setObjType(objectType11);
        java.lang.Long long17 = eventCOMObject0.getObjId();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13.equals(true));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14.equals(true));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487885L + "'", long15.equals(281474993487885L));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 4294967295L + "'", long17.equals(4294967295L));
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        org.ccsds.moims.mo.mal.structures.Time time9 = binaryDecoder7.decodeTime();
        try {
            org.ccsds.moims.mo.mal.structures.Time time10 = binaryDecoder7.decodeNullableTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(time9);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        int int20 = blob11.getOffset();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = blob11.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime22 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.String str23 = fineTime22.toString();
        boolean boolean24 = blob11.equals((java.lang.Object) fineTime22);
        int int25 = blob11.getOffset();
        boolean boolean26 = blob11.isURLBased();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(uShort21);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "0" + "'", str23.equals("0"));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeInteger((java.lang.Integer) 16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        int int14 = doubleList1.indexOf((java.lang.Object) false);
        java.util.stream.Stream<java.lang.Double> doubleStream15 = doubleList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = doubleList1.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream17 = doubleList1.parallelStream();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(doubleStream15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(doubleStream17);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        boolean boolean3 = longList1.equals((java.lang.Object) 6);
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime9 = binaryDecoder8.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URIList uRIList10 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int11 = uRIList10.size();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray22 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList23, uRIArray22);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        boolean boolean34 = uRIList23.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean35 = intList20.removeAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean36 = uRIList10.removeAll((java.util.Collection<java.lang.Byte>) byteList30);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder37 = binaryDecoder8.createListDecoder((java.util.List) byteList30);
        boolean boolean38 = longList1.retainAll((java.util.Collection<java.lang.Byte>) byteList30);
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = longList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element40 = longList1.createElement();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(fineTime9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(uRIArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(mALListDecoder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertNotNull(element40);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) (byte) 10);
        boolean boolean2 = archiveSyncGenAdapter1.transactionCompleted();
        long long3 = archiveSyncGenAdapter1.noUpdatesReceivedForThisDuration();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
// flaky:         org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1558616211217L + "'", long3 == 1558616211217L);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray11 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList12, uRIArray11);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19, byteArray18);
        boolean boolean22 = byteList19.add((java.lang.Byte) (byte) 100);
        boolean boolean23 = uRIList12.containsAll((java.util.Collection<java.lang.Byte>) byteList19);
        boolean boolean24 = strList9.containsAll((java.util.Collection<java.lang.Byte>) byteList19);
        boolean boolean25 = shortList4.contains((java.lang.Object) byteList19);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = uRIList27.containsAll((java.util.Collection<java.lang.Byte>) byteList34);
        boolean boolean39 = byteList34.isEmpty();
        boolean boolean40 = shortList4.containsAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.util.stream.Stream<java.lang.Short> shortStream41 = shortList4.stream();
        java.lang.Object obj42 = shortList4.clone();
        int int43 = shortList4.size();
        boolean boolean44 = shortList4.isEmpty();
        shortList4.add(0, (java.lang.Short) (short) 255);
        esa.mo.com.impl.sync.Dictionary dictionary48 = new esa.mo.com.impl.sync.Dictionary();
        dictionary48.defineWord((java.lang.Integer) 0, "[0.0]");
        boolean boolean53 = dictionary48.exists("1");
        int int54 = shortList4.indexOf((java.lang.Object) "1");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(uRIArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(shortStream41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray1 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList2, uRIArray1);
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
        boolean boolean12 = byteList9.add((java.lang.Byte) (byte) 100);
        boolean boolean13 = uRIList2.containsAll((java.util.Collection<java.lang.Byte>) byteList9);
        byteList9.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean17 = longList0.removeAll((java.util.Collection<java.lang.Byte>) byteList9);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = longList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet19 = uOctet18.getAreaVersion();
        java.io.OutputStream outputStream20 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder21 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream20);
        byte byte23 = binaryEncoder21.internalEncodeAttributeType((byte) 100);
        byte byte25 = binaryEncoder21.internalEncodeAttributeType((byte) 10);
        byte byte27 = binaryEncoder21.internalEncodeAttributeType((byte) -1);
        try {
            uOctet18.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(uOctet18);
        org.junit.Assert.assertNotNull(uOctet19);
        org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) 100 + "'", byte23 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte25 + "' != '" + (byte) 10 + "'", byte25 == (byte) 10);
        org.junit.Assert.assertTrue("'" + byte27 + "' != '" + (byte) -1 + "'", byte27 == (byte) -1);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) '#');
        long long2 = archiveSyncGenAdapter1.noUpdatesReceivedForThisDuration();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger3 = archiveSyncGenAdapter1.getLastKnownIndex();
        java.lang.Integer int4 = uInteger3.getTypeShortForm();
// flaky:         org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1558616211280L + "'", long2 == 1558616211280L);
        org.junit.Assert.assertNotNull(uInteger3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 12 + "'", int4.equals(12));
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime6 = null;
        try {
            binaryEncoder1.encodeNullableFineTime(fineTime6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.lang.Integer int2 = uLong1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uLong1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uLong1.getAreaNumber();
        java.lang.Integer int6 = uLong1.getTypeShortForm();
        java.io.OutputStream outputStream7 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder8 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream7);
        byte byte10 = binaryEncoder8.internalEncodeAttributeType((byte) -1);
        try {
            uLong1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 14 + "'", int2.equals(14));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 14 + "'", int6.equals(14));
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -1 + "'", byte10 == (byte) -1);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        org.ccsds.moims.mo.mal.structures.OctetList octetList8 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList8.getServiceNumber();
        boolean boolean10 = doubleList6.containsAll((java.util.Collection<java.lang.Byte>) octetList8);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList15 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList15, shortArray14);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray22 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList23, uRIArray22);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        boolean boolean34 = uRIList23.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean35 = strList20.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean36 = shortList15.contains((java.lang.Object) byteList30);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray37 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList38 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList38, uRIArray37);
        java.lang.Byte[] byteArray44 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList45 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList45, byteArray44);
        boolean boolean48 = byteList45.add((java.lang.Byte) (byte) 100);
        boolean boolean49 = uRIList38.containsAll((java.util.Collection<java.lang.Byte>) byteList45);
        boolean boolean50 = byteList45.isEmpty();
        boolean boolean51 = shortList15.containsAll((java.util.Collection<java.lang.Byte>) byteList45);
        java.util.stream.Stream<java.lang.Short> shortStream52 = shortList15.parallelStream();
        boolean boolean53 = doubleList6.equals((java.lang.Object) shortStream52);
        java.util.stream.Stream<java.lang.Double> doubleStream54 = doubleList6.stream();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject55 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI57 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject55.setSourceURI(uRI57);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject59 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI61 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject59.setSourceURI(uRI61);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray63 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI57, uRI61 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList64 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList64, uRIArray63);
        boolean boolean67 = uRIList64.remove((java.lang.Object) 1.0f);
        boolean boolean68 = doubleList6.remove((java.lang.Object) uRIList64);
        org.ccsds.moims.mo.mal.structures.URI uRI70 = uRIList64.remove(0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(uRIArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(uRIArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(shortStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(doubleStream54);
        org.junit.Assert.assertNotNull(uRIArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uRI70);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        int int20 = blob11.getOffset();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = blob11.getAreaNumber();
        int int22 = blob11.getOffset();
        int int23 = blob11.getLength();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(uShort21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Time time11 = binaryDecoder9.decodeTime();
        org.ccsds.moims.mo.mal.structures.Element element12 = time11.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = time11.getServiceNumber();
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet19 = binaryDecoder18.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Element element20 = time11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder18);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(time11);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(uOctet19);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = floatList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element4 = floatList0.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        int int19 = uRIList6.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34, byteArray33);
        boolean boolean37 = byteList34.add((java.lang.Byte) (byte) 100);
        boolean boolean38 = byteList25.addAll((java.util.Collection<java.lang.Byte>) byteList34);
        int int40 = byteList34.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean41 = uRIList6.removeAll((java.util.Collection<java.lang.Byte>) byteList34);
        java.lang.Double[] doubleArray47 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList48 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList48, doubleArray47);
        org.ccsds.moims.mo.mal.structures.OctetList octetList50 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = octetList50.getServiceNumber();
        boolean boolean52 = doubleList48.containsAll((java.util.Collection<java.lang.Byte>) octetList50);
        boolean boolean53 = uRIList6.retainAll((java.util.Collection<java.lang.Byte>) octetList50);
        java.lang.Object obj54 = octetList50.clone();
        boolean boolean55 = floatList0.retainAll((java.util.Collection<java.lang.Byte>) octetList50);
        java.io.OutputStream outputStream56 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder57 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream56);
        byte byte59 = binaryEncoder57.internalEncodeAttributeType((byte) 100);
        byte byte61 = binaryEncoder57.internalEncodeAttributeType((byte) -1);
        try {
            octetList50.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + byte59 + "' != '" + (byte) 100 + "'", byte59 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte61 + "' != '" + (byte) -1 + "'", byte61 == (byte) -1);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        org.ccsds.moims.mo.mal.structures.Time time9 = binaryDecoder7.decodeNullableTime();
        try {
            org.ccsds.moims.mo.mal.structures.Blob blob10 = binaryDecoder7.decodeNullableBlob();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(time9);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList((int) (short) 1);
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        try {
            integerList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        try {
            binaryEncoder1.encodeString("[]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter1 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter((int) (short) 0);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        java.lang.Integer int6 = floatList0.getTypeShortForm();
        java.lang.Object obj7 = null;
        boolean boolean8 = floatList0.remove(obj7);
        boolean boolean10 = floatList0.add((java.lang.Float) 0.0f);
        java.util.stream.Stream<java.lang.Float> floatStream11 = floatList0.parallelStream();
        java.lang.String str12 = floatList0.toString();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList14 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = doubleList14.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = doubleList14.getAreaNumber();
        java.lang.Long long17 = doubleList14.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream18 = doubleList14.parallelStream();
        java.lang.Double[] doubleArray20 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList21 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList21, doubleArray20);
        java.lang.Short[] shortArray25 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList26 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList26, shortArray25);
        java.util.ListIterator<java.lang.Short> shortItor28 = shortList26.listIterator();
        int int29 = doubleList21.indexOf((java.lang.Object) shortList26);
        org.ccsds.moims.mo.mal.structures.Blob blob30 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean31 = blob30.isURLBased();
        byte[] byteArray35 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        org.ccsds.moims.mo.mal.structures.Element element37 = blob30.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder36);
        boolean boolean38 = doubleList21.contains((java.lang.Object) blob30);
        java.util.ListIterator<java.lang.Double> doubleItor40 = doubleList21.listIterator(1);
        doubleList21.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray42 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList43, uShortArray42);
        uShortList43.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet46 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element47 = uOctet46.createElement();
        int int48 = uShortList43.indexOf((java.lang.Object) element47);
        boolean boolean50 = uShortList43.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor51 = uShortList43.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort52 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean53 = uShortList43.add(uShort52);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray67 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList68 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList68, byteArray67);
        boolean boolean71 = byteList68.add((java.lang.Byte) (byte) 100);
        boolean boolean72 = byteList59.addAll((java.util.Collection<java.lang.Byte>) byteList68);
        java.lang.Object obj73 = byteList59.clone();
        boolean boolean74 = uShortList43.removeAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean75 = doubleList21.retainAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean76 = doubleList14.retainAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet77 = doubleList14.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = doubleList14.getAreaNumber();
        boolean boolean79 = floatList0.remove((java.lang.Object) doubleList14);
        java.util.Iterator<java.lang.Float> floatItor80 = floatList0.iterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-4) + "'", int6.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(floatStream11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[0.0]" + "'", str12.equals("[0.0]"));
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 281475010265083L + "'", long17.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(shortItor28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(doubleItor40);
        org.junit.Assert.assertNotNull(uShortArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(uOctet46);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertNotNull(uShortItor51);
        org.junit.Assert.assertNotNull(uShort52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertNotNull(uOctet77);
        org.junit.Assert.assertNotNull(uShort78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertNotNull(floatItor80);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        int int14 = doubleList1.indexOf((java.lang.Object) false);
        org.ccsds.moims.mo.mal.structures.Union union16 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        java.lang.Integer int17 = union16.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = union16.getAreaVersion();
        java.lang.Long long19 = union16.getShortForm();
        boolean boolean20 = doubleList1.remove((java.lang.Object) long19);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17.equals(2));
        org.junit.Assert.assertNotNull(uOctet18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 281474993487874L + "'", long19.equals(281474993487874L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Integer) 4);
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList4 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        int int7 = intList4.lastIndexOf((java.lang.Object) 0.0f);
        int int9 = intList4.lastIndexOf((java.lang.Object) (-1));
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.lang.Long[] longArray22 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList23 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList23, longArray22);
        java.lang.Object obj25 = longList23.clone();
        int int26 = strList13.indexOf((java.lang.Object) longList23);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        boolean boolean45 = byteList32.addAll((java.util.Collection<java.lang.Byte>) byteList41);
        java.lang.Object obj46 = byteList32.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream47 = byteList32.stream();
        boolean boolean48 = strList13.retainAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean49 = intList4.removeAll((java.util.Collection<java.lang.Byte>) byteList32);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray63 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList64 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList64, byteArray63);
        boolean boolean67 = byteList64.add((java.lang.Byte) (byte) 100);
        boolean boolean68 = byteList55.addAll((java.util.Collection<java.lang.Byte>) byteList64);
        int int70 = byteList64.lastIndexOf((java.lang.Object) 0.0f);
        java.lang.String str71 = byteList64.toString();
        byteList64.add(0, (java.lang.Byte) (byte) 100);
        java.lang.Object[] objArray75 = byteList64.toArray();
        int int76 = intList4.indexOf((java.lang.Object) byteList64);
        boolean boolean77 = union1.equals((java.lang.Object) intList4);
        java.io.OutputStream outputStream78 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder79 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream78);
        byte byte81 = binaryEncoder79.internalEncodeAttributeType((byte) -1);
        try {
            union1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(byteStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "[-1, -1, -1, -1, 100]" + "'", str71.equals("[-1, -1, -1, -1, 100]"));
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertTrue("'" + byte81 + "' != '" + (byte) -1 + "'", byte81 == (byte) -1);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (-64), (-18));
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6, 52);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 281474993487878L, 100L, 281474993487880L, 281475010265083L, 281474993487879L, 281474993487879L, 281474993487873L, 281475010265075L, 281474993487888L, 281475010265083L, 1L, 281474993487890L, 10L, 281474993487872L, 281474993487890L, 281475010265084L, 281475010265075L, 281474993487877L, 4294967295L };
        java.util.ArrayList<java.lang.Long> longList35 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList35, longArray34);
        java.util.ListIterator<java.lang.Long> longItor37 = longList35.listIterator();
        longList35.trimToSize();
        try {
            org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder39 = binaryDecoder14.createListDecoder((java.util.List) longList35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(longItor37);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int1 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element2 = time0.createElement();
        java.lang.Integer int3 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = time0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element5 = time0.createElement();
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        org.ccsds.moims.mo.mal.structures.Element element13 = blob6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
        try {
            org.ccsds.moims.mo.mal.structures.Element element14 = time0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 16 + "'", int1.equals(16));
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 16 + "'", int3.equals(16));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(element13);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject10 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId11 = eventCOMObject10.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType12 = eventCOMObject10.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject13 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI15 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject13.setSourceURI(uRI15);
        eventCOMObject10.setSourceURI(uRI15);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject18 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId19 = eventCOMObject18.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier20 = eventCOMObject18.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject21 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject21.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType26 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription27 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType26);
        eventCOMObject21.setObjType(objectType26);
        java.lang.Long long29 = eventCOMObject21.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId30 = eventCOMObject21.getObjectId();
        eventCOMObject18.setSource(objectId30);
        org.ccsds.moims.mo.mal.structures.Time time32 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int33 = time32.getTypeShortForm();
        eventCOMObject18.setTimestamp(time32);
        eventCOMObject10.setTimestamp(time32);
        org.ccsds.moims.mo.mal.structures.UShort uShort36 = time32.getAreaNumber();
        try {
            binaryEncoder1.encodeNullableTime(time32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
        org.junit.Assert.assertNull(objectId11);
        org.junit.Assert.assertNull(objectType12);
        org.junit.Assert.assertNull(objectId19);
        org.junit.Assert.assertNull(identifier20);
        org.junit.Assert.assertNotNull(objectType26);
        org.junit.Assert.assertNotNull(subscription27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 4294967295L + "'", long29.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 16 + "'", int33.equals(16));
        org.junit.Assert.assertNotNull(uShort36);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = stringList1.getAreaNumber();
        java.lang.Long long3 = stringList1.getShortForm();
        java.lang.Long long4 = stringList1.getShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList5 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int6 = booleanList5.getTypeShortForm();
        booleanList5.ensureCapacity((int) '4');
        boolean boolean9 = stringList1.remove((java.lang.Object) '4');
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13);
        org.ccsds.moims.mo.mal.structures.Blob blob19 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray13);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger21 = binaryDecoder20.decodeUInteger();
        byte[] byteArray22 = binaryDecoder20.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder23 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray22);
        java.lang.Integer int24 = binaryDecoder23.decodeInteger();
        try {
            org.ccsds.moims.mo.mal.structures.Element element25 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder23);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265073L + "'", long3.equals(281475010265073L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265073L + "'", long4.equals(281475010265073L));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2) + "'", int6.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(uInteger21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-64) + "'", int24.equals((-64)));
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity2 = new esa.mo.com.impl.archive.entities.DomainHolderEntity((-13), "100");
        java.lang.String str3 = domainHolderEntity2.getDomainString();
        int int4 = domainHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "100" + "'", str3.equals("100"));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-13) + "'", int4 == (-13));
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.ULong uLong14 = binaryDecoder13.decodeNullableULong();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNull(uLong14);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int1 = booleanList0.getTypeShortForm();
        java.util.stream.Stream<java.lang.Boolean> booleanStream2 = booleanList0.stream();
        boolean boolean3 = booleanList0.isEmpty();
        java.util.stream.Stream<java.lang.Boolean> booleanStream4 = booleanList0.stream();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList6 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean8 = blob7.isURLBased();
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder13 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12);
        org.ccsds.moims.mo.mal.structures.Element element14 = blob7.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder13);
        boolean boolean15 = integerList6.equals((java.lang.Object) binaryDecoder13);
        boolean boolean17 = integerList6.add((java.lang.Integer) 9);
        boolean boolean18 = booleanList0.remove((java.lang.Object) 9);
        java.lang.Long long19 = booleanList0.getShortForm();
        try {
            java.lang.Object obj21 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) long19, "[true]");
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchFieldException; message: [true]");
        } catch (java.lang.NoSuchFieldException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2) + "'", int1.equals((-2)));
        org.junit.Assert.assertNotNull(booleanStream2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(booleanStream4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 281475010265086L + "'", long19.equals(281475010265086L));
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.lang.Object obj22 = longList20.clone();
        int int23 = strList10.indexOf((java.lang.Object) longList20);
        java.util.ListIterator<java.lang.String> strItor24 = strList10.listIterator();
        java.lang.String str25 = strList10.toString();
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList29 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList29, doubleArray28);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        int int36 = strList34.size();
        boolean boolean37 = doubleList29.equals((java.lang.Object) strList34);
        boolean boolean38 = strList10.remove((java.lang.Object) strList34);
        org.ccsds.moims.mo.mal.MALListDecoder mALListDecoder39 = binaryDecoder5.createListDecoder((java.util.List) strList34);
        try {
            java.lang.String str40 = binaryDecoder5.decodeString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[hi!, ]" + "'", str25.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(mALListDecoder39);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uRI2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRI2.getAreaNumber();
        java.lang.Integer int6 = uRI2.getTypeShortForm();
        java.lang.String str7 = uRI2.toString();
        java.lang.String str8 = uRI2.toString();
        org.ccsds.moims.mo.mal.structures.LongList longList10 = new org.ccsds.moims.mo.mal.structures.LongList(9);
        boolean boolean11 = uRI2.equals((java.lang.Object) longList10);
        java.lang.Long long12 = uRI2.getShortForm();
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 18 + "'", int6.equals(18));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!" + "'", str7.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281474993487890L + "'", long12.equals(281474993487890L));
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger5 = binaryDecoder4.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uInteger5.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList7 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.ShortList shortList8 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = shortList8.getAreaNumber();
        java.lang.Object[] objArray10 = shortList8.toArray();
        boolean boolean11 = floatList7.remove((java.lang.Object) shortList8);
        java.lang.Long[] longArray19 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
        java.lang.Object obj22 = longList20.clone();
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList25 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList25, booleanArray24);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        boolean boolean44 = byteList41.add((java.lang.Byte) (byte) 100);
        boolean boolean45 = byteList32.addAll((java.util.Collection<java.lang.Byte>) byteList41);
        java.lang.Object obj46 = byteList32.clone();
        boolean boolean47 = booleanList25.contains((java.lang.Object) byteList32);
        boolean boolean48 = longList20.remove((java.lang.Object) boolean47);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray54 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList55 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList55, uRIArray54);
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList62, byteArray61);
        boolean boolean65 = byteList62.add((java.lang.Byte) (byte) 100);
        boolean boolean66 = uRIList55.containsAll((java.util.Collection<java.lang.Byte>) byteList62);
        boolean boolean67 = strList52.containsAll((java.util.Collection<java.lang.Byte>) byteList62);
        int int68 = longList20.lastIndexOf((java.lang.Object) boolean67);
        java.lang.Object obj69 = longList20.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList70 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int71 = uRIList70.getTypeShortForm();
        java.lang.Integer int72 = uRIList70.getTypeShortForm();
        java.lang.Object obj73 = uRIList70.clone();
        byte[] byteArray77 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder78 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray77);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray77);
        int int80 = uRIList70.lastIndexOf((java.lang.Object) binaryDecoder79);
        boolean boolean81 = longList20.remove((java.lang.Object) uRIList70);
        boolean boolean83 = longList20.add((java.lang.Long) 281475010265078L);
        boolean boolean84 = shortList8.remove((java.lang.Object) 281475010265078L);
        java.lang.Object[] objArray85 = shortList8.toArray();
        boolean boolean86 = uInteger5.equals((java.lang.Object) shortList8);
        org.ccsds.moims.mo.mal.structures.Element element87 = shortList8.createElement();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(uRIArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-18) + "'", int71.equals((-18)));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-18) + "'", int72.equals((-18)));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
        org.junit.Assert.assertNotNull(element87);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        boolean boolean8 = union1.equals((java.lang.Object) byteArray5);
        java.lang.Double double9 = union1.getDoubleValue();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9.equals((-1.0d)));
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject3.setSourceURI(uRI5);
        org.ccsds.moims.mo.mal.structures.URI uRI8 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element9 = uRI8.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI5, uRI8 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Double[] doubleArray18 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList19 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList19, doubleArray18);
        org.ccsds.moims.mo.mal.structures.OctetList octetList21 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = octetList21.getServiceNumber();
        boolean boolean23 = doubleList19.containsAll((java.util.Collection<java.lang.Byte>) octetList21);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray24 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25, uShortArray24);
        uShortList25.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet28 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element29 = uOctet28.createElement();
        int int30 = uShortList25.indexOf((java.lang.Object) element29);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.lang.Long[] longArray43 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList44 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList44, longArray43);
        java.lang.Object obj46 = longList44.clone();
        int int47 = strList34.indexOf((java.lang.Object) longList44);
        java.util.ListIterator<java.lang.String> strItor48 = strList34.listIterator();
        java.lang.Short[] shortArray52 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList53 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList53, shortArray52);
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray60 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList61 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList61, uRIArray60);
        java.lang.Byte[] byteArray67 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList68 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList68, byteArray67);
        boolean boolean71 = byteList68.add((java.lang.Byte) (byte) 100);
        boolean boolean72 = uRIList61.containsAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean73 = strList58.containsAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean74 = shortList53.contains((java.lang.Object) byteList68);
        boolean boolean75 = strList34.removeAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean76 = uShortList25.containsAll((java.util.Collection<java.lang.Byte>) byteList68);
        int int77 = byteList68.size();
        boolean boolean78 = octetList21.containsAll((java.util.Collection<java.lang.Byte>) byteList68);
        boolean boolean79 = uRIList11.retainAll((java.util.Collection<java.lang.Byte>) octetList21);
        java.lang.Object obj80 = octetList21.clone();
        boolean boolean81 = integerList0.removeAll((java.util.Collection<java.lang.Byte>) octetList21);
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uShortArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(uOctet28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(uRIArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int1 = uRIList0.size();
        uRIList0.ensureCapacity(4);
        java.io.OutputStream outputStream4 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder5 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream4);
        try {
            uRIList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        org.ccsds.moims.mo.mal.structures.OctetList octetList34 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = octetList34.getServiceNumber();
        boolean boolean36 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) octetList34);
        java.math.BigInteger bigInteger37 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong38 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger37);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet39 = uLong38.getAreaVersion();
        esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity objectTypeHolderEntity42 = new esa.mo.com.impl.archive.entities.ObjectTypeHolderEntity((-11), (java.lang.Long) 281474993487879L);
        java.lang.Long long43 = objectTypeHolderEntity42.getObjectType();
        boolean boolean44 = uLong38.equals((java.lang.Object) long43);
        boolean boolean45 = booleanList10.remove((java.lang.Object) long43);
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity48 = new esa.mo.com.impl.archive.entities.DomainHolderEntity(0, "[]");
        int int49 = booleanList10.lastIndexOf((java.lang.Object) domainHolderEntity48);
        java.util.stream.Stream<java.lang.Boolean> booleanStream50 = booleanList10.parallelStream();
        try {
            java.lang.Boolean boolean52 = booleanList10.remove(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(uShort35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(bigInteger37);
        org.junit.Assert.assertNotNull(uOctet39);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 281474993487879L + "'", long43.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(booleanStream50);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uRI1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = uRI1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.ShortList shortList4 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = shortList4.getAreaNumber();
        java.lang.Object[] objArray6 = shortList4.toArray();
        java.lang.Long long7 = shortList4.getShortForm();
        shortList4.ensureCapacity((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        boolean boolean21 = byteList18.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray26 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList27 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList27, byteArray26);
        boolean boolean30 = byteList27.add((java.lang.Byte) (byte) 100);
        boolean boolean31 = byteList18.addAll((java.util.Collection<java.lang.Byte>) byteList27);
        int int33 = byteList27.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean34 = uRIList11.retainAll((java.util.Collection<java.lang.Byte>) byteList27);
        boolean boolean35 = shortList4.removeAll((java.util.Collection<java.lang.Byte>) byteList27);
        org.ccsds.moims.mo.mal.structures.UShort uShort36 = shortList4.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray37 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList38 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList38, uShortArray37);
        uShortList38.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element42 = uOctet41.createElement();
        int int43 = uShortList38.indexOf((java.lang.Object) element42);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator44 = uShortList38.spliterator();
        uShortList38.clear();
        org.ccsds.moims.mo.mal.structures.ShortList shortList46 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Integer int47 = shortList46.getTypeShortForm();
        byte[] byteArray51 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder52 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray51);
        org.ccsds.moims.mo.mal.structures.Blob blob53 = binaryDecoder52.decodeBlob();
        boolean boolean54 = shortList46.equals((java.lang.Object) blob53);
        org.ccsds.moims.mo.mal.structures.ShortList shortList55 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort56 = shortList55.getAreaNumber();
        java.lang.Object[] objArray57 = shortList55.toArray();
        java.lang.Long long58 = shortList55.getShortForm();
        shortList55.ensureCapacity((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray61 = new org.ccsds.moims.mo.mal.structures.ShortList[] { shortList46, shortList55 };
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray62 = uShortList38.toArray(shortListArray61);
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray63 = shortList4.toArray(shortListArray62);
        java.util.ListIterator<java.lang.Short> shortItor64 = shortList4.listIterator();
        boolean boolean65 = uRI1.equals((java.lang.Object) shortList4);
        java.util.Spliterator<java.lang.Short> shortSpliterator66 = shortList4.spliterator();
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265079L + "'", long7.equals(281475010265079L));
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(uShort36);
        org.junit.Assert.assertNotNull(uShortArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(uShortSpliterator44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-9) + "'", int47.equals((-9)));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertNotNull(blob53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(uShort56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 281475010265079L + "'", long58.equals(281475010265079L));
        org.junit.Assert.assertNotNull(shortListArray61);
        org.junit.Assert.assertNotNull(shortListArray62);
        org.junit.Assert.assertNotNull(shortListArray63);
        org.junit.Assert.assertNotNull(shortItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(shortSpliterator66);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.ccsds.moims.mo.mal.structures.Time time0 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int1 = time0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element2 = time0.createElement();
        java.lang.Integer int3 = time0.getTypeShortForm();
        java.lang.Integer int4 = time0.getTypeShortForm();
        byte[] byteArray8 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray8);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        java.lang.Byte byte12 = binaryDecoder10.decodeOctet();
        java.lang.Float float13 = binaryDecoder10.decodeNullableFloat();
        try {
            org.ccsds.moims.mo.mal.structures.Element element14 = time0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 16 + "'", int1.equals(16));
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 16 + "'", int3.equals(16));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 16 + "'", int4.equals(16));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12.equals((byte) -1));
        org.junit.Assert.assertNull(float13);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        eventCOMObject0.setObjId((java.lang.Long) 281474993487875L);
        eventCOMObject0.setObjId((java.lang.Long) 281474993487883L);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        uShortList1.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element5 = uOctet4.createElement();
        int int6 = uShortList1.indexOf((java.lang.Object) element5);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator7 = uShortList1.spliterator();
        uShortList1.clear();
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Integer int10 = shortList9.getTypeShortForm();
        byte[] byteArray14 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder15 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray14);
        org.ccsds.moims.mo.mal.structures.Blob blob16 = binaryDecoder15.decodeBlob();
        boolean boolean17 = shortList9.equals((java.lang.Object) blob16);
        org.ccsds.moims.mo.mal.structures.ShortList shortList18 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = shortList18.getAreaNumber();
        java.lang.Object[] objArray20 = shortList18.toArray();
        java.lang.Long long21 = shortList18.getShortForm();
        shortList18.ensureCapacity((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray24 = new org.ccsds.moims.mo.mal.structures.ShortList[] { shortList9, shortList18 };
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray25 = uShortList1.toArray(shortListArray24);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder30 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder31 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray29);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet32 = binaryDecoder31.decodeNullableUOctet();
        java.lang.Long long33 = uOctet32.getShortForm();
        int int34 = uShortList1.lastIndexOf((java.lang.Object) uOctet32);
        java.lang.Integer int35 = uOctet32.getTypeShortForm();
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(uShortSpliterator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-9) + "'", int10.equals((-9)));
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(blob16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 281475010265079L + "'", long21.equals(281475010265079L));
        org.junit.Assert.assertNotNull(shortListArray24);
        org.junit.Assert.assertNotNull(shortListArray25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(uOctet32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 281474993487880L + "'", long33.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35.equals(8));
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        org.ccsds.moims.mo.mal.structures.Blob blob8 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        byte[] byteArray9 = blob8.getValue();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray9);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId7 = eventCOMObject6.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier8 = eventCOMObject6.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject9.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType14 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription15 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType14);
        eventCOMObject9.setObjType(objectType14);
        java.lang.Long long17 = eventCOMObject9.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId18 = eventCOMObject9.getObjectId();
        eventCOMObject6.setSource(objectId18);
        org.ccsds.moims.mo.mal.structures.Time time20 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int21 = time20.getTypeShortForm();
        eventCOMObject6.setTimestamp(time20);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = time20.getAreaVersion();
        java.lang.String str24 = time20.toString();
        eventCOMObject0.setTimestamp(time20);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray26 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList27, uShortArray26);
        uShortList27.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet30 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element31 = uOctet30.createElement();
        int int32 = uShortList27.indexOf((java.lang.Object) element31);
        boolean boolean34 = uShortList27.contains((java.lang.Object) 100.0d);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor35 = uShortList27.iterator();
        boolean boolean36 = time20.equals((java.lang.Object) uShortList27);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort38 = uShortList27.get((int) (short) -64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(objectId7);
        org.junit.Assert.assertNull(identifier8);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 4294967295L + "'", long17.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 16 + "'", int21.equals(16));
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "0" + "'", str24.equals("0"));
        org.junit.Assert.assertNotNull(uShortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(uOctet30);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertNotNull(uShortItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 0.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = duration1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList4 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        byteList13.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean21 = longList4.removeAll((java.util.Collection<java.lang.Byte>) byteList13);
        boolean boolean22 = duration1.equals((java.lang.Object) longList4);
        java.util.stream.Stream<java.lang.Long> longStream23 = longList4.stream();
        esa.mo.com.impl.consumer.ArchiveSyncGenAdapter archiveSyncGenAdapter25 = new esa.mo.com.impl.consumer.ArchiveSyncGenAdapter(1);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger26 = archiveSyncGenAdapter25.getLastKnownIndex();
        int int27 = longList4.indexOf((java.lang.Object) uInteger26);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject28 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject28.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier31 = null;
        eventCOMObject28.setNetworkZone(identifier31);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject33 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId34 = eventCOMObject33.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier35 = eventCOMObject33.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject36 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject36.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType41 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription42 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType41);
        eventCOMObject36.setObjType(objectType41);
        java.lang.Long long44 = eventCOMObject36.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId45 = eventCOMObject36.getObjectId();
        eventCOMObject33.setSource(objectId45);
        eventCOMObject28.setSource(objectId45);
        org.ccsds.moims.mo.mal.structures.FloatList floatList48 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element49 = floatList48.createElement();
        java.util.stream.Stream<java.lang.Float> floatStream50 = floatList48.parallelStream();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet51 = floatList48.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList52 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element53 = booleanList52.createElement();
        int int55 = booleanList52.lastIndexOf((java.lang.Object) 281474993487878L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet56 = booleanList52.getAreaVersion();
        boolean boolean57 = floatList48.contains((java.lang.Object) booleanList52);
        org.ccsds.moims.mo.mal.structures.Element element58 = floatList48.createElement();
        eventCOMObject28.setBody(element58);
        org.ccsds.moims.mo.mal.structures.Element element60 = eventCOMObject28.getBody();
        boolean boolean61 = longList4.contains((java.lang.Object) element60);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(longStream23);
        org.junit.Assert.assertNotNull(uInteger26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(objectId34);
        org.junit.Assert.assertNull(identifier35);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertNotNull(subscription42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 4294967295L + "'", long44.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId45);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(floatStream50);
        org.junit.Assert.assertNotNull(uOctet51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(uOctet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(element60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList6 = eventCOMObject0.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject7 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId8 = eventCOMObject7.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = eventCOMObject7.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject10 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject10.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType15 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription16 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType15);
        eventCOMObject10.setObjType(objectType15);
        java.lang.Long long18 = eventCOMObject10.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId19 = eventCOMObject10.getObjectId();
        eventCOMObject7.setSource(objectId19);
        eventCOMObject0.setSource(objectId19);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList23 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = doubleList23.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = doubleList23.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = doubleList23.getServiceNumber();
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) uShort26);
        eventCOMObject0.setObjId((java.lang.Long) 1558616164233L);
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList30 = eventCOMObject0.getDomain();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(identifierList6);
        org.junit.Assert.assertNull(objectId8);
        org.junit.Assert.assertNull(identifier9);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 4294967295L + "'", long18.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId19);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertNull(identifierList30);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.math.BigInteger bigInteger2 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong3 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger2);
        java.lang.Integer int4 = uLong3.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element5 = uLong3.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = uLong3.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uLong3.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = uLong3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = uLong3.getAreaNumber();
        java.lang.String str10 = uLong3.toString();
        try {
            binaryEncoder1.encodeNullableULong(uLong3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 14 + "'", int4.equals(14));
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "18446744073709551615" + "'", str10.equals("18446744073709551615"));
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList5 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = doubleList5.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = doubleList5.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = doubleList5.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream9 = doubleList5.parallelStream();
        org.ccsds.moims.mo.mal.structures.Blob blob10 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean11 = blob10.isURLBased();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        org.ccsds.moims.mo.mal.structures.Element element17 = blob10.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder16);
        boolean boolean18 = doubleList5.equals((java.lang.Object) element17);
        boolean boolean19 = integerList1.contains((java.lang.Object) element17);
        boolean boolean21 = integerList1.add((java.lang.Integer) 52);
        org.ccsds.moims.mo.mal.structures.Element element22 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.LongList longList23 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray24 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList25, uRIArray24);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        boolean boolean36 = uRIList25.containsAll((java.util.Collection<java.lang.Byte>) byteList32);
        byteList32.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean40 = longList23.removeAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean41 = integerList1.removeAll((java.util.Collection<java.lang.Byte>) byteList32);
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(doubleStream9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(uRIArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element3 = integerList1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray4 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList5, uShortArray4);
        uShortList5.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element9 = uOctet8.createElement();
        int int10 = uShortList5.indexOf((java.lang.Object) element9);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.lang.Long[] longArray23 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList24 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList24, longArray23);
        java.lang.Object obj26 = longList24.clone();
        int int27 = strList14.indexOf((java.lang.Object) longList24);
        java.util.ListIterator<java.lang.String> strItor28 = strList14.listIterator();
        java.lang.Short[] shortArray32 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList33 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList33, shortArray32);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray40 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList41, uRIArray40);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = uRIList41.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean53 = strList38.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean54 = shortList33.contains((java.lang.Object) byteList48);
        boolean boolean55 = strList14.removeAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean56 = uShortList5.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean57 = integerList1.retainAll((java.util.Collection<java.lang.Byte>) byteList48);
        integerList1.ensureCapacity((-10));
        byte[] byteArray63 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder64 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray63);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder65 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray63);
        java.lang.Float float66 = binaryDecoder65.decodeFloat();
        java.lang.Byte byte67 = binaryDecoder65.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element68 = integerList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder65);
        java.lang.String str69 = integerList1.toString();
        java.util.stream.Stream<java.lang.Integer> intStream70 = integerList1.parallelStream();
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShortArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(uRIArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 7.0E-44f + "'", float66.equals(7.0E-44f));
        org.junit.Assert.assertTrue("'" + byte67 + "' != '" + (byte) -1 + "'", byte67.equals((byte) -1));
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "[]" + "'", str69.equals("[]"));
        org.junit.Assert.assertNotNull(intStream70);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeLong((java.lang.Long) 1558616178308L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = blob12.getAreaNumber();
        byte[] byteArray14 = blob12.getValue();
        boolean boolean15 = blob12.isURLBased();
        java.io.OutputStream outputStream16 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder17 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream16);
        byte byte19 = binaryEncoder17.internalEncodeAttributeType((byte) 100);
        try {
            blob12.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 100 + "'", byte19 == (byte) 100);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList1.getServiceNumber();
        java.lang.Object obj5 = doubleList1.clone();
        java.io.OutputStream outputStream6 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder7 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream6);
        byte byte9 = binaryEncoder7.internalEncodeAttributeType((byte) 100);
        byte byte11 = binaryEncoder7.internalEncodeAttributeType((byte) 10);
        try {
            doubleList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 10 + "'", byte11 == (byte) 10);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.Element element1 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.FloatList floatList2 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element3 = floatList2.createElement();
        java.lang.Integer int4 = floatList2.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.ShortList shortList5 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = shortList5.getAreaNumber();
        java.lang.Object[] objArray7 = shortList5.toArray();
        java.lang.Long long8 = shortList5.getShortForm();
        java.lang.Long long9 = shortList5.getShortForm();
        java.lang.Object[] objArray10 = shortList5.toArray();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream32 = byteList17.stream();
        boolean boolean33 = floatList11.containsAll((java.util.Collection<java.lang.Byte>) byteList17);
        byteList17.ensureCapacity((-4));
        byteList17.clear();
        boolean boolean37 = shortList5.retainAll((java.util.Collection<java.lang.Byte>) byteList17);
        boolean boolean38 = floatList2.removeAll((java.util.Collection<java.lang.Byte>) byteList17);
        boolean boolean39 = shortList0.retainAll((java.util.Collection<java.lang.Byte>) byteList17);
        java.util.ListIterator<java.lang.Short> shortItor40 = shortList0.listIterator();
        java.lang.String str41 = shortList0.toString();
        java.io.OutputStream outputStream42 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder43 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream42);
        byte byte45 = binaryEncoder43.internalEncodeAttributeType((byte) 100);
        byte byte47 = binaryEncoder43.internalEncodeAttributeType((byte) -1);
        try {
            shortList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-4) + "'", int4.equals((-4)));
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265079L + "'", long8.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265079L + "'", long9.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(byteStream32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(shortItor40);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "[]" + "'", str41.equals("[]"));
        org.junit.Assert.assertTrue("'" + byte45 + "' != '" + (byte) 100 + "'", byte45 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte47 + "' != '" + (byte) -1 + "'", byte47 == (byte) -1);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = binaryDecoder9.decodeNullableUOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute12 = binaryDecoder9.decodeNullableAttribute();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uOctet11);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList6 = eventCOMObject0.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject7 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId8 = eventCOMObject7.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = eventCOMObject7.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject10 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject10.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType15 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription16 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType15);
        eventCOMObject10.setObjType(objectType15);
        java.lang.Long long18 = eventCOMObject10.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId19 = eventCOMObject10.getObjectId();
        eventCOMObject7.setSource(objectId19);
        eventCOMObject0.setSource(objectId19);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList23 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = doubleList23.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = doubleList23.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = doubleList23.getServiceNumber();
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) uShort26);
        org.ccsds.moims.mo.mal.structures.URIList uRIList28 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int29 = uRIList28.getTypeShortForm();
        java.lang.Integer int30 = uRIList28.getTypeShortForm();
        java.lang.Object obj31 = uRIList28.clone();
        byte[] byteArray35 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        int int38 = uRIList28.lastIndexOf((java.lang.Object) binaryDecoder37);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger39 = binaryDecoder37.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.Element element40 = uInteger39.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = uInteger39.getAreaVersion();
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) uInteger39);
        org.ccsds.moims.mo.com.structures.ObjectId objectId43 = eventCOMObject0.getObjectId();
        org.ccsds.moims.mo.mal.structures.Time time45 = new org.ccsds.moims.mo.mal.structures.Time((long) (-5));
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList46 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element47 = booleanList46.createElement();
        int int49 = booleanList46.lastIndexOf((java.lang.Object) 281474993487878L);
        boolean boolean50 = time45.equals((java.lang.Object) booleanList46);
        eventCOMObject0.setTimestamp(time45);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(identifierList6);
        org.junit.Assert.assertNull(objectId8);
        org.junit.Assert.assertNull(identifier9);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 4294967295L + "'", long18.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId19);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-18) + "'", int29.equals((-18)));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-18) + "'", int30.equals((-18)));
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(uInteger39);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertNotNull(objectId43);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element6 = uRI5.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2, uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = uRIList8.retainAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort uShort77 = octetList18.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element78 = octetList18.createElement();
        boolean boolean79 = octetList18.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet80 = octetList18.getAreaVersion();
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNotNull(uShort77);
        org.junit.Assert.assertNotNull(element78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertNotNull(uOctet80);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeOctet((java.lang.Byte) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        java.lang.Double double9 = binaryDecoder7.decodeNullableDouble();
        try {
            java.lang.Long long11 = binaryDecoder7.decodeAbstractElementType(false);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9.equals(0.0d));
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType4 = esa.mo.com.impl.util.HelperCOM.generateCOMObjectType(8, (-11), 6, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UShort argument must not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        dictionary0.defineWord((java.lang.Integer) 0, "[0.0]");
        dictionary0.resetFastNetwork();
        dictionary0.defineWord((java.lang.Integer) 100, "[100, 1, -64, 10, -64, 1]");
        dictionary0.resetFastNetwork();
        dictionary0.resetFastNetwork();
        java.lang.Integer int11 = dictionary0.getWordId("[true]");
        boolean boolean13 = dictionary0.exists((java.lang.Integer) (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11.equals(1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.String str1 = fineTime0.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = fineTime0.getAreaVersion();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime8 = binaryDecoder7.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime9 = binaryDecoder7.decodeFineTime();
        try {
            org.ccsds.moims.mo.mal.structures.Element element10 = fineTime0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "0" + "'", str1.equals("0"));
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(fineTime8);
        org.junit.Assert.assertNotNull(fineTime9);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.Element element1 = eventCOMObject0.getBody();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Blob blob8 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger13 = binaryDecoder12.decodeUInteger();
        int int15 = binaryDecoder12.internalDecodeAttributeType((byte) 0);
        org.ccsds.moims.mo.mal.structures.Identifier identifier17 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.Long long18 = identifier17.getShortForm();
        java.lang.String str19 = identifier17.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = identifier17.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element21 = binaryDecoder12.decodeElement((org.ccsds.moims.mo.mal.structures.Element) identifier17);
        eventCOMObject0.setNetworkZone(identifier17);
        java.lang.Long[] longArray30 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList31 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList31, longArray30);
        java.lang.Object obj33 = longList31.clone();
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36, booleanArray35);
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList43 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList43, byteArray42);
        boolean boolean46 = byteList43.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray51 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList52 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList52, byteArray51);
        boolean boolean55 = byteList52.add((java.lang.Byte) (byte) 100);
        boolean boolean56 = byteList43.addAll((java.util.Collection<java.lang.Byte>) byteList52);
        java.lang.Object obj57 = byteList43.clone();
        boolean boolean58 = booleanList36.contains((java.lang.Object) byteList43);
        boolean boolean59 = longList31.remove((java.lang.Object) boolean58);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        int int69 = longList31.lastIndexOf((java.lang.Object) byteList65);
        java.util.ListIterator<java.lang.Long> longItor70 = longList31.listIterator();
        org.ccsds.moims.mo.mal.structures.Time time72 = new org.ccsds.moims.mo.mal.structures.Time((long) (-5));
        int int73 = longList31.indexOf((java.lang.Object) time72);
        org.ccsds.moims.mo.mal.structures.URI uRI75 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element76 = uRI75.createElement();
        java.lang.String str77 = uRI75.toString();
        java.lang.Long long78 = uRI75.getShortForm();
        boolean boolean79 = time72.equals((java.lang.Object) uRI75);
        eventCOMObject0.setSourceURI(uRI75);
        org.ccsds.moims.mo.mal.structures.Time time81 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int82 = time81.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element83 = time81.createElement();
        eventCOMObject0.setTimestamp(time81);
        org.ccsds.moims.mo.mal.structures.UShort uShort85 = time81.getServiceNumber();
        org.junit.Assert.assertNull(element1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(uInteger13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 281474993487878L + "'", long18.equals(281474993487878L));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[hi!, ]" + "'", str19.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(longItor70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "hi!" + "'", str77.equals("hi!"));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 281474993487890L + "'", long78.equals(281474993487890L));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 16 + "'", int82.equals(16));
        org.junit.Assert.assertNotNull(element83);
        org.junit.Assert.assertNotNull(uShort85);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Byte byte7 = binaryDecoder5.decodeOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Attribute attribute8 = binaryDecoder5.decodeAttribute();
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Unknown attribute type received: 0");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7.equals((byte) -1));
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Time time6 = binaryDecoder5.decodeTime();
        java.io.OutputStream outputStream7 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder8 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream7);
        byte byte10 = binaryEncoder8.internalEncodeAttributeType((byte) 100);
        byte byte12 = binaryEncoder8.internalEncodeAttributeType((byte) 10);
        try {
            time6.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(time6);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 100 + "'", byte10 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 10 + "'", byte12 == (byte) 10);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        try {
            binaryEncoder1.encodeNullableFloat((java.lang.Float) 7.0E-44f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        uShortList1.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element5 = uOctet4.createElement();
        int int6 = uShortList1.indexOf((java.lang.Object) element5);
        boolean boolean8 = uShortList1.contains((java.lang.Object) 100.0d);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream9 = uShortList1.stream();
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.lang.Short[] shortArray16 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList17 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList17, shortArray16);
        java.util.ListIterator<java.lang.Short> shortItor19 = shortList17.listIterator();
        int int20 = doubleList12.indexOf((java.lang.Object) shortList17);
        doubleList12.ensureCapacity((-1));
        java.lang.Double[] doubleArray24 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList25 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList25, doubleArray24);
        java.lang.Short[] shortArray29 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList30 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList30, shortArray29);
        java.util.ListIterator<java.lang.Short> shortItor32 = shortList30.listIterator();
        int int33 = doubleList25.indexOf((java.lang.Object) shortList30);
        int int34 = doubleList12.lastIndexOf((java.lang.Object) shortList30);
        esa.mo.com.impl.sync.Dictionary dictionary35 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean37 = dictionary35.exists((java.lang.Integer) 16);
        java.lang.Integer int39 = dictionary35.getWordId("");
        int int40 = doubleList12.lastIndexOf((java.lang.Object) dictionary35);
        int int41 = uShortList1.lastIndexOf((java.lang.Object) doubleList12);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor42 = uShortList1.listIterator();
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(uShortStream9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(shortItor19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(shortItor32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39.equals(1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(uShortItor42);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        java.lang.Object[] objArray4 = shortList0.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = shortList0.getServiceNumber();
        java.io.OutputStream outputStream6 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder7 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream6);
        byte byte9 = binaryEncoder7.internalEncodeAttributeType((byte) 100);
        byte byte11 = binaryEncoder7.internalEncodeAttributeType((byte) 10);
        byte byte13 = binaryEncoder7.internalEncodeAttributeType((byte) -1);
        try {
            shortList0.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 10 + "'", byte11 == (byte) 10);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) -1 + "'", byte13 == (byte) -1);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.lang.Boolean boolean11 = binaryDecoder9.decodeBoolean();
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = binaryDecoder9.decodeUShort();
        try {
            java.lang.Long long15 = binaryDecoder9.decodeAbstractElementType(true);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11.equals(true));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(uShort13);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList6 = eventCOMObject0.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject7 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId8 = eventCOMObject7.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = eventCOMObject7.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject10 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject10.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType15 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription16 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType15);
        eventCOMObject10.setObjType(objectType15);
        java.lang.Long long18 = eventCOMObject10.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId19 = eventCOMObject10.getObjectId();
        eventCOMObject7.setSource(objectId19);
        eventCOMObject0.setSource(objectId19);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList23 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = doubleList23.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = doubleList23.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = doubleList23.getServiceNumber();
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) uShort26);
        org.ccsds.moims.mo.mal.structures.URIList uRIList28 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int29 = uRIList28.getTypeShortForm();
        java.lang.Integer int30 = uRIList28.getTypeShortForm();
        java.lang.Object obj31 = uRIList28.clone();
        byte[] byteArray35 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        int int38 = uRIList28.lastIndexOf((java.lang.Object) binaryDecoder37);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger39 = binaryDecoder37.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.Element element40 = uInteger39.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = uInteger39.getAreaVersion();
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) uInteger39);
        java.lang.String str43 = uInteger39.toString();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(identifierList6);
        org.junit.Assert.assertNull(objectId8);
        org.junit.Assert.assertNull(identifier9);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 4294967295L + "'", long18.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId19);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-18) + "'", int29.equals((-18)));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-18) + "'", int30.equals((-18)));
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(uInteger39);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "127" + "'", str43.equals("127"));
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList6 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        int int9 = intList6.lastIndexOf((java.lang.Object) 0.0f);
        intList6.ensureCapacity((int) (short) 100);
        intList6.clear();
        intList6.ensureCapacity((-7));
        java.lang.Object obj15 = intList6.clone();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList17 = new org.ccsds.moims.mo.mal.structures.DoubleList(1);
        int int18 = intList6.indexOf((java.lang.Object) doubleList17);
        try {
            org.ccsds.moims.mo.mal.MALListEncoder mALListEncoder19 = binaryEncoder1.createListEncoder((java.util.List) doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        double double12 = duration11.getValue();
        java.lang.Short[] shortArray16 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList17 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList17, shortArray16);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray24 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList25, uRIArray24);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        boolean boolean36 = uRIList25.containsAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean37 = strList22.containsAll((java.util.Collection<java.lang.Byte>) byteList32);
        boolean boolean38 = shortList17.contains((java.lang.Object) byteList32);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray39 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList40 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList40, uRIArray39);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        boolean boolean51 = uRIList40.containsAll((java.util.Collection<java.lang.Byte>) byteList47);
        boolean boolean52 = byteList47.isEmpty();
        boolean boolean53 = shortList17.containsAll((java.util.Collection<java.lang.Byte>) byteList47);
        java.lang.String str54 = shortList17.toString();
        boolean boolean55 = duration11.equals((java.lang.Object) str54);
        double double56 = duration11.getValue();
        java.lang.String str57 = duration11.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.47E-322d + "'", double12 == 2.47E-322d);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uRIArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(uRIArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "[-1, 0, 100]" + "'", str54.equals("[-1, 0, 100]"));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2.47E-322d + "'", double56 == 2.47E-322d);
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "2.47E-322" + "'", str57.equals("2.47E-322"));
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        int int20 = blob11.getOffset();
        boolean boolean21 = blob11.isURLBased();
        int int22 = blob11.getLength();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        org.ccsds.moims.mo.mal.structures.LongList longList56 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byteList65.add(0, (java.lang.Byte) (byte) -1);
        boolean boolean73 = longList56.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean74 = booleanList10.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        byte[] byteArray78 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder79 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray78);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime80 = binaryDecoder79.decodeFineTime();
        boolean boolean81 = booleanList10.remove((java.lang.Object) fineTime80);
        java.lang.Long long82 = fineTime80.getShortForm();
        long long83 = fineTime80.getValue();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertNotNull(fineTime80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 281474993487889L + "'", long82.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 100L + "'", long83 == 100L);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        int int1 = uRIList0.size();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor2 = uRIList0.iterator();
        java.lang.Long[] longArray10 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList11 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList11, longArray10);
        java.lang.Object obj13 = longList11.clone();
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList16 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList16, booleanArray15);
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList23 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList23, byteArray22);
        boolean boolean26 = byteList23.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 100);
        boolean boolean36 = byteList23.addAll((java.util.Collection<java.lang.Byte>) byteList32);
        java.lang.Object obj37 = byteList23.clone();
        boolean boolean38 = booleanList16.contains((java.lang.Object) byteList23);
        boolean boolean39 = longList11.remove((java.lang.Object) boolean38);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray45 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList46 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList46, uRIArray45);
        java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53, byteArray52);
        boolean boolean56 = byteList53.add((java.lang.Byte) (byte) 100);
        boolean boolean57 = uRIList46.containsAll((java.util.Collection<java.lang.Byte>) byteList53);
        boolean boolean58 = strList43.containsAll((java.util.Collection<java.lang.Byte>) byteList53);
        int int59 = longList11.lastIndexOf((java.lang.Object) boolean58);
        java.lang.Object obj60 = longList11.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList61 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int62 = uRIList61.getTypeShortForm();
        java.lang.Integer int63 = uRIList61.getTypeShortForm();
        java.lang.Object obj64 = uRIList61.clone();
        byte[] byteArray68 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder69 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray68);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder70 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray68);
        int int71 = uRIList61.lastIndexOf((java.lang.Object) binaryDecoder70);
        boolean boolean72 = longList11.remove((java.lang.Object) uRIList61);
        org.ccsds.moims.mo.mal.structures.UShort uShort73 = uRIList61.getAreaNumber();
        boolean boolean74 = uRIList0.equals((java.lang.Object) uShort73);
        try {
            java.util.List<org.ccsds.moims.mo.mal.structures.URI> uRIList77 = uRIList0.subList((int) (byte) 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(uRIItor2);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uRIArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-18) + "'", int62.equals((-18)));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-18) + "'", int63.equals((-18)));
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertNotNull(uShort73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = byteList17.addAll((java.util.Collection<java.lang.Byte>) byteList26);
        java.lang.Object obj31 = byteList17.clone();
        boolean boolean32 = booleanList10.contains((java.lang.Object) byteList17);
        int int33 = floatList6.lastIndexOf((java.lang.Object) booleanList10);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = byteList39.addAll((java.util.Collection<java.lang.Byte>) byteList48);
        java.lang.Object obj53 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream54 = byteList39.stream();
        boolean boolean55 = booleanList10.equals((java.lang.Object) byteList39);
        java.util.ListIterator<java.lang.Boolean> booleanItor56 = booleanList10.listIterator();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject57 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject57.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType62 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription63 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType62);
        eventCOMObject57.setObjType(objectType62);
        java.lang.Long long65 = eventCOMObject57.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectType objectType68 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription69 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType68);
        java.lang.Boolean boolean70 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType68);
        java.lang.Boolean boolean71 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType68);
        java.lang.Long long72 = esa.mo.com.impl.util.HelperCOM.generateSubKey(objectType68);
        eventCOMObject57.setObjType(objectType68);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject74 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject74.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType79 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription80 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType79);
        eventCOMObject74.setObjType(objectType79);
        java.lang.Long long82 = eventCOMObject74.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId83 = eventCOMObject74.getObjectId();
        eventCOMObject57.setSource(objectId83);
        org.ccsds.moims.mo.mal.structures.Identifier identifier85 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet86 = identifier85.getAreaVersion();
        java.lang.String str87 = identifier85.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort88 = identifier85.getAreaNumber();
        eventCOMObject57.setNetworkZone(identifier85);
        org.ccsds.moims.mo.mal.structures.UShort uShort90 = identifier85.getAreaNumber();
        boolean boolean91 = booleanList10.contains((java.lang.Object) identifier85);
        java.util.Iterator<java.lang.Boolean> booleanItor92 = booleanList10.iterator();
        int int93 = booleanList10.size();
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(booleanItor56);
        org.junit.Assert.assertNotNull(objectType62);
        org.junit.Assert.assertNotNull(subscription63);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 4294967295L + "'", long65.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType68);
        org.junit.Assert.assertNotNull(subscription69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70.equals(true));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71.equals(true));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 281474993487885L + "'", long72.equals(281474993487885L));
        org.junit.Assert.assertNotNull(objectType79);
        org.junit.Assert.assertNotNull(subscription80);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 4294967295L + "'", long82.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId83);
        org.junit.Assert.assertNotNull(uOctet86);
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "" + "'", str87.equals(""));
        org.junit.Assert.assertNotNull(uShort88);
        org.junit.Assert.assertNotNull(uShort90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertNotNull(booleanItor92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier2 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject3.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType8 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription9 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType8);
        eventCOMObject3.setObjType(objectType8);
        java.lang.Long long11 = eventCOMObject3.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId12 = eventCOMObject3.getObjectId();
        eventCOMObject0.setSource(objectId12);
        org.ccsds.moims.mo.mal.structures.Time time14 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int15 = time14.getTypeShortForm();
        eventCOMObject0.setTimestamp(time14);
        java.lang.String str17 = time14.toString();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(identifier2);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4294967295L + "'", long11.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 16 + "'", int15.equals(16));
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "0" + "'", str17.equals("0"));
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        org.ccsds.moims.mo.mal.structures.FloatList floatList2 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int4 = floatList2.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int5 = floatList2.getTypeShortForm();
        boolean boolean6 = floatList2.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator7 = floatList2.spliterator();
        java.lang.Integer int8 = floatList2.getTypeShortForm();
        boolean boolean9 = floatList2.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = floatList2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(0);
        stringList12.ensureCapacity((-15));
        org.ccsds.moims.mo.mal.structures.Element element15 = stringList12.createElement();
        org.ccsds.moims.mo.mal.structures.Element element16 = stringList12.createElement();
        boolean boolean17 = uOctet10.equals((java.lang.Object) stringList12);
        java.lang.Integer int18 = stringList12.getTypeShortForm();
        try {
            binaryEncoder1.encodeElement((org.ccsds.moims.mo.mal.structures.Element) stringList12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-4) + "'", int5.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(floatSpliterator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-4) + "'", int8.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-15) + "'", int18.equals((-15)));
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        java.io.InputStream inputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder1 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(inputStream0);
        try {
            java.lang.Integer int2 = binaryDecoder1.decodeInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        boolean boolean2 = integerList1.isEmpty();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        byte byte6 = binaryEncoder4.internalEncodeAttributeType((byte) 100);
        byte byte8 = binaryEncoder4.internalEncodeAttributeType((byte) -1);
        byte byte10 = binaryEncoder4.internalEncodeAttributeType((byte) 100);
        try {
            integerList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -1 + "'", byte8 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 100 + "'", byte10 == (byte) 100);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableString("[281474993487878, 100, -1, 100, 1, 1, 1]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        java.lang.Integer int2 = stringList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        boolean boolean24 = byteList21.add((java.lang.Byte) (byte) 100);
        boolean boolean25 = byteList12.addAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int27 = byteList21.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean28 = uRIList5.retainAll((java.util.Collection<java.lang.Byte>) byteList21);
        int int29 = stringList1.lastIndexOf((java.lang.Object) uRIList5);
        java.lang.Long long30 = stringList1.getShortForm();
        java.util.stream.Stream<java.lang.String> strStream31 = stringList1.parallelStream();
        byte[] byteArray35 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder36 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray35);
        java.lang.Double double37 = binaryDecoder36.decodeNullableDouble();
        byte[] byteArray38 = binaryDecoder36.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob41 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray38, 18, (int) ' ');
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder42 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder44 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38, 0);
        try {
            org.ccsds.moims.mo.mal.structures.Element element45 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-15) + "'", int2.equals((-15)));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 281475010265073L + "'", long30.equals(281475010265073L));
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals((double) double37, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray38);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        java.lang.Integer int6 = fineTime5.getTypeShortForm();
        java.lang.Long long7 = fineTime5.getShortForm();
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList11 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList11, shortArray10);
        java.util.ListIterator<java.lang.Short> shortItor13 = shortList11.listIterator();
        int int15 = shortList11.indexOf((java.lang.Object) 100L);
        java.util.ListIterator<java.lang.Short> shortItor16 = shortList11.listIterator();
        java.util.Spliterator<java.lang.Short> shortSpliterator17 = shortList11.spliterator();
        boolean boolean18 = fineTime5.equals((java.lang.Object) shortList11);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 17 + "'", int6.equals(17));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487889L + "'", long7.equals(281474993487889L));
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(shortItor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(shortItor16);
        org.junit.Assert.assertNotNull(shortSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Byte byte6 = binaryDecoder5.decodeOctet();
        java.lang.Byte byte7 = binaryDecoder5.decodeNullableOctet();
        try {
            java.lang.Long long8 = binaryDecoder5.decodeNullableLong();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6.equals((byte) 100));
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 0 + "'", byte7.equals((byte) 0));
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        boolean boolean3 = fastObjectType1.exists((java.lang.Long) 281474993487882L);
        boolean boolean5 = fastObjectType1.exists((java.lang.Long) 127L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        doubleList2.trimToSize();
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int13 = uRIList12.getTypeShortForm();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        java.lang.Object obj15 = uRIList12.clone();
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder20 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray19);
        int int22 = uRIList12.lastIndexOf((java.lang.Object) binaryDecoder21);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger23 = binaryDecoder21.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = uInteger23.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element25 = uInteger23.createElement();
        boolean boolean26 = doubleList2.contains((java.lang.Object) uInteger23);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject27 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId28 = eventCOMObject27.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier29 = eventCOMObject27.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject30 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject30.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType35 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription36 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType35);
        eventCOMObject30.setObjType(objectType35);
        java.lang.Long long38 = eventCOMObject30.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId39 = eventCOMObject30.getObjectId();
        eventCOMObject27.setSource(objectId39);
        org.ccsds.moims.mo.mal.structures.Time time41 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int42 = time41.getTypeShortForm();
        eventCOMObject27.setTimestamp(time41);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet44 = time41.getAreaVersion();
        java.lang.String str45 = time41.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = time41.getServiceNumber();
        boolean boolean47 = doubleList2.remove((java.lang.Object) uShort46);
        doubleList2.clear();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-18) + "'", int13.equals((-18)));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(uInteger23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNull(objectId28);
        org.junit.Assert.assertNull(identifier29);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertNotNull(subscription36);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 4294967295L + "'", long38.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 16 + "'", int42.equals(16));
        org.junit.Assert.assertNotNull(uOctet44);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "0" + "'", str45.equals("0"));
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 100);
        int int2 = stringList1.size();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = stringList1.getAreaNumber();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject4.setSourceURI(uRI6);
        org.ccsds.moims.mo.mal.structures.URI uRI9 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.Element element10 = uRI9.createElement();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray11 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI6, uRI9 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList12, uRIArray11);
        java.lang.Double[] doubleArray19 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList20 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList20, doubleArray19);
        org.ccsds.moims.mo.mal.structures.OctetList octetList22 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = octetList22.getServiceNumber();
        boolean boolean24 = doubleList20.containsAll((java.util.Collection<java.lang.Byte>) octetList22);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray25 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList26, uShortArray25);
        uShortList26.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet29 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element30 = uOctet29.createElement();
        int int31 = uShortList26.indexOf((java.lang.Object) element30);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.lang.Long[] longArray44 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList45 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList45, longArray44);
        java.lang.Object obj47 = longList45.clone();
        int int48 = strList35.indexOf((java.lang.Object) longList45);
        java.util.ListIterator<java.lang.String> strItor49 = strList35.listIterator();
        java.lang.Short[] shortArray53 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList54 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList54, shortArray53);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray61 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList62 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList62, uRIArray61);
        java.lang.Byte[] byteArray68 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList69 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList69, byteArray68);
        boolean boolean72 = byteList69.add((java.lang.Byte) (byte) 100);
        boolean boolean73 = uRIList62.containsAll((java.util.Collection<java.lang.Byte>) byteList69);
        boolean boolean74 = strList59.containsAll((java.util.Collection<java.lang.Byte>) byteList69);
        boolean boolean75 = shortList54.contains((java.lang.Object) byteList69);
        boolean boolean76 = strList35.removeAll((java.util.Collection<java.lang.Byte>) byteList69);
        boolean boolean77 = uShortList26.containsAll((java.util.Collection<java.lang.Byte>) byteList69);
        int int78 = byteList69.size();
        boolean boolean79 = octetList22.containsAll((java.util.Collection<java.lang.Byte>) byteList69);
        boolean boolean80 = uRIList12.retainAll((java.util.Collection<java.lang.Byte>) octetList22);
        java.lang.Integer int81 = octetList22.getTypeShortForm();
        java.lang.Object obj82 = octetList22.clone();
        octetList22.clear();
        boolean boolean84 = stringList1.containsAll((java.util.Collection<java.lang.Byte>) octetList22);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(uRIArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uShortArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(uOctet29);
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(uRIArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 5 + "'", int78 == 5);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-7) + "'", int81.equals((-7)));
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId5 = eventCOMObject4.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType7 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject4.setObjType(objectType7);
        eventCOMObject0.setObjType(objectType7);
        org.ccsds.moims.mo.mal.structures.Identifier identifier11 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.String str12 = identifier11.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = identifier11.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element14 = identifier11.createElement();
        java.lang.String str15 = identifier11.getValue();
        eventCOMObject0.setNetworkZone(identifier11);
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNull(identifier3);
        org.junit.Assert.assertNull(objectId5);
        org.junit.Assert.assertNotNull(objectType7);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[hi!, ]" + "'", str12.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "[hi!, ]" + "'", str15.equals("[hi!, ]"));
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray11 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList12, uRIArray11);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19, byteArray18);
        boolean boolean22 = byteList19.add((java.lang.Byte) (byte) 100);
        boolean boolean23 = uRIList12.containsAll((java.util.Collection<java.lang.Byte>) byteList19);
        boolean boolean24 = strList9.containsAll((java.util.Collection<java.lang.Byte>) byteList19);
        boolean boolean25 = shortList4.contains((java.lang.Object) byteList19);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList31 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList31, byteArray30);
        boolean boolean34 = byteList31.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
        boolean boolean43 = byteList40.add((java.lang.Byte) (byte) 100);
        boolean boolean44 = byteList31.addAll((java.util.Collection<java.lang.Byte>) byteList40);
        java.lang.Object obj45 = byteList31.clone();
        boolean boolean46 = shortList4.retainAll((java.util.Collection<java.lang.Byte>) byteList31);
        shortList4.clear();
        org.ccsds.moims.mo.mal.structures.URIList uRIList48 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int49 = uRIList48.getTypeShortForm();
        java.lang.Integer int50 = uRIList48.getTypeShortForm();
        java.lang.Object obj51 = uRIList48.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream52 = uRIList48.stream();
        boolean boolean53 = shortList4.equals((java.lang.Object) uRIStream52);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray54 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList55 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList55, uShortArray54);
        uShortList55.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element59 = uOctet58.createElement();
        int int60 = uShortList55.indexOf((java.lang.Object) element59);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator61 = uShortList55.spliterator();
        uShortList55.clear();
        org.ccsds.moims.mo.mal.structures.ShortList shortList63 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Integer int64 = shortList63.getTypeShortForm();
        byte[] byteArray68 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder69 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray68);
        org.ccsds.moims.mo.mal.structures.Blob blob70 = binaryDecoder69.decodeBlob();
        boolean boolean71 = shortList63.equals((java.lang.Object) blob70);
        org.ccsds.moims.mo.mal.structures.ShortList shortList72 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort73 = shortList72.getAreaNumber();
        java.lang.Object[] objArray74 = shortList72.toArray();
        java.lang.Long long75 = shortList72.getShortForm();
        shortList72.ensureCapacity((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray78 = new org.ccsds.moims.mo.mal.structures.ShortList[] { shortList63, shortList72 };
        org.ccsds.moims.mo.mal.structures.ShortList[] shortListArray79 = uShortList55.toArray(shortListArray78);
        java.util.RandomAccess[] randomAccessArray80 = shortList4.toArray((java.util.RandomAccess[]) shortListArray78);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(uRIArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-18) + "'", int49.equals((-18)));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-18) + "'", int50.equals((-18)));
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(uRIStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(uShortArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(uShortSpliterator61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-9) + "'", int64.equals((-9)));
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertNotNull(blob70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertNotNull(uShort73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 281475010265079L + "'", long75.equals(281475010265079L));
        org.junit.Assert.assertNotNull(shortListArray78);
        org.junit.Assert.assertNotNull(shortListArray79);
        org.junit.Assert.assertNotNull(randomAccessArray80);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Float[] floatArray12 = new java.lang.Float[] { 100.0f, (-1.0f), (-1.0f), 10.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList13 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList13, floatArray12);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
        boolean boolean36 = byteList33.add((java.lang.Byte) (byte) 100);
        boolean boolean37 = byteList24.addAll((java.util.Collection<java.lang.Byte>) byteList33);
        java.lang.Object obj38 = byteList24.clone();
        boolean boolean39 = booleanList17.contains((java.lang.Object) byteList24);
        int int40 = floatList13.lastIndexOf((java.lang.Object) booleanList17);
        boolean boolean41 = floatList13.isEmpty();
        boolean boolean42 = uInteger6.equals((java.lang.Object) boolean41);
        org.ccsds.moims.mo.mal.structures.Element element43 = uInteger6.createElement();
        org.ccsds.moims.mo.mal.structures.FloatList floatList44 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int46 = floatList44.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int47 = floatList44.getTypeShortForm();
        boolean boolean48 = floatList44.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator49 = floatList44.spliterator();
        java.lang.Integer int50 = floatList44.getTypeShortForm();
        boolean boolean51 = floatList44.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet52 = floatList44.getAreaVersion();
        java.lang.Integer int53 = floatList44.getTypeShortForm();
        boolean boolean54 = uInteger6.equals((java.lang.Object) floatList44);
        byte[] byteArray58 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder59 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray58);
        org.ccsds.moims.mo.mal.structures.Blob blob60 = binaryDecoder59.decodeBlob();
        try {
            org.ccsds.moims.mo.mal.structures.Element element61 = uInteger6.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-4) + "'", int47.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(floatSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-4) + "'", int50.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(uOctet52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-4) + "'", int53.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(blob60);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectType objectType11 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription12 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType11);
        java.lang.Boolean boolean13 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType11);
        java.lang.Boolean boolean14 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType11);
        java.lang.Long long15 = esa.mo.com.impl.util.HelperCOM.generateSubKey(objectType11);
        eventCOMObject0.setObjType(objectType11);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject17 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject17.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType22 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription23 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType22);
        eventCOMObject17.setObjType(objectType22);
        java.lang.Long long25 = eventCOMObject17.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId26 = eventCOMObject17.getObjectId();
        eventCOMObject0.setSource(objectId26);
        org.ccsds.moims.mo.mal.structures.Identifier identifier28 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet29 = identifier28.getAreaVersion();
        java.lang.String str30 = identifier28.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = identifier28.getAreaNumber();
        eventCOMObject0.setNetworkZone(identifier28);
        byte[] byteArray36 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder37 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray36);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder38 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray36);
        org.ccsds.moims.mo.mal.structures.Blob blob39 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray36);
        org.ccsds.moims.mo.mal.structures.Blob blob42 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray36, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder43 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray36);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder44 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray36);
        java.lang.Float float45 = binaryDecoder44.decodeFloat();
        java.lang.Boolean boolean46 = binaryDecoder44.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Element element47 = identifier28.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder44);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13.equals(true));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14.equals(true));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487885L + "'", long15.equals(281474993487885L));
        org.junit.Assert.assertNotNull(objectType22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 4294967295L + "'", long25.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId26);
        org.junit.Assert.assertNotNull(uOctet29);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 7.0E-44f + "'", float45.equals(7.0E-44f));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46.equals(true));
        org.junit.Assert.assertNotNull(element47);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.lang.Long long4 = doubleList1.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream5 = doubleList1.parallelStream();
        boolean boolean7 = doubleList1.add((java.lang.Double) 0.0d);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) 10 };
        java.util.ArrayList<java.lang.Byte> byteList10 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList10, byteArray9);
        java.util.Spliterator<java.lang.Byte> byteSpliterator12 = byteList10.spliterator();
        boolean boolean13 = doubleList1.containsAll((java.util.Collection<java.lang.Byte>) byteList10);
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder18 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder19 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray17);
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int21 = blob20.getOffset();
        boolean boolean22 = doubleList1.equals((java.lang.Object) blob20);
        try {
            java.util.List<java.lang.Double> doubleList25 = doubleList1.subList(16, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265083L + "'", long4.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(byteSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
        java.lang.Integer int4 = doubleList1.getTypeShortForm();
        boolean boolean6 = doubleList1.add((java.lang.Double) Double.NaN);
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = doubleList1.getAreaNumber();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList10 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        int int13 = intList10.lastIndexOf((java.lang.Object) 0.0f);
        int int15 = intList10.lastIndexOf((java.lang.Object) (-1));
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.lang.Long[] longArray28 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList29 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList29, longArray28);
        java.lang.Object obj31 = longList29.clone();
        int int32 = strList19.indexOf((java.lang.Object) longList29);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        boolean boolean51 = byteList38.addAll((java.util.Collection<java.lang.Byte>) byteList47);
        java.lang.Object obj52 = byteList38.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream53 = byteList38.stream();
        boolean boolean54 = strList19.retainAll((java.util.Collection<java.lang.Byte>) byteList38);
        boolean boolean55 = intList10.removeAll((java.util.Collection<java.lang.Byte>) byteList38);
        java.lang.String str56 = intList10.toString();
        java.util.stream.Stream<java.lang.Integer> intStream57 = intList10.stream();
        org.ccsds.moims.mo.mal.structures.Union union59 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        java.lang.Long long60 = union59.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort61 = union59.getAreaNumber();
        int int62 = intList10.indexOf((java.lang.Object) uShort61);
        boolean boolean63 = doubleList1.equals((java.lang.Object) intList10);
        org.ccsds.moims.mo.mal.structures.URIList uRIList64 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int65 = uRIList64.getTypeShortForm();
        java.lang.Integer int66 = uRIList64.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort67 = uRIList64.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort68 = uRIList64.getAreaNumber();
        uRIList64.clear();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet70 = uRIList64.getAreaVersion();
        int int71 = intList10.lastIndexOf((java.lang.Object) uRIList64);
        java.io.OutputStream outputStream72 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder73 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream72);
        byte byte75 = binaryEncoder73.internalEncodeAttributeType((byte) 100);
        byte byte77 = binaryEncoder73.internalEncodeAttributeType((byte) 10);
        byte byte79 = binaryEncoder73.internalEncodeAttributeType((byte) -1);
        try {
            uRIList64.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-5) + "'", int4.equals((-5)));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(byteStream53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "[10]" + "'", str56.equals("[10]"));
        org.junit.Assert.assertNotNull(intStream57);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 281474993487874L + "'", long60.equals(281474993487874L));
        org.junit.Assert.assertNotNull(uShort61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-18) + "'", int65.equals((-18)));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-18) + "'", int66.equals((-18)));
        org.junit.Assert.assertNotNull(uShort67);
        org.junit.Assert.assertNotNull(uShort68);
        org.junit.Assert.assertNotNull(uOctet70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + byte75 + "' != '" + (byte) 100 + "'", byte75 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte77 + "' != '" + (byte) 10 + "'", byte77 == (byte) 10);
        org.junit.Assert.assertTrue("'" + byte79 + "' != '" + (byte) -1 + "'", byte79 == (byte) -1);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Integer int6 = binaryDecoder5.decodeInteger();
        int int8 = binaryDecoder5.internalDecodeAttributeType((byte) 0);
        java.lang.Long long9 = binaryDecoder5.decodeLong();
        try {
            java.lang.Boolean boolean10 = binaryDecoder5.decodeBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6.equals(50));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-64L) + "'", long9.equals((-64L)));
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uRI1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRI1.getServiceNumber();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7, 6);
        boolean boolean11 = uShort3.equals((java.lang.Object) binaryDecoder10);
        try {
            java.lang.String str12 = binaryDecoder10.decodeString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = null;
        eventCOMObject0.setNetworkZone(identifier3);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList6 = eventCOMObject0.getDomain();
        eventCOMObject0.setObjId((java.lang.Long) 1558616165304L);
        org.ccsds.moims.mo.mal.structures.Time time9 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int10 = time9.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element11 = time9.createElement();
        java.lang.Integer int12 = time9.getTypeShortForm();
        java.lang.Long long13 = time9.getShortForm();
        java.lang.Integer int14 = time9.getTypeShortForm();
        eventCOMObject0.setTimestamp(time9);
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = time9.getAreaNumber();
        java.lang.Integer int17 = time9.getTypeShortForm();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(identifierList6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 16 + "'", int10.equals(16));
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 16 + "'", int12.equals(16));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 281474993487888L + "'", long13.equals(281474993487888L));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 16 + "'", int14.equals(16));
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 16 + "'", int17.equals(16));
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte9 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.Identifier identifier11 = new org.ccsds.moims.mo.mal.structures.Identifier("[hi!, ]");
        java.lang.Long long12 = identifier11.getShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList13 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element14 = booleanList13.createElement();
        int int16 = booleanList13.indexOf((java.lang.Object) 281474993487875L);
        boolean boolean17 = identifier11.equals((java.lang.Object) int16);
        java.lang.Integer int18 = identifier11.getTypeShortForm();
        java.lang.String str19 = identifier11.toString();
        try {
            binaryEncoder1.encodeIdentifier(identifier11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 100 + "'", byte9 == (byte) 100);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281474993487878L + "'", long12.equals(281474993487878L));
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 6 + "'", int18.equals(6));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[hi!, ]" + "'", str19.equals("[hi!, ]"));
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList1.getAreaNumber();
        java.lang.Object[] objArray3 = shortList1.toArray();
        boolean boolean4 = floatList0.remove((java.lang.Object) shortList1);
        java.lang.Integer int5 = shortList1.getTypeShortForm();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject6.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = null;
        eventCOMObject6.setNetworkZone(identifier9);
        org.ccsds.moims.mo.mal.structures.URI uRI11 = eventCOMObject6.getSourceURI();
        org.ccsds.moims.mo.mal.structures.IdentifierList identifierList12 = eventCOMObject6.getDomain();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject13 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId14 = eventCOMObject13.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier15 = eventCOMObject13.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject16 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject16.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType21 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription22 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType21);
        eventCOMObject16.setObjType(objectType21);
        java.lang.Long long24 = eventCOMObject16.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId25 = eventCOMObject16.getObjectId();
        eventCOMObject13.setSource(objectId25);
        eventCOMObject6.setSource(objectId25);
        boolean boolean28 = shortList1.remove((java.lang.Object) eventCOMObject6);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject29 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId30 = eventCOMObject29.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType32 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject29.setObjType(objectType32);
        eventCOMObject6.setObjType(objectType32);
        org.ccsds.moims.mo.mal.structures.Identifier identifier35 = eventCOMObject6.getNetworkZone();
        org.ccsds.moims.mo.com.structures.ObjectId objectId36 = eventCOMObject6.getSource();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-9) + "'", int5.equals((-9)));
        org.junit.Assert.assertNull(uRI11);
        org.junit.Assert.assertNull(identifierList12);
        org.junit.Assert.assertNull(objectId14);
        org.junit.Assert.assertNull(identifier15);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 4294967295L + "'", long24.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNull(objectId30);
        org.junit.Assert.assertNotNull(objectType32);
        org.junit.Assert.assertNull(identifier35);
        org.junit.Assert.assertNotNull(objectId36);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime1 = new org.ccsds.moims.mo.mal.structures.FineTime(281474993487881L);
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.lang.Long[] longArray14 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList15 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList15, longArray14);
        java.lang.Object obj17 = longList15.clone();
        int int18 = strList5.indexOf((java.lang.Object) longList15);
        java.util.ListIterator<java.lang.String> strItor19 = strList5.listIterator();
        java.lang.Short[] shortArray23 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList24 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList24, shortArray23);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray31 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList32, uRIArray31);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        boolean boolean43 = uRIList32.containsAll((java.util.Collection<java.lang.Byte>) byteList39);
        boolean boolean44 = strList29.containsAll((java.util.Collection<java.lang.Byte>) byteList39);
        boolean boolean45 = shortList24.contains((java.lang.Object) byteList39);
        boolean boolean46 = strList5.removeAll((java.util.Collection<java.lang.Byte>) byteList39);
        java.lang.Byte[] byteArray51 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList52 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList52, byteArray51);
        boolean boolean55 = byteList52.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray60 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList61 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList61, byteArray60);
        boolean boolean64 = byteList61.add((java.lang.Byte) (byte) 100);
        boolean boolean65 = byteList52.addAll((java.util.Collection<java.lang.Byte>) byteList61);
        boolean boolean66 = byteList39.containsAll((java.util.Collection<java.lang.Byte>) byteList61);
        boolean boolean67 = fineTime1.equals((java.lang.Object) byteList39);
        java.io.OutputStream outputStream68 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder69 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream68);
        byte byte71 = binaryEncoder69.internalEncodeAttributeType((byte) 100);
        try {
            fineTime1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(uRIArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + byte71 + "' != '" + (byte) 100 + "'", byte71 == (byte) 100);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer13 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl14 = cOMServicesConsumer13.getArchiveService();
        cOMServicesConsumer13.closeConnections();
        cOMServicesConsumer13.closeConnections();
        boolean boolean17 = doubleList1.contains((java.lang.Object) cOMServicesConsumer13);
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl18 = cOMServicesConsumer13.getArchiveSyncService();
        esa.mo.com.impl.consumer.ArchiveSyncConsumerServiceImpl archiveSyncConsumerServiceImpl19 = cOMServicesConsumer13.getArchiveSyncService();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl18);
        org.junit.Assert.assertNull(archiveSyncConsumerServiceImpl19);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Short short5 = binaryDecoder4.decodeNullableShort();
        try {
            java.lang.Long long7 = binaryDecoder4.decodeAbstractElementType(true);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -64 + "'", short5.equals((short) -64));
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        int int3 = booleanList0.indexOf((java.lang.Object) 281474993487875L);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray4 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList5, uShortArray4);
        uShortList5.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element9 = uOctet8.createElement();
        int int10 = uShortList5.indexOf((java.lang.Object) element9);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.lang.Long[] longArray23 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList24 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList24, longArray23);
        java.lang.Object obj26 = longList24.clone();
        int int27 = strList14.indexOf((java.lang.Object) longList24);
        java.util.ListIterator<java.lang.String> strItor28 = strList14.listIterator();
        java.lang.Short[] shortArray32 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList33 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList33, shortArray32);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray40 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList41, uRIArray40);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = uRIList41.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean53 = strList38.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean54 = shortList33.contains((java.lang.Object) byteList48);
        boolean boolean55 = strList14.removeAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean56 = uShortList5.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        int int57 = byteList48.size();
        java.util.stream.Stream<java.lang.Byte> byteStream58 = byteList48.parallelStream();
        boolean boolean59 = booleanList0.retainAll((java.util.Collection<java.lang.Byte>) byteList48);
        org.ccsds.moims.mo.mal.structures.URIList uRIList60 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int61 = uRIList60.getTypeShortForm();
        java.lang.Integer int62 = uRIList60.getTypeShortForm();
        byte[] byteArray66 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray66);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder68 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray66);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger69 = binaryDecoder68.decodeUInteger();
        java.lang.Byte byte70 = binaryDecoder68.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element71 = uRIList60.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder68);
        boolean boolean72 = byteList48.remove((java.lang.Object) element71);
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(uShortArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(uRIArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 5 + "'", int57 == 5);
        org.junit.Assert.assertNotNull(byteStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-18) + "'", int61.equals((-18)));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-18) + "'", int62.equals((-18)));
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertNotNull(uInteger69);
        org.junit.Assert.assertTrue("'" + byte70 + "' != '" + (byte) -1 + "'", byte70.equals((byte) -1));
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(2);
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.ShortList shortList3 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList3.getAreaNumber();
        java.lang.Object[] objArray5 = shortList3.toArray();
        java.lang.Long long6 = shortList3.getShortForm();
        java.lang.Long long7 = shortList3.getShortForm();
        java.lang.Object[] objArray8 = shortList3.toArray();
        org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
        boolean boolean18 = byteList15.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 100);
        boolean boolean28 = byteList15.addAll((java.util.Collection<java.lang.Byte>) byteList24);
        java.lang.Object obj29 = byteList15.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream30 = byteList15.stream();
        boolean boolean31 = floatList9.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        byteList15.ensureCapacity((-4));
        byteList15.clear();
        boolean boolean35 = shortList3.retainAll((java.util.Collection<java.lang.Byte>) byteList15);
        boolean boolean36 = integerList1.containsAll((java.util.Collection<java.lang.Byte>) byteList15);
        java.lang.Integer int37 = integerList1.getTypeShortForm();
        int int38 = integerList1.size();
        org.ccsds.moims.mo.mal.structures.URI uRI40 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = uRI40.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort42 = uRI40.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet43 = uRI40.getAreaVersion();
        java.lang.Long long44 = uRI40.getShortForm();
        int int45 = integerList1.lastIndexOf((java.lang.Object) long44);
        java.io.OutputStream outputStream46 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder47 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream46);
        byte byte49 = binaryEncoder47.internalEncodeAttributeType((byte) 100);
        byte byte51 = binaryEncoder47.internalEncodeAttributeType((byte) -1);
        byte byte53 = binaryEncoder47.internalEncodeAttributeType((byte) 100);
        try {
            integerList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265079L + "'", long6.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265079L + "'", long7.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-11) + "'", int37.equals((-11)));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertNotNull(uShort42);
        org.junit.Assert.assertNotNull(uOctet43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 281474993487890L + "'", long44.equals(281474993487890L));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + byte49 + "' != '" + (byte) 100 + "'", byte49 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte51 + "' != '" + (byte) -1 + "'", byte51 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte53 + "' != '" + (byte) 100 + "'", byte53 == (byte) 100);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        int int2 = floatList0.lastIndexOf((java.lang.Object) 10);
        java.lang.Integer int3 = floatList0.getTypeShortForm();
        boolean boolean4 = floatList0.isEmpty();
        java.util.Spliterator<java.lang.Float> floatSpliterator5 = floatList0.spliterator();
        java.lang.Integer int6 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList8 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor10 = uShortList8.listIterator((int) (byte) 0);
        java.lang.Integer int11 = uShortList8.getTypeShortForm();
        int int12 = floatList0.lastIndexOf((java.lang.Object) uShortList8);
        java.lang.String str13 = floatList0.toString();
        java.util.stream.Stream<java.lang.Float> floatStream14 = floatList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Union union16 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Integer) 4);
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = union16.getAreaNumber();
        int int18 = floatList0.indexOf((java.lang.Object) union16);
        org.ccsds.moims.mo.mal.structures.URIList uRIList19 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int20 = uRIList19.getTypeShortForm();
        java.lang.Integer int21 = uRIList19.getTypeShortForm();
        java.lang.Object obj22 = uRIList19.clone();
        byte[] byteArray26 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder27 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray26);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder28 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray26);
        int int29 = uRIList19.lastIndexOf((java.lang.Object) binaryDecoder28);
        java.lang.Boolean boolean30 = binaryDecoder28.decodeBoolean();
        byte[] byteArray31 = binaryDecoder28.getRemainingEncodedData();
        java.lang.Boolean boolean32 = binaryDecoder28.decodeBoolean();
        org.ccsds.moims.mo.mal.structures.Element element33 = floatList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder28);
        try {
            java.lang.String str34 = binaryDecoder28.decodeString();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-4) + "'", int3.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(floatSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-4) + "'", int6.equals((-4)));
        org.junit.Assert.assertNotNull(uShortItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-10) + "'", int11.equals((-10)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[]" + "'", str13.equals("[]"));
        org.junit.Assert.assertNotNull(floatStream14);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-18) + "'", int20.equals((-18)));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-18) + "'", int21.equals((-18)));
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30.equals(true));
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32.equals(true));
        org.junit.Assert.assertNotNull(element33);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = null;
        try {
            binaryEncoder1.encodeUShort(uShort8);
            org.junit.Assert.fail("Expected exception of type org.ccsds.moims.mo.mal.MALException; message: Null value supplied in a non-nullable field");
        } catch (org.ccsds.moims.mo.mal.MALException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        org.ccsds.moims.mo.mal.structures.UShort uShort0 = null;
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.lang.Long[] longArray13 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList14 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList14, longArray13);
        java.lang.Object obj16 = longList14.clone();
        int int17 = strList4.indexOf((java.lang.Object) longList14);
        java.util.ListIterator<java.lang.String> strItor18 = strList4.listIterator();
        java.lang.Short[] shortArray22 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList23 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList23, shortArray22);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray30 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList31, uRIArray30);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        boolean boolean42 = uRIList31.containsAll((java.util.Collection<java.lang.Byte>) byteList38);
        boolean boolean43 = strList28.containsAll((java.util.Collection<java.lang.Byte>) byteList38);
        boolean boolean44 = shortList23.contains((java.lang.Object) byteList38);
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.Byte>) byteList38);
        byteList38.trimToSize();
        org.ccsds.moims.mo.mal.structures.URIList uRIList47 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int48 = uRIList47.getTypeShortForm();
        java.lang.Integer int49 = uRIList47.getTypeShortForm();
        java.lang.Object obj50 = uRIList47.clone();
        byte[] byteArray54 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder55 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray54);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder56 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray54);
        int int57 = uRIList47.lastIndexOf((java.lang.Object) binaryDecoder56);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger58 = binaryDecoder56.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort59 = uInteger58.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort60 = uInteger58.getServiceNumber();
        boolean boolean61 = byteList38.equals((java.lang.Object) uInteger58);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet62 = uInteger58.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList63 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int64 = uRIList63.getTypeShortForm();
        java.lang.Integer int65 = uRIList63.getTypeShortForm();
        java.lang.Object obj66 = uRIList63.clone();
        byte[] byteArray70 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder71 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder72 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray70);
        int int73 = uRIList63.lastIndexOf((java.lang.Object) binaryDecoder72);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger74 = binaryDecoder72.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort75 = uInteger74.getServiceNumber();
        java.lang.String str76 = uShort75.toString();
        try {
            org.ccsds.moims.mo.com.COMService cOMService77 = esa.mo.com.impl.util.HelperCOM.findCOMService(uShort0, uOctet62, uShort75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: NULL area argument");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(uRIArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-18) + "'", int48.equals((-18)));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-18) + "'", int49.equals((-18)));
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(uInteger58);
        org.junit.Assert.assertNotNull(uShort59);
        org.junit.Assert.assertNotNull(uShort60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertNotNull(uOctet62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-18) + "'", int64.equals((-18)));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-18) + "'", int65.equals((-18)));
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(uInteger74);
        org.junit.Assert.assertNotNull(uShort75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "0" + "'", str76.equals("0"));
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13, longArray12);
        java.lang.Object obj15 = longList13.clone();
        int int16 = strList3.indexOf((java.lang.Object) longList13);
        java.util.ListIterator<java.lang.String> strItor17 = strList3.listIterator();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = uRIList30.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean42 = strList27.containsAll((java.util.Collection<java.lang.Byte>) byteList37);
        boolean boolean43 = shortList22.contains((java.lang.Object) byteList37);
        boolean boolean44 = strList3.removeAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        boolean boolean62 = byteList59.add((java.lang.Byte) (byte) 100);
        boolean boolean63 = byteList50.addAll((java.util.Collection<java.lang.Byte>) byteList59);
        boolean boolean64 = byteList37.containsAll((java.util.Collection<java.lang.Byte>) byteList59);
        org.ccsds.moims.mo.mal.structures.URIList uRIList65 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int66 = uRIList65.getTypeShortForm();
        java.lang.Integer int67 = uRIList65.getTypeShortForm();
        boolean boolean68 = byteList37.equals((java.lang.Object) uRIList65);
        java.io.OutputStream outputStream69 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder70 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream69);
        byte byte72 = binaryEncoder70.internalEncodeAttributeType((byte) 100);
        byte byte74 = binaryEncoder70.internalEncodeAttributeType((byte) -1);
        byte byte76 = binaryEncoder70.internalEncodeAttributeType((byte) 100);
        byte byte78 = binaryEncoder70.internalEncodeAttributeType((byte) 100);
        try {
            uRIList65.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-18) + "'", int66.equals((-18)));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-18) + "'", int67.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + byte72 + "' != '" + (byte) 100 + "'", byte72 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte74 + "' != '" + (byte) -1 + "'", byte74 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte76 + "' != '" + (byte) 100 + "'", byte76 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte78 + "' != '" + (byte) 100 + "'", byte78 == (byte) 100);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.Element element1 = floatList0.createElement();
        java.lang.Integer int2 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.OctetList octetList3 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = octetList3.getServiceNumber();
        java.lang.Integer int5 = octetList3.getTypeShortForm();
        boolean boolean6 = floatList0.equals((java.lang.Object) int5);
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity9 = new esa.mo.com.impl.archive.entities.DomainHolderEntity(4, "hi!");
        int int10 = floatList0.indexOf((java.lang.Object) "hi!");
        org.ccsds.moims.mo.mal.structures.ShortList shortList11 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object[] objArray12 = shortList11.toArray();
        boolean boolean13 = floatList0.remove((java.lang.Object) objArray12);
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-4) + "'", int2.equals((-4)));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-7) + "'", int5.equals((-7)));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        org.ccsds.moims.mo.mal.structures.Time time1 = new org.ccsds.moims.mo.mal.structures.Time((long) 65535);
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        byte byte5 = binaryEncoder3.internalEncodeAttributeType((byte) -1);
        try {
            time1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity(7, "[-1, -1, -1, -1, 100, -1, -1, -1, -1, 100]");
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Integer int1 = shortList0.getTypeShortForm();
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        org.ccsds.moims.mo.mal.structures.Blob blob7 = binaryDecoder6.decodeBlob();
        boolean boolean8 = shortList0.equals((java.lang.Object) blob7);
        int int9 = blob7.getOffset();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-9) + "'", int1.equals((-9)));
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(blob7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        try {
            binaryEncoder1.encodeNullableDouble((java.lang.Double) 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = binaryDecoder5.decodeUInteger();
        java.lang.Integer int7 = binaryDecoder5.decodeInteger();
        try {
            java.lang.Byte byte8 = binaryDecoder5.decodeOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-64) + "'", int7.equals((-64)));
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        byte[] byteArray12 = binaryDecoder10.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime13 = binaryDecoder10.decodeFineTime();
        java.lang.String str14 = fineTime13.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(fineTime13);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "127" + "'", str14.equals("127"));
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI8 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject6.setSourceURI(uRI8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = uRI8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = uRI8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uRI8.getAreaNumber();
        try {
            binaryEncoder1.encodeNullableURI(uRI8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(uShort12);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        try {
            java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        boolean boolean3 = fastObjectType1.exists((java.lang.Long) 1558616177410L);
        boolean boolean5 = fastObjectType1.exists((java.lang.Long) 281474993487874L);
        try {
            org.ccsds.moims.mo.com.structures.ObjectType objectType7 = fastObjectType1.getObjectType((java.lang.Integer) (-18));
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: null");
        } catch (java.lang.Exception e) {
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (-64), (-18));
        org.ccsds.moims.mo.mal.structures.Blob blob13 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        byte[] byteArray14 = blob13.getValue();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray14);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        boolean boolean54 = uRIList43.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        boolean boolean55 = strList40.containsAll((java.util.Collection<java.lang.Byte>) byteList50);
        int int56 = longList8.lastIndexOf((java.lang.Object) boolean55);
        java.lang.Object obj57 = longList8.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int59 = uRIList58.getTypeShortForm();
        java.lang.Integer int60 = uRIList58.getTypeShortForm();
        java.lang.Object obj61 = uRIList58.clone();
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder66 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder67 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray65);
        int int68 = uRIList58.lastIndexOf((java.lang.Object) binaryDecoder67);
        boolean boolean69 = longList8.remove((java.lang.Object) uRIList58);
        boolean boolean70 = uRIList58.isEmpty();
        org.ccsds.moims.mo.mal.structures.Element element71 = uRIList58.createElement();
        esa.mo.com.impl.archive.entities.DomainHolderEntity domainHolderEntity74 = new esa.mo.com.impl.archive.entities.DomainHolderEntity(7, "18446744073709551615");
        int int75 = domainHolderEntity74.getId();
        boolean boolean76 = uRIList58.remove((java.lang.Object) domainHolderEntity74);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-18) + "'", int59.equals((-18)));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 7 + "'", int75 == 7);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.URIList uRIList8 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int9 = uRIList8.getTypeShortForm();
        java.lang.Integer int10 = uRIList8.getTypeShortForm();
        java.lang.Object obj11 = uRIList8.clone();
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder16 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray15);
        int int18 = uRIList8.lastIndexOf((java.lang.Object) binaryDecoder17);
        org.ccsds.moims.mo.mal.structures.Duration duration19 = binaryDecoder17.decodeDuration();
        double double20 = duration19.getValue();
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList25 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList25, shortArray24);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray32 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList33 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList33, uRIArray32);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
        boolean boolean43 = byteList40.add((java.lang.Byte) (byte) 100);
        boolean boolean44 = uRIList33.containsAll((java.util.Collection<java.lang.Byte>) byteList40);
        boolean boolean45 = strList30.containsAll((java.util.Collection<java.lang.Byte>) byteList40);
        boolean boolean46 = shortList25.contains((java.lang.Object) byteList40);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray47 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList48 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList48, uRIArray47);
        java.lang.Byte[] byteArray54 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList55 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList55, byteArray54);
        boolean boolean58 = byteList55.add((java.lang.Byte) (byte) 100);
        boolean boolean59 = uRIList48.containsAll((java.util.Collection<java.lang.Byte>) byteList55);
        boolean boolean60 = byteList55.isEmpty();
        boolean boolean61 = shortList25.containsAll((java.util.Collection<java.lang.Byte>) byteList55);
        java.lang.String str62 = shortList25.toString();
        boolean boolean63 = duration19.equals((java.lang.Object) str62);
        java.lang.Long long64 = duration19.getShortForm();
        try {
            binaryEncoder1.encodeDuration(duration19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7 == (byte) -1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-18) + "'", int9.equals((-18)));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-18) + "'", int10.equals((-18)));
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2.47E-322d + "'", double20 == 2.47E-322d);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(uRIArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertNotNull(uRIArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "[-1, 0, 100]" + "'", str62.equals("[-1, 0, 100]"));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 281474993487875L + "'", long64.equals(281474993487875L));
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6, (int) (short) 10, (int) (byte) -1);
        org.ccsds.moims.mo.mal.structures.Element element13 = blob12.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = blob12.getAreaVersion();
        java.lang.Long long15 = blob12.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList17 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray18 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList19 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList19, uRIArray18);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        boolean boolean29 = byteList26.add((java.lang.Byte) (byte) 100);
        boolean boolean30 = uRIList19.containsAll((java.util.Collection<java.lang.Byte>) byteList26);
        int int32 = uRIList19.lastIndexOf((java.lang.Object) 0.0d);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
        boolean boolean50 = byteList47.add((java.lang.Byte) (byte) 100);
        boolean boolean51 = byteList38.addAll((java.util.Collection<java.lang.Byte>) byteList47);
        int int53 = byteList47.lastIndexOf((java.lang.Object) 0.0f);
        boolean boolean54 = uRIList19.removeAll((java.util.Collection<java.lang.Byte>) byteList47);
        int int55 = uShortList17.indexOf((java.lang.Object) uRIList19);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.lang.Long[] longArray68 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList69 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList69, longArray68);
        java.lang.Object obj71 = longList69.clone();
        int int72 = strList59.indexOf((java.lang.Object) longList69);
        boolean boolean73 = uRIList19.contains((java.lang.Object) strList59);
        java.lang.Byte[] byteArray78 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList79 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList79, byteArray78);
        boolean boolean82 = byteList79.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray87 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList88 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList88, byteArray87);
        boolean boolean91 = byteList88.add((java.lang.Byte) (byte) 100);
        boolean boolean92 = byteList79.addAll((java.util.Collection<java.lang.Byte>) byteList88);
        java.lang.Object obj93 = byteList79.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream94 = byteList79.stream();
        java.lang.Object[] objArray95 = byteList79.toArray();
        boolean boolean96 = strList59.containsAll((java.util.Collection<java.lang.Byte>) byteList79);
        boolean boolean97 = blob12.equals((java.lang.Object) byteList79);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487873L + "'", long15.equals(281474993487873L));
        org.junit.Assert.assertNotNull(uRIArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(byteStream94);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", !boolean96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", !boolean97);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger0);
        java.lang.Integer int2 = uLong1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.Element element4 = uLong1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uLong1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uLong1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uLong1.getAreaNumber();
        java.math.BigInteger bigInteger8 = uLong1.getValue();
        org.ccsds.moims.mo.mal.structures.ULong uLong9 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger8);
        java.io.OutputStream outputStream10 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder11 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream10);
        byte byte13 = binaryEncoder11.internalEncodeAttributeType((byte) 100);
        byte byte15 = binaryEncoder11.internalEncodeAttributeType((byte) -1);
        byte byte17 = binaryEncoder11.internalEncodeAttributeType((byte) 1);
        try {
            uLong9.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(bigInteger0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 14 + "'", int2.equals(14));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(bigInteger8);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 100 + "'", byte13 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -1 + "'", byte15 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 1 + "'", byte17 == (byte) 1);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        java.lang.Long[] longArray15 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList16 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList16, longArray15);
        java.lang.Object obj18 = longList16.clone();
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList21 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList21, booleanArray20);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
        boolean boolean31 = byteList28.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        boolean boolean40 = byteList37.add((java.lang.Byte) (byte) 100);
        boolean boolean41 = byteList28.addAll((java.util.Collection<java.lang.Byte>) byteList37);
        java.lang.Object obj42 = byteList28.clone();
        boolean boolean43 = booleanList21.contains((java.lang.Object) byteList28);
        boolean boolean44 = longList16.remove((java.lang.Object) boolean43);
        java.lang.Byte[] byteArray49 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList50 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList50, byteArray49);
        boolean boolean53 = byteList50.add((java.lang.Byte) (byte) 100);
        int int54 = longList16.lastIndexOf((java.lang.Object) byteList50);
        int int55 = longList16.size();
        java.math.BigInteger bigInteger56 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong57 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger56);
        java.lang.Integer int58 = uLong57.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort59 = uLong57.getAreaNumber();
        boolean boolean60 = longList16.contains((java.lang.Object) uLong57);
        java.lang.Long long61 = uLong57.getShortForm();
        org.ccsds.moims.mo.mal.structures.Union union63 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        java.lang.Integer int64 = union63.getTypeShortForm();
        java.lang.String str65 = union63.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet66 = union63.getAreaVersion();
        boolean boolean67 = uLong57.equals((java.lang.Object) union63);
        org.ccsds.moims.mo.mal.structures.Element element68 = uLong57.createElement();
        try {
            binaryEncoder1.encodeULong(uLong57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7 == (byte) -1);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 7 + "'", int55 == 7);
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 14 + "'", int58.equals(14));
        org.junit.Assert.assertNotNull(uShort59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 281474993487886L + "'", long61.equals(281474993487886L));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64.equals(2));
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "true" + "'", str65.equals("true"));
        org.junit.Assert.assertNotNull(uOctet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertNotNull(element68);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList(7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = booleanList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList4 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = doubleList4.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = doubleList4.getAreaNumber();
        java.lang.Long long7 = doubleList4.getShortForm();
        java.util.stream.Stream<java.lang.Double> doubleStream8 = doubleList4.stream();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject9 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId10 = eventCOMObject9.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier11 = eventCOMObject9.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject12.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType17 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription18 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType17);
        eventCOMObject12.setObjType(objectType17);
        java.lang.Long long20 = eventCOMObject12.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId21 = eventCOMObject12.getObjectId();
        eventCOMObject9.setSource(objectId21);
        org.ccsds.moims.mo.mal.structures.Time time23 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int24 = time23.getTypeShortForm();
        eventCOMObject9.setTimestamp(time23);
        boolean boolean26 = doubleList4.remove((java.lang.Object) eventCOMObject9);
        boolean boolean27 = booleanList1.remove((java.lang.Object) boolean26);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265083L + "'", long7.equals(281475010265083L));
        org.junit.Assert.assertNotNull(doubleStream8);
        org.junit.Assert.assertNull(objectId10);
        org.junit.Assert.assertNull(identifier11);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 4294967295L + "'", long20.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 16 + "'", int24.equals(16));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream4 = uRIList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Union union6 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder12 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        boolean boolean13 = union6.equals((java.lang.Object) byteArray10);
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray10, 0, (int) '#');
        boolean boolean17 = uRIList0.remove((java.lang.Object) '#');
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI19 = uRIList0.get((-9));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(uRIStream4);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) 100.0d);
        java.io.OutputStream outputStream2 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder3 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream2);
        try {
            union1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId5 = eventCOMObject4.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType6 = eventCOMObject4.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject7 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI9 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject7.setSourceURI(uRI9);
        eventCOMObject4.setSourceURI(uRI9);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject12 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId13 = eventCOMObject12.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier14 = eventCOMObject12.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject15 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject15.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType20 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription21 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType20);
        eventCOMObject15.setObjType(objectType20);
        java.lang.Long long23 = eventCOMObject15.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId24 = eventCOMObject15.getObjectId();
        eventCOMObject12.setSource(objectId24);
        org.ccsds.moims.mo.mal.structures.Time time26 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int27 = time26.getTypeShortForm();
        eventCOMObject12.setTimestamp(time26);
        eventCOMObject4.setTimestamp(time26);
        org.ccsds.moims.mo.mal.structures.Identifier identifier30 = null;
        eventCOMObject4.setNetworkZone(identifier30);
        org.ccsds.moims.mo.mal.structures.Identifier identifier32 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str33 = identifier32.toString();
        eventCOMObject4.setNetworkZone(identifier32);
        try {
            binaryEncoder1.encodeNullableIdentifier(identifier32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertNull(objectId5);
        org.junit.Assert.assertNull(objectType6);
        org.junit.Assert.assertNull(objectId13);
        org.junit.Assert.assertNull(identifier14);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 4294967295L + "'", long23.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 16 + "'", int27.equals(16));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(5);
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder6 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray5);
        java.lang.Integer int8 = binaryDecoder7.decodeInteger();
        int int10 = binaryDecoder7.internalDecodeAttributeType((byte) 0);
        java.lang.Long long11 = binaryDecoder7.decodeLong();
        try {
            org.ccsds.moims.mo.mal.structures.Element element12 = stringList1.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8.equals(50));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-64L) + "'", long11.equals((-64L)));
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.Element element1 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList0.getAreaNumber();
        java.lang.Long long3 = shortList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList0.getAreaNumber();
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.lang.Short[] shortArray11 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList12 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList12, shortArray11);
        java.util.ListIterator<java.lang.Short> shortItor14 = shortList12.listIterator();
        int int15 = doubleList7.indexOf((java.lang.Object) shortList12);
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean17 = blob16.isURLBased();
        byte[] byteArray21 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder22 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray21);
        org.ccsds.moims.mo.mal.structures.Element element23 = blob16.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder22);
        boolean boolean24 = doubleList7.contains((java.lang.Object) blob16);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray30 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList31, uRIArray30);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        boolean boolean41 = byteList38.add((java.lang.Byte) (byte) 100);
        boolean boolean42 = uRIList31.containsAll((java.util.Collection<java.lang.Byte>) byteList38);
        boolean boolean43 = strList28.containsAll((java.util.Collection<java.lang.Byte>) byteList38);
        boolean boolean44 = doubleList7.containsAll((java.util.Collection<java.lang.Byte>) byteList38);
        boolean boolean45 = shortList0.retainAll((java.util.Collection<java.lang.Byte>) byteList38);
        org.ccsds.moims.mo.mal.structures.Element element46 = shortList0.createElement();
        int int47 = shortList0.size();
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(shortItor14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(uRIArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = new org.ccsds.moims.mo.mal.structures.UInteger(0L);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uInteger9.getAreaNumber();
        try {
            binaryEncoder1.encodeUShort(uShort10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -1 + "'", byte7 == (byte) -1);
        org.junit.Assert.assertNotNull(uShort10);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        int int3 = booleanList0.indexOf((java.lang.Object) 281474993487875L);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray4 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList5, uShortArray4);
        uShortList5.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element9 = uOctet8.createElement();
        int int10 = uShortList5.indexOf((java.lang.Object) element9);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.lang.Long[] longArray23 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList24 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList24, longArray23);
        java.lang.Object obj26 = longList24.clone();
        int int27 = strList14.indexOf((java.lang.Object) longList24);
        java.util.ListIterator<java.lang.String> strItor28 = strList14.listIterator();
        java.lang.Short[] shortArray32 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList33 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList33, shortArray32);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray40 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList41, uRIArray40);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        boolean boolean51 = byteList48.add((java.lang.Byte) (byte) 100);
        boolean boolean52 = uRIList41.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean53 = strList38.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean54 = shortList33.contains((java.lang.Object) byteList48);
        boolean boolean55 = strList14.removeAll((java.util.Collection<java.lang.Byte>) byteList48);
        boolean boolean56 = uShortList5.containsAll((java.util.Collection<java.lang.Byte>) byteList48);
        int int57 = byteList48.size();
        java.util.stream.Stream<java.lang.Byte> byteStream58 = byteList48.parallelStream();
        boolean boolean59 = booleanList0.retainAll((java.util.Collection<java.lang.Byte>) byteList48);
        booleanList0.clear();
        java.util.stream.Stream<java.lang.Boolean> booleanStream61 = booleanList0.parallelStream();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject62 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId63 = eventCOMObject62.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType64 = eventCOMObject62.getObjType();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject65 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI67 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject65.setSourceURI(uRI67);
        eventCOMObject62.setSourceURI(uRI67);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject70 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId71 = eventCOMObject70.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier72 = eventCOMObject70.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject73 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject73.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType78 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription79 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType78);
        eventCOMObject73.setObjType(objectType78);
        java.lang.Long long81 = eventCOMObject73.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId82 = eventCOMObject73.getObjectId();
        eventCOMObject70.setSource(objectId82);
        org.ccsds.moims.mo.mal.structures.Time time84 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int85 = time84.getTypeShortForm();
        eventCOMObject70.setTimestamp(time84);
        eventCOMObject62.setTimestamp(time84);
        org.ccsds.moims.mo.mal.structures.Identifier identifier88 = null;
        eventCOMObject62.setNetworkZone(identifier88);
        boolean boolean90 = booleanList0.equals((java.lang.Object) eventCOMObject62);
        java.util.stream.Stream<java.lang.Boolean> booleanStream91 = booleanList0.stream();
        int int92 = booleanList0.size();
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(uShortArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(uRIArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 5 + "'", int57 == 5);
        org.junit.Assert.assertNotNull(byteStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(booleanStream61);
        org.junit.Assert.assertNull(objectId63);
        org.junit.Assert.assertNull(objectType64);
        org.junit.Assert.assertNull(objectId71);
        org.junit.Assert.assertNull(identifier72);
        org.junit.Assert.assertNotNull(objectType78);
        org.junit.Assert.assertNotNull(subscription79);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 4294967295L + "'", long81.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 16 + "'", int85.equals(16));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertNotNull(booleanStream91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeURI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uRI6.getAreaVersion();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList17 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        int int20 = intList17.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream21 = intList17.stream();
        java.util.Iterator<java.lang.Integer> intItor22 = intList17.iterator();
        boolean boolean23 = uRI6.equals((java.lang.Object) intItor22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = uRI6.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = uRI6.getAreaNumber();
        java.io.OutputStream outputStream26 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder27 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream26);
        byte byte29 = binaryEncoder27.internalEncodeAttributeType((byte) 100);
        byte byte31 = binaryEncoder27.internalEncodeAttributeType((byte) -1);
        byte byte33 = binaryEncoder27.internalEncodeAttributeType((byte) 1);
        try {
            uRI6.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(uRI6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(intItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + byte29 + "' != '" + (byte) 100 + "'", byte29 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte31 + "' != '" + (byte) -1 + "'", byte31 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte33 + "' != '" + (byte) 1 + "'", byte33 == (byte) 1);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        byte byte7 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        try {
            binaryEncoder1.encodeNullableInteger((java.lang.Integer) 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 100 + "'", byte7 == (byte) 100);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.lang.Long[] longArray14 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList15 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList15, longArray14);
        java.lang.Object obj17 = longList15.clone();
        int int18 = strList5.indexOf((java.lang.Object) longList15);
        java.util.ListIterator<java.lang.String> strItor19 = strList5.listIterator();
        java.lang.Short[] shortArray23 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList24 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList24, shortArray23);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray31 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList32, uRIArray31);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 100);
        boolean boolean43 = uRIList32.containsAll((java.util.Collection<java.lang.Byte>) byteList39);
        boolean boolean44 = strList29.containsAll((java.util.Collection<java.lang.Byte>) byteList39);
        boolean boolean45 = shortList24.contains((java.lang.Object) byteList39);
        boolean boolean46 = strList5.removeAll((java.util.Collection<java.lang.Byte>) byteList39);
        java.lang.Byte[] byteArray51 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList52 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList52, byteArray51);
        boolean boolean55 = byteList52.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray60 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList61 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList61, byteArray60);
        boolean boolean64 = byteList61.add((java.lang.Byte) (byte) 100);
        boolean boolean65 = byteList52.addAll((java.util.Collection<java.lang.Byte>) byteList61);
        boolean boolean66 = byteList39.containsAll((java.util.Collection<java.lang.Byte>) byteList61);
        org.ccsds.moims.mo.mal.structures.URIList uRIList67 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int68 = uRIList67.getTypeShortForm();
        java.lang.Integer int69 = uRIList67.getTypeShortForm();
        boolean boolean70 = byteList39.equals((java.lang.Object) uRIList67);
        org.ccsds.moims.mo.mal.structures.UShort uShort71 = uRIList67.getAreaNumber();
        java.lang.Integer int72 = uRIList67.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet73 = uRIList67.getAreaVersion();
        try {
            binaryEncoder1.encodeAttribute((org.ccsds.moims.mo.mal.structures.Attribute) uOctet73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(uRIArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-18) + "'", int68.equals((-18)));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-18) + "'", int69.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertNotNull(uShort71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-18) + "'", int72.equals((-18)));
        org.junit.Assert.assertNotNull(uOctet73);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        boolean boolean3 = booleanList0.add((java.lang.Boolean) true);
        boolean boolean5 = booleanList0.remove((java.lang.Object) 281474993487884L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = booleanList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Union union8 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        int int9 = booleanList0.lastIndexOf((java.lang.Object) (-1.0d));
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList18.getServiceNumber();
        boolean boolean20 = doubleList16.containsAll((java.util.Collection<java.lang.Byte>) octetList18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        uShortList22.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_VERSION;
        org.ccsds.moims.mo.mal.structures.Element element26 = uOctet25.createElement();
        int int27 = uShortList22.indexOf((java.lang.Object) element26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.lang.Long[] longArray40 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41, longArray40);
        java.lang.Object obj43 = longList41.clone();
        int int44 = strList31.indexOf((java.lang.Object) longList41);
        java.util.ListIterator<java.lang.String> strItor45 = strList31.listIterator();
        java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray57 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList58, uRIArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList65 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList65, byteArray64);
        boolean boolean68 = byteList65.add((java.lang.Byte) (byte) 100);
        boolean boolean69 = uRIList58.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean70 = strList55.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean71 = shortList50.contains((java.lang.Object) byteList65);
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean73 = uShortList22.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        int int74 = byteList65.size();
        boolean boolean75 = octetList18.containsAll((java.util.Collection<java.lang.Byte>) byteList65);
        boolean boolean76 = booleanList0.removeAll((java.util.Collection<java.lang.Byte>) octetList18);
        booleanList0.trimToSize();
        org.ccsds.moims.mo.mal.structures.URIList uRIList78 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int79 = uRIList78.getTypeShortForm();
        java.lang.Integer int80 = uRIList78.getTypeShortForm();
        java.lang.Object obj81 = uRIList78.clone();
        byte[] byteArray85 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder86 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray85);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder87 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray85);
        int int88 = uRIList78.lastIndexOf((java.lang.Object) binaryDecoder87);
        java.lang.Boolean boolean89 = binaryDecoder87.decodeBoolean();
        byte[] byteArray90 = binaryDecoder87.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder91 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray90);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder93 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray90, (-15));
        try {
            org.ccsds.moims.mo.mal.structures.Element element94 = booleanList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -15");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uRIArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-18) + "'", int79.equals((-18)));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-18) + "'", int80.equals((-18)));
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89.equals(true));
        org.junit.Assert.assertNotNull(byteArray90);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Byte) (byte) 10);
        java.lang.Byte byte2 = union1.getOctetValue();
        java.io.OutputStream outputStream3 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder4 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream3);
        byte byte6 = binaryEncoder4.internalEncodeAttributeType((byte) -1);
        try {
            union1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte2 + "' != '" + (byte) 10 + "'", byte2.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) -1 + "'", byte6 == (byte) -1);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        esa.mo.com.impl.archive.db.DatabaseBackend databaseBackend0 = null;
        esa.mo.com.impl.archive.fast.FastObjectType fastObjectType1 = new esa.mo.com.impl.archive.fast.FastObjectType(databaseBackend0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject2 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId3 = eventCOMObject2.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject2.setObjType(objectType5);
        try {
            java.lang.Integer int7 = fastObjectType1.getObjectTypeId(objectType5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(objectId3);
        org.junit.Assert.assertNotNull(objectType5);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { false };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        boolean boolean23 = byteList20.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 100);
        boolean boolean33 = byteList20.addAll((java.util.Collection<java.lang.Byte>) byteList29);
        java.lang.Object obj34 = byteList20.clone();
        boolean boolean35 = booleanList13.contains((java.lang.Object) byteList20);
        boolean boolean36 = longList8.remove((java.lang.Object) boolean35);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
        boolean boolean45 = byteList42.add((java.lang.Byte) (byte) 100);
        int int46 = longList8.lastIndexOf((java.lang.Object) byteList42);
        int int47 = longList8.size();
        byte[] byteArray51 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder52 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray51);
        java.lang.Double double53 = binaryDecoder52.decodeNullableDouble();
        byte[] byteArray54 = binaryDecoder52.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob55 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray54);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.lang.Long[] longArray68 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList69 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList69, longArray68);
        java.lang.Object obj71 = longList69.clone();
        int int72 = strList59.indexOf((java.lang.Object) longList69);
        java.util.ListIterator<java.lang.String> strItor73 = strList59.listIterator();
        java.lang.String str74 = strList59.toString();
        java.lang.Double[] doubleArray77 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList78 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList78, doubleArray77);
        java.lang.String[] strArray82 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        int int85 = strList83.size();
        boolean boolean86 = doubleList78.equals((java.lang.Object) strList83);
        boolean boolean87 = strList59.remove((java.lang.Object) strList83);
        boolean boolean88 = blob55.equals((java.lang.Object) strList83);
        org.ccsds.moims.mo.mal.structures.UShort uShort89 = blob55.getServiceNumber();
        int int90 = longList8.lastIndexOf((java.lang.Object) uShort89);
        java.lang.Object[] objArray91 = longList8.toArray();
        java.util.Spliterator<java.lang.Long> longSpliterator92 = longList8.spliterator();
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals((double) double53, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "[hi!, ]" + "'", str74.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", !boolean87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
        org.junit.Assert.assertNotNull(uShort89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertNotNull(longSpliterator92);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = longList8.clone();
        longList8.ensureCapacity((int) '4');
        esa.mo.com.impl.archive.entities.ProviderURIHolderEntity providerURIHolderEntity15 = new esa.mo.com.impl.archive.entities.ProviderURIHolderEntity((int) (byte) 0, "hi!");
        boolean boolean16 = longList8.remove((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = longList8.clone();
        boolean boolean18 = longList8.isEmpty();
        try {
            java.lang.Long long21 = longList8.set((-15), (java.lang.Long) 281474993487877L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = integerList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList0.getAreaNumber();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.Element element8 = uShort2.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder7);
        org.ccsds.moims.mo.mal.structures.Time time9 = binaryDecoder7.decodeTime();
        org.ccsds.moims.mo.mal.structures.FloatList floatList10 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        boolean boolean19 = byteList16.add((java.lang.Byte) (byte) 100);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
        boolean boolean28 = byteList25.add((java.lang.Byte) (byte) 100);
        boolean boolean29 = byteList16.addAll((java.util.Collection<java.lang.Byte>) byteList25);
        java.lang.Object obj30 = byteList16.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream31 = byteList16.stream();
        boolean boolean32 = floatList10.containsAll((java.util.Collection<java.lang.Byte>) byteList16);
        byteList16.ensureCapacity((-4));
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray36 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList37 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList37, uRIArray36);
        java.lang.Byte[] byteArray43 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList44 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList44, byteArray43);
        boolean boolean47 = byteList44.add((java.lang.Byte) (byte) 100);
        boolean boolean48 = uRIList37.containsAll((java.util.Collection<java.lang.Byte>) byteList44);
        boolean boolean49 = byteList44.isEmpty();
        boolean boolean50 = byteList16.addAll(10, (java.util.Collection<java.lang.Byte>) byteList44);
        byteList16.clear();
        org.ccsds.moims.mo.mal.structures.OctetList octetList53 = new org.ccsds.moims.mo.mal.structures.OctetList(12);
        boolean boolean54 = byteList16.addAll((java.util.Collection<java.lang.Byte>) octetList53);
        try {
            org.ccsds.moims.mo.mal.structures.Element element55 = binaryDecoder7.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) octetList53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(time9);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(byteStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(uRIArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer13 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl14 = cOMServicesConsumer13.getArchiveService();
        cOMServicesConsumer13.closeConnections();
        cOMServicesConsumer13.closeConnections();
        boolean boolean17 = doubleList1.contains((java.lang.Object) cOMServicesConsumer13);
        byte[] byteArray21 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder22 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray21);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger23 = binaryDecoder22.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = uInteger23.getServiceNumber();
        boolean boolean25 = doubleList1.contains((java.lang.Object) uShort24);
        try {
            java.lang.Double double27 = doubleList1.get(12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 12, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(uInteger23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        byte[] byteArray12 = binaryDecoder9.getRemainingEncodedData();
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder14 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray12, 5);
        try {
            org.ccsds.moims.mo.mal.structures.UInteger uInteger15 = binaryDecoder14.decodeNullableUInteger();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject0.setSourceURI(uRI2);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRI2.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element5 = uRI2.createElement();
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(element5);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 100, 100, 1, 8, 8, 8 };
        java.util.ArrayList<java.lang.Integer> intList8 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        boolean boolean21 = byteList18.add((java.lang.Byte) (byte) 100);
        boolean boolean22 = uRIList11.containsAll((java.util.Collection<java.lang.Byte>) byteList18);
        boolean boolean23 = intList8.removeAll((java.util.Collection<java.lang.Byte>) byteList18);
        org.ccsds.moims.mo.mal.structures.Union union25 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        int int26 = byteList18.lastIndexOf((java.lang.Object) union25);
        try {
            java.lang.Object obj28 = esa.mo.com.impl.util.HelperCOM.getNestedObject((java.lang.Object) int26, "[10.0, 10.0, -1.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchFieldException; message: [10");
        } catch (java.lang.NoSuchFieldException e) {
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 100);
        boolean boolean17 = uRIList6.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        boolean boolean18 = strList3.containsAll((java.util.Collection<java.lang.Byte>) byteList13);
        java.util.Iterator<java.lang.String> strItor19 = strList3.iterator();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer20 = new esa.mo.com.impl.util.COMServicesConsumer();
        cOMServicesConsumer20.closeConnections();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl22 = cOMServicesConsumer20.getEventService();
        boolean boolean23 = strList3.contains((java.lang.Object) cOMServicesConsumer20);
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl24 = cOMServicesConsumer20.getEventService();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNull(eventConsumerServiceImpl22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNull(eventConsumerServiceImpl24);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer0 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl1 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl3 = cOMServicesConsumer0.getEventService();
        esa.mo.com.impl.consumer.EventConsumerServiceImpl eventConsumerServiceImpl4 = cOMServicesConsumer0.getEventService();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl5 = cOMServicesConsumer0.getArchiveService();
        cOMServicesConsumer0.closeConnections();
        org.junit.Assert.assertNull(archiveConsumerServiceImpl1);
        org.junit.Assert.assertNull(eventConsumerServiceImpl3);
        org.junit.Assert.assertNull(eventConsumerServiceImpl4);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl5);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, (-1.0d), Double.NaN, 0.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        org.ccsds.moims.mo.mal.structures.OctetList octetList8 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList8.getServiceNumber();
        boolean boolean10 = doubleList6.containsAll((java.util.Collection<java.lang.Byte>) octetList8);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) -1, (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList15 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList15, shortArray14);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray22 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList23, uRIArray22);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 100);
        boolean boolean34 = uRIList23.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean35 = strList20.containsAll((java.util.Collection<java.lang.Byte>) byteList30);
        boolean boolean36 = shortList15.contains((java.lang.Object) byteList30);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray37 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList38 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList38, uRIArray37);
        java.lang.Byte[] byteArray44 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList45 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList45, byteArray44);
        boolean boolean48 = byteList45.add((java.lang.Byte) (byte) 100);
        boolean boolean49 = uRIList38.containsAll((java.util.Collection<java.lang.Byte>) byteList45);
        boolean boolean50 = byteList45.isEmpty();
        boolean boolean51 = shortList15.containsAll((java.util.Collection<java.lang.Byte>) byteList45);
        java.util.stream.Stream<java.lang.Short> shortStream52 = shortList15.parallelStream();
        boolean boolean53 = doubleList6.equals((java.lang.Object) shortStream52);
        java.util.stream.Stream<java.lang.Double> doubleStream54 = doubleList6.parallelStream();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject55 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject55.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType60 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription61 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType60);
        eventCOMObject55.setObjType(objectType60);
        java.lang.Long long63 = eventCOMObject55.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectType objectType66 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription67 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType66);
        java.lang.Boolean boolean68 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType66);
        java.lang.Boolean boolean69 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType66);
        java.lang.Long long70 = esa.mo.com.impl.util.HelperCOM.generateSubKey(objectType66);
        eventCOMObject55.setObjType(objectType66);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject74 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject74.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType79 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription80 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType79);
        eventCOMObject74.setObjType(objectType79);
        org.ccsds.moims.mo.mal.structures.Subscription subscription82 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("1", objectType79);
        org.ccsds.moims.mo.mal.structures.Subscription subscription83 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("hi!", objectType79);
        eventCOMObject55.setObjType(objectType79);
        boolean boolean85 = doubleList6.remove((java.lang.Object) objectType79);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(uRIArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(uRIArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(shortStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(doubleStream54);
        org.junit.Assert.assertNotNull(objectType60);
        org.junit.Assert.assertNotNull(subscription61);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 4294967295L + "'", long63.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(subscription67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68.equals(true));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69.equals(true));
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 281474993487885L + "'", long70.equals(281474993487885L));
        org.junit.Assert.assertNotNull(objectType79);
        org.junit.Assert.assertNotNull(subscription80);
        org.junit.Assert.assertNotNull(subscription82);
        org.junit.Assert.assertNotNull(subscription83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", !boolean85);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.util.ListIterator<java.lang.Double> doubleItor21 = doubleList2.listIterator(1);
        java.util.ListIterator<java.lang.Double> doubleItor22 = doubleList2.listIterator();
        try {
            java.lang.Double double25 = doubleList2.set(13, (java.lang.Double) (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 13, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(doubleItor21);
        org.junit.Assert.assertNotNull(doubleItor22);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(1);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList1.listIterator((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uShortList1.getAreaVersion();
        uShortList1.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = uShortList1.getServiceNumber();
        java.lang.String str7 = uShortList1.toString();
        org.ccsds.moims.mo.mal.structures.Element element8 = uShortList1.createElement();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject10 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.mal.structures.URI uRI12 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        eventCOMObject10.setSourceURI(uRI12);
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = uRI12.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = uRI12.getServiceNumber();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort16 = uShortList1.set(12, uShort15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 12, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[]" + "'", str7.equals("[]"));
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(uShort15);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        java.util.stream.Stream<java.lang.Long> longStream2 = longList1.stream();
        boolean boolean4 = longList1.add((java.lang.Long) 1558616165304L);
        java.lang.Object obj5 = null;
        int int6 = longList1.indexOf(obj5);
        java.io.OutputStream outputStream7 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder8 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream7);
        byte byte10 = binaryEncoder8.internalEncodeAttributeType((byte) 100);
        try {
            longList1.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(longStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 100 + "'", byte10 == (byte) 100);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId1 = eventCOMObject0.getSource();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = eventCOMObject0.getSourceURI();
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = eventCOMObject0.getNetworkZone();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject4 = new esa.mo.com.impl.util.EventCOMObject();
        org.ccsds.moims.mo.com.structures.ObjectId objectId5 = eventCOMObject4.getSource();
        org.ccsds.moims.mo.com.structures.ObjectType objectType7 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        eventCOMObject4.setObjType(objectType7);
        eventCOMObject0.setObjType(objectType7);
        eventCOMObject0.setObjId((java.lang.Long) 1558616171065L);
        org.ccsds.moims.mo.mal.structures.ShortList shortList13 = new org.ccsds.moims.mo.mal.structures.ShortList(18);
        eventCOMObject0.setBody((org.ccsds.moims.mo.mal.structures.Element) shortList13);
        org.ccsds.moims.mo.mal.structures.Element element15 = shortList13.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = shortList13.getServiceNumber();
        org.junit.Assert.assertNull(objectId1);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNull(identifier3);
        org.junit.Assert.assertNull(objectId5);
        org.junit.Assert.assertNotNull(objectType7);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(uShort16);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3);
        org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray3, 14, 18);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger11 = binaryDecoder10.decodeUInteger();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime12 = binaryDecoder10.decodeNullableFineTime();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = fineTime12.getServiceNumber();
        java.io.OutputStream outputStream14 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder15 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream14);
        byte byte17 = binaryEncoder15.internalEncodeAttributeType((byte) 100);
        byte byte19 = binaryEncoder15.internalEncodeAttributeType((byte) -1);
        byte byte21 = binaryEncoder15.internalEncodeAttributeType((byte) 1);
        try {
            fineTime12.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(uInteger11);
        org.junit.Assert.assertNotNull(fineTime12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 100 + "'", byte17 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) -1 + "'", byte19 == (byte) -1);
        org.junit.Assert.assertTrue("'" + byte21 + "' != '" + (byte) 1 + "'", byte21 == (byte) 1);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        org.ccsds.moims.mo.mal.structures.Time time5 = new org.ccsds.moims.mo.mal.structures.Time(4294967295L);
        try {
            binaryEncoder1.encodeTime(time5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) -1 + "'", byte3 == (byte) -1);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray0 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList1, uShortArray0);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream3 = uShortList1.parallelStream();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream4 = uShortList1.stream();
        uShortList1.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream6 = uShortList1.stream();
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray10);
        java.lang.Double double12 = binaryDecoder11.decodeNullableDouble();
        byte[] byteArray13 = binaryDecoder11.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13, 18, (int) ' ');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = blob16.getAreaVersion();
        int int18 = uShortList1.indexOf((java.lang.Object) blob16);
        java.io.OutputStream outputStream19 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder20 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream19);
        byte byte22 = binaryEncoder20.internalEncodeAttributeType((byte) 100);
        byte byte24 = binaryEncoder20.internalEncodeAttributeType((byte) 10);
        byte byte26 = binaryEncoder20.internalEncodeAttributeType((byte) -1);
        try {
            blob16.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShortArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uShortStream3);
        org.junit.Assert.assertNotNull(uShortStream4);
        org.junit.Assert.assertNotNull(uShortStream6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals((double) double12, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + byte22 + "' != '" + (byte) 100 + "'", byte22 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte24 + "' != '" + (byte) 10 + "'", byte24 == (byte) 10);
        org.junit.Assert.assertTrue("'" + byte26 + "' != '" + (byte) -1 + "'", byte26 == (byte) -1);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Byte byte6 = binaryDecoder5.decodeOctet();
        java.lang.Byte byte7 = binaryDecoder5.decodeNullableOctet();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier8 = binaryDecoder5.decodeNullableIdentifier();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 100 + "'", byte6.equals((byte) 100));
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 0 + "'", byte7.equals((byte) 0));
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.lang.Object[] objArray2 = shortList0.toArray();
        java.lang.Long long3 = shortList0.getShortForm();
        shortList0.ensureCapacity((int) (byte) 0);
        java.util.stream.Stream<java.lang.Short> shortStream6 = shortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.URI uRI8 = new org.ccsds.moims.mo.mal.structures.URI("hi!");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = uRI8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uRI8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = uRI8.getAreaVersion();
        java.lang.Long long12 = uOctet11.getShortForm();
        boolean boolean13 = shortList0.contains((java.lang.Object) uOctet11);
        java.io.OutputStream outputStream14 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder15 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream14);
        byte byte17 = binaryEncoder15.internalEncodeAttributeType((byte) -1);
        try {
            uOctet11.encode((org.ccsds.moims.mo.mal.MALEncoder) binaryEncoder15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265079L + "'", long3.equals(281475010265079L));
        org.junit.Assert.assertNotNull(shortStream6);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281474993487880L + "'", long12.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) -1 + "'", byte17 == (byte) -1);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder7 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray6);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger9 = binaryDecoder8.decodeUInteger();
        java.lang.Byte byte10 = binaryDecoder8.decodeOctet();
        org.ccsds.moims.mo.mal.structures.Element element11 = uRIList0.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder8);
        try {
            java.lang.Boolean boolean12 = binaryDecoder8.decodeBoolean();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(uInteger9);
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -1 + "'", byte10.equals((byte) -1));
        org.junit.Assert.assertNotNull(element11);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
        java.lang.Object obj3 = doubleList1.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = binaryDecoder9.decodeNullableUOctet();
        int int11 = doubleList1.lastIndexOf((java.lang.Object) binaryDecoder9);
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList1.stream();
        esa.mo.com.impl.util.COMServicesConsumer cOMServicesConsumer13 = new esa.mo.com.impl.util.COMServicesConsumer();
        esa.mo.com.impl.consumer.ArchiveConsumerServiceImpl archiveConsumerServiceImpl14 = cOMServicesConsumer13.getArchiveService();
        cOMServicesConsumer13.closeConnections();
        cOMServicesConsumer13.closeConnections();
        boolean boolean17 = doubleList1.contains((java.lang.Object) cOMServicesConsumer13);
        byte[] byteArray21 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder22 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray21);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger23 = binaryDecoder22.decodeNullableUInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = uInteger23.getServiceNumber();
        boolean boolean25 = doubleList1.contains((java.lang.Object) uShort24);
        esa.mo.com.impl.sync.Dictionary dictionary26 = new esa.mo.com.impl.sync.Dictionary();
        java.lang.Integer int28 = dictionary26.getWordId("[false]");
        boolean boolean29 = doubleList1.contains((java.lang.Object) dictionary26);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNull(archiveConsumerServiceImpl14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(uInteger23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28.equals(1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        esa.mo.com.impl.util.EventCOMObject eventCOMObject0 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject0.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType5 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription6 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType5);
        eventCOMObject0.setObjType(objectType5);
        java.lang.Long long8 = eventCOMObject0.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectType objectType11 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription12 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType11);
        java.lang.Boolean boolean13 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType11);
        java.lang.Boolean boolean14 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType11);
        java.lang.Long long15 = esa.mo.com.impl.util.HelperCOM.generateSubKey(objectType11);
        eventCOMObject0.setObjType(objectType11);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject17 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject17.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType22 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription23 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType22);
        eventCOMObject17.setObjType(objectType22);
        java.lang.Long long25 = eventCOMObject17.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId26 = eventCOMObject17.getObjectId();
        eventCOMObject0.setSource(objectId26);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject28 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject28.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType33 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription34 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType33);
        eventCOMObject28.setObjType(objectType33);
        java.lang.Long long36 = eventCOMObject28.getObjId();
        esa.mo.com.impl.util.EventCOMObject eventCOMObject37 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject37.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType42 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription43 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType42);
        eventCOMObject37.setObjType(objectType42);
        eventCOMObject28.setObjType(objectType42);
        org.ccsds.moims.mo.com.structures.ObjectId objectId46 = eventCOMObject28.getObjectId();
        eventCOMObject0.setSource(objectId46);
        org.ccsds.moims.mo.mal.structures.Time time48 = eventCOMObject0.getTimestamp();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(subscription6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 4294967295L + "'", long8.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13.equals(true));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14.equals(true));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487885L + "'", long15.equals(281474993487885L));
        org.junit.Assert.assertNotNull(objectType22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 4294967295L + "'", long25.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId26);
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 4294967295L + "'", long36.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType42);
        org.junit.Assert.assertNotNull(subscription43);
        org.junit.Assert.assertNotNull(objectId46);
        org.junit.Assert.assertNull(time48);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime5 = binaryDecoder4.decodeFineTime();
        org.ccsds.moims.mo.mal.structures.URI uRI6 = binaryDecoder4.decodeURI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uRI6.getAreaVersion();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { 2, 10, (-11), (-7), 100, 8, 6, (-7) };
        java.util.ArrayList<java.lang.Integer> intList17 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        int int20 = intList17.lastIndexOf((java.lang.Object) (short) 0);
        java.util.stream.Stream<java.lang.Integer> intStream21 = intList17.stream();
        java.util.Iterator<java.lang.Integer> intItor22 = intList17.iterator();
        boolean boolean23 = uRI6.equals((java.lang.Object) intItor22);
        java.lang.String str24 = uRI6.toString();
        java.lang.Long long25 = uRI6.getShortForm();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(fineTime5);
        org.junit.Assert.assertNotNull(uRI6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(intItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 281474993487890L + "'", long25.equals(281474993487890L));
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.lang.Double double5 = binaryDecoder4.decodeNullableDouble();
        byte[] byteArray6 = binaryDecoder4.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.Long[] longArray20 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList21 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList21, longArray20);
        java.lang.Object obj23 = longList21.clone();
        int int24 = strList11.indexOf((java.lang.Object) longList21);
        java.util.ListIterator<java.lang.String> strItor25 = strList11.listIterator();
        java.lang.String str26 = strList11.toString();
        java.lang.Double[] doubleArray29 = new java.lang.Double[] { 0.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        int int37 = strList35.size();
        boolean boolean38 = doubleList30.equals((java.lang.Object) strList35);
        boolean boolean39 = strList11.remove((java.lang.Object) strList35);
        boolean boolean40 = blob7.equals((java.lang.Object) strList35);
        java.util.stream.Stream<java.lang.String> strStream41 = strList35.stream();
        strList35.trimToSize();
        int int43 = strList35.size();
        org.ccsds.moims.mo.mal.structures.URIList uRIList44 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int45 = uRIList44.getTypeShortForm();
        java.lang.Integer int46 = uRIList44.getTypeShortForm();
        java.lang.Object obj47 = uRIList44.clone();
        byte[] byteArray51 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder52 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray51);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder53 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray51);
        int int54 = uRIList44.lastIndexOf((java.lang.Object) binaryDecoder53);
        java.lang.Boolean boolean55 = binaryDecoder53.decodeBoolean();
        byte[] byteArray56 = binaryDecoder53.getRemainingEncodedData();
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = binaryDecoder53.decodeUShort();
        boolean boolean58 = strList35.equals((java.lang.Object) uShort57);
        org.ccsds.moims.mo.mal.structures.OctetList octetList59 = new org.ccsds.moims.mo.mal.structures.OctetList();
        java.lang.Integer int60 = octetList59.getTypeShortForm();
        boolean boolean61 = strList35.removeAll((java.util.Collection<java.lang.Byte>) octetList59);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals((double) double5, Double.NaN, 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[hi!, ]" + "'", str26.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-18) + "'", int45.equals((-18)));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-18) + "'", int46.equals((-18)));
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55.equals(true));
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertNotNull(uShort57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-7) + "'", int60.equals((-7)));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        esa.mo.com.impl.sync.Dictionary dictionary0 = new esa.mo.com.impl.sync.Dictionary();
        boolean boolean2 = dictionary0.exists((java.lang.Integer) 16);
        java.lang.Integer int4 = dictionary0.getWordId("");
        boolean boolean6 = dictionary0.exists("[false, false]");
        try {
            java.lang.String str8 = dictionary0.getWord((java.lang.Integer) 6);
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: The word for the id: 6 is unknown!");
        } catch (java.lang.Exception e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4.equals(1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str1 = identifier0.toString();
        java.lang.Long long2 = identifier0.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = identifier0.getAreaNumber();
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList11 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList11, shortArray10);
        java.util.ListIterator<java.lang.Short> shortItor13 = shortList11.listIterator();
        int int14 = doubleList6.indexOf((java.lang.Object) shortList11);
        org.ccsds.moims.mo.mal.structures.Blob blob15 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean16 = blob15.isURLBased();
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder21 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = blob15.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder21);
        boolean boolean23 = doubleList6.contains((java.lang.Object) blob15);
        java.lang.Object obj24 = doubleList6.clone();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.lang.Long[] longArray37 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList38 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList38, longArray37);
        java.lang.Object obj40 = longList38.clone();
        int int41 = strList28.indexOf((java.lang.Object) longList38);
        java.util.ListIterator<java.lang.String> strItor42 = strList28.listIterator();
        java.lang.String str43 = strList28.toString();
        java.lang.Object[] objArray44 = strList28.toArray();
        boolean boolean45 = doubleList6.contains((java.lang.Object) strList28);
        java.lang.String str46 = strList28.toString();
        int int47 = strList28.size();
        java.util.stream.Stream<java.lang.String> strStream48 = strList28.stream();
        boolean boolean49 = identifier0.equals((java.lang.Object) strStream48);
        org.ccsds.moims.mo.mal.structures.Element element50 = identifier0.createElement();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487878L + "'", long2.equals(281474993487878L));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(shortItor13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor42);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "[hi!, ]" + "'", str43.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "[hi!, ]" + "'", str46.equals("[hi!, ]"));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(element50);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList8 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList8, byteArray7);
        boolean boolean11 = byteList8.add((java.lang.Byte) (byte) 100);
        boolean boolean12 = uRIList1.containsAll((java.util.Collection<java.lang.Byte>) byteList8);
        boolean boolean13 = byteList8.isEmpty();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 10 };
        java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        int int19 = intList16.lastIndexOf((java.lang.Object) 0.0f);
        int int20 = byteList8.lastIndexOf((java.lang.Object) intList16);
        java.lang.String str21 = intList16.toString();
        org.ccsds.moims.mo.mal.structures.URIList uRIList22 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int23 = uRIList22.getTypeShortForm();
        java.lang.Integer int24 = uRIList22.getTypeShortForm();
        java.lang.Object obj25 = uRIList22.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream26 = uRIList22.stream();
        int int27 = intList16.lastIndexOf((java.lang.Object) uRIList22);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject28 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject28.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType33 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription34 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType33);
        eventCOMObject28.setObjType(objectType33);
        org.ccsds.moims.mo.com.structures.ObjectId objectId36 = eventCOMObject28.getSource();
        org.ccsds.moims.mo.mal.structures.Identifier identifier37 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet38 = identifier37.getAreaVersion();
        java.lang.String str39 = identifier37.getValue();
        eventCOMObject28.setNetworkZone(identifier37);
        org.ccsds.moims.mo.mal.structures.Identifier identifier41 = eventCOMObject28.getNetworkZone();
        int int42 = intList16.indexOf((java.lang.Object) eventCOMObject28);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[10]" + "'", str21.equals("[10]"));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-18) + "'", int23.equals((-18)));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-18) + "'", int24.equals((-18)));
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(uRIStream26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertNull(objectId36);
        org.junit.Assert.assertNotNull(uOctet38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "" + "'", str39.equals(""));
        org.junit.Assert.assertNotNull(identifier41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        byte[] byteArray3 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder4 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder5 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray3);
        java.math.BigInteger bigInteger6 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong7 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger6);
        java.lang.Integer int8 = uLong7.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element9 = uLong7.createElement();
        org.ccsds.moims.mo.mal.structures.Element element10 = uLong7.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = uLong7.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uLong7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element13 = binaryDecoder5.decodeNullableElement((org.ccsds.moims.mo.mal.structures.Element) uShort12);
        try {
            org.ccsds.moims.mo.mal.structures.Time time14 = binaryDecoder5.decodeTime();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 14 + "'", int8.equals(14));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(element13);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) 10);
        byte[] byteArray9 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder10 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder11 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger12 = binaryDecoder11.decodeUInteger();
        java.lang.Long long13 = uInteger12.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element14 = uInteger12.createElement();
        try {
            binaryEncoder1.encodeAttribute((org.ccsds.moims.mo.mal.structures.Attribute) uInteger12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 10 + "'", byte5 == (byte) 10);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(uInteger12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 281474993487884L + "'", long13.equals(281474993487884L));
        org.junit.Assert.assertNotNull(element14);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        esa.mo.com.impl.archive.entities.NetworkHolderEntity networkHolderEntity2 = new esa.mo.com.impl.archive.entities.NetworkHolderEntity(9, "[10.0]");
        int int3 = networkHolderEntity2.getId();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 9 + "'", int3 == 9);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        java.lang.Object obj3 = uRIList0.clone();
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder8 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder9 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray7);
        int int10 = uRIList0.lastIndexOf((java.lang.Object) binaryDecoder9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = binaryDecoder9.decodeDuration();
        java.lang.Byte byte12 = binaryDecoder9.decodeOctet();
        java.lang.Boolean boolean13 = binaryDecoder9.decodeNullableBoolean();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -1 + "'", byte12.equals((byte) -1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13.equals(false));
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 0, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList7.listIterator();
        int int10 = doubleList2.indexOf((java.lang.Object) shortList7);
        org.ccsds.moims.mo.mal.structures.Blob blob11 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean12 = blob11.isURLBased();
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder17 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray16);
        org.ccsds.moims.mo.mal.structures.Element element18 = blob11.decode((org.ccsds.moims.mo.mal.MALDecoder) binaryDecoder17);
        boolean boolean19 = doubleList2.contains((java.lang.Object) blob11);
        java.lang.Object obj20 = doubleList2.clone();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 281474993487878L, 100L, (-1L), 100L, 1L, 1L, 1L };
        java.util.ArrayList<java.lang.Long> longList34 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList34, longArray33);
        java.lang.Object obj36 = longList34.clone();
        int int37 = strList24.indexOf((java.lang.Object) longList34);
        java.util.ListIterator<java.lang.String> strItor38 = strList24.listIterator();
        java.lang.String str39 = strList24.toString();
        java.lang.Object[] objArray40 = strList24.toArray();
        boolean boolean41 = doubleList2.contains((java.lang.Object) strList24);
        strList24.trimToSize();
        strList24.add((int) (short) 0, "[1, 100, 100, 1, 8, 8, 8]");
        try {
            java.util.List<java.lang.String> strList48 = strList24.subList(4, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(4) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[hi!, ]" + "'", str39.equals("[hi!, ]"));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        java.lang.Integer int1 = uRIList0.getTypeShortForm();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        boolean boolean3 = uRIList0.isEmpty();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray9 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList10, uRIArray9);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 100);
        boolean boolean21 = uRIList10.containsAll((java.util.Collection<java.lang.Byte>) byteList17);
        boolean boolean22 = strList7.containsAll((java.util.Collection<java.lang.Byte>) byteList17);
        java.util.Iterator<java.lang.String> strItor23 = strList7.iterator();
        int int24 = uRIList0.indexOf((java.lang.Object) strList7);
        int int25 = uRIList0.size();
        java.lang.String str26 = uRIList0.toString();
        java.math.BigInteger bigInteger27 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong28 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger27);
        java.lang.Integer int29 = uLong28.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element30 = uLong28.createElement();
        org.ccsds.moims.mo.mal.structures.Element element31 = uLong28.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet32 = uLong28.getAreaVersion();
        int int33 = uRIList0.indexOf((java.lang.Object) uLong28);
        org.ccsds.moims.mo.mal.structures.Element element34 = uLong28.createElement();
        byte[] byteArray38 = new byte[] { (byte) 100, (byte) -1, (byte) 0 };
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder39 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        esa.mo.com.impl.archive.encoding.BinaryDecoder binaryDecoder40 = new esa.mo.com.impl.archive.encoding.BinaryDecoder(byteArray38);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger41 = binaryDecoder40.decodeUInteger();
        java.lang.Byte byte42 = binaryDecoder40.decodeOctet();
        java.lang.Integer int43 = binaryDecoder40.decodeNullableInteger();
        boolean boolean44 = uLong28.equals((java.lang.Object) int43);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-18) + "'", int1.equals((-18)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(uRIArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]" + "'", str26.equals("[]"));
        org.junit.Assert.assertNotNull(bigInteger27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 14 + "'", int29.equals(14));
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(uOctet32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(uInteger41);
        org.junit.Assert.assertTrue("'" + byte42 + "' != '" + (byte) -1 + "'", byte42.equals((byte) -1));
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        java.io.OutputStream outputStream0 = null;
        esa.mo.com.impl.archive.encoding.BinaryEncoder binaryEncoder1 = new esa.mo.com.impl.archive.encoding.BinaryEncoder(outputStream0);
        byte byte3 = binaryEncoder1.internalEncodeAttributeType((byte) 100);
        byte byte5 = binaryEncoder1.internalEncodeAttributeType((byte) -1);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject6.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.mal.structures.Identifier identifier9 = null;
        eventCOMObject6.setNetworkZone(identifier9);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject11 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject11.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType16 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription17 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType16);
        eventCOMObject11.setObjType(objectType16);
        java.lang.Long long19 = eventCOMObject11.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectType objectType22 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription23 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType22);
        java.lang.Boolean boolean24 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType22);
        java.lang.Boolean boolean25 = esa.mo.com.impl.provider.ArchiveManager.objectTypeContainsWildcard(objectType22);
        java.lang.Long long26 = esa.mo.com.impl.util.HelperCOM.generateSubKey(objectType22);
        eventCOMObject11.setObjType(objectType22);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject28 = new esa.mo.com.impl.util.EventCOMObject();
        eventCOMObject28.setObjId((java.lang.Long) 4294967295L);
        org.ccsds.moims.mo.com.structures.ObjectType objectType33 = esa.mo.com.impl.util.HelperCOM.objectTypeId2objectType((java.lang.Long) 281474993487885L);
        org.ccsds.moims.mo.mal.structures.Subscription subscription34 = esa.mo.com.impl.util.HelperCOM.generateSubscriptionCOMEvent("", objectType33);
        eventCOMObject28.setObjType(objectType33);
        java.lang.Long long36 = eventCOMObject28.getObjId();
        org.ccsds.moims.mo.com.structures.ObjectId objectId37 = eventCOMObject28.getObjectId();
        eventCOMObject11.setSource(objectId37);
        org.ccsds.moims.mo.mal.structures.Identifier identifier39 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet40 = identifier39.getAreaVersion();
        java.lang.String str41 = identifier39.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort42 = identifier39.getAreaNumber();
        eventCOMObject11.setNetworkZone(identifier39);
        org.ccsds.moims.mo.mal.structures.UShort uShort44 = identifier39.getAreaNumber();
        eventCOMObject6.setNetworkZone(identifier39);
        org.ccsds.moims.mo.mal.structures.Element element46 = identifier39.createElement();
        try {
            binaryEncoder1.encodeIdentifier(identifier39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -1 + "'", byte5 == (byte) -1);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 4294967295L + "'", long19.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectType22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24.equals(true));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25.equals(true));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281474993487885L + "'", long26.equals(281474993487885L));
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 4294967295L + "'", long36.equals(4294967295L));
        org.junit.Assert.assertNotNull(objectId37);
        org.junit.Assert.assertNotNull(uOctet40);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        org.junit.Assert.assertNotNull(uShort42);
        org.junit.Assert.assertNotNull(uShort44);
        org.junit.Assert.assertNotNull(element46);
    }
}
