package esa.nmf.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList1 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails1 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (int) (byte) 0, (-5), 13, 281475010265083L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer1 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider1 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("", "[-1, 281475010265070]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("0", "");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider3 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer3 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[-1.0, 10.0, 10.0, 1.0]", "1");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList3 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI3 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray2 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList3 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList3, parameterInstanceArray2);
        try {
            java.lang.Boolean boolean6 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList3, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(parameterInstanceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener2 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.URI uRI3 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI3 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream7 = uRIList5.parallelStream();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator8 = uRIList5.spliterator();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream9 = uRIList5.stream();
        try {
            java.lang.Boolean boolean11 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1.0, 10.0, 10.0, 1.0]", (java.io.Serializable) uRIList5, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(uRIStream7);
        org.junit.Assert.assertNotNull(uRISpliterator8);
        org.junit.Assert.assertNotNull(uRIStream9);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI4 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer4 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList6 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList6, byteArray5);
        java.util.ListIterator<java.lang.Byte> byteItor9 = byteList6.listIterator((int) (short) 1);
        int int10 = byteList6.size();
        org.ccsds.moims.mo.mal.structures.Time time12 = new org.ccsds.moims.mo.mal.structures.Time((long) (short) 100);
        org.ccsds.moims.mo.mal.structures.Element element13 = time12.createElement();
        boolean boolean14 = byteList6.contains((java.lang.Object) time12);
        java.lang.Long long15 = time12.getShortForm();
        java.lang.String str16 = time12.toString();
        try {
            java.lang.Boolean boolean18 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0, 1, 10, 10, 100]", (java.io.Serializable) time12, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(byteItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487888L + "'", long15.equals(281474993487888L));
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "100" + "'", str16.equals("100"));
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 16, 100, 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList8 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        int int11 = intList8.indexOf((java.lang.Object) 0);
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList();
        java.lang.Long long13 = stringList12.getShortForm();
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
        boolean boolean20 = booleanList17.contains((java.lang.Object) 10L);
        booleanList17.ensureCapacity(0);
        java.lang.Short[] shortArray26 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList27 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList27, shortArray26);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray29 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList30, uShortArray29);
        int int33 = uShortList30.lastIndexOf((java.lang.Object) 'a');
        boolean boolean34 = uShortList30.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray36 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort35 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList37 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList37, uShortArray36);
        boolean boolean39 = uShortList30.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList37);
        boolean boolean40 = shortList27.remove((java.lang.Object) boolean39);
        shortList27.clear();
        int int42 = booleanList17.lastIndexOf((java.lang.Object) shortList27);
        boolean boolean43 = stringList12.contains((java.lang.Object) booleanList17);
        booleanList17.clear();
        booleanList17.clear();
        boolean boolean46 = intList8.contains((java.lang.Object) booleanList17);
        boolean boolean48 = intList8.add((java.lang.Integer) 65535);
        int int50 = intList8.indexOf((java.lang.Object) (short) -1);
        try {
            java.lang.Boolean boolean52 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[100, 100]", (java.io.Serializable) int50, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 281475010265073L + "'", long13.equals(281475010265073L));
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uShortArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(uShortArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        org.ccsds.moims.mo.mal.structures.URI uRI2 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray3 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI2 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList4 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList4, uRIArray3);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream6 = uRIList4.parallelStream();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream7 = uRIList4.stream();
        try {
            java.lang.Boolean boolean8 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0.0, 0.0, 0.0, 10.0]", (java.io.Serializable) uRIList4);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(uRIArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(uRIStream6);
        org.junit.Assert.assertNotNull(uRIStream7);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, 11, (int) ' ', (int) 'a', (long) 0);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer2 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.MonitorAndControlNMFAdapter monitorAndControlNMFAdapter2 = null;
        try {
            nanoSatMOConnectorImpl0.init(monitorAndControlNMFAdapter2);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field org.sqlite.jdbc3.JDBC3Connection.randoop_classUsedFlag from class org.sqlite.core.CoreConnection");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI2 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[10.0, 0.0, -1.0, -1.0]", "[10.0, -1.0]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray2 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList3 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList3, parameterInstanceArray2);
        try {
            java.lang.Boolean boolean6 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList3, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(parameterInstanceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF2 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("hi!", "[1, 10, 10, 100]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.CloseAppListener closeAppListener3 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[false, true, false]", "-1");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails3 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider4 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener3 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray1 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList2 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList2, parameterInstanceArray1);
        try {
            java.lang.Boolean boolean5 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList2, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(parameterInstanceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider2 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF3 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 10.0d, (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.lang.Object obj8 = doubleList6.clone();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray9 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList10, uShortArray9);
        int int13 = uShortList10.lastIndexOf((java.lang.Object) 'a');
        boolean boolean14 = uShortList10.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray15 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList16 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList16, uShortArray15);
        int int19 = uShortList16.lastIndexOf((java.lang.Object) 'a');
        boolean boolean20 = uShortList16.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray22 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort21 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList23 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList23, uShortArray22);
        boolean boolean25 = uShortList16.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList23);
        boolean boolean26 = uShortList10.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList16);
        boolean boolean27 = doubleList6.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList16);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList29 = new org.ccsds.moims.mo.mal.structures.UShortList((int) ' ');
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = uShortList29.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = uShortList29.getAreaNumber();
        boolean boolean32 = uShortList16.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList29);
        org.ccsds.moims.mo.mal.structures.URIList uRIList34 = new org.ccsds.moims.mo.mal.structures.URIList(8);
        org.ccsds.moims.mo.mal.structures.Element element35 = uRIList34.createElement();
        uRIList34.clear();
        boolean boolean37 = uShortList16.contains((java.lang.Object) uRIList34);
        try {
            java.lang.Boolean boolean39 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1, 10, 1]", (java.io.Serializable) boolean37, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(uShortArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(uShortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(uShort30);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList3 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF3 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList8 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        intList8.ensureCapacity((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray12 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList13, uShortArray12);
        int int16 = uShortList13.lastIndexOf((java.lang.Object) 'a');
        boolean boolean17 = uShortList13.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray19 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort18 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList20 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20, uShortArray19);
        boolean boolean22 = uShortList13.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray27 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList28 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList28, uShortArray27);
        int int31 = uShortList28.indexOf((java.lang.Object) 1.0f);
        boolean boolean32 = strList25.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList28);
        boolean boolean33 = uShortList13.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList28);
        boolean boolean34 = intList8.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList28);
        try {
            java.lang.Boolean boolean35 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0, 0]", (java.io.Serializable) uShortList28);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uShortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(uShortArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Float[] floatArray9 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList10 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList10, floatArray9);
        int int13 = floatList10.lastIndexOf((java.lang.Object) (-1L));
        java.util.Iterator<java.lang.Float> floatItor14 = floatList10.iterator();
        org.ccsds.moims.mo.mal.structures.Identifier identifier15 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = identifier15.getAreaVersion();
        boolean boolean18 = identifier15.equals((java.lang.Object) 0);
        boolean boolean19 = floatList10.contains((java.lang.Object) identifier15);
        java.lang.String str20 = floatList10.toString();
        java.util.stream.Stream<java.lang.Float> floatStream21 = floatList10.parallelStream();
        try {
            java.lang.Boolean boolean23 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0.0, 0.0, 0.0, 10.0]", (java.io.Serializable) floatList10, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(floatItor14);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "[-1.0, 10.0, 10.0, 1.0]" + "'", str20.equals("[-1.0, 10.0, 10.0, 1.0]"));
        org.junit.Assert.assertNotNull(floatStream21);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier3 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 16, 100, 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList10 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        int int13 = intList10.indexOf((java.lang.Object) 0);
        java.util.Iterator<java.lang.Integer> intItor14 = intList10.iterator();
        java.lang.Float[] floatArray16 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList17 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList17, floatArray16);
        java.util.ListIterator<java.lang.Float> floatItor19 = floatList17.listIterator();
        int int20 = floatList17.size();
        boolean boolean21 = intList10.equals((java.lang.Object) int20);
        java.util.Spliterator<java.lang.Integer> intSpliterator22 = intList10.spliterator();
        java.lang.Double[] doubleArray27 = new java.lang.Double[] { 10.0d, 0.0d, (-1.0d), (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList28 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList28, doubleArray27);
        boolean boolean31 = doubleList28.equals((java.lang.Object) 281475010265079L);
        int int32 = intList10.lastIndexOf((java.lang.Object) 281475010265079L);
        try {
            java.lang.Boolean boolean34 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1.0, 10.0, 10.0, 1.0]", (java.io.Serializable) intList10, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(intItor14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(floatItor19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(intSpliterator22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier3 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (-18), (-7), 10, (long) 17);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray3 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList4 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList4, parameterInstanceArray3);
        try {
            java.lang.Boolean boolean7 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList4, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(parameterInstanceArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = new org.ccsds.moims.mo.mal.structures.Identifier();
        java.lang.String str4 = identifier3.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = org.ccsds.moims.mo.mal.structures.UShort.ATTRIBUTE_AREA_NUMBER;
        boolean boolean6 = identifier3.equals((java.lang.Object) uShort5);
        java.lang.String str7 = identifier3.toString();
        java.lang.Integer int8 = identifier3.getTypeShortForm();
        java.math.BigInteger bigInteger9 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong10 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger9);
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = uLong10.getServiceNumber();
        boolean boolean12 = identifier3.equals((java.lang.Object) uShort11);
        try {
            java.lang.Boolean boolean14 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1.0, 10.0, 10.0, 1.0]", (java.io.Serializable) uShort11, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6 + "'", int8.equals(6));
        org.junit.Assert.assertNotNull(bigInteger9);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, 100, 6, (int) (short) 100, 281474993487881L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer5 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("", "[10.0, -1.0]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, 9, (int) (short) -1, (int) '#', 281474993487886L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[, ]", "[10.0, -1.0]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier4 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray9 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList10, uShortArray9);
        int int13 = uShortList10.lastIndexOf((java.lang.Object) 'a');
        boolean boolean14 = uShortList10.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray16 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort15 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList17 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList17, uShortArray16);
        boolean boolean19 = uShortList10.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList17);
        boolean boolean20 = shortList7.remove((java.lang.Object) boolean19);
        shortList7.clear();
        org.ccsds.moims.mo.mal.structures.URI uRI22 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = uRI22.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray24 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI22 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList25, uRIArray24);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor28 = uRIList25.listIterator((int) (short) 0);
        org.ccsds.moims.mo.mal.structures.URI uRI30 = new org.ccsds.moims.mo.mal.structures.URI();
        java.lang.Long long31 = uRI30.getShortForm();
        uRIList25.add(0, uRI30);
        int int33 = shortList7.indexOf((java.lang.Object) uRI30);
        org.ccsds.moims.mo.mal.structures.Element element34 = uRI30.createElement();
        java.lang.Long long35 = uRI30.getShortForm();
        java.lang.String str36 = uRI30.getValue();
        java.lang.String str37 = uRI30.getValue();
        try {
            java.lang.Boolean boolean38 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("false", (java.io.Serializable) str37);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertNotNull(uShortArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(uShortArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertNotNull(uRIArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(uRIItor28);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 281474993487890L + "'", long31.equals(281474993487890L));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281474993487890L + "'", long35.equals(281474993487890L));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI5 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer6 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider4 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (-2), (-11), (int) ' ', 281474993487883L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails5 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList4 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray4 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList5 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList5, parameterInstanceArray4);
        try {
            java.lang.Boolean boolean8 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList5, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(parameterInstanceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject3 = null;
        try {
            closeAppEventListener2.onDataReceived(eventCOMObject3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF5 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.CloseAppListener closeAppListener3 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.StringList stringList4 = new org.ccsds.moims.mo.mal.structures.StringList();
        boolean boolean6 = stringList4.equals((java.lang.Object) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = stringList4.getAreaVersion();
        stringList4.clear();
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        java.util.ListIterator<java.lang.Byte> byteItor15 = byteList12.listIterator((int) (short) 1);
        int int16 = byteList12.size();
        java.util.Iterator<java.lang.Byte> byteItor17 = byteList12.iterator();
        boolean boolean19 = byteList12.add((java.lang.Byte) (byte) 0);
        org.ccsds.moims.mo.mal.structures.Union union21 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Short) (short) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = union21.getServiceNumber();
        java.lang.Long long23 = uShort22.getShortForm();
        boolean boolean24 = byteList12.contains((java.lang.Object) uShort22);
        java.lang.Object[] objArray25 = byteList12.toArray();
        int int26 = stringList4.indexOf((java.lang.Object) byteList12);
        java.lang.Object obj27 = byteList12.clone();
        java.lang.Short[] shortArray31 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList32 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList32, shortArray31);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray34 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35, uShortArray34);
        int int38 = uShortList35.lastIndexOf((java.lang.Object) 'a');
        boolean boolean39 = uShortList35.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort40 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray41 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort40 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList42 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList42, uShortArray41);
        boolean boolean44 = uShortList35.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList42);
        boolean boolean45 = shortList32.remove((java.lang.Object) boolean44);
        shortList32.clear();
        org.ccsds.moims.mo.mal.structures.URI uRI47 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet48 = uRI47.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray49 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI47 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList50 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList50, uRIArray49);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor53 = uRIList50.listIterator((int) (short) 0);
        org.ccsds.moims.mo.mal.structures.URI uRI55 = new org.ccsds.moims.mo.mal.structures.URI();
        java.lang.Long long56 = uRI55.getShortForm();
        uRIList50.add(0, uRI55);
        int int58 = shortList32.indexOf((java.lang.Object) uRI55);
        java.util.Iterator<java.lang.Short> shortItor59 = shortList32.iterator();
        int int60 = byteList12.indexOf((java.lang.Object) shortItor59);
        try {
            java.lang.Boolean boolean61 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[1.0]", (java.io.Serializable) byteList12);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(byteItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(byteItor17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 281474993487882L + "'", long23.equals(281474993487882L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(uShortArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(uShortArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(uOctet48);
        org.junit.Assert.assertNotNull(uRIArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(uRIItor53);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 281474993487890L + "'", long56.equals(281474993487890L));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(shortItor59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.CloseAppListener closeAppListener6 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.lang.Boolean boolean5 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("0.0", (java.io.Serializable) 281474993487881L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer3 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 10.0d, (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.lang.Object obj10 = doubleList8.clone();
        org.ccsds.moims.mo.mal.structures.ShortList shortList11 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = shortList11.getServiceNumber();
        java.lang.Long long13 = shortList11.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList15 = new org.ccsds.moims.mo.mal.structures.UShortList((int) ' ');
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = uShortList15.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = uShortList15.getAreaNumber();
        boolean boolean18 = shortList11.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList15);
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = uShortList15.getServiceNumber();
        boolean boolean20 = doubleList8.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList15);
        try {
            java.lang.Boolean boolean22 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[, ]", (java.io.Serializable) uShortList15, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 281475010265079L + "'", long13.equals(281475010265079L));
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("", "16");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener4 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (int) (byte) 1, (int) (byte) 100, (int) ' ', (long) '4');
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        java.util.stream.Stream<java.lang.Long> longStream1 = longList0.parallelStream();
        java.lang.Float[] floatArray6 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList7 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList7, floatArray6);
        int int10 = floatList7.lastIndexOf((java.lang.Object) (-1L));
        java.util.Iterator<java.lang.Float> floatItor11 = floatList7.iterator();
        floatList7.ensureCapacity(0);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList14 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = integerList14.getAreaVersion();
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20, shortArray19);
        boolean boolean23 = shortList20.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray28 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList29, uShortArray28);
        int int32 = uShortList29.indexOf((java.lang.Object) 1.0f);
        boolean boolean33 = strList26.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList29);
        boolean boolean34 = shortList20.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList29);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator35 = uShortList29.spliterator();
        boolean boolean36 = integerList14.contains((java.lang.Object) uShortList29);
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = org.ccsds.moims.mo.mal.structures.URIList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort38 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray39 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort37, uShort38 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList40 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList40, uShortArray39);
        org.ccsds.moims.mo.mal.structures.UShort uShort43 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort uShort44 = uShortList40.set((int) (short) 0, uShort43);
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = uShortList40.remove(0);
        boolean boolean47 = uShortList29.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList40);
        java.lang.String str48 = uShortList40.toString();
        boolean boolean49 = floatList7.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList40);
        boolean boolean50 = uShortList40.isEmpty();
        boolean boolean51 = longList0.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList40);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl52 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener53 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl52);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener54 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl52);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener55 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl52);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl56 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long57 = nanoSatMOConnectorImpl56.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener58 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl56);
        nanoSatMOConnectorImpl56.initAdditionalServices();
        java.lang.Long long60 = nanoSatMOConnectorImpl56.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener61 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl56);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray62 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener55, closeAppEventListener61 };
        try {
            esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray63 = uShortList40.toArray(eventReceivedListenerArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(longStream1);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(floatItor11);
        org.junit.Assert.assertNotNull(uOctet15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(uShortArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(uShortSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(uShort37);
        org.junit.Assert.assertNotNull(uShortArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uShort44);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "[0]" + "'", str48.equals("[0]"));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray62);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList2 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("hi!", "[, , ]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails3 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray3 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList4 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList4, parameterInstanceArray3);
        try {
            java.lang.Boolean boolean7 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList4, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(parameterInstanceArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails6 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Short[] shortArray7 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList8 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList8, shortArray7);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray10 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList11, uShortArray10);
        int int14 = uShortList11.lastIndexOf((java.lang.Object) 'a');
        boolean boolean15 = uShortList11.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray17 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort16 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList18 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18, uShortArray17);
        boolean boolean20 = uShortList11.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        boolean boolean21 = shortList8.remove((java.lang.Object) boolean20);
        shortList8.clear();
        org.ccsds.moims.mo.mal.structures.URI uRI23 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet24 = uRI23.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray25 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI23 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList26, uRIArray25);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor29 = uRIList26.listIterator((int) (short) 0);
        org.ccsds.moims.mo.mal.structures.URI uRI31 = new org.ccsds.moims.mo.mal.structures.URI();
        java.lang.Long long32 = uRI31.getShortForm();
        uRIList26.add(0, uRI31);
        int int34 = shortList8.indexOf((java.lang.Object) uRI31);
        java.lang.Short[] shortArray38 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList39 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList39, shortArray38);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray41 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList42 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList42, uShortArray41);
        int int45 = uShortList42.lastIndexOf((java.lang.Object) 'a');
        boolean boolean46 = uShortList42.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort47 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray48 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort47 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList49 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList49, uShortArray48);
        boolean boolean51 = uShortList42.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList49);
        boolean boolean52 = shortList39.remove((java.lang.Object) boolean51);
        shortList39.clear();
        boolean boolean54 = shortList8.contains((java.lang.Object) shortList39);
        shortList39.ensureCapacity(17);
        try {
            java.lang.Boolean boolean57 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[, , ]", (java.io.Serializable) 17);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uShortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(uShortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(uOctet24);
        org.junit.Assert.assertNotNull(uRIArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(uRIItor29);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 281474993487890L + "'", long32.equals(281474993487890L));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(uShortArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(uShortArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { (-1.0d), 0.0d, 0.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        boolean boolean13 = doubleList10.contains((java.lang.Object) "hi!");
        doubleList10.add(2, (java.lang.Double) 0.0d);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 16, 100, 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList22 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        int int25 = intList22.indexOf((java.lang.Object) 0);
        org.ccsds.moims.mo.mal.structures.StringList stringList26 = new org.ccsds.moims.mo.mal.structures.StringList();
        java.lang.Long long27 = stringList26.getShortForm();
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList31 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList31, booleanArray30);
        boolean boolean34 = booleanList31.contains((java.lang.Object) 10L);
        booleanList31.ensureCapacity(0);
        java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList41 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList41, shortArray40);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray43 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList44 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList44, uShortArray43);
        int int47 = uShortList44.lastIndexOf((java.lang.Object) 'a');
        boolean boolean48 = uShortList44.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray50 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort49 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList51 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList51, uShortArray50);
        boolean boolean53 = uShortList44.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList51);
        boolean boolean54 = shortList41.remove((java.lang.Object) boolean53);
        shortList41.clear();
        int int56 = booleanList31.lastIndexOf((java.lang.Object) shortList41);
        boolean boolean57 = stringList26.contains((java.lang.Object) booleanList31);
        booleanList31.clear();
        booleanList31.clear();
        boolean boolean60 = intList22.contains((java.lang.Object) booleanList31);
        int int61 = doubleList10.lastIndexOf((java.lang.Object) intList22);
        java.util.Iterator<java.lang.Double> doubleItor62 = doubleList10.iterator();
        try {
            java.lang.Boolean boolean64 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("hi!", (java.io.Serializable) doubleList10, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 281475010265073L + "'", long27.equals(281475010265073L));
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(uShortArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(uShortArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(doubleItor62);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray4 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList5 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList5, parameterInstanceArray4);
        try {
            java.lang.Boolean boolean8 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList5, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(parameterInstanceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.io.Serializable serializable6 = null;
        try {
            java.lang.Boolean boolean7 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[]", serializable6);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider4 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("-1", "");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList5 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI6 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails3 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener5 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier4 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList6 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList6, booleanArray5);
        boolean boolean9 = booleanList6.contains((java.lang.Object) 10L);
        booleanList6.ensureCapacity(0);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray18 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList19 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList19, uShortArray18);
        int int22 = uShortList19.lastIndexOf((java.lang.Object) 'a');
        boolean boolean23 = uShortList19.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray25 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort24 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList26, uShortArray25);
        boolean boolean28 = uShortList19.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList26);
        boolean boolean29 = shortList16.remove((java.lang.Object) boolean28);
        shortList16.clear();
        int int31 = booleanList6.lastIndexOf((java.lang.Object) shortList16);
        java.lang.Short[] shortArray35 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList36 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList36, shortArray35);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray38 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList39, uShortArray38);
        int int42 = uShortList39.lastIndexOf((java.lang.Object) 'a');
        boolean boolean43 = uShortList39.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort44 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray45 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort44 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList46 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList46, uShortArray45);
        boolean boolean48 = uShortList39.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList46);
        boolean boolean49 = shortList36.remove((java.lang.Object) boolean48);
        shortList36.clear();
        boolean boolean51 = shortList36.isEmpty();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray56 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList57 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList57, uShortArray56);
        int int60 = uShortList57.indexOf((java.lang.Object) 1.0f);
        boolean boolean61 = strList54.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList57);
        boolean boolean62 = shortList36.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList57);
        boolean boolean63 = booleanList6.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList57);
        java.lang.Object obj64 = booleanList6.clone();
        try {
            java.lang.Boolean boolean66 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0, 1, 10, 10, 100]", (java.io.Serializable) booleanList6, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShortArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uShortArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uShortArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(uShortArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertNotNull(uShortArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer4 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider18 = nanoSatMOConnectorImpl11.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[0.0, 0.0, 0.0, 10.0]", "[0.0, 0.0, 0.0, 10.0]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.Duration duration5 = new org.ccsds.moims.mo.mal.structures.Duration();
        double double6 = duration5.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = duration5.getServiceNumber();
        java.lang.Long long8 = duration5.getShortForm();
        java.lang.String str9 = duration5.toString();
        try {
            java.lang.Boolean boolean11 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[1.0]", (java.io.Serializable) str9, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487875L + "'", long8.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "0.0" + "'", str9.equals("0.0"));
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray10 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList11, uShortArray10);
        int int14 = uShortList11.indexOf((java.lang.Object) 1.0f);
        boolean boolean15 = strList8.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList11);
        java.util.ListIterator<java.lang.String> strItor16 = strList8.listIterator();
        int int17 = strList8.size();
        java.util.stream.Stream<java.lang.String> strStream18 = strList8.stream();
        java.lang.String str19 = strList8.toString();
        try {
            java.lang.Boolean boolean20 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[]", (java.io.Serializable) strList8);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uShortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[hi!]" + "'", str19.equals("[hi!]"));
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener1 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        try {
            nanoSatMOConnectorImpl11.writeCentralDirectoryServiceURI("", "");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener3 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-5), (-15), (-5), 5, 16, 8 };
        java.util.ArrayList<java.lang.Integer> intList10 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 10.0d, (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.lang.Object obj17 = doubleList15.clone();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray18 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList19 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList19, uShortArray18);
        int int22 = uShortList19.lastIndexOf((java.lang.Object) 'a');
        boolean boolean23 = uShortList19.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray24 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25, uShortArray24);
        int int28 = uShortList25.lastIndexOf((java.lang.Object) 'a');
        boolean boolean29 = uShortList25.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray31 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort30 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList32, uShortArray31);
        boolean boolean34 = uShortList25.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList32);
        boolean boolean35 = uShortList19.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25);
        boolean boolean36 = doubleList15.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25);
        boolean boolean37 = intList10.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25);
        try {
            java.lang.Boolean boolean38 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1, 0, 1, 10, 10, 100]", (java.io.Serializable) intList10);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(uShortArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uShortArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(uShortArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.CloseAppListener closeAppListener6 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        org.ccsds.moims.mo.mal.structures.StringList stringList3 = new org.ccsds.moims.mo.mal.structures.StringList((int) '#');
        try {
            java.lang.Boolean boolean5 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[10, 100]", (java.io.Serializable) '#', false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList3 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList4 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.reconfigurable.service.ConfigurationChangeListener configurationChangeListener3 = null;
        try {
            nanoSatMOConnectorImpl0.setOnConfigurationChangeListener(configurationChangeListener3);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray3 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList4 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList4, parameterInstanceArray3);
        try {
            java.lang.Boolean boolean7 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList4, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(parameterInstanceArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.MonitorAndControlNMFAdapter monitorAndControlNMFAdapter5 = null;
        try {
            nanoSatMOConnectorImpl0.init(monitorAndControlNMFAdapter5);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field org.sqlite.jdbc3.JDBC3Connection.randoop_classUsedFlag from class org.sqlite.core.CoreConnection");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider3 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, (-2), (-1), 1, 281474993487887L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails5 = null;
        try {
            java.lang.Boolean boolean6 = null; // flaky: nanoSatMOConnectorImpl0.reloadConfiguration(configurationObjectDetails5);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray3 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList4 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList4, parameterInstanceArray3);
        try {
            java.lang.Boolean boolean7 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList4, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(parameterInstanceArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.io.Serializable serializable4 = null;
        try {
            java.lang.Boolean boolean5 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("100", serializable4);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
        int int8 = octetList7.size();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray9 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList10, uShortArray9);
        int int13 = uShortList10.lastIndexOf((java.lang.Object) 'a');
        boolean boolean14 = uShortList10.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray16 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort15 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList17 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList17, uShortArray16);
        boolean boolean19 = uShortList10.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList17);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray24 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25, uShortArray24);
        int int28 = uShortList25.indexOf((java.lang.Object) 1.0f);
        boolean boolean29 = strList22.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25);
        boolean boolean30 = uShortList10.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25);
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean32 = uShortList25.add(uShort31);
        boolean boolean33 = octetList7.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = octetList7.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet35 = octetList7.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element36 = uOctet35.createElement();
        try {
            java.lang.Boolean boolean38 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1, 0, 1, 10, 10, 100]", (java.io.Serializable) uOctet35, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uShortArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(uShortArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uShortArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertNotNull(uOctet35);
        org.junit.Assert.assertNotNull(element36);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer6 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList2 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("6", "[-1, 281475010265070]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer6 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails4 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI5 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList7 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = integerList7.getAreaVersion();
        java.util.Spliterator<java.lang.Integer> intSpliterator9 = integerList7.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = integerList7.getAreaNumber();
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { false, true };
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14, booleanArray13);
        boolean boolean17 = booleanList14.contains((java.lang.Object) 1L);
        java.util.ListIterator<java.lang.Boolean> booleanItor18 = booleanList14.listIterator();
        java.math.BigInteger bigInteger19 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong20 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger19);
        org.ccsds.moims.mo.mal.structures.ULong uLong21 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger19);
        org.ccsds.moims.mo.mal.structures.ULong uLong22 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger19);
        int int23 = booleanList14.lastIndexOf((java.lang.Object) bigInteger19);
        org.ccsds.moims.mo.mal.structures.ULong uLong24 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger19);
        java.math.BigInteger bigInteger25 = uLong24.getValue();
        boolean boolean26 = integerList7.contains((java.lang.Object) uLong24);
        org.ccsds.moims.mo.mal.structures.OctetList octetList28 = new org.ccsds.moims.mo.mal.structures.OctetList((int) '4');
        boolean boolean29 = uLong24.equals((java.lang.Object) octetList28);
        org.ccsds.moims.mo.mal.structures.Element element30 = uLong24.createElement();
        try {
            java.lang.Boolean boolean32 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1, 281475010265070]", (java.io.Serializable) uLong24, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(intSpliterator9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(booleanItor18);
        org.junit.Assert.assertNotNull(bigInteger19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(bigInteger25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(element30);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { 16, 100, 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList11 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        int int14 = intList11.indexOf((java.lang.Object) 0);
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        java.util.ListIterator<java.lang.Byte> byteItor21 = byteList18.listIterator((int) (short) 1);
        boolean boolean22 = intList11.contains((java.lang.Object) byteList18);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime23 = new org.ccsds.moims.mo.mal.structures.FineTime();
        boolean boolean24 = intList11.equals((java.lang.Object) fineTime23);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = fineTime23.getAreaVersion();
        long long26 = fineTime23.getValue();
        org.ccsds.moims.mo.mal.structures.Element element27 = fineTime23.createElement();
        try {
            java.lang.Boolean boolean29 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[false, true, false]", (java.io.Serializable) element27, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(byteItor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(element27);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (int) (short) 10, 4, 13, 281475010265083L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer3 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF3 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray2 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList3 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList3, parameterInstanceArray2);
        try {
            java.lang.Boolean boolean6 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList3, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(parameterInstanceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        try {
// flaky:             nanoSatMOConnectorImpl11.reportActionExecutionProgress(false, 5, (int) (short) 10, 12, 0L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.CloseAppListener closeAppListener2 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider3 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer2 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider6 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier6 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList7 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = integerList7.getAreaVersion();
        java.util.Spliterator<java.lang.Integer> intSpliterator9 = integerList7.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = integerList7.getAreaNumber();
        integerList7.clear();
        java.lang.Integer int12 = integerList7.getTypeShortForm();
        boolean boolean13 = integerList7.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = integerList7.getAreaVersion();
        try {
            java.lang.Boolean boolean15 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("-1", (java.io.Serializable) uOctet14);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(intSpliterator9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-11) + "'", int12.equals((-11)));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(uOctet14);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener4 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uRIList6.getAreaVersion();
        java.lang.Integer int8 = uRIList6.getTypeShortForm();
        try {
            java.lang.Boolean boolean10 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1, 10, 1]", (java.io.Serializable) uRIList6, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-18) + "'", int8.equals((-18)));
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider3 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList18 = nanoSatMOConnectorImpl11.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails18 = null; // flaky: nanoSatMOConnectorImpl11.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener2 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails5 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails2 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray5 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList6 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList6, parameterInstanceArray5);
        try {
            java.lang.Boolean boolean9 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList6, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(parameterInstanceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider3 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer4 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier1 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray6 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList7 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList7, parameterInstanceArray6);
        try {
            java.lang.Boolean boolean10 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList7, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(parameterInstanceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList5 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails3 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { true };
        java.util.ArrayList<java.lang.Boolean> booleanList16 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList16, booleanArray15);
        java.lang.Boolean boolean19 = booleanList16.remove((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger21 = new org.ccsds.moims.mo.mal.structures.UInteger((long) 17);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet22 = uInteger21.getAreaVersion();
        java.lang.String str23 = uInteger21.toString();
        java.lang.Long long24 = uInteger21.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element25 = uInteger21.createElement();
        boolean boolean26 = booleanList16.equals((java.lang.Object) uInteger21);
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = uInteger21.getAreaNumber();
        java.lang.String str28 = uInteger21.toString();
        try {
            java.lang.Boolean boolean29 = null; // flaky: nanoSatMOConnectorImpl7.pushParameterValue("", (java.io.Serializable) uInteger21);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19.equals(true));
        org.junit.Assert.assertNotNull(uOctet22);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "17" + "'", str23.equals("17"));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 281474993487884L + "'", long24.equals(281474993487884L));
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "17" + "'", str28.equals("17"));
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray4 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList5 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList5, parameterInstanceArray4);
        try {
            java.lang.Boolean boolean8 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList5, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(parameterInstanceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider6 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[hi!]", "[-1, 281475010265070, 281474993487873]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails6 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider7 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = org.ccsds.moims.mo.mal.structures.IntegerList.SERVICE_SHORT_FORM;
        try {
            java.lang.Boolean boolean7 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1.0, 10.0, 10.0, 1.0]", (java.io.Serializable) uShort6);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(uShort6);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider7 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList5 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[0, 0]", "[, , ]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[]", "[0, 0]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF7 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (int) 'a', (-7), 0, (long) 1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI3 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (int) '4', (int) 'a', (-11), 281474993487886L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList11 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList11, shortArray10);
        boolean boolean14 = shortList11.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray19 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList20 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20, uShortArray19);
        int int23 = uShortList20.indexOf((java.lang.Object) 1.0f);
        boolean boolean24 = strList17.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20);
        boolean boolean25 = shortList11.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20);
        shortList11.clear();
        boolean boolean28 = shortList11.add((java.lang.Short) (short) 0);
        shortList11.clear();
        java.lang.Object obj30 = shortList11.clone();
        java.util.Spliterator<java.lang.Short> shortSpliterator31 = shortList11.spliterator();
        try {
            java.lang.Boolean boolean33 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[10.0, 0.0, -1.0, -1.0]", (java.io.Serializable) shortList11, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(uShortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(shortSpliterator31);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("-1", "100");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF18 = null; // flaky: nanoSatMOConnectorImpl11.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        try {
            nanoSatMOConnectorImpl7.writeCentralDirectoryServiceURI("[1]", "[16, 100, 10, 1]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF5 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier5 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier5 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList5 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener4 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.StringList stringList7 = new org.ccsds.moims.mo.mal.structures.StringList(5);
        stringList7.trimToSize();
        java.lang.Object obj9 = null;
        int int10 = stringList7.indexOf(obj9);
        java.lang.Long long11 = stringList7.getShortForm();
        org.ccsds.moims.mo.mal.structures.URIList[] uRIListArray12 = new org.ccsds.moims.mo.mal.structures.URIList[] {};
        org.ccsds.moims.mo.mal.structures.URIList[] uRIListArray13 = stringList7.toArray(uRIListArray12);
        java.lang.Object[] objArray14 = stringList7.toArray();
        try {
            java.lang.Boolean boolean15 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[false, true]", (java.io.Serializable) stringList7);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 281475010265073L + "'", long11.equals(281475010265073L));
        org.junit.Assert.assertNotNull(uRIListArray12);
        org.junit.Assert.assertNotNull(uRIListArray13);
        org.junit.Assert.assertNotNull(objArray14);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList7 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        esa.mo.nmf.MonitorAndControlNMFAdapter monitorAndControlNMFAdapter13 = null;
        try {
            nanoSatMOConnectorImpl7.init(monitorAndControlNMFAdapter13);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field org.sqlite.jdbc3.JDBC3Connection.randoop_classUsedFlag from class org.sqlite.core.CoreConnection");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray18 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList19 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList19, parameterInstanceArray18);
        try {
            java.lang.Boolean boolean22 = null; // flaky: nanoSatMOConnectorImpl11.pushMultipleParameterValues(parameterInstanceList19, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(parameterInstanceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener4 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI2 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, (int) ' ', 14, (int) (short) 1, (long) (short) -1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        try {
            nanoSatMOConnectorImpl11.writeCentralDirectoryServiceURI("", "[-1, 0, 1, 10, 10, 100]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime7 = new org.ccsds.moims.mo.mal.structures.FineTime(0L);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = fineTime7.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = fineTime7.getAreaNumber();
        java.lang.Long long10 = fineTime7.getShortForm();
        try {
            java.lang.Boolean boolean12 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0, 0]", (java.io.Serializable) long10, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487889L + "'", long10.equals(281474993487889L));
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails2 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList9 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = doubleList9.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = doubleList9.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element12 = doubleList9.createElement();
        java.util.ListIterator<java.lang.Double> doubleItor13 = doubleList9.listIterator();
        try {
            java.lang.Boolean boolean14 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[hi!]", (java.io.Serializable) doubleList9);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(doubleItor13);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element2 = shortList0.createElement();
        java.lang.Object obj3 = shortList0.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = shortList0.getServiceNumber();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl6 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener7 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl6);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener8 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl6);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl6);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl10 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener11 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl10);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener12 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl10);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl10);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl14 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener15 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl14);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray16 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener9, closeAppEventListener13, closeAppEventListener15 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl17 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener18 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener19 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener20 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl21 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl21);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener23 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl21);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener24 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl21);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl25 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener26 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray27 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener20, closeAppEventListener24, closeAppEventListener26 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl28 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener29 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener30 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener35 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl36 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl36);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray38 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener31, closeAppEventListener35, closeAppEventListener37 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl39 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener40 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener41 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener42 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl43 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener44 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl43);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener45 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl43);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener46 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl43);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl47 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener48 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl47);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray49 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener42, closeAppEventListener46, closeAppEventListener48 };
        esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray50 = new esa.mo.com.impl.util.EventReceivedListener[][] { eventReceivedListenerArray16, eventReceivedListenerArray27, eventReceivedListenerArray38, eventReceivedListenerArray49 };
        esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray51 = shortList0.toArray(eventReceivedListenerArray50);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 10.0d, (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55, doubleArray54);
        java.lang.Object obj57 = doubleList55.clone();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray58 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList59 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList59, uShortArray58);
        int int62 = uShortList59.lastIndexOf((java.lang.Object) 'a');
        boolean boolean63 = uShortList59.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray64 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList65 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65, uShortArray64);
        int int68 = uShortList65.lastIndexOf((java.lang.Object) 'a');
        boolean boolean69 = uShortList65.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray71 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort70 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList72 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList72, uShortArray71);
        boolean boolean74 = uShortList65.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList72);
        boolean boolean75 = uShortList59.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65);
        boolean boolean76 = doubleList55.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList78 = new org.ccsds.moims.mo.mal.structures.UShortList((int) ' ');
        org.ccsds.moims.mo.mal.structures.UShort uShort79 = uShortList78.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort80 = uShortList78.getAreaNumber();
        boolean boolean81 = uShortList65.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList78);
        org.ccsds.moims.mo.mal.structures.Element element82 = uShortList78.createElement();
        boolean boolean83 = shortList0.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList78);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList85 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        java.lang.Object obj86 = doubleList85.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort87 = doubleList85.getServiceNumber();
        boolean boolean88 = uShortList78.contains((java.lang.Object) doubleList85);
        try {
            java.lang.Double double90 = doubleList85.remove(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray16);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray27);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray38);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray49);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray50);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray51);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(uShortArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(uShortArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertNotNull(uShortArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNotNull(uShort79);
        org.junit.Assert.assertNotNull(uShort80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertNotNull(element82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", !boolean83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(uShort87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList7 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList4 = new org.ccsds.moims.mo.mal.structures.IntegerList(4);
        java.lang.Long long5 = integerList4.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = integerList4.getAreaNumber();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { 16, 100, 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList12 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList12, intArray11);
        int int15 = intList12.indexOf((java.lang.Object) 0);
        java.util.Iterator<java.lang.Integer> intItor16 = intList12.iterator();
        java.lang.Float[] floatArray18 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList19 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList19, floatArray18);
        java.util.ListIterator<java.lang.Float> floatItor21 = floatList19.listIterator();
        int int22 = floatList19.size();
        boolean boolean23 = intList12.equals((java.lang.Object) int22);
        boolean boolean24 = uShort6.equals((java.lang.Object) intList12);
        try {
            java.lang.Boolean boolean26 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("", (java.io.Serializable) intList12, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265077L + "'", long5.equals(281475010265077L));
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(intItor16);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(floatItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (int) ' ', 2, 14, (long) (byte) 1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList6 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray6 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList7 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList7, parameterInstanceArray6);
        try {
            java.lang.Boolean boolean10 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList7, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(parameterInstanceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList8 = new org.ccsds.moims.mo.mal.structures.BooleanList(15);
        java.lang.Object obj9 = null;
        boolean boolean10 = booleanList8.remove(obj9);
        try {
            java.lang.Boolean boolean11 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("281474993487886", (java.io.Serializable) boolean10);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails13 = null; // flaky: nanoSatMOConnectorImpl7.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Float[] floatArray7 = new java.lang.Float[] { 10.0f, 0.0f, (-1.0f), 100.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList8 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList8, floatArray7);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
        java.util.ListIterator<java.lang.Byte> byteItor16 = byteList13.listIterator((int) (short) 1);
        int int17 = byteList13.size();
        java.util.Iterator<java.lang.Byte> byteItor18 = byteList13.iterator();
        int int19 = floatList8.lastIndexOf((java.lang.Object) byteItor18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray20 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList21 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList21, uShortArray20);
        int int24 = uShortList21.lastIndexOf((java.lang.Object) 'a');
        boolean boolean25 = uShortList21.isEmpty();
        boolean boolean26 = floatList8.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList21);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList28 = new org.ccsds.moims.mo.mal.structures.BooleanList(5);
        booleanList28.trimToSize();
        java.lang.Long long30 = booleanList28.getShortForm();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { 16, 100, 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList36 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        int int39 = intList36.indexOf((java.lang.Object) 0);
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList43 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList43, byteArray42);
        java.util.ListIterator<java.lang.Byte> byteItor46 = byteList43.listIterator((int) (short) 1);
        int int47 = byteList43.size();
        int int48 = intList36.lastIndexOf((java.lang.Object) int47);
        java.util.ListIterator<java.lang.Integer> intItor49 = intList36.listIterator();
        int int50 = booleanList28.lastIndexOf((java.lang.Object) intList36);
        boolean boolean51 = floatList8.remove((java.lang.Object) int50);
        org.ccsds.moims.mo.mal.structures.StringList stringList53 = new org.ccsds.moims.mo.mal.structures.StringList((int) 'a');
        boolean boolean54 = floatList8.equals((java.lang.Object) stringList53);
        java.lang.Float[] floatArray59 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList60 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList60, floatArray59);
        int int63 = floatList60.lastIndexOf((java.lang.Object) (-1L));
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.lang.Object obj68 = strList66.clone();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray69 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList70 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList70, uShortArray69);
        int int73 = uShortList70.lastIndexOf((java.lang.Object) 'a');
        boolean boolean74 = uShortList70.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort75 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray76 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort75 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList77 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList77, uShortArray76);
        boolean boolean79 = uShortList70.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList77);
        boolean boolean80 = strList66.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList77);
        boolean boolean81 = floatList60.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList77);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream82 = uShortList77.stream();
        uShortList77.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream84 = uShortList77.parallelStream();
        boolean boolean85 = floatList8.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList77);
        try {
            java.lang.Boolean boolean87 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("7.0", (java.io.Serializable) boolean85, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(byteItor16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(byteItor18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(uShortArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 281475010265086L + "'", long30.equals(281475010265086L));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(byteItor46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(intItor49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(uShortArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertNotNull(uShortArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
        org.junit.Assert.assertNotNull(uShortStream82);
        org.junit.Assert.assertNotNull(uShortStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", !boolean85);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer4 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList6 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI13 = nanoSatMOConnectorImpl7.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        java.util.ListIterator<java.lang.Byte> byteItor6 = byteList3.listIterator((int) (short) 1);
        int int7 = byteList3.size();
        int int9 = byteList3.indexOf((java.lang.Object) (short) 100);
        org.ccsds.moims.mo.mal.structures.LongList longList10 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = longList10.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = longList10.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = longList10.getAreaNumber();
        longList10.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = longList10.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl17 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long18 = nanoSatMOConnectorImpl17.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener19 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        nanoSatMOConnectorImpl17.initAdditionalServices();
        java.lang.Long long21 = nanoSatMOConnectorImpl17.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl23 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener24 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl23);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl25 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long26 = nanoSatMOConnectorImpl25.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener27 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        nanoSatMOConnectorImpl25.initAdditionalServices();
        nanoSatMOConnectorImpl25.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl30 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl30);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        java.lang.Long long35 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray36 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl17, nanoSatMOConnectorImpl23, nanoSatMOConnectorImpl25, nanoSatMOConnectorImpl30, nanoSatMOConnectorImpl32 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray37 = longList10.toArray(nanoSatMOConnectorImplArray36);
        int int38 = longList10.size();
        boolean boolean39 = byteList3.remove((java.lang.Object) longList10);
        org.ccsds.moims.mo.mal.structures.Element element40 = longList10.createElement();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(byteItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray36);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(element40);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        boolean boolean7 = shortList4.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray12 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList13, uShortArray12);
        int int16 = uShortList13.indexOf((java.lang.Object) 1.0f);
        boolean boolean17 = strList10.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList13);
        boolean boolean18 = shortList4.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList13);
        shortList4.clear();
        java.lang.Object[] objArray20 = shortList4.toArray();
        org.ccsds.moims.mo.mal.structures.LongList longList21 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = longList21.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = longList21.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList21.getAreaNumber();
        longList21.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = longList21.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl28 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long29 = nanoSatMOConnectorImpl28.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener30 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        nanoSatMOConnectorImpl28.initAdditionalServices();
        java.lang.Long long32 = nanoSatMOConnectorImpl28.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl34 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener35 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl34);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl36 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long37 = nanoSatMOConnectorImpl36.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener38 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl36);
        nanoSatMOConnectorImpl36.initAdditionalServices();
        nanoSatMOConnectorImpl36.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl41 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener42 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl41);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl43 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener44 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl43);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener45 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl43);
        java.lang.Long long46 = nanoSatMOConnectorImpl43.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray47 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl28, nanoSatMOConnectorImpl34, nanoSatMOConnectorImpl36, nanoSatMOConnectorImpl41, nanoSatMOConnectorImpl43 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray48 = longList21.toArray(nanoSatMOConnectorImplArray47);
        esa.mo.nmf.NMFProvider[] nMFProviderArray49 = shortList4.toArray((esa.mo.nmf.NMFProvider[]) nanoSatMOConnectorImplArray47);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(uShortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray47);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray48);
        org.junit.Assert.assertNotNull(nMFProviderArray49);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Float[] floatArray4 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList5 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList5, floatArray4);
        java.util.ListIterator<java.lang.Float> floatItor7 = floatList5.listIterator();
        int int9 = floatList5.indexOf((java.lang.Object) "[-1, 281475010265070]");
        java.util.ListIterator<java.lang.Float> floatItor10 = floatList5.listIterator();
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14, booleanArray13);
        boolean boolean17 = booleanList14.contains((java.lang.Object) 10L);
        booleanList14.ensureCapacity(0);
        java.lang.Short[] shortArray23 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList24 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList24, shortArray23);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray26 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList27, uShortArray26);
        int int30 = uShortList27.lastIndexOf((java.lang.Object) 'a');
        boolean boolean31 = uShortList27.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray33 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort32 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList34, uShortArray33);
        boolean boolean36 = uShortList27.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList34);
        boolean boolean37 = shortList24.remove((java.lang.Object) boolean36);
        shortList24.clear();
        int int39 = booleanList14.lastIndexOf((java.lang.Object) shortList24);
        java.lang.Short[] shortArray43 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList44 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList44, shortArray43);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray46 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList47 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList47, uShortArray46);
        int int50 = uShortList47.lastIndexOf((java.lang.Object) 'a');
        boolean boolean51 = uShortList47.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort52 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray53 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort52 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList54 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList54, uShortArray53);
        boolean boolean56 = uShortList47.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList54);
        boolean boolean57 = shortList44.remove((java.lang.Object) boolean56);
        shortList44.clear();
        boolean boolean59 = shortList44.isEmpty();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray64 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList65 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65, uShortArray64);
        int int68 = uShortList65.indexOf((java.lang.Object) 1.0f);
        boolean boolean69 = strList62.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65);
        boolean boolean70 = shortList44.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65);
        boolean boolean71 = booleanList14.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65);
        int int72 = floatList5.lastIndexOf((java.lang.Object) uShortList65);
        int int73 = floatList5.size();
        try {
            java.lang.Boolean boolean74 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("281474993487886", (java.io.Serializable) int73);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(floatItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(floatItor10);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(uShortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(uShortArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(uShortArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(uShortArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(uShortArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails4 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long7 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier8 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.StringList stringList7 = new org.ccsds.moims.mo.mal.structures.StringList(16);
        java.lang.Object obj8 = null;
        boolean boolean9 = stringList7.equals(obj8);
        try {
            java.lang.Boolean boolean10 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("6", (java.io.Serializable) stringList7);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI4 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (-4), (int) (byte) 100, (-2), 281475010265086L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        try {
            esa.mo.nmf.CloseAppListener closeAppListener13 = nanoSatMOConnectorImpl7.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        java.util.ListIterator<java.lang.Byte> byteItor20 = byteList17.listIterator((int) (short) 1);
        int int21 = byteList17.size();
        org.ccsds.moims.mo.mal.structures.Time time23 = new org.ccsds.moims.mo.mal.structures.Time((long) (short) 100);
        org.ccsds.moims.mo.mal.structures.Element element24 = time23.createElement();
        boolean boolean25 = byteList17.contains((java.lang.Object) time23);
        java.lang.Long long26 = time23.getShortForm();
        java.lang.String str27 = time23.toString();
        long long28 = time23.getValue();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet29 = time23.getAreaVersion();
        java.lang.Integer int30 = time23.getTypeShortForm();
        long long31 = time23.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = time23.getServiceNumber();
        try {
            java.lang.Boolean boolean33 = null; // flaky: nanoSatMOConnectorImpl7.pushParameterValue("[false, true, false]", (java.io.Serializable) uShort32);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281474993487888L + "'", long26.equals(281474993487888L));
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "100" + "'", str27.equals("100"));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 100L + "'", long28 == 100L);
        org.junit.Assert.assertNotNull(uOctet29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 16 + "'", int30.equals(16));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
        org.junit.Assert.assertNotNull(uShort32);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier6 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier18 = nanoSatMOConnectorImpl11.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.Duration duration5 = new org.ccsds.moims.mo.mal.structures.Duration();
        double double6 = duration5.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = duration5.getServiceNumber();
        java.lang.Long long8 = duration5.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = duration5.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = uOctet9.getAreaVersion();
        boolean boolean12 = uOctet9.equals((java.lang.Object) 16);
        try {
            java.lang.Boolean boolean13 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1.0, 0.0, 0.0, 10.0]", (java.io.Serializable) boolean12);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487875L + "'", long8.equals(281474993487875L));
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.StringList stringList9 = new org.ccsds.moims.mo.mal.structures.StringList(3);
        try {
            java.lang.Boolean boolean10 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1, 281475010265070, 281474993487873]", (java.io.Serializable) stringList9);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.ShortList shortList6 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = shortList6.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element8 = shortList6.createElement();
        boolean boolean9 = shortList6.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = shortList6.getAreaNumber();
        shortList6.clear();
        int int12 = shortList6.size();
        org.ccsds.moims.mo.mal.structures.ShortList shortList14 = new org.ccsds.moims.mo.mal.structures.ShortList(11);
        int int15 = shortList14.size();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = shortList14.getAreaNumber();
        boolean boolean17 = shortList6.contains((java.lang.Object) uShort16);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = shortList6.getAreaVersion();
        try {
            java.lang.Boolean boolean19 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[1, 10, 10, 100]", (java.io.Serializable) shortList6);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(uOctet18);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.URI uRI7 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = uRI7.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray9 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI7 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList10, uRIArray9);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor13 = uRIList10.listIterator((int) (short) 0);
        org.ccsds.moims.mo.mal.structures.URI uRI15 = new org.ccsds.moims.mo.mal.structures.URI();
        java.lang.Long long16 = uRI15.getShortForm();
        uRIList10.add(0, uRI15);
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = uRI15.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray19 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList20 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20, uShortArray19);
        int int23 = uShortList20.lastIndexOf((java.lang.Object) 'a');
        boolean boolean24 = uShortList20.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray26 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort25 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList27, uShortArray26);
        boolean boolean29 = uShortList20.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList27);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray34 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35, uShortArray34);
        int int38 = uShortList35.indexOf((java.lang.Object) 1.0f);
        boolean boolean39 = strList32.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35);
        boolean boolean40 = uShortList20.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35);
        boolean boolean41 = uRI15.equals((java.lang.Object) boolean40);
        try {
            java.lang.Boolean boolean43 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0]", (java.io.Serializable) uRI15, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertNotNull(uRIArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(uRIItor13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281474993487890L + "'", long16.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uShortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(uShortArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Float[] floatArray15 = new java.lang.Float[] { 10.0f, 0.0f, (-1.0f), 100.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList16 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList16, floatArray15);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
        java.util.ListIterator<java.lang.Byte> byteItor24 = byteList21.listIterator((int) (short) 1);
        int int25 = byteList21.size();
        java.util.Iterator<java.lang.Byte> byteItor26 = byteList21.iterator();
        int int27 = floatList16.lastIndexOf((java.lang.Object) byteItor26);
        try {
            java.lang.Boolean boolean28 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0, 1, 10, 10, 100]", (java.io.Serializable) int27);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(byteItor24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(byteItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener5 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails6 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject6 = null;
        try {
            closeAppEventListener5.onDataReceived(eventCOMObject6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, 8, (int) (byte) 100, 6, 281474993487875L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI8 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails6 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("6", "");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider8 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList13 = nanoSatMOConnectorImpl7.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, (-11), 0, (int) ' ', (long) 10);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element2 = shortList0.createElement();
        java.lang.Object obj3 = shortList0.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = shortList0.getServiceNumber();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl6 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener7 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl6);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener8 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl6);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl6);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl10 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener11 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl10);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener12 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl10);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl10);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl14 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener15 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl14);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray16 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener9, closeAppEventListener13, closeAppEventListener15 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl17 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener18 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener19 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener20 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl21 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl21);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener23 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl21);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener24 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl21);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl25 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener26 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray27 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener20, closeAppEventListener24, closeAppEventListener26 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl28 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener29 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener30 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener35 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl36 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl36);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray38 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener31, closeAppEventListener35, closeAppEventListener37 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl39 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener40 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener41 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener42 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl43 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener44 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl43);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener45 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl43);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener46 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl43);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl47 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener48 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl47);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray49 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener42, closeAppEventListener46, closeAppEventListener48 };
        esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray50 = new esa.mo.com.impl.util.EventReceivedListener[][] { eventReceivedListenerArray16, eventReceivedListenerArray27, eventReceivedListenerArray38, eventReceivedListenerArray49 };
        esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray51 = shortList0.toArray(eventReceivedListenerArray50);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 10.0d, (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55, doubleArray54);
        java.lang.Object obj57 = doubleList55.clone();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray58 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList59 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList59, uShortArray58);
        int int62 = uShortList59.lastIndexOf((java.lang.Object) 'a');
        boolean boolean63 = uShortList59.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray64 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList65 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65, uShortArray64);
        int int68 = uShortList65.lastIndexOf((java.lang.Object) 'a');
        boolean boolean69 = uShortList65.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray71 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort70 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList72 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList72, uShortArray71);
        boolean boolean74 = uShortList65.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList72);
        boolean boolean75 = uShortList59.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65);
        boolean boolean76 = doubleList55.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList78 = new org.ccsds.moims.mo.mal.structures.UShortList((int) ' ');
        org.ccsds.moims.mo.mal.structures.UShort uShort79 = uShortList78.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort80 = uShortList78.getAreaNumber();
        boolean boolean81 = uShortList65.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList78);
        org.ccsds.moims.mo.mal.structures.Element element82 = uShortList78.createElement();
        boolean boolean83 = shortList0.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList78);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList85 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        java.lang.Object obj86 = doubleList85.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort87 = doubleList85.getServiceNumber();
        boolean boolean88 = uShortList78.contains((java.lang.Object) doubleList85);
        try {
            doubleList85.add(9, (java.lang.Double) (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray16);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray27);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray38);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray49);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray50);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray51);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(uShortArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(uShortArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertNotNull(uShortArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNotNull(uShort79);
        org.junit.Assert.assertNotNull(uShort80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertNotNull(element82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", !boolean83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(uShort87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider2 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI6 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.StringList stringList5 = new org.ccsds.moims.mo.mal.structures.StringList();
        java.lang.Long long6 = stringList5.getShortForm();
        java.lang.Long long7 = stringList5.getShortForm();
        java.lang.Long[] longArray13 = new java.lang.Long[] { 0L, 1L, 10L, 10L, 100L };
        java.util.ArrayList<java.lang.Long> longList14 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList14, longArray13);
        longList14.trimToSize();
        java.util.stream.Stream<java.lang.Long> longStream17 = longList14.stream();
        boolean boolean18 = stringList5.equals((java.lang.Object) longList14);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList23 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        intList23.ensureCapacity((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray27 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList28 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList28, uShortArray27);
        int int31 = uShortList28.lastIndexOf((java.lang.Object) 'a');
        boolean boolean32 = uShortList28.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray34 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort33 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35, uShortArray34);
        boolean boolean37 = uShortList28.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray42 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList43, uShortArray42);
        int int46 = uShortList43.indexOf((java.lang.Object) 1.0f);
        boolean boolean47 = strList40.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList43);
        boolean boolean48 = uShortList28.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList43);
        boolean boolean49 = intList23.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList43);
        boolean boolean50 = longList14.equals((java.lang.Object) uShortList43);
        org.ccsds.moims.mo.mal.structures.Time time51 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.Integer int52 = time51.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = time51.getAreaNumber();
        boolean boolean54 = longList14.remove((java.lang.Object) time51);
        java.lang.Integer int55 = time51.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort56 = time51.getAreaNumber();
        try {
            java.lang.Boolean boolean57 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("7.0", (java.io.Serializable) uShort56);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265073L + "'", long6.equals(281475010265073L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265073L + "'", long7.equals(281475010265073L));
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertNotNull(longStream17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uShortArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(uShortArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(uShortArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 16 + "'", int52.equals(16));
        org.junit.Assert.assertNotNull(uShort53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 16 + "'", int55.equals(16));
        org.junit.Assert.assertNotNull(uShort56);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer5 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, 5, 15, 0, 65535L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, 13, 100, 7, 281474993487876L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long7 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener8 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList4 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) 'a');
        org.ccsds.moims.mo.mal.structures.Element element5 = booleanList4.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = booleanList4.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = booleanList4.getAreaVersion();
        short short8 = uOctet7.getValue();
        try {
            java.lang.Boolean boolean9 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1.0, 0.0, 0.0, 10.0]", (java.io.Serializable) short8);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + short8 + "' != '" + (short) 1 + "'", short8 == (short) 1);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray7 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList8 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList8, parameterInstanceArray7);
        try {
            java.lang.Boolean boolean11 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList8, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(parameterInstanceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener7 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[0]", "[-1.0]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, 13, (-15), 18, (long) 16);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList6 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = integerList6.getAreaVersion();
        java.util.Spliterator<java.lang.Integer> intSpliterator8 = integerList6.spliterator();
        java.lang.Long long9 = integerList6.getShortForm();
        java.lang.Integer int10 = integerList6.getTypeShortForm();
        java.lang.String str11 = integerList6.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = integerList6.getAreaVersion();
        try {
            java.lang.Boolean boolean13 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[1, 100, -1, 1]", (java.io.Serializable) integerList6);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(intSpliterator8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265077L + "'", long9.equals(281475010265077L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-11) + "'", int10.equals((-11)));
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]" + "'", str11.equals("[]"));
        org.junit.Assert.assertNotNull(uOctet12);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 10L, 10L, 100L };
        java.util.ArrayList<java.lang.Long> longList6 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList6, longArray5);
        longList6.trimToSize();
        java.lang.Long long10 = longList6.remove((int) (byte) 0);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 16, 100, 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        int int19 = intList16.indexOf((java.lang.Object) 0);
        java.util.Iterator<java.lang.Integer> intItor20 = intList16.iterator();
        java.util.ListIterator<java.lang.Integer> intItor21 = intList16.listIterator();
        boolean boolean22 = longList6.equals((java.lang.Object) intItor21);
        org.ccsds.moims.mo.mal.structures.ShortList shortList23 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = shortList23.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element25 = shortList23.createElement();
        boolean boolean26 = shortList23.isEmpty();
        int int27 = shortList23.size();
        java.lang.Long long28 = shortList23.getShortForm();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl29 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener30 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl29);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl29);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener32 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl29);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl33 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl33);
        java.lang.Long long35 = nanoSatMOConnectorImpl33.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl36 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl36);
        java.lang.Float[] floatArray39 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList40 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList40, floatArray39);
        java.util.ListIterator<java.lang.Float> floatItor42 = floatList40.listIterator();
        int int44 = floatList40.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl45 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long46 = nanoSatMOConnectorImpl45.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener47 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl45);
        nanoSatMOConnectorImpl45.initAdditionalServices();
        java.lang.Long long49 = nanoSatMOConnectorImpl45.getAppDirectoryId();
        int int50 = floatList40.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl45);
        java.lang.Long long51 = nanoSatMOConnectorImpl45.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl52 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long53 = nanoSatMOConnectorImpl52.getAppDirectoryId();
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray54 = new esa.mo.nmf.SimpleMonitoringInterface[] { nanoSatMOConnectorImpl29, nanoSatMOConnectorImpl33, nanoSatMOConnectorImpl36, nanoSatMOConnectorImpl45, nanoSatMOConnectorImpl52 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl55 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener56 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl55);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener57 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl55);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener58 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl55);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl59 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener60 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl59);
        java.lang.Long long61 = nanoSatMOConnectorImpl59.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl62 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener63 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl62);
        java.lang.Float[] floatArray65 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList66 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList66, floatArray65);
        java.util.ListIterator<java.lang.Float> floatItor68 = floatList66.listIterator();
        int int70 = floatList66.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl71 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long72 = nanoSatMOConnectorImpl71.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener73 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl71);
        nanoSatMOConnectorImpl71.initAdditionalServices();
        java.lang.Long long75 = nanoSatMOConnectorImpl71.getAppDirectoryId();
        int int76 = floatList66.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl71);
        java.lang.Long long77 = nanoSatMOConnectorImpl71.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl78 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long79 = nanoSatMOConnectorImpl78.getAppDirectoryId();
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray80 = new esa.mo.nmf.SimpleMonitoringInterface[] { nanoSatMOConnectorImpl55, nanoSatMOConnectorImpl59, nanoSatMOConnectorImpl62, nanoSatMOConnectorImpl71, nanoSatMOConnectorImpl78 };
        esa.mo.nmf.SimpleMonitoringInterface[][] simpleMonitoringInterfaceArray81 = new esa.mo.nmf.SimpleMonitoringInterface[][] { simpleMonitoringInterfaceArray54, simpleMonitoringInterfaceArray80 };
        esa.mo.nmf.SimpleMonitoringInterface[][] simpleMonitoringInterfaceArray82 = shortList23.toArray(simpleMonitoringInterfaceArray81);
        try {
            esa.mo.nmf.SimpleMonitoringInterface[][] simpleMonitoringInterfaceArray83 = longList6.toArray(simpleMonitoringInterfaceArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10.equals(0L));
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(intItor20);
        org.junit.Assert.assertNotNull(intItor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 281475010265079L + "'", long28.equals(281475010265079L));
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(floatItor42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(long51);
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray54);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertNotNull(floatItor68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(long72);
        org.junit.Assert.assertNull(long75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(long77);
        org.junit.Assert.assertNull(long79);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray80);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray81);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray82);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI4 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI3 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        java.util.ListIterator<java.lang.Byte> byteItor6 = byteList3.listIterator((int) (short) 1);
        int int7 = byteList3.size();
        java.util.Iterator<java.lang.Byte> byteItor8 = byteList3.iterator();
        java.util.Iterator<java.lang.Byte> byteItor9 = byteList3.iterator();
        java.lang.Byte byte11 = byteList3.get(1);
        java.util.ListIterator<java.lang.Byte> byteItor12 = byteList3.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList13 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = longList13.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = longList13.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = longList13.getAreaNumber();
        longList13.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet19 = longList13.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl20 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long21 = nanoSatMOConnectorImpl20.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl20);
        nanoSatMOConnectorImpl20.initAdditionalServices();
        java.lang.Long long24 = nanoSatMOConnectorImpl20.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener25 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl20);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl26 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener27 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl28 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long29 = nanoSatMOConnectorImpl28.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener30 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        nanoSatMOConnectorImpl28.initAdditionalServices();
        nanoSatMOConnectorImpl28.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl33 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl33);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl35 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener36 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl35);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl35);
        java.lang.Long long38 = nanoSatMOConnectorImpl35.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray39 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl20, nanoSatMOConnectorImpl26, nanoSatMOConnectorImpl28, nanoSatMOConnectorImpl33, nanoSatMOConnectorImpl35 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray40 = longList13.toArray(nanoSatMOConnectorImplArray39);
        int int41 = byteList3.lastIndexOf((java.lang.Object) nanoSatMOConnectorImplArray39);
        java.lang.String str42 = byteList3.toString();
        boolean boolean43 = byteList3.isEmpty();
        try {
            java.lang.Byte byte46 = byteList3.set((int) 'a', (java.lang.Byte) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(byteItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteItor8);
        org.junit.Assert.assertNotNull(byteItor9);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 100 + "'", byte11.equals((byte) 100));
        org.junit.Assert.assertNotNull(byteItor12);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(uOctet19);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray39);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "[100, 100]" + "'", str42.equals("[100, 100]"));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier5 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long7 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.FloatList floatList10 = new org.ccsds.moims.mo.mal.structures.FloatList(17);
        java.lang.Long long11 = floatList10.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = floatList10.getAreaVersion();
        java.lang.String str13 = floatList10.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = floatList10.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI uRI16 = new org.ccsds.moims.mo.mal.structures.URI("[0.0, 0.0, 0.0, 10.0]");
        java.lang.Long long17 = uRI16.getShortForm();
        org.ccsds.moims.mo.mal.structures.URI uRI18 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet19 = uRI18.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray20 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI18 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList21 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList21, uRIArray20);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor24 = uRIList21.listIterator((int) (short) 0);
        org.ccsds.moims.mo.mal.structures.URI uRI26 = new org.ccsds.moims.mo.mal.structures.URI();
        java.lang.Long long27 = uRI26.getShortForm();
        uRIList21.add(0, uRI26);
        org.ccsds.moims.mo.mal.structures.UShort uShort29 = uRI26.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = uShort29.getServiceNumber();
        boolean boolean31 = uRI16.equals((java.lang.Object) uShort30);
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = uRI16.getAreaNumber();
        boolean boolean33 = floatList10.remove((java.lang.Object) uShort32);
        boolean boolean35 = floatList10.add((java.lang.Float) 1.0f);
        try {
            java.lang.Boolean boolean37 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[100, 0, 100, 0]", (java.io.Serializable) 1.0f, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 281475010265084L + "'", long11.equals(281475010265084L));
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[]" + "'", str13.equals("[]"));
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 281474993487890L + "'", long17.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uOctet19);
        org.junit.Assert.assertNotNull(uRIArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(uRIItor24);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 281474993487890L + "'", long27.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uShort29);
        org.junit.Assert.assertNotNull(uShort30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger((long) 17);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uInteger1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element3 = uInteger1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uInteger1.getServiceNumber();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 16, 100, 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList10 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        int int13 = intList10.indexOf((java.lang.Object) 0);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17, byteArray16);
        java.util.ListIterator<java.lang.Byte> byteItor20 = byteList17.listIterator((int) (short) 1);
        int int21 = byteList17.size();
        int int22 = intList10.lastIndexOf((java.lang.Object) int21);
        java.util.ListIterator<java.lang.Integer> intItor23 = intList10.listIterator();
        java.util.stream.Stream<java.lang.Integer> intStream24 = intList10.stream();
        org.ccsds.moims.mo.mal.structures.OctetList octetList25 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = octetList25.getServiceNumber();
        boolean boolean27 = intList10.contains((java.lang.Object) octetList25);
        java.lang.Integer int28 = octetList25.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort29 = octetList25.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.LongList longList30 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = longList30.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = longList30.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = longList30.getAreaNumber();
        longList30.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet36 = longList30.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl37 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long38 = nanoSatMOConnectorImpl37.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener39 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl37);
        nanoSatMOConnectorImpl37.initAdditionalServices();
        java.lang.Long long41 = nanoSatMOConnectorImpl37.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener42 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl37);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl43 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener44 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl43);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl45 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long46 = nanoSatMOConnectorImpl45.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener47 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl45);
        nanoSatMOConnectorImpl45.initAdditionalServices();
        nanoSatMOConnectorImpl45.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl50 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener51 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl50);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl52 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener53 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl52);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener54 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl52);
        java.lang.Long long55 = nanoSatMOConnectorImpl52.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray56 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl37, nanoSatMOConnectorImpl43, nanoSatMOConnectorImpl45, nanoSatMOConnectorImpl50, nanoSatMOConnectorImpl52 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray57 = longList30.toArray(nanoSatMOConnectorImplArray56);
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray58 = octetList25.toArray((esa.mo.nmf.SimpleMonitoringInterface[]) nanoSatMOConnectorImplArray56);
        boolean boolean59 = uInteger1.equals((java.lang.Object) simpleMonitoringInterfaceArray58);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(byteItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(intItor23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-7) + "'", int28.equals((-7)));
        org.junit.Assert.assertNotNull(uShort29);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(uOctet36);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray56);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray57);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList4 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer6 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI5 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.CloseAppListener closeAppListener5 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList7 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (-15), 0, (-10), 65535L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (-11), (int) (short) -1, 0, (long) 8);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener7 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        java.lang.Long long13 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier14 = nanoSatMOConnectorImpl7.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(long13);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI3 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray5 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList6 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList6, parameterInstanceArray5);
        try {
            java.lang.Boolean boolean9 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList6, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(parameterInstanceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList3 = null;
        try {
            java.lang.Boolean boolean5 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList3, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long8 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer9 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long[] longArray11 = new java.lang.Long[] { 0L, 1L, 10L, 10L, 100L };
        java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
        longList12.trimToSize();
        int int15 = longList12.size();
        longList12.ensureCapacity((int) (short) 255);
        java.lang.Float[] floatArray22 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList23 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList23, floatArray22);
        int int26 = floatList23.lastIndexOf((java.lang.Object) (-1L));
        java.util.Iterator<java.lang.Float> floatItor27 = floatList23.iterator();
        org.ccsds.moims.mo.mal.structures.Identifier identifier28 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet29 = identifier28.getAreaVersion();
        boolean boolean31 = identifier28.equals((java.lang.Object) 0);
        boolean boolean32 = floatList23.contains((java.lang.Object) identifier28);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray33 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList34, uShortArray33);
        int int37 = uShortList34.lastIndexOf((java.lang.Object) 'a');
        boolean boolean38 = uShortList34.isEmpty();
        boolean boolean39 = floatList23.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList34);
        boolean boolean40 = longList12.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList34);
        uShortList34.trimToSize();
        try {
            java.lang.Boolean boolean42 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0, 1, 10, 10, 100]", (java.io.Serializable) uShortList34);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(floatItor27);
        org.junit.Assert.assertNotNull(uOctet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(uShortArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        java.util.ListIterator<java.lang.Byte> byteItor6 = byteList3.listIterator((int) (short) 1);
        int int7 = byteList3.size();
        int int9 = byteList3.indexOf((java.lang.Object) (short) 100);
        org.ccsds.moims.mo.mal.structures.LongList longList10 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = longList10.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = longList10.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = longList10.getAreaNumber();
        longList10.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = longList10.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl17 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long18 = nanoSatMOConnectorImpl17.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener19 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        nanoSatMOConnectorImpl17.initAdditionalServices();
        java.lang.Long long21 = nanoSatMOConnectorImpl17.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl23 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener24 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl23);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl25 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long26 = nanoSatMOConnectorImpl25.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener27 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        nanoSatMOConnectorImpl25.initAdditionalServices();
        nanoSatMOConnectorImpl25.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl30 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl30);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        java.lang.Long long35 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray36 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl17, nanoSatMOConnectorImpl23, nanoSatMOConnectorImpl25, nanoSatMOConnectorImpl30, nanoSatMOConnectorImpl32 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray37 = longList10.toArray(nanoSatMOConnectorImplArray36);
        int int38 = longList10.size();
        boolean boolean39 = byteList3.remove((java.lang.Object) longList10);
        java.lang.Object obj40 = byteList3.clone();
        try {
            java.lang.Byte byte42 = byteList3.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(byteItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray36);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.io.Serializable serializable7 = null;
        try {
            java.lang.Boolean boolean8 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1.0, 0.0, 0.0, 0.0, 10.0]", serializable7);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray5 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList6 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList6, parameterInstanceArray5);
        try {
            java.lang.Boolean boolean9 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList6, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(parameterInstanceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, (-9), 13, 65535, (long) 5);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, (-5), 8, (-7), (long) (-15));
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (int) 'a', (int) (byte) 10, 6, 281475010265075L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer5 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[1, 10, 100]", "-9");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI7 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI2 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF7 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray6 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList7 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList7, parameterInstanceArray6);
        try {
            java.lang.Boolean boolean10 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList7, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(parameterInstanceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener9 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.CloseAppListener closeAppListener5 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener7 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier8 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider7 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer5 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList4 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        java.lang.Object obj5 = doubleList4.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = doubleList4.getAreaNumber();
        java.lang.Long long7 = doubleList4.getShortForm();
        try {
            java.lang.Boolean boolean9 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("1", (java.io.Serializable) long7, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265083L + "'", long7.equals(281475010265083L));
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.CloseAppListener closeAppListener5 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener7 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails8 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider9 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.MonitorAndControlNMFAdapter monitorAndControlNMFAdapter2 = null;
        try {
            nanoSatMOConnectorImpl0.startMCServices(monitorAndControlNMFAdapter2);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[-1, 10, 1]", "[false, true, false]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener5 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (-2), 65535, 14, (long) (short) 10);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.StringList stringList6 = new org.ccsds.moims.mo.mal.structures.StringList();
        stringList6.ensureCapacity(0);
        java.util.stream.Stream<java.lang.String> strStream9 = stringList6.stream();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList11 = new org.ccsds.moims.mo.mal.structures.UShortList((int) ' ');
        boolean boolean12 = stringList6.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList11);
        int int13 = uShortList11.size();
        try {
            java.lang.Boolean boolean14 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[10, 100]", (java.io.Serializable) int13);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        java.lang.Long[] longArray2 = new java.lang.Long[] { (-1L), 281475010265070L };
        java.util.ArrayList<java.lang.Long> longList3 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList3, longArray2);
        java.lang.String str5 = longList3.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = org.ccsds.moims.mo.mal.structures.BooleanList.SERVICE_SHORT_FORM;
        int int7 = longList3.lastIndexOf((java.lang.Object) uShort6);
        longList3.trimToSize();
        longList3.ensureCapacity(0);
        java.lang.Object obj11 = longList3.clone();
        org.ccsds.moims.mo.mal.structures.URIList uRIList13 = new org.ccsds.moims.mo.mal.structures.URIList(8);
        org.ccsds.moims.mo.mal.structures.Element element14 = uRIList13.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = org.ccsds.moims.mo.mal.structures.FloatList.AREA_VERSION;
        int int16 = uRIList13.lastIndexOf((java.lang.Object) uOctet15);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor17 = uRIList13.listIterator();
        int int18 = longList3.indexOf((java.lang.Object) uRIList13);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl19 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long20 = nanoSatMOConnectorImpl19.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl21 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long22 = nanoSatMOConnectorImpl21.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener23 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl21);
        nanoSatMOConnectorImpl21.initAdditionalServices();
        nanoSatMOConnectorImpl21.initAdditionalServices();
        java.lang.Long long26 = nanoSatMOConnectorImpl21.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl27 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long28 = nanoSatMOConnectorImpl27.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener29 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl27);
        nanoSatMOConnectorImpl27.initAdditionalServices();
        nanoSatMOConnectorImpl27.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long33 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        nanoSatMOConnectorImpl32.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener36 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        nanoSatMOConnectorImpl32.initAdditionalServices();
        nanoSatMOConnectorImpl32.initAdditionalServices();
        java.lang.Long long40 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl41 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long42 = nanoSatMOConnectorImpl41.getAppDirectoryId();
        java.lang.Long long43 = nanoSatMOConnectorImpl41.getAppDirectoryId();
        java.lang.Long long44 = nanoSatMOConnectorImpl41.getAppDirectoryId();
        esa.mo.nmf.NMFProvider[] nMFProviderArray45 = new esa.mo.nmf.NMFProvider[] { nanoSatMOConnectorImpl19, nanoSatMOConnectorImpl21, nanoSatMOConnectorImpl27, nanoSatMOConnectorImpl32, nanoSatMOConnectorImpl41 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl46 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long47 = nanoSatMOConnectorImpl46.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl48 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long49 = nanoSatMOConnectorImpl48.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener50 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl48);
        nanoSatMOConnectorImpl48.initAdditionalServices();
        nanoSatMOConnectorImpl48.initAdditionalServices();
        java.lang.Long long53 = nanoSatMOConnectorImpl48.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl54 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long55 = nanoSatMOConnectorImpl54.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener56 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl54);
        nanoSatMOConnectorImpl54.initAdditionalServices();
        nanoSatMOConnectorImpl54.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl59 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long60 = nanoSatMOConnectorImpl59.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener61 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl59);
        nanoSatMOConnectorImpl59.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener63 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl59);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener64 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl59);
        nanoSatMOConnectorImpl59.initAdditionalServices();
        nanoSatMOConnectorImpl59.initAdditionalServices();
        java.lang.Long long67 = nanoSatMOConnectorImpl59.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl68 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long69 = nanoSatMOConnectorImpl68.getAppDirectoryId();
        java.lang.Long long70 = nanoSatMOConnectorImpl68.getAppDirectoryId();
        java.lang.Long long71 = nanoSatMOConnectorImpl68.getAppDirectoryId();
        esa.mo.nmf.NMFProvider[] nMFProviderArray72 = new esa.mo.nmf.NMFProvider[] { nanoSatMOConnectorImpl46, nanoSatMOConnectorImpl48, nanoSatMOConnectorImpl54, nanoSatMOConnectorImpl59, nanoSatMOConnectorImpl68 };
        esa.mo.nmf.NMFProvider[][] nMFProviderArray73 = new esa.mo.nmf.NMFProvider[][] { nMFProviderArray45, nMFProviderArray72 };
        try {
            esa.mo.nmf.NMFProvider[][] nMFProviderArray74 = longList3.toArray(nMFProviderArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[-1, 281475010265070]" + "'", str5.equals("[-1, 281475010265070]"));
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(uOctet15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(uRIItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNull(long43);
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertNotNull(nMFProviderArray45);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNull(long69);
        org.junit.Assert.assertNull(long70);
        org.junit.Assert.assertNull(long71);
        org.junit.Assert.assertNotNull(nMFProviderArray72);
        org.junit.Assert.assertNotNull(nMFProviderArray73);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier5 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider6 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList6 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer3 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.Union union5 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Double) (-1.0d));
        org.ccsds.moims.mo.mal.structures.URI uRI6 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI6 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream10 = uRIList8.parallelStream();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator11 = uRIList8.spliterator();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream12 = uRIList8.parallelStream();
        boolean boolean13 = uRIList8.isEmpty();
        boolean boolean14 = union5.equals((java.lang.Object) uRIList8);
        org.ccsds.moims.mo.mal.structures.OctetList octetList15 = new org.ccsds.moims.mo.mal.structures.OctetList();
        int int16 = octetList15.size();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray17 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList18 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18, uShortArray17);
        int int21 = uShortList18.lastIndexOf((java.lang.Object) 'a');
        boolean boolean22 = uShortList18.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray24 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort23 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList25 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25, uShortArray24);
        boolean boolean27 = uShortList18.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList25);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray32 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList33 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList33, uShortArray32);
        int int36 = uShortList33.indexOf((java.lang.Object) 1.0f);
        boolean boolean37 = strList30.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList33);
        boolean boolean38 = uShortList18.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList33);
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean40 = uShortList33.add(uShort39);
        boolean boolean41 = octetList15.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList33);
        java.util.Iterator<java.lang.Byte> byteItor42 = octetList15.iterator();
        java.lang.Long[] longArray48 = new java.lang.Long[] { 0L, 1L, 10L, 10L, 100L };
        java.util.ArrayList<java.lang.Long> longList49 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList49, longArray48);
        longList49.trimToSize();
        java.lang.Object[] objArray52 = longList49.toArray();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray53 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList54 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList54, uShortArray53);
        int int57 = uShortList54.lastIndexOf((java.lang.Object) 'a');
        boolean boolean58 = uShortList54.isEmpty();
        uShortList54.clear();
        uShortList54.trimToSize();
        boolean boolean61 = longList49.remove((java.lang.Object) uShortList54);
        boolean boolean62 = octetList15.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList54);
        boolean boolean63 = uShortList54.isEmpty();
        boolean boolean64 = uRIList8.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList54);
        try {
            java.lang.Boolean boolean66 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[10.0, -1.0]", (java.io.Serializable) uShortList54, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(uRIStream10);
        org.junit.Assert.assertNotNull(uRISpliterator11);
        org.junit.Assert.assertNotNull(uRIStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(uShortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(uShortArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(uShortArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(byteItor42);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(uShortArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray5 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList6 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList6, parameterInstanceArray5);
        try {
            java.lang.Boolean boolean9 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList6, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(parameterInstanceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger((long) 17);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uInteger1.getAreaVersion();
        java.lang.Integer int3 = uInteger1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uInteger1.getAreaVersion();
        java.lang.Long[] longArray10 = new java.lang.Long[] { 0L, 1L, 10L, 10L, 100L };
        java.util.ArrayList<java.lang.Long> longList11 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList11, longArray10);
        longList11.trimToSize();
        java.lang.Object[] objArray14 = longList11.toArray();
        boolean boolean15 = uInteger1.equals((java.lang.Object) longList11);
        java.lang.Float[] floatArray19 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList20 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList20, floatArray19);
        boolean boolean23 = floatList20.add((java.lang.Float) 10.0f);
        floatList20.trimToSize();
        boolean boolean25 = floatList20.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream26 = floatList20.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl27 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long28 = nanoSatMOConnectorImpl27.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener29 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl27);
        nanoSatMOConnectorImpl27.initAdditionalServices();
        java.lang.Long long31 = nanoSatMOConnectorImpl27.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener32 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl27);
        boolean boolean33 = floatList20.equals((java.lang.Object) nanoSatMOConnectorImpl27);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl34 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener35 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl34);
        java.lang.Long long36 = nanoSatMOConnectorImpl34.getAppDirectoryId();
        java.lang.Long long37 = nanoSatMOConnectorImpl34.getAppDirectoryId();
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray38 = new esa.mo.nmf.SimpleMonitoringInterface[] { nanoSatMOConnectorImpl27, nanoSatMOConnectorImpl34 };
        esa.mo.nmf.SimpleMonitoringInterface[][] simpleMonitoringInterfaceArray39 = new esa.mo.nmf.SimpleMonitoringInterface[][] { simpleMonitoringInterfaceArray38 };
        try {
            esa.mo.nmf.SimpleMonitoringInterface[][] simpleMonitoringInterfaceArray40 = longList11.toArray(simpleMonitoringInterfaceArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 12 + "'", int3.equals(12));
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(floatStream26);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray38);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray39);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long8 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            java.lang.Boolean boolean11 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("18446744073709551615", (java.io.Serializable) "[1, 10, 10, 100]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray4 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList5 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList5, parameterInstanceArray4);
        try {
            java.lang.Boolean boolean8 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList5, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(parameterInstanceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer7 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList5 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 10.0d, 0.0d, (-1.0d), (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
        boolean boolean8 = doubleList5.equals((java.lang.Object) 281475010265079L);
        int int9 = doubleList5.size();
        boolean boolean11 = doubleList5.equals((java.lang.Object) "[10.0, 0.0, -1.0, -1.0]");
        java.lang.Float[] floatArray16 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList17 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList17, floatArray16);
        int int20 = floatList17.lastIndexOf((java.lang.Object) (-1L));
        java.util.Iterator<java.lang.Float> floatItor21 = floatList17.iterator();
        org.ccsds.moims.mo.mal.structures.Identifier identifier22 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = identifier22.getAreaVersion();
        boolean boolean25 = identifier22.equals((java.lang.Object) 0);
        boolean boolean26 = floatList17.contains((java.lang.Object) identifier22);
        int int27 = doubleList5.indexOf((java.lang.Object) floatList17);
        doubleList5.add(4, (java.lang.Double) 0.0d);
        java.lang.Object obj31 = doubleList5.clone();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList33 = new org.ccsds.moims.mo.mal.structures.UShortList((int) ' ');
        boolean boolean34 = doubleList5.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList33);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        java.util.ListIterator<java.lang.Byte> byteItor41 = byteList38.listIterator((int) (short) 1);
        int int42 = byteList38.size();
        java.util.Iterator<java.lang.Byte> byteItor43 = byteList38.iterator();
        java.util.Iterator<java.lang.Byte> byteItor44 = byteList38.iterator();
        java.lang.Byte byte46 = byteList38.get(1);
        java.util.ListIterator<java.lang.Byte> byteItor47 = byteList38.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList48 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = longList48.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = longList48.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = longList48.getAreaNumber();
        longList48.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet54 = longList48.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl55 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long56 = nanoSatMOConnectorImpl55.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener57 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl55);
        nanoSatMOConnectorImpl55.initAdditionalServices();
        java.lang.Long long59 = nanoSatMOConnectorImpl55.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener60 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl55);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl61 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener62 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl61);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl63 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long64 = nanoSatMOConnectorImpl63.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener65 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl63);
        nanoSatMOConnectorImpl63.initAdditionalServices();
        nanoSatMOConnectorImpl63.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl68 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener69 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl68);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl70 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener71 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl70);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener72 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl70);
        java.lang.Long long73 = nanoSatMOConnectorImpl70.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray74 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl55, nanoSatMOConnectorImpl61, nanoSatMOConnectorImpl63, nanoSatMOConnectorImpl68, nanoSatMOConnectorImpl70 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray75 = longList48.toArray(nanoSatMOConnectorImplArray74);
        int int76 = byteList38.lastIndexOf((java.lang.Object) nanoSatMOConnectorImplArray74);
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray77 = uShortList33.toArray((esa.mo.nmf.SimpleMonitoringInterface[]) nanoSatMOConnectorImplArray74);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(floatItor21);
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(byteItor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(byteItor43);
        org.junit.Assert.assertNotNull(byteItor44);
        org.junit.Assert.assertTrue("'" + byte46 + "' != '" + (byte) 100 + "'", byte46.equals((byte) 100));
        org.junit.Assert.assertNotNull(byteItor47);
        org.junit.Assert.assertNotNull(uShort49);
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertNotNull(uOctet54);
        org.junit.Assert.assertNull(long56);
        org.junit.Assert.assertNull(long59);
        org.junit.Assert.assertNull(long64);
        org.junit.Assert.assertNull(long73);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray74);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray77);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[10.0, 0.0, -1.0, -1.0, 0.0]", "12");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.StringList stringList8 = new org.ccsds.moims.mo.mal.structures.StringList();
        stringList8.ensureCapacity(0);
        java.util.stream.Stream<java.lang.String> strStream11 = stringList8.stream();
        java.lang.Object[] objArray12 = stringList8.toArray();
        org.ccsds.moims.mo.mal.structures.URIList uRIList14 = new org.ccsds.moims.mo.mal.structures.URIList(65535);
        uRIList14.clear();
        java.lang.Object obj16 = uRIList14.clone();
        boolean boolean17 = stringList8.remove(obj16);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList19 = new org.ccsds.moims.mo.mal.structures.UShortList((int) ' ');
        java.lang.Integer int20 = uShortList19.getTypeShortForm();
        boolean boolean21 = uShortList19.isEmpty();
        java.lang.Long long22 = uShortList19.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = uShortList19.getAreaVersion();
        boolean boolean24 = stringList8.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList19);
        try {
            java.lang.Boolean boolean26 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[false, true]", (java.io.Serializable) uShortList19, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-10) + "'", int20.equals((-10)));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281475010265078L + "'", long22.equals(281475010265078L));
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long7 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider9 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier8 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long8 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails9 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[10.0, 0.0, -1.0, -1.0, 0.0]", "[16, 100, 10, 1, -18]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("2.81475010265084E14", "[10, 100]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Class<?> wildcardClass3 = nanoSatMOConnectorImpl0.getClass();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer4 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (-2), (-4), (int) (short) -1, (long) 10);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails14 = null; // flaky: nanoSatMOConnectorImpl7.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Class<?> wildcardClass3 = nanoSatMOConnectorImpl0.getClass();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime11 = new org.ccsds.moims.mo.mal.structures.FineTime(281475010265077L);
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = fineTime11.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = fineTime11.getAreaVersion();
        java.lang.String str14 = uOctet13.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = uOctet13.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = uOctet13.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element17 = uShort16.createElement();
        try {
            java.lang.Boolean boolean18 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[100, 100, 0]", (java.io.Serializable) uShort16);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "1" + "'", str14.equals("1"));
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(element17);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long7 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.io.Serializable serializable10 = null;
        try {
            java.lang.Boolean boolean12 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[false, true, false]", serializable10, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI4 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer13 = null; // flaky: nanoSatMOConnectorImpl7.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray6 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI5 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList7 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList7, uRIArray6);
        int int9 = uRIList7.size();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = org.ccsds.moims.mo.mal.structures.URIList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray12 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort10, uShort11 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList13, uShortArray12);
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = uShortList13.set((int) (short) 0, uShort16);
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = uShortList13.remove(0);
        int int20 = uRIList7.indexOf((java.lang.Object) 0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList22 = new org.ccsds.moims.mo.mal.structures.URIList((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = uRIList22.getAreaNumber();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator24 = uRIList22.spliterator();
        boolean boolean25 = uRIList7.equals((java.lang.Object) uRIList22);
        org.ccsds.moims.mo.mal.structures.URI uRI26 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = uRI26.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray28 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI26 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList29, uRIArray28);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor32 = uRIList29.listIterator((int) (short) 0);
        org.ccsds.moims.mo.mal.structures.URI uRI34 = new org.ccsds.moims.mo.mal.structures.URI();
        java.lang.Long long35 = uRI34.getShortForm();
        uRIList29.add(0, uRI34);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor37 = uRIList29.iterator();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator38 = uRIList29.spliterator();
        uRIList29.trimToSize();
        int int40 = uRIList29.size();
        org.ccsds.moims.mo.mal.structures.URI uRI41 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray42 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI41 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList43 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList43, uRIArray42);
        int int45 = uRIList43.size();
        org.ccsds.moims.mo.mal.structures.URI uRI46 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet47 = uRI46.getAreaVersion();
        boolean boolean48 = uRIList43.add(uRI46);
        org.ccsds.moims.mo.mal.structures.Element element49 = uRI46.createElement();
        boolean boolean50 = uRIList29.add(uRI46);
        java.lang.Integer int51 = uRI46.getTypeShortForm();
        java.lang.Long long52 = uRI46.getShortForm();
        boolean boolean53 = uRIList22.add(uRI46);
        boolean boolean55 = uRI46.equals((java.lang.Object) 281474993487875L);
        try {
            java.lang.Boolean boolean56 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[1]", (java.io.Serializable) boolean55);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(uRIArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(uShortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertNotNull(uRISpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertNotNull(uRIArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(uRIItor32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281474993487890L + "'", long35.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uRIItor37);
        org.junit.Assert.assertNotNull(uRISpliterator38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(uRIArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(uOctet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 18 + "'", int51.equals(18));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 281474993487890L + "'", long52.equals(281474993487890L));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList6 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = octetList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element2 = octetList0.createElement();
        java.lang.Integer int3 = octetList0.getTypeShortForm();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl4 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long5 = nanoSatMOConnectorImpl4.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl4);
        nanoSatMOConnectorImpl4.initAdditionalServices();
        java.lang.Long long8 = nanoSatMOConnectorImpl4.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl4);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl10 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long11 = nanoSatMOConnectorImpl10.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener12 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl10);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl13 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener14 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl13);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener15 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl13);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl16 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener17 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl16);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl18 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener19 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl18);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl20 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long21 = nanoSatMOConnectorImpl20.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl20);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray23 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener9, closeAppEventListener12, closeAppEventListener15, closeAppEventListener17, closeAppEventListener19, closeAppEventListener22 };
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray24 = octetList0.toArray(eventReceivedListenerArray23);
        java.lang.String str25 = octetList0.toString();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList26 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = integerList26.getAreaVersion();
        java.lang.Short[] shortArray31 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList32 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList32, shortArray31);
        boolean boolean35 = shortList32.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray40 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList41, uShortArray40);
        int int44 = uShortList41.indexOf((java.lang.Object) 1.0f);
        boolean boolean45 = strList38.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList41);
        boolean boolean46 = shortList32.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList41);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator47 = uShortList41.spliterator();
        boolean boolean48 = integerList26.contains((java.lang.Object) uShortList41);
        integerList26.clear();
        boolean boolean50 = octetList0.remove((java.lang.Object) integerList26);
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-7) + "'", int3.equals((-7)));
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray23);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[]" + "'", str25.equals("[]"));
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(uShortArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(uShortSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails5 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        java.lang.Long long13 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        try {
            nanoSatMOConnectorImpl7.writeCentralDirectoryServiceURI("281475010265077", "[1.0]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(long13);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI5 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.Union union11 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Long) 281474993487888L);
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = union11.getServiceNumber();
        java.lang.Integer int13 = union11.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList15 = new org.ccsds.moims.mo.mal.structures.URIList(65535);
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = uRIList15.getServiceNumber();
        java.lang.Short[] shortArray20 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList21 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList21, shortArray20);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray23 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList24 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList24, uShortArray23);
        int int27 = uShortList24.lastIndexOf((java.lang.Object) 'a');
        boolean boolean28 = uShortList24.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort29 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray30 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort29 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList31, uShortArray30);
        boolean boolean33 = uShortList24.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList31);
        boolean boolean34 = shortList21.remove((java.lang.Object) boolean33);
        shortList21.clear();
        org.ccsds.moims.mo.mal.structures.URI uRI36 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet37 = uRI36.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray38 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI36 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList39, uRIArray38);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor42 = uRIList39.listIterator((int) (short) 0);
        org.ccsds.moims.mo.mal.structures.URI uRI44 = new org.ccsds.moims.mo.mal.structures.URI();
        java.lang.Long long45 = uRI44.getShortForm();
        uRIList39.add(0, uRI44);
        int int47 = shortList21.indexOf((java.lang.Object) uRI44);
        java.lang.Integer int48 = uRI44.getTypeShortForm();
        boolean boolean49 = uRIList15.add(uRI44);
        boolean boolean50 = union11.equals((java.lang.Object) uRI44);
        try {
            java.lang.Boolean boolean52 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[255, 100, 0]", (java.io.Serializable) boolean50, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 13 + "'", int13.equals(13));
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(uShortArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uShortArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertNotNull(uOctet37);
        org.junit.Assert.assertNotNull(uRIArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(uRIItor42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 281474993487890L + "'", long45.equals(281474993487890L));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 18 + "'", int48.equals(18));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        java.lang.Double[] doubleArray19 = new java.lang.Double[] { (-1.0d), 0.0d, 0.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList20 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList20, doubleArray19);
        boolean boolean23 = doubleList20.contains((java.lang.Object) "hi!");
        doubleList20.add(2, (java.lang.Double) 0.0d);
        org.ccsds.moims.mo.mal.structures.Identifier identifier27 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet28 = identifier27.getAreaVersion();
        boolean boolean29 = doubleList20.contains((java.lang.Object) uOctet28);
        java.math.BigInteger bigInteger30 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong31 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger30);
        org.ccsds.moims.mo.mal.structures.ULong uLong32 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger30);
        java.lang.Integer int33 = uLong32.getTypeShortForm();
        java.math.BigInteger bigInteger34 = uLong32.getValue();
        java.lang.Long long35 = uLong32.getShortForm();
        java.math.BigInteger bigInteger36 = uLong32.getValue();
        int int37 = doubleList20.indexOf((java.lang.Object) bigInteger36);
        java.util.Spliterator<java.lang.Double> doubleSpliterator38 = doubleList20.spliterator();
        try {
            java.lang.Boolean boolean40 = null; // flaky: nanoSatMOConnectorImpl7.pushParameterValue("false", (java.io.Serializable) doubleList20, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(bigInteger30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 14 + "'", int33.equals(14));
        org.junit.Assert.assertNotNull(bigInteger34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281474993487886L + "'", long35.equals(281474993487886L));
        org.junit.Assert.assertNotNull(bigInteger36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(doubleSpliterator38);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long8 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI9 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long8 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("0.0", "281474993487881");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList9 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, 17, (int) (byte) 10, (-9), 0L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long7 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails9 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long7 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.StringList stringList9 = new org.ccsds.moims.mo.mal.structures.StringList();
        boolean boolean10 = stringList9.isEmpty();
        stringList9.ensureCapacity(14);
        java.util.stream.Stream<java.lang.String> strStream13 = stringList9.stream();
        java.util.ListIterator<java.lang.String> strItor14 = stringList9.listIterator();
        boolean boolean16 = stringList9.add("0");
        org.ccsds.moims.mo.mal.structures.ShortList shortList17 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = shortList17.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element19 = shortList17.createElement();
        boolean boolean20 = shortList17.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = shortList17.getAreaNumber();
        shortList17.clear();
        int int23 = shortList17.size();
        org.ccsds.moims.mo.mal.structures.ShortList shortList25 = new org.ccsds.moims.mo.mal.structures.ShortList(11);
        int int26 = shortList25.size();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = shortList25.getAreaNumber();
        boolean boolean28 = shortList17.contains((java.lang.Object) uShort27);
        boolean boolean29 = stringList9.remove((java.lang.Object) uShort27);
        try {
            java.lang.Boolean boolean30 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("281475010265078", (java.io.Serializable) stringList9);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShort21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (int) ' ', (int) (byte) 1, 13, (long) 1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("", "[16, 100, 10, 1, 65535]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier13 = nanoSatMOConnectorImpl7.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = null; // flaky: nanoSatMOConnectorImpl7.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF5 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = org.ccsds.moims.mo.mal.structures.UShort.ATTRIBUTE_AREA_NUMBER;
        int int9 = uShort8.getValue();
        try {
            java.lang.Boolean boolean11 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1, 281475010265070, 281474993487873]", (java.io.Serializable) int9, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.ULong uLong7 = new org.ccsds.moims.mo.mal.structures.ULong();
        java.lang.Long long8 = uLong7.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = uLong7.getAreaVersion();
        java.lang.Long long10 = uOctet9.getShortForm();
        try {
            java.lang.Boolean boolean11 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[, ]", (java.io.Serializable) uOctet9);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487886L + "'", long8.equals(281474993487886L));
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487880L + "'", long10.equals(281474993487880L));
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.URI uRI8 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray9 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI8 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList10, uRIArray9);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream12 = uRIList10.parallelStream();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator13 = uRIList10.spliterator();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream14 = uRIList10.stream();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream15 = uRIList10.stream();
        boolean boolean16 = uRIList10.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray17 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList18 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18, uShortArray17);
        int int21 = uShortList18.lastIndexOf((java.lang.Object) 'a');
        boolean boolean22 = uShortList18.isEmpty();
        uShortList18.clear();
        uShortList18.trimToSize();
        boolean boolean25 = uRIList10.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        java.lang.Float[] floatArray27 = new java.lang.Float[] { 0.0f };
        java.util.ArrayList<java.lang.Float> floatList28 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList28, floatArray27);
        java.util.Spliterator<java.lang.Float> floatSpliterator30 = floatList28.spliterator();
        boolean boolean31 = uRIList10.remove((java.lang.Object) floatList28);
        try {
            java.lang.Boolean boolean33 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("281474993487886", (java.io.Serializable) uRIList10, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(uRIArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(uRIStream12);
        org.junit.Assert.assertNotNull(uRISpliterator13);
        org.junit.Assert.assertNotNull(uRIStream14);
        org.junit.Assert.assertNotNull(uRIStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(uShortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(floatSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList14 = nanoSatMOConnectorImpl7.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails7 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI5 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        java.util.ListIterator<java.lang.Byte> byteItor6 = byteList3.listIterator((int) (short) 1);
        int int7 = byteList3.size();
        java.util.Iterator<java.lang.Byte> byteItor8 = byteList3.iterator();
        java.util.Iterator<java.lang.Byte> byteItor9 = byteList3.iterator();
        java.lang.Byte byte11 = byteList3.get(1);
        java.util.ListIterator<java.lang.Byte> byteItor12 = byteList3.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList13 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = longList13.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = longList13.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = longList13.getAreaNumber();
        longList13.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet19 = longList13.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl20 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long21 = nanoSatMOConnectorImpl20.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl20);
        nanoSatMOConnectorImpl20.initAdditionalServices();
        java.lang.Long long24 = nanoSatMOConnectorImpl20.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener25 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl20);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl26 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener27 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl28 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long29 = nanoSatMOConnectorImpl28.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener30 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        nanoSatMOConnectorImpl28.initAdditionalServices();
        nanoSatMOConnectorImpl28.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl33 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl33);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl35 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener36 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl35);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl35);
        java.lang.Long long38 = nanoSatMOConnectorImpl35.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray39 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl20, nanoSatMOConnectorImpl26, nanoSatMOConnectorImpl28, nanoSatMOConnectorImpl33, nanoSatMOConnectorImpl35 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray40 = longList13.toArray(nanoSatMOConnectorImplArray39);
        int int41 = byteList3.lastIndexOf((java.lang.Object) nanoSatMOConnectorImplArray39);
        java.lang.String str42 = byteList3.toString();
        boolean boolean43 = byteList3.isEmpty();
        try {
            java.util.List<java.lang.Byte> byteList46 = byteList3.subList(2, (-11));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(2) > toIndex(-11)");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(byteItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteItor8);
        org.junit.Assert.assertNotNull(byteItor9);
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 100 + "'", byte11.equals((byte) 100));
        org.junit.Assert.assertNotNull(byteItor12);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(uOctet19);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray39);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "[100, 100]" + "'", str42.equals("[100, 100]"));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = union1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = union1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = union1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList6 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = doubleList6.getAreaNumber();
        int int8 = doubleList6.size();
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList13 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList13, shortArray12);
        boolean boolean16 = shortList13.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        int int25 = uShortList22.indexOf((java.lang.Object) 1.0f);
        boolean boolean26 = strList19.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22);
        boolean boolean27 = shortList13.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22);
        shortList13.clear();
        boolean boolean30 = shortList13.add((java.lang.Short) (short) 0);
        int int31 = shortList13.size();
        boolean boolean32 = shortList13.isEmpty();
        boolean boolean33 = doubleList6.remove((java.lang.Object) shortList13);
        boolean boolean34 = union1.equals((java.lang.Object) shortList13);
        boolean boolean36 = shortList13.add((java.lang.Short) (short) 1);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { 16, 100, 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList42 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        int int45 = intList42.indexOf((java.lang.Object) 0);
        java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList49 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList49, byteArray48);
        java.util.ListIterator<java.lang.Byte> byteItor52 = byteList49.listIterator((int) (short) 1);
        int int53 = byteList49.size();
        int int54 = intList42.lastIndexOf((java.lang.Object) int53);
        java.util.ListIterator<java.lang.Integer> intItor55 = intList42.listIterator();
        java.util.stream.Stream<java.lang.Integer> intStream56 = intList42.stream();
        org.ccsds.moims.mo.mal.structures.OctetList octetList57 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = octetList57.getServiceNumber();
        boolean boolean59 = intList42.contains((java.lang.Object) octetList57);
        java.lang.Integer int60 = octetList57.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort61 = octetList57.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.LongList longList62 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort63 = longList62.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort64 = longList62.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = longList62.getAreaNumber();
        longList62.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet68 = longList62.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl69 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long70 = nanoSatMOConnectorImpl69.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener71 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl69);
        nanoSatMOConnectorImpl69.initAdditionalServices();
        java.lang.Long long73 = nanoSatMOConnectorImpl69.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener74 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl69);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl75 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener76 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl75);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl77 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long78 = nanoSatMOConnectorImpl77.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener79 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl77);
        nanoSatMOConnectorImpl77.initAdditionalServices();
        nanoSatMOConnectorImpl77.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl82 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener83 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl82);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl84 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener85 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl84);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener86 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl84);
        java.lang.Long long87 = nanoSatMOConnectorImpl84.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray88 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl69, nanoSatMOConnectorImpl75, nanoSatMOConnectorImpl77, nanoSatMOConnectorImpl82, nanoSatMOConnectorImpl84 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray89 = longList62.toArray(nanoSatMOConnectorImplArray88);
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray90 = octetList57.toArray((esa.mo.nmf.SimpleMonitoringInterface[]) nanoSatMOConnectorImplArray88);
        try {
            esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray91 = shortList13.toArray((esa.mo.nmf.SimpleMonitoringInterface[]) nanoSatMOConnectorImplArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertNotNull(byteItor52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(intItor55);
        org.junit.Assert.assertNotNull(intStream56);
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-7) + "'", int60.equals((-7)));
        org.junit.Assert.assertNotNull(uShort61);
        org.junit.Assert.assertNotNull(uShort63);
        org.junit.Assert.assertNotNull(uShort64);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertNotNull(uOctet68);
        org.junit.Assert.assertNull(long70);
        org.junit.Assert.assertNull(long73);
        org.junit.Assert.assertNull(long78);
        org.junit.Assert.assertNull(long87);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray88);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray89);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray90);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails8 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[-1.0, 0.0, 0.0, 0.0, 10.0]", "-11");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails3 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
        boolean boolean2 = stringList0.equals((java.lang.Object) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = stringList0.getAreaVersion();
        stringList0.clear();
        java.lang.Short[] shortArray8 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList9 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList9, shortArray8);
        boolean boolean12 = shortList9.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray17 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList18 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18, uShortArray17);
        int int21 = uShortList18.indexOf((java.lang.Object) 1.0f);
        boolean boolean22 = strList15.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        boolean boolean23 = shortList9.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        boolean boolean24 = stringList0.contains((java.lang.Object) boolean23);
        java.lang.String str25 = stringList0.toString();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl26 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long27 = nanoSatMOConnectorImpl26.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener28 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        nanoSatMOConnectorImpl26.initAdditionalServices();
        java.lang.Long long30 = nanoSatMOConnectorImpl26.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        boolean boolean32 = stringList0.contains((java.lang.Object) nanoSatMOConnectorImpl26);
        boolean boolean33 = stringList0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(uShortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[]" + "'", str25.equals("[]"));
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray7 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList8 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList8, parameterInstanceArray7);
        try {
            java.lang.Boolean boolean11 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList8, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(parameterInstanceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer10 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = octetList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element2 = octetList0.createElement();
        java.lang.Integer int3 = octetList0.getTypeShortForm();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl4 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long5 = nanoSatMOConnectorImpl4.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl4);
        nanoSatMOConnectorImpl4.initAdditionalServices();
        java.lang.Long long8 = nanoSatMOConnectorImpl4.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl4);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl10 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long11 = nanoSatMOConnectorImpl10.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener12 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl10);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl13 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener14 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl13);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener15 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl13);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl16 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener17 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl16);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl18 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener19 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl18);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl20 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long21 = nanoSatMOConnectorImpl20.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl20);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray23 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener9, closeAppEventListener12, closeAppEventListener15, closeAppEventListener17, closeAppEventListener19, closeAppEventListener22 };
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray24 = octetList0.toArray(eventReceivedListenerArray23);
        java.lang.String str25 = octetList0.toString();
        java.lang.String str26 = octetList0.toString();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-7) + "'", int3.equals((-7)));
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray23);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[]" + "'", str25.equals("[]"));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]" + "'", str26.equals("[]"));
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.OctetList octetList8 = new org.ccsds.moims.mo.mal.structures.OctetList(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList8.getServiceNumber();
        java.lang.Object obj10 = octetList8.clone();
        try {
            java.lang.Boolean boolean11 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[, , , ]", (java.io.Serializable) octetList8);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        java.util.ListIterator<java.lang.Byte> byteItor6 = byteList3.listIterator((int) (short) 1);
        int int7 = byteList3.size();
        int int9 = byteList3.indexOf((java.lang.Object) (short) 100);
        org.ccsds.moims.mo.mal.structures.LongList longList10 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = longList10.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = longList10.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = longList10.getAreaNumber();
        longList10.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = longList10.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl17 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long18 = nanoSatMOConnectorImpl17.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener19 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        nanoSatMOConnectorImpl17.initAdditionalServices();
        java.lang.Long long21 = nanoSatMOConnectorImpl17.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl23 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener24 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl23);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl25 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long26 = nanoSatMOConnectorImpl25.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener27 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        nanoSatMOConnectorImpl25.initAdditionalServices();
        nanoSatMOConnectorImpl25.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl30 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl30);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        java.lang.Long long35 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray36 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl17, nanoSatMOConnectorImpl23, nanoSatMOConnectorImpl25, nanoSatMOConnectorImpl30, nanoSatMOConnectorImpl32 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray37 = longList10.toArray(nanoSatMOConnectorImplArray36);
        int int38 = longList10.size();
        boolean boolean39 = byteList3.remove((java.lang.Object) longList10);
        try {
            longList10.add((int) (short) 10, (java.lang.Long) 281475010265083L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(byteItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray36);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray7 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList8 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList8, parameterInstanceArray7);
        try {
            java.lang.Boolean boolean11 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList8, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(parameterInstanceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (int) (short) 10, (int) '4', (int) '4', (long) 8);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.math.BigInteger bigInteger6 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong7 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger6);
        java.lang.Long long8 = uLong7.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = uLong7.getAreaVersion();
        java.lang.String str10 = uLong7.toString();
        java.lang.Integer int11 = uLong7.getTypeShortForm();
        java.lang.String str12 = uLong7.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = uLong7.getServiceNumber();
        try {
            java.lang.Boolean boolean14 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[16, 10, 1]", (java.io.Serializable) uShort13);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(bigInteger6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487886L + "'", long8.equals(281474993487886L));
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "18446744073709551615" + "'", str10.equals("18446744073709551615"));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 14 + "'", int11.equals(14));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "18446744073709551615" + "'", str12.equals("18446744073709551615"));
        org.junit.Assert.assertNotNull(uShort13);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI4 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider4 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.OctetList octetList4 = new org.ccsds.moims.mo.mal.structures.OctetList();
        int int5 = octetList4.size();
        org.ccsds.moims.mo.mal.structures.Element element6 = octetList4.createElement();
        boolean boolean7 = octetList4.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = octetList4.getServiceNumber();
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList13 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList13, shortArray12);
        boolean boolean16 = shortList13.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        int int25 = uShortList22.indexOf((java.lang.Object) 1.0f);
        boolean boolean26 = strList19.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22);
        boolean boolean27 = shortList13.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22);
        java.util.stream.Stream<java.lang.Short> shortStream28 = shortList13.stream();
        boolean boolean29 = octetList4.equals((java.lang.Object) shortStream28);
        org.ccsds.moims.mo.mal.structures.URI uRI30 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray31 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI30 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList32, uRIArray31);
        int int34 = uRIList32.size();
        org.ccsds.moims.mo.mal.structures.URI uRI35 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet36 = uRI35.getAreaVersion();
        boolean boolean37 = uRIList32.add(uRI35);
        java.lang.Object obj38 = null;
        int int39 = uRIList32.lastIndexOf(obj38);
        org.ccsds.moims.mo.mal.structures.Identifier identifier40 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = identifier40.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort42 = identifier40.getServiceNumber();
        java.lang.String str43 = uShort42.toString();
        boolean boolean44 = uRIList32.remove((java.lang.Object) str43);
        boolean boolean45 = octetList4.contains((java.lang.Object) str43);
        java.util.ListIterator<java.lang.Byte> byteItor47 = octetList4.listIterator((int) (short) 0);
        octetList4.ensureCapacity((-18));
        try {
            java.lang.Boolean boolean50 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0, 0]", (java.io.Serializable) (-18));
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(shortStream28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(uRIArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(uOctet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertNotNull(uShort42);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "0" + "'", str43.equals("0"));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(byteItor47);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "[-1, 281475010265070]", "hi!" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Spliterator<java.lang.String> strSpliterator6 = strList4.spliterator();
        java.lang.Object obj7 = strList4.clone();
        org.ccsds.moims.mo.mal.structures.Union union9 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Boolean) true);
        java.lang.Long long10 = union9.getShortForm();
        int int11 = strList4.indexOf((java.lang.Object) long10);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray12 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList13, uShortArray12);
        int int16 = uShortList13.lastIndexOf((java.lang.Object) 'a');
        boolean boolean17 = uShortList13.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray19 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort18 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList20 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20, uShortArray19);
        boolean boolean22 = uShortList13.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20);
        boolean boolean23 = strList4.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20);
        java.lang.String str24 = uShortList20.toString();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl25 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long26 = nanoSatMOConnectorImpl25.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener27 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        nanoSatMOConnectorImpl25.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener29 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener30 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray31 = new esa.mo.nmf.SimpleMonitoringInterface[] { nanoSatMOConnectorImpl25 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long33 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        nanoSatMOConnectorImpl32.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener36 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray38 = new esa.mo.nmf.SimpleMonitoringInterface[] { nanoSatMOConnectorImpl32 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl39 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long40 = nanoSatMOConnectorImpl39.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener41 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        nanoSatMOConnectorImpl39.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener43 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener44 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray45 = new esa.mo.nmf.SimpleMonitoringInterface[] { nanoSatMOConnectorImpl39 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl46 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long47 = nanoSatMOConnectorImpl46.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener48 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl46);
        nanoSatMOConnectorImpl46.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener50 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl46);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener51 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl46);
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray52 = new esa.mo.nmf.SimpleMonitoringInterface[] { nanoSatMOConnectorImpl46 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl53 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long54 = nanoSatMOConnectorImpl53.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener55 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl53);
        nanoSatMOConnectorImpl53.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener57 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl53);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener58 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl53);
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray59 = new esa.mo.nmf.SimpleMonitoringInterface[] { nanoSatMOConnectorImpl53 };
        esa.mo.nmf.SimpleMonitoringInterface[][] simpleMonitoringInterfaceArray60 = new esa.mo.nmf.SimpleMonitoringInterface[][] { simpleMonitoringInterfaceArray31, simpleMonitoringInterfaceArray38, simpleMonitoringInterfaceArray45, simpleMonitoringInterfaceArray52, simpleMonitoringInterfaceArray59 };
        esa.mo.nmf.SimpleMonitoringInterface[][][] simpleMonitoringInterfaceArray61 = new esa.mo.nmf.SimpleMonitoringInterface[][][] { simpleMonitoringInterfaceArray60 };
        try {
            esa.mo.nmf.SimpleMonitoringInterface[][][] simpleMonitoringInterfaceArray62 = uShortList20.toArray(simpleMonitoringInterfaceArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(strSpliterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487874L + "'", long10.equals(281474993487874L));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(uShortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uShortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "[0]" + "'", str24.equals("[0]"));
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray31);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray38);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray45);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray52);
        org.junit.Assert.assertNull(long54);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray59);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray60);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray61);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider3 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long[] longArray11 = new java.lang.Long[] { 0L, 1L, 10L, 10L, 100L };
        java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
        longList12.trimToSize();
        java.lang.Long long16 = longList12.remove((int) (byte) 0);
        java.lang.String str17 = longList12.toString();
        java.lang.Float[] floatArray22 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList23 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList23, floatArray22);
        int int26 = floatList23.lastIndexOf((java.lang.Object) (-1L));
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.lang.Object obj31 = strList29.clone();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray32 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList33 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList33, uShortArray32);
        int int36 = uShortList33.lastIndexOf((java.lang.Object) 'a');
        boolean boolean37 = uShortList33.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort38 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray39 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort38 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList40 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList40, uShortArray39);
        boolean boolean42 = uShortList33.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList40);
        boolean boolean43 = strList29.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList40);
        boolean boolean44 = floatList23.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList40);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream45 = uShortList40.stream();
        boolean boolean46 = longList12.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList40);
        java.lang.Long[] longArray49 = new java.lang.Long[] { (-1L), 281475010265070L };
        java.util.ArrayList<java.lang.Long> longList50 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList50, longArray49);
        java.lang.String str52 = longList50.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = org.ccsds.moims.mo.mal.structures.BooleanList.SERVICE_SHORT_FORM;
        int int54 = longList50.lastIndexOf((java.lang.Object) uShort53);
        boolean boolean56 = longList50.add((java.lang.Long) 281474993487873L);
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = org.ccsds.moims.mo.mal.structures.URIList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray59 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort57, uShort58 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList60 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList60, uShortArray59);
        org.ccsds.moims.mo.mal.structures.UShort uShort63 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort uShort64 = uShortList60.set((int) (short) 0, uShort63);
        boolean boolean65 = longList50.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList60);
        java.util.Iterator<java.lang.Long> longItor66 = longList50.iterator();
        int int67 = longList12.lastIndexOf((java.lang.Object) longItor66);
        java.util.Iterator<java.lang.Long> longItor68 = longList12.iterator();
        try {
            java.lang.Boolean boolean69 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("281474993487875", (java.io.Serializable) longList12);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16.equals(0L));
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "[1, 10, 10, 100]" + "'", str17.equals("[1, 10, 10, 100]"));
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(uShortArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uShortArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(uShortStream45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "[-1, 281475010265070]" + "'", str52.equals("[-1, 281475010265070]"));
        org.junit.Assert.assertNotNull(uShort53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uShort57);
        org.junit.Assert.assertNotNull(uShortArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(uShort64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(longItor66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(longItor68);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray3 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList4 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList4, parameterInstanceArray3);
        try {
            java.lang.Boolean boolean7 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList4, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(parameterInstanceArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails3 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray4 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList5 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList5, parameterInstanceArray4);
        try {
            java.lang.Boolean boolean8 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList5, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(parameterInstanceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long8 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF9 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.FloatList floatList10 = new org.ccsds.moims.mo.mal.structures.FloatList(13);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = floatList10.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = floatList10.getServiceNumber();
        java.util.Spliterator<java.lang.Float> floatSpliterator13 = floatList10.spliterator();
        try {
            java.lang.Boolean boolean14 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[16, 10, 1]", (java.io.Serializable) floatList10);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(floatSpliterator13);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        java.lang.Long long13 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = null; // flaky: nanoSatMOConnectorImpl7.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(long13);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener7 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long8 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList8 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, 7, 9, (-4), (long) 13);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("-9", "17");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.LongList longList7 = new org.ccsds.moims.mo.mal.structures.LongList((int) (byte) 10);
        java.util.ListIterator<java.lang.Long> longItor8 = longList7.listIterator();
        try {
            java.lang.Boolean boolean10 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("17", (java.io.Serializable) longList7, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(longItor8);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier2 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList(13);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = floatList11.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = floatList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element14 = floatList11.createElement();
        java.util.stream.Stream<java.lang.Float> floatStream15 = floatList11.stream();
        java.lang.String str16 = floatList11.toString();
        try {
            java.lang.Boolean boolean17 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[100, 100]", (java.io.Serializable) str16);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(floatStream15);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[]" + "'", str16.equals("[]"));
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.io.Serializable serializable6 = null;
        try {
            java.lang.Boolean boolean7 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("", serializable6);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long7 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList9 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.Duration duration4 = new org.ccsds.moims.mo.mal.structures.Duration();
        double double5 = duration4.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = duration4.getServiceNumber();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray11 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList12, uShortArray11);
        int int15 = uShortList12.indexOf((java.lang.Object) 1.0f);
        boolean boolean16 = strList9.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList12);
        java.util.ListIterator<java.lang.String> strItor17 = strList9.listIterator();
        int int18 = strList9.size();
        java.util.Spliterator<java.lang.String> strSpliterator19 = strList9.spliterator();
        boolean boolean20 = duration4.equals((java.lang.Object) strSpliterator19);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet21 = duration4.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = duration4.getAreaNumber();
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.lang.Object obj27 = strList25.clone();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray28 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList29, uShortArray28);
        int int32 = uShortList29.lastIndexOf((java.lang.Object) 'a');
        boolean boolean33 = uShortList29.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort34 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray35 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort34 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList36 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList36, uShortArray35);
        boolean boolean38 = uShortList29.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList36);
        boolean boolean39 = strList25.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList36);
        java.lang.Object obj40 = strList25.clone();
        java.lang.String str41 = strList25.toString();
        boolean boolean42 = strList25.isEmpty();
        boolean boolean43 = duration4.equals((java.lang.Object) strList25);
        org.ccsds.moims.mo.mal.structures.FloatList floatList45 = new org.ccsds.moims.mo.mal.structures.FloatList(17);
        java.lang.Long long46 = floatList45.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element47 = floatList45.createElement();
        boolean boolean48 = strList25.contains((java.lang.Object) element47);
        try {
            java.lang.Boolean boolean49 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[1]", (java.io.Serializable) strList25);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(uShortArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(uOctet21);
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(uShortArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(uShortArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "[]" + "'", str41.equals("[]"));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 281475010265084L + "'", long46.equals(281475010265084L));
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray19 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList20 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList20, parameterInstanceArray19);
        try {
            java.lang.Boolean boolean23 = null; // flaky: nanoSatMOConnectorImpl11.pushMultipleParameterValues(parameterInstanceList20, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(parameterInstanceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[-1.0, 0.0, 0.0, 10.0]", "10");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, 65535, (-9), 13, 281475010265083L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Class<?> wildcardClass3 = nanoSatMOConnectorImpl0.getClass();
        org.ccsds.moims.mo.mal.structures.StringList stringList5 = new org.ccsds.moims.mo.mal.structures.StringList();
        boolean boolean7 = stringList5.equals((java.lang.Object) (byte) -1);
        java.lang.Object[] objArray8 = stringList5.toArray();
        try {
            java.lang.Boolean boolean9 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[1, 10, 100]", (java.io.Serializable) objArray8);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertNotNull(objArray8);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener4 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.LongList longList9 = new org.ccsds.moims.mo.mal.structures.LongList(16);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = longList9.getServiceNumber();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long16 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener17 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl18 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener19 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl18);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener20 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl18);
        java.lang.Long long21 = nanoSatMOConnectorImpl18.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl22 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener23 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl22);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener24 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl22);
        java.lang.Long long25 = nanoSatMOConnectorImpl22.getAppDirectoryId();
        nanoSatMOConnectorImpl22.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl27 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        nanoSatMOConnectorImpl27.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl29 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long30 = nanoSatMOConnectorImpl29.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl29);
        nanoSatMOConnectorImpl29.initAdditionalServices();
        nanoSatMOConnectorImpl29.initAdditionalServices();
        java.lang.Long long34 = nanoSatMOConnectorImpl29.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener35 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl29);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray36 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl11, nanoSatMOConnectorImpl18, nanoSatMOConnectorImpl22, nanoSatMOConnectorImpl27, nanoSatMOConnectorImpl29 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray37 = longList9.toArray(nanoSatMOConnectorImplArray36);
        java.lang.Long long38 = longList9.getShortForm();
        try {
            java.lang.Boolean boolean40 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[10.0, 0.0, -1.0, -1.0, 0.0, 0.0]", (java.io.Serializable) long38, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray36);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 281475010265075L + "'", long38.equals(281475010265075L));
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) 'a');
        java.lang.Object obj2 = booleanList1.clone();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList3 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = integerList3.getAreaVersion();
        java.lang.Short[] shortArray8 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList9 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList9, shortArray8);
        boolean boolean12 = shortList9.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray17 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList18 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18, uShortArray17);
        int int21 = uShortList18.indexOf((java.lang.Object) 1.0f);
        boolean boolean22 = strList15.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        boolean boolean23 = shortList9.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator24 = uShortList18.spliterator();
        boolean boolean25 = integerList3.contains((java.lang.Object) uShortList18);
        boolean boolean26 = booleanList1.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        java.lang.Long long27 = booleanList1.getShortForm();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray32 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList33 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList33, uShortArray32);
        int int36 = uShortList33.indexOf((java.lang.Object) 1.0f);
        boolean boolean37 = strList30.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList33);
        boolean boolean39 = uShortList33.remove((java.lang.Object) (byte) 1);
        org.ccsds.moims.mo.mal.structures.URI uRI40 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray41 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI40 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList42 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList42, uRIArray41);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream44 = uRIList42.parallelStream();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator45 = uRIList42.spliterator();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream46 = uRIList42.parallelStream();
        boolean boolean47 = uShortList33.remove((java.lang.Object) uRIStream46);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray48 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList49 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList49, uShortArray48);
        int int52 = uShortList49.lastIndexOf((java.lang.Object) 'a');
        boolean boolean53 = uShortList33.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList49);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray54 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList55 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList55, uShortArray54);
        int int58 = uShortList55.lastIndexOf((java.lang.Object) 'a');
        boolean boolean59 = uShortList55.isEmpty();
        uShortList55.clear();
        uShortList55.trimToSize();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor62 = uShortList55.iterator();
        boolean boolean63 = uShortList33.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList55);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream64 = uShortList55.stream();
        boolean boolean65 = booleanList1.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList55);
        org.ccsds.moims.mo.mal.structures.LongList longList66 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort67 = longList66.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort68 = longList66.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = longList66.getAreaNumber();
        longList66.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet72 = longList66.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl73 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long74 = nanoSatMOConnectorImpl73.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener75 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl73);
        nanoSatMOConnectorImpl73.initAdditionalServices();
        java.lang.Long long77 = nanoSatMOConnectorImpl73.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener78 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl73);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl79 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener80 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl79);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl81 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long82 = nanoSatMOConnectorImpl81.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener83 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl81);
        nanoSatMOConnectorImpl81.initAdditionalServices();
        nanoSatMOConnectorImpl81.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl86 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener87 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl86);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl88 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener89 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl88);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener90 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl88);
        java.lang.Long long91 = nanoSatMOConnectorImpl88.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray92 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl73, nanoSatMOConnectorImpl79, nanoSatMOConnectorImpl81, nanoSatMOConnectorImpl86, nanoSatMOConnectorImpl88 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray93 = longList66.toArray(nanoSatMOConnectorImplArray92);
        esa.mo.nmf.NMFProvider[] nMFProviderArray94 = uShortList55.toArray((esa.mo.nmf.NMFProvider[]) nanoSatMOConnectorImplArray93);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(uShortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uShortSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 281475010265086L + "'", long27.equals(281475010265086L));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(uShortArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(uRIArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(uRIStream44);
        org.junit.Assert.assertNotNull(uRISpliterator45);
        org.junit.Assert.assertNotNull(uRIStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertNotNull(uShortArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(uShortArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(uShortItor62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertNotNull(uShortStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(uShort67);
        org.junit.Assert.assertNotNull(uShort68);
        org.junit.Assert.assertNotNull(uShort69);
        org.junit.Assert.assertNotNull(uOctet72);
        org.junit.Assert.assertNull(long74);
        org.junit.Assert.assertNull(long77);
        org.junit.Assert.assertNull(long82);
        org.junit.Assert.assertNull(long91);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray92);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray93);
        org.junit.Assert.assertNotNull(nMFProviderArray94);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF7 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = longList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = longList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = longList0.getAreaNumber();
        longList0.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = longList0.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener12 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl13 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener14 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl13);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl15 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long16 = nanoSatMOConnectorImpl15.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener17 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl15);
        nanoSatMOConnectorImpl15.initAdditionalServices();
        nanoSatMOConnectorImpl15.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl20 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener21 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl20);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl22 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener23 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl22);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener24 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl22);
        java.lang.Long long25 = nanoSatMOConnectorImpl22.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray26 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl7, nanoSatMOConnectorImpl13, nanoSatMOConnectorImpl15, nanoSatMOConnectorImpl20, nanoSatMOConnectorImpl22 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray27 = longList0.toArray(nanoSatMOConnectorImplArray26);
        int int28 = longList0.size();
        longList0.ensureCapacity((int) '#');
        java.lang.String str31 = longList0.toString();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray26);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "[]" + "'", str31.equals("[]"));
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener19 = nanoSatMOConnectorImpl11.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
        boolean boolean2 = stringList0.equals((java.lang.Object) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = stringList0.getAreaVersion();
        stringList0.clear();
        java.lang.Short[] shortArray8 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList9 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList9, shortArray8);
        boolean boolean12 = shortList9.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray17 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList18 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18, uShortArray17);
        int int21 = uShortList18.indexOf((java.lang.Object) 1.0f);
        boolean boolean22 = strList15.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        boolean boolean23 = shortList9.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        boolean boolean24 = stringList0.contains((java.lang.Object) boolean23);
        java.lang.String str25 = stringList0.toString();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl26 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long27 = nanoSatMOConnectorImpl26.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener28 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        nanoSatMOConnectorImpl26.initAdditionalServices();
        java.lang.Long long30 = nanoSatMOConnectorImpl26.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        boolean boolean32 = stringList0.contains((java.lang.Object) nanoSatMOConnectorImpl26);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = null; // flaky: nanoSatMOConnectorImpl26.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(uShortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[]" + "'", str25.equals("[]"));
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Byte) (byte) 100);
        java.lang.Long long2 = union1.getShortForm();
        java.lang.Integer int3 = union1.getTypeShortForm();
        java.lang.Byte byte4 = union1.getOctetValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = union1.getServiceNumber();
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
        java.util.ListIterator<java.lang.Byte> byteItor12 = byteList9.listIterator((int) (short) 1);
        int int13 = byteList9.size();
        int int15 = byteList9.indexOf((java.lang.Object) (short) 100);
        org.ccsds.moims.mo.mal.structures.LongList longList16 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = longList16.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = longList16.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = longList16.getAreaNumber();
        longList16.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet22 = longList16.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl23 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long24 = nanoSatMOConnectorImpl23.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener25 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl23);
        nanoSatMOConnectorImpl23.initAdditionalServices();
        java.lang.Long long27 = nanoSatMOConnectorImpl23.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener28 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl23);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl29 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener30 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl29);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl31 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long32 = nanoSatMOConnectorImpl31.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl31);
        nanoSatMOConnectorImpl31.initAdditionalServices();
        nanoSatMOConnectorImpl31.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl36 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl36);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl38 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener39 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl38);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener40 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl38);
        java.lang.Long long41 = nanoSatMOConnectorImpl38.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray42 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl23, nanoSatMOConnectorImpl29, nanoSatMOConnectorImpl31, nanoSatMOConnectorImpl36, nanoSatMOConnectorImpl38 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray43 = longList16.toArray(nanoSatMOConnectorImplArray42);
        int int44 = longList16.size();
        boolean boolean45 = byteList9.remove((java.lang.Object) longList16);
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = longList16.getServiceNumber();
        boolean boolean47 = union1.equals((java.lang.Object) uShort46);
        try {
            java.lang.Float float48 = union1.getFloatValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Byte cannot be cast to java.lang.Float");
        } catch (java.lang.ClassCastException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487879L + "'", long2.equals(281474993487879L));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 7 + "'", int3.equals(7));
        org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 100 + "'", byte4.equals((byte) 100));
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(byteItor12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(uOctet22);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray42);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        java.util.ListIterator<java.lang.Byte> byteItor6 = byteList3.listIterator((int) (short) 1);
        int int7 = byteList3.size();
        int int9 = byteList3.indexOf((java.lang.Object) (short) 100);
        org.ccsds.moims.mo.mal.structures.LongList longList10 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = longList10.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = longList10.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = longList10.getAreaNumber();
        longList10.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = longList10.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl17 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long18 = nanoSatMOConnectorImpl17.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener19 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        nanoSatMOConnectorImpl17.initAdditionalServices();
        java.lang.Long long21 = nanoSatMOConnectorImpl17.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl23 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener24 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl23);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl25 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long26 = nanoSatMOConnectorImpl25.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener27 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        nanoSatMOConnectorImpl25.initAdditionalServices();
        nanoSatMOConnectorImpl25.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl30 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl30);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        java.lang.Long long35 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray36 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl17, nanoSatMOConnectorImpl23, nanoSatMOConnectorImpl25, nanoSatMOConnectorImpl30, nanoSatMOConnectorImpl32 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray37 = longList10.toArray(nanoSatMOConnectorImplArray36);
        int int38 = longList10.size();
        boolean boolean39 = byteList3.remove((java.lang.Object) longList10);
        org.ccsds.moims.mo.mal.structures.UShort uShort40 = longList10.getServiceNumber();
        int int41 = longList10.size();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(byteItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray36);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(uShort40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList5 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI7 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI5 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.io.Serializable serializable6 = null;
        try {
            java.lang.Boolean boolean8 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[1]", serializable6, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, 5, 15, (int) (short) 1, (long) (short) -1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList7 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            java.util.ArrayList<esa.mo.reconfigurable.service.ReconfigurableService> reconfigurableServiceList5 = nanoSatMOConnectorImpl0.getServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray5 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList6 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList6, parameterInstanceArray5);
        try {
            java.lang.Boolean boolean9 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList6, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(parameterInstanceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
        boolean boolean2 = stringList0.equals((java.lang.Object) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = stringList0.getAreaVersion();
        stringList0.clear();
        java.lang.Short[] shortArray8 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList9 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList9, shortArray8);
        boolean boolean12 = shortList9.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray17 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList18 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18, uShortArray17);
        int int21 = uShortList18.indexOf((java.lang.Object) 1.0f);
        boolean boolean22 = strList15.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        boolean boolean23 = shortList9.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        boolean boolean24 = stringList0.contains((java.lang.Object) boolean23);
        java.lang.String str25 = stringList0.toString();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl26 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long27 = nanoSatMOConnectorImpl26.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener28 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        nanoSatMOConnectorImpl26.initAdditionalServices();
        java.lang.Long long30 = nanoSatMOConnectorImpl26.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        boolean boolean32 = stringList0.contains((java.lang.Object) nanoSatMOConnectorImpl26);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider33 = nanoSatMOConnectorImpl26.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(uShortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[]" + "'", str25.equals("[]"));
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer9 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        java.lang.Long long13 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI14 = nanoSatMOConnectorImpl7.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(long13);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray5 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList6 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList6, parameterInstanceArray5);
        try {
            java.lang.Boolean boolean9 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList6, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(parameterInstanceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF7 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Class<?> wildcardClass3 = nanoSatMOConnectorImpl0.getClass();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray4 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList5 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList5, parameterInstanceArray4);
        try {
            java.lang.Boolean boolean8 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList5, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(parameterInstanceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier7 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
        boolean boolean2 = stringList0.equals((java.lang.Object) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = stringList0.getAreaVersion();
        stringList0.clear();
        java.lang.Short[] shortArray8 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList9 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList9, shortArray8);
        boolean boolean12 = shortList9.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray17 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList18 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18, uShortArray17);
        int int21 = uShortList18.indexOf((java.lang.Object) 1.0f);
        boolean boolean22 = strList15.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        boolean boolean23 = shortList9.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18);
        boolean boolean24 = stringList0.contains((java.lang.Object) boolean23);
        java.lang.String str25 = stringList0.toString();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl26 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long27 = nanoSatMOConnectorImpl26.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener28 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        nanoSatMOConnectorImpl26.initAdditionalServices();
        java.lang.Long long30 = nanoSatMOConnectorImpl26.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        boolean boolean32 = stringList0.contains((java.lang.Object) nanoSatMOConnectorImpl26);
        try {
            esa.mo.nmf.CloseAppListener closeAppListener33 = nanoSatMOConnectorImpl26.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(uShortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[]" + "'", str25.equals("[]"));
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails4 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI7 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Class<?> wildcardClass3 = nanoSatMOConnectorImpl0.getClass();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails4 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.URI uRI8 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = uRI8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI8 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor14 = uRIList11.listIterator((int) (short) 0);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList16 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        java.lang.Object obj17 = doubleList16.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = doubleList16.getAreaNumber();
        java.lang.String[] strArray38 = new java.lang.String[] { "0.0", "17", "[-1.0, 10.0, 10.0, 1.0]", "-1", "[0.0, 0.0, 0.0, 10.0]", "0", "0.0", "[16, 100, 10, 1]", "", "[, ]", "[false, true, false]", "[-1.0, 10.0, 10.0, 1.0]", "100", "100", "100", "[-1, 10, 1]", "0", "[-1, 10, 1]", "[]" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray41 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList42 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList42, uShortArray41);
        int int45 = uShortList42.lastIndexOf((java.lang.Object) 'a');
        boolean boolean46 = uShortList42.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort47 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray48 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort47 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList49 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList49, uShortArray48);
        boolean boolean51 = uShortList42.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList49);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray56 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList57 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList57, uShortArray56);
        int int60 = uShortList57.indexOf((java.lang.Object) 1.0f);
        boolean boolean61 = strList54.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList57);
        boolean boolean62 = uShortList42.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList57);
        boolean boolean63 = strList39.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList57);
        boolean boolean64 = doubleList16.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList57);
        int int65 = uRIList11.indexOf((java.lang.Object) doubleList16);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet66 = doubleList16.getAreaVersion();
        doubleList16.ensureCapacity(12);
        try {
            java.lang.Boolean boolean69 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0.0, 0.0, 0.0, 10.0]", (java.io.Serializable) doubleList16);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(uRIItor14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(uShortArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(uShortArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertNotNull(uShortArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(uOctet66);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Short[] shortArray11 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList12 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList12, shortArray11);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray14 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList15 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList15, uShortArray14);
        int int18 = uShortList15.lastIndexOf((java.lang.Object) 'a');
        boolean boolean19 = uShortList15.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray21 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort20 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22, uShortArray21);
        boolean boolean24 = uShortList15.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList22);
        boolean boolean25 = shortList12.remove((java.lang.Object) boolean24);
        shortList12.clear();
        org.ccsds.moims.mo.mal.structures.URI uRI27 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet28 = uRI27.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray29 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI27 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList30, uRIArray29);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor33 = uRIList30.listIterator((int) (short) 0);
        org.ccsds.moims.mo.mal.structures.URI uRI35 = new org.ccsds.moims.mo.mal.structures.URI();
        java.lang.Long long36 = uRI35.getShortForm();
        uRIList30.add(0, uRI35);
        int int38 = shortList12.indexOf((java.lang.Object) uRI35);
        java.lang.Short[] shortArray42 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList43 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList43, shortArray42);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray45 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList46 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList46, uShortArray45);
        int int49 = uShortList46.lastIndexOf((java.lang.Object) 'a');
        boolean boolean50 = uShortList46.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray52 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort51 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList53 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList53, uShortArray52);
        boolean boolean55 = uShortList46.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList53);
        boolean boolean56 = shortList43.remove((java.lang.Object) boolean55);
        shortList43.clear();
        boolean boolean58 = shortList12.contains((java.lang.Object) shortList43);
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList62 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList62, booleanArray61);
        boolean boolean65 = booleanList62.contains((java.lang.Object) 10L);
        booleanList62.ensureCapacity(0);
        java.lang.Short[] shortArray71 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList72 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList72, shortArray71);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray74 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList75 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList75, uShortArray74);
        int int78 = uShortList75.lastIndexOf((java.lang.Object) 'a');
        boolean boolean79 = uShortList75.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort80 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray81 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort80 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList82 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList82, uShortArray81);
        boolean boolean84 = uShortList75.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList82);
        boolean boolean85 = shortList72.remove((java.lang.Object) boolean84);
        shortList72.clear();
        int int87 = booleanList62.lastIndexOf((java.lang.Object) shortList72);
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator88 = booleanList62.spliterator();
        boolean boolean89 = shortList12.equals((java.lang.Object) booleanSpliterator88);
        boolean boolean91 = shortList12.contains((java.lang.Object) (-15));
        java.util.Spliterator<java.lang.Short> shortSpliterator92 = shortList12.spliterator();
        org.ccsds.moims.mo.mal.structures.StringList stringList93 = new org.ccsds.moims.mo.mal.structures.StringList();
        java.lang.Object[] objArray94 = stringList93.toArray();
        org.ccsds.moims.mo.mal.structures.Element element95 = stringList93.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet96 = stringList93.getAreaVersion();
        int int97 = shortList12.indexOf((java.lang.Object) stringList93);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet98 = stringList93.getAreaVersion();
        try {
            java.lang.Boolean boolean99 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1.0, 0.0, 0.0, 0.0, 10.0]", (java.io.Serializable) stringList93);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(uShortArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(uShortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uOctet28);
        org.junit.Assert.assertNotNull(uRIArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertNotNull(uRIItor33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 281474993487890L + "'", long36.equals(281474993487890L));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(uShortArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertNotNull(uShortArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertNotNull(uShortArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertNotNull(uShortArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", !boolean85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(booleanSpliterator88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertNotNull(shortSpliterator92);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertNotNull(element95);
        org.junit.Assert.assertNotNull(uOctet96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertNotNull(uOctet98);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI7 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, (-7), (int) (byte) 1, (-2), 281475010265075L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("0.0", "");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList8 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        java.lang.Long long9 = integerList8.getShortForm();
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
        boolean boolean16 = booleanList13.contains((java.lang.Object) 10L);
        booleanList13.ensureCapacity(0);
        java.lang.Short[] shortArray22 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList23 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList23, shortArray22);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray25 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList26, uShortArray25);
        int int29 = uShortList26.lastIndexOf((java.lang.Object) 'a');
        boolean boolean30 = uShortList26.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray32 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort31 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList33 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList33, uShortArray32);
        boolean boolean35 = uShortList26.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList33);
        boolean boolean36 = shortList23.remove((java.lang.Object) boolean35);
        shortList23.clear();
        int int38 = booleanList13.lastIndexOf((java.lang.Object) shortList23);
        org.ccsds.moims.mo.mal.structures.Union union40 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Short) (short) -1);
        boolean boolean41 = booleanList13.contains((java.lang.Object) union40);
        org.ccsds.moims.mo.mal.structures.ShortList shortList42 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort43 = shortList42.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element44 = shortList42.createElement();
        java.lang.Short[] shortArray48 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList49 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList49, shortArray48);
        boolean boolean52 = shortList49.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray57 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList58 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList58, uShortArray57);
        int int61 = uShortList58.indexOf((java.lang.Object) 1.0f);
        boolean boolean62 = strList55.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList58);
        boolean boolean63 = shortList49.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList58);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor64 = uShortList58.listIterator();
        boolean boolean65 = shortList42.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList58);
        int int66 = shortList42.size();
        boolean boolean67 = union40.equals((java.lang.Object) shortList42);
        boolean boolean68 = integerList8.equals((java.lang.Object) boolean67);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet69 = integerList8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet70 = integerList8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort71 = integerList8.getServiceNumber();
        try {
            java.lang.Boolean boolean72 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1.0]", (java.io.Serializable) integerList8);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265077L + "'", long9.equals(281475010265077L));
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(uShortArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(uShortArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(uShort43);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(uShortArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(uShortItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uOctet69);
        org.junit.Assert.assertNotNull(uOctet70);
        org.junit.Assert.assertNotNull(uShort71);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { 16, 100, 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList11 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        int int14 = intList11.indexOf((java.lang.Object) 0);
        java.util.Iterator<java.lang.Integer> intItor15 = intList11.iterator();
        boolean boolean16 = intList11.isEmpty();
        try {
            java.lang.Boolean boolean18 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[true]", (java.io.Serializable) intList11, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(intItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier4 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        java.lang.Long long13 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails14 = null; // flaky: nanoSatMOConnectorImpl7.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(long13);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, (int) (byte) 10, (-1), (-10), (long) (-5));
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList7 = new org.ccsds.moims.mo.mal.structures.BooleanList(5);
        booleanList7.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = booleanList7.getAreaNumber();
        java.util.stream.Stream<java.lang.Boolean> booleanStream10 = booleanList7.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = booleanList7.getServiceNumber();
        try {
            java.lang.Boolean boolean13 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[100]", (java.io.Serializable) booleanList7, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(booleanStream10);
        org.junit.Assert.assertNotNull(uShort11);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(4);
        java.lang.Long long2 = integerList1.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = integerList1.getServiceNumber();
        java.util.Iterator<java.lang.Integer> intItor5 = integerList1.iterator();
        boolean boolean6 = integerList1.isEmpty();
        java.util.Iterator<java.lang.Integer> intItor7 = integerList1.iterator();
        org.ccsds.moims.mo.mal.structures.ShortList shortList8 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = shortList8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element10 = shortList8.createElement();
        java.lang.Object obj11 = shortList8.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = shortList8.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = shortList8.getServiceNumber();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl14 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener15 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl14);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl14);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener17 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl14);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl18 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener19 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl18);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener20 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl18);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener21 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl18);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl22 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener23 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl22);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray24 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener17, closeAppEventListener21, closeAppEventListener23 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl25 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener26 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener27 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener28 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl29 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener30 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl29);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl29);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener32 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl29);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl33 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl33);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray35 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener28, closeAppEventListener32, closeAppEventListener34 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl36 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl36);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener38 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl36);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener39 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl36);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl40 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener41 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl40);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener42 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl40);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener43 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl40);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl44 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener45 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl44);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray46 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener39, closeAppEventListener43, closeAppEventListener45 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl47 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener48 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl47);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener49 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl47);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener50 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl47);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl51 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener52 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl51);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener53 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl51);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener54 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl51);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl55 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener56 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl55);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray57 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener50, closeAppEventListener54, closeAppEventListener56 };
        esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray58 = new esa.mo.com.impl.util.EventReceivedListener[][] { eventReceivedListenerArray24, eventReceivedListenerArray35, eventReceivedListenerArray46, eventReceivedListenerArray57 };
        esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray59 = shortList8.toArray(eventReceivedListenerArray58);
        java.lang.Double[] doubleArray62 = new java.lang.Double[] { 10.0d, (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList63 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList63, doubleArray62);
        java.lang.Object obj65 = doubleList63.clone();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray66 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList67 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList67, uShortArray66);
        int int70 = uShortList67.lastIndexOf((java.lang.Object) 'a');
        boolean boolean71 = uShortList67.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray72 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList73 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList73, uShortArray72);
        int int76 = uShortList73.lastIndexOf((java.lang.Object) 'a');
        boolean boolean77 = uShortList73.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray79 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort78 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList80 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList80, uShortArray79);
        boolean boolean82 = uShortList73.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList80);
        boolean boolean83 = uShortList67.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList73);
        boolean boolean84 = doubleList63.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList73);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList86 = new org.ccsds.moims.mo.mal.structures.UShortList((int) ' ');
        org.ccsds.moims.mo.mal.structures.UShort uShort87 = uShortList86.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort88 = uShortList86.getAreaNumber();
        boolean boolean89 = uShortList73.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList86);
        org.ccsds.moims.mo.mal.structures.Element element90 = uShortList86.createElement();
        boolean boolean91 = shortList8.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList86);
        boolean boolean92 = integerList1.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList86);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265077L + "'", long2.equals(281475010265077L));
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(intItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(intItor7);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray24);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray35);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray46);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray57);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray58);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray59);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(uShortArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(uShortArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
        org.junit.Assert.assertNotNull(uShortArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertNotNull(uShort87);
        org.junit.Assert.assertNotNull(uShort88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
        org.junit.Assert.assertNotNull(element90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", !boolean92);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray4 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList5 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList5, parameterInstanceArray4);
        try {
            java.lang.Boolean boolean8 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList5, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(parameterInstanceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
        int int8 = octetList7.size();
        org.ccsds.moims.mo.mal.structures.Element element9 = octetList7.createElement();
        boolean boolean10 = octetList7.isEmpty();
        octetList7.ensureCapacity((-9));
        org.ccsds.moims.mo.mal.structures.StringList stringList14 = new org.ccsds.moims.mo.mal.structures.StringList(5);
        java.util.ListIterator<java.lang.String> strItor15 = stringList14.listIterator();
        boolean boolean16 = stringList14.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream17 = stringList14.stream();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList19 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = doubleList19.getAreaNumber();
        int int21 = doubleList19.size();
        java.lang.Short[] shortArray25 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList26 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList26, shortArray25);
        boolean boolean29 = shortList26.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray34 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35, uShortArray34);
        int int38 = uShortList35.indexOf((java.lang.Object) 1.0f);
        boolean boolean39 = strList32.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35);
        boolean boolean40 = shortList26.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35);
        shortList26.clear();
        boolean boolean43 = shortList26.add((java.lang.Short) (short) 0);
        int int44 = shortList26.size();
        boolean boolean45 = shortList26.isEmpty();
        boolean boolean46 = doubleList19.remove((java.lang.Object) shortList26);
        boolean boolean47 = stringList14.equals((java.lang.Object) boolean46);
        java.util.stream.Stream<java.lang.String> strStream48 = stringList14.stream();
        boolean boolean49 = octetList7.contains((java.lang.Object) stringList14);
        java.lang.Object[] objArray50 = octetList7.toArray();
        try {
            java.lang.Boolean boolean51 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[255]", (java.io.Serializable) octetList7);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(strItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(uShortArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(objArray50);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF5 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (-5), (-18), (-18), 281474993487873L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI6 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray4 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList5 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList5, parameterInstanceArray4);
        try {
            java.lang.Boolean boolean8 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList5, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(parameterInstanceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        try {
            esa.mo.nmf.CloseAppListener closeAppListener14 = nanoSatMOConnectorImpl7.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray4 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList5, uShortArray4);
        int int8 = uShortList5.indexOf((java.lang.Object) 1.0f);
        boolean boolean9 = strList2.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList5);
        java.util.ListIterator<java.lang.String> strItor10 = strList2.listIterator();
        int int11 = strList2.size();
        java.util.stream.Stream<java.lang.String> strStream12 = strList2.stream();
        org.ccsds.moims.mo.mal.structures.OctetList octetList13 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = octetList13.getServiceNumber();
        java.lang.Object obj15 = null;
        boolean boolean16 = octetList13.equals(obj15);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = octetList13.getAreaVersion();
        boolean boolean18 = strList2.equals((java.lang.Object) octetList13);
        int int19 = strList2.size();
        org.ccsds.moims.mo.mal.structures.ShortList shortList20 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = shortList20.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element22 = shortList20.createElement();
        java.lang.Object obj23 = shortList20.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = shortList20.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = shortList20.getServiceNumber();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl26 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener27 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener28 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener29 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl26);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl30 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl30);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener32 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl30);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl30);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl34 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener35 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl34);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray36 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener29, closeAppEventListener33, closeAppEventListener35 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl37 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener38 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl37);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener39 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl37);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener40 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl37);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl41 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener42 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl41);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener43 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl41);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener44 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl41);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl45 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener46 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl45);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray47 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener40, closeAppEventListener44, closeAppEventListener46 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl48 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener49 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl48);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener50 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl48);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener51 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl48);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl52 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener53 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl52);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener54 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl52);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener55 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl52);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl56 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener57 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl56);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray58 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener51, closeAppEventListener55, closeAppEventListener57 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl59 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener60 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl59);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener61 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl59);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener62 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl59);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl63 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener64 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl63);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener65 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl63);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener66 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl63);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl67 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener68 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl67);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray69 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener62, closeAppEventListener66, closeAppEventListener68 };
        esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray70 = new esa.mo.com.impl.util.EventReceivedListener[][] { eventReceivedListenerArray36, eventReceivedListenerArray47, eventReceivedListenerArray58, eventReceivedListenerArray69 };
        esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray71 = shortList20.toArray(eventReceivedListenerArray70);
        try {
            esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray72 = strList2.toArray(eventReceivedListenerArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(uShortArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(strItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(uShort21);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray36);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray47);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray58);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray69);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray70);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray71);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF10 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI7 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray4 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList5 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList5, parameterInstanceArray4);
        try {
            java.lang.Boolean boolean8 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList5, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(parameterInstanceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI1 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier7 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.com.impl.util.EventCOMObject eventCOMObject7 = null;
        try {
            closeAppEventListener6.onDataReceived(eventCOMObject7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList3 = new org.ccsds.moims.mo.mal.structures.BooleanList(15);
        java.lang.Object obj4 = null;
        boolean boolean5 = booleanList3.remove(obj4);
        java.lang.Float[] floatArray10 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList11 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList11, floatArray10);
        int int14 = floatList11.lastIndexOf((java.lang.Object) (-1L));
        floatList11.ensureCapacity(6);
        java.lang.Float[] floatArray21 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList22 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList22, floatArray21);
        int int25 = floatList22.lastIndexOf((java.lang.Object) (-1L));
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.lang.Object obj30 = strList28.clone();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray31 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList32, uShortArray31);
        int int35 = uShortList32.lastIndexOf((java.lang.Object) 'a');
        boolean boolean36 = uShortList32.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray38 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort37 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList39, uShortArray38);
        boolean boolean41 = uShortList32.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList39);
        boolean boolean42 = strList28.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList39);
        boolean boolean43 = floatList22.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList39);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream44 = uShortList39.stream();
        uShortList39.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray46 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList47 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList47, uShortArray46);
        int int50 = uShortList47.lastIndexOf((java.lang.Object) 'a');
        boolean boolean51 = uShortList47.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort52 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray53 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort52 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList54 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList54, uShortArray53);
        boolean boolean56 = uShortList47.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList54);
        boolean boolean57 = uShortList39.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList47);
        boolean boolean58 = floatList11.remove((java.lang.Object) uShortList39);
        boolean boolean59 = booleanList3.equals((java.lang.Object) floatList11);
        try {
            java.lang.Boolean boolean60 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("281474993487886", (java.io.Serializable) booleanList3);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(uShortArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(uShortArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertNotNull(uShortStream44);
        org.junit.Assert.assertNotNull(uShortArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertNotNull(uShortArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Byte[] byteArray10 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList11, byteArray10);
        java.util.ListIterator<java.lang.Byte> byteItor14 = byteList11.listIterator((int) (short) 1);
        int int15 = byteList11.size();
        java.util.Iterator<java.lang.Byte> byteItor16 = byteList11.iterator();
        java.util.Iterator<java.lang.Byte> byteItor17 = byteList11.iterator();
        java.lang.Byte byte19 = byteList11.get(1);
        java.lang.Object[] objArray20 = byteList11.toArray();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList22 = new org.ccsds.moims.mo.mal.structures.BooleanList(5);
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = booleanList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = booleanList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList26 = new org.ccsds.moims.mo.mal.structures.UShortList((int) ' ');
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = uShortList26.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet28 = uShortList26.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element29 = uShortList26.createElement();
        java.lang.Integer int30 = uShortList26.getTypeShortForm();
        boolean boolean31 = booleanList22.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList26);
        boolean boolean32 = byteList11.remove((java.lang.Object) uShortList26);
        org.ccsds.moims.mo.mal.structures.StringList stringList34 = new org.ccsds.moims.mo.mal.structures.StringList(5);
        java.util.Iterator<java.lang.String> strItor35 = stringList34.iterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet36 = stringList34.getAreaVersion();
        stringList34.clear();
        org.ccsds.moims.mo.mal.structures.OctetList octetList38 = new org.ccsds.moims.mo.mal.structures.OctetList();
        boolean boolean39 = stringList34.contains((java.lang.Object) octetList38);
        java.lang.Double[] doubleArray44 = new java.lang.Double[] { (-1.0d), 0.0d, 0.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList45 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList45, doubleArray44);
        boolean boolean48 = doubleList45.contains((java.lang.Object) "hi!");
        doubleList45.add(2, (java.lang.Double) 0.0d);
        java.lang.Double double53 = doubleList45.remove(0);
        java.lang.String str54 = doubleList45.toString();
        java.lang.Long[] longArray57 = new java.lang.Long[] { (-1L), 281475010265070L };
        java.util.ArrayList<java.lang.Long> longList58 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList58, longArray57);
        java.lang.String str60 = longList58.toString();
        java.lang.Long long63 = longList58.set(1, (java.lang.Long) 281475010265083L);
        java.lang.Object obj64 = longList58.clone();
        java.lang.Float[] floatArray69 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList70 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList70, floatArray69);
        int int73 = floatList70.lastIndexOf((java.lang.Object) (-1L));
        java.util.Iterator<java.lang.Float> floatItor74 = floatList70.iterator();
        org.ccsds.moims.mo.mal.structures.Identifier identifier75 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet76 = identifier75.getAreaVersion();
        boolean boolean78 = identifier75.equals((java.lang.Object) 0);
        boolean boolean79 = floatList70.contains((java.lang.Object) identifier75);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray80 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList81 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList81, uShortArray80);
        int int84 = uShortList81.lastIndexOf((java.lang.Object) 'a');
        boolean boolean85 = uShortList81.isEmpty();
        boolean boolean86 = floatList70.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList81);
        boolean boolean87 = longList58.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList81);
        java.lang.String str88 = uShortList81.toString();
        boolean boolean89 = doubleList45.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList81);
        boolean boolean90 = octetList38.remove((java.lang.Object) uShortList81);
        boolean boolean91 = uShortList26.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList81);
        try {
            java.lang.Boolean boolean93 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("281474993487875", (java.io.Serializable) boolean91, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(byteItor14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(byteItor16);
        org.junit.Assert.assertNotNull(byteItor17);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 100 + "'", byte19.equals((byte) 100));
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertNotNull(uOctet28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-10) + "'", int30.equals((-10)));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertNotNull(uOctet36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1.0d) + "'", double53.equals((-1.0d)));
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "[0.0, 0.0, 0.0, 10.0]" + "'", str54.equals("[0.0, 0.0, 0.0, 10.0]"));
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "[-1, 281475010265070]" + "'", str60.equals("[-1, 281475010265070]"));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 281475010265070L + "'", long63.equals(281475010265070L));
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(floatItor74);
        org.junit.Assert.assertNotNull(uOctet76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
        org.junit.Assert.assertNotNull(uShortArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", !boolean87);
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "[]" + "'", str88.equals("[]"));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.URIList uRIList7 = new org.ccsds.moims.mo.mal.structures.URIList(8);
        org.ccsds.moims.mo.mal.structures.Element element8 = uRIList7.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = org.ccsds.moims.mo.mal.structures.FloatList.AREA_VERSION;
        int int10 = uRIList7.lastIndexOf((java.lang.Object) uOctet9);
        java.lang.String str11 = uRIList7.toString();
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 255, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList15 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList15, shortArray14);
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = org.ccsds.moims.mo.mal.structures.URIList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray19 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort17, uShort18 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList20 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20, uShortArray19);
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = uShortList20.set((int) (short) 0, uShort23);
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = uShortList20.remove(0);
        boolean boolean27 = shortList15.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20);
        boolean boolean29 = shortList15.add((java.lang.Short) (short) 0);
        java.util.ListIterator<java.lang.Short> shortItor30 = shortList15.listIterator();
        java.util.Iterator<java.lang.Short> shortItor31 = shortList15.iterator();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList36 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        intList36.ensureCapacity((int) (short) 100);
        java.lang.Integer int41 = intList36.get((int) (byte) 0);
        java.lang.Short[] shortArray45 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList46 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList46, shortArray45);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray48 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList49 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList49, uShortArray48);
        int int52 = uShortList49.lastIndexOf((java.lang.Object) 'a');
        boolean boolean53 = uShortList49.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray55 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort54 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList56 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList56, uShortArray55);
        boolean boolean58 = uShortList49.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList56);
        boolean boolean59 = shortList46.remove((java.lang.Object) boolean58);
        shortList46.clear();
        boolean boolean61 = shortList46.isEmpty();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray66 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList67 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList67, uShortArray66);
        int int70 = uShortList67.indexOf((java.lang.Object) 1.0f);
        boolean boolean71 = strList64.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList67);
        boolean boolean72 = shortList46.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList67);
        int int73 = intList36.lastIndexOf((java.lang.Object) uShortList67);
        boolean boolean74 = shortList15.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList67);
        boolean boolean75 = uRIList7.contains((java.lang.Object) shortList15);
        shortList15.trimToSize();
        try {
            java.lang.Boolean boolean77 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("17.0", (java.io.Serializable) shortList15);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]" + "'", str11.equals("[]"));
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertNotNull(uShortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(shortItor30);
        org.junit.Assert.assertNotNull(shortItor31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41.equals((-1)));
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(uShortArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(uShortArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertNotNull(uShortArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        try {
            nanoSatMOConnectorImpl7.writeCentralDirectoryServiceURI("2.81475010265084E14", "[false, true, false]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element2 = shortList0.createElement();
        java.lang.Object obj3 = shortList0.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = shortList0.getServiceNumber();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl6 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener7 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl6);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener8 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl6);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl6);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl10 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener11 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl10);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener12 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl10);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl10);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl14 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener15 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl14);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray16 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener9, closeAppEventListener13, closeAppEventListener15 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl17 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener18 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener19 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener20 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl21 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl21);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener23 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl21);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener24 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl21);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl25 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener26 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray27 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener20, closeAppEventListener24, closeAppEventListener26 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl28 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener29 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener30 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener35 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl36 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl36);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray38 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener31, closeAppEventListener35, closeAppEventListener37 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl39 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener40 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener41 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener42 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl43 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener44 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl43);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener45 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl43);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener46 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl43);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl47 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener48 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl47);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray49 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener42, closeAppEventListener46, closeAppEventListener48 };
        esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray50 = new esa.mo.com.impl.util.EventReceivedListener[][] { eventReceivedListenerArray16, eventReceivedListenerArray27, eventReceivedListenerArray38, eventReceivedListenerArray49 };
        esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray51 = shortList0.toArray(eventReceivedListenerArray50);
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 10.0d, (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55, doubleArray54);
        java.lang.Object obj57 = doubleList55.clone();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray58 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList59 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList59, uShortArray58);
        int int62 = uShortList59.lastIndexOf((java.lang.Object) 'a');
        boolean boolean63 = uShortList59.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray64 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList65 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65, uShortArray64);
        int int68 = uShortList65.lastIndexOf((java.lang.Object) 'a');
        boolean boolean69 = uShortList65.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray71 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort70 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList72 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList72, uShortArray71);
        boolean boolean74 = uShortList65.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList72);
        boolean boolean75 = uShortList59.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65);
        boolean boolean76 = doubleList55.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList65);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList78 = new org.ccsds.moims.mo.mal.structures.UShortList((int) ' ');
        org.ccsds.moims.mo.mal.structures.UShort uShort79 = uShortList78.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort80 = uShortList78.getAreaNumber();
        boolean boolean81 = uShortList65.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList78);
        org.ccsds.moims.mo.mal.structures.Element element82 = uShortList78.createElement();
        boolean boolean83 = shortList0.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList78);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList85 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        java.lang.Object obj86 = doubleList85.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort87 = doubleList85.getServiceNumber();
        boolean boolean88 = uShortList78.contains((java.lang.Object) doubleList85);
        org.ccsds.moims.mo.mal.structures.UShort uShort89 = doubleList85.getAreaNumber();
        doubleList85.clear();
        org.ccsds.moims.mo.mal.structures.Duration duration92 = new org.ccsds.moims.mo.mal.structures.Duration((double) 4);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet93 = duration92.getAreaVersion();
        boolean boolean94 = doubleList85.remove((java.lang.Object) uOctet93);
        java.lang.String str95 = doubleList85.toString();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray16);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray27);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray38);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray49);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray50);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray51);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(uShortArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(uShortArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertNotNull(uShortArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNotNull(uShort79);
        org.junit.Assert.assertNotNull(uShort80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertNotNull(element82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", !boolean83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(uShort87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
        org.junit.Assert.assertNotNull(uShort89);
        org.junit.Assert.assertNotNull(uOctet93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "[]" + "'", str95.equals("[]"));
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime3 = new org.ccsds.moims.mo.mal.structures.FineTime(0L);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = fineTime3.getAreaNumber();
        java.lang.String str5 = fineTime3.toString();
        long long6 = fineTime3.getValue();
        try {
            java.lang.Boolean boolean7 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("281474993487885", (java.io.Serializable) fineTime3);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "0" + "'", str5.equals("0"));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test451");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.Duration duration7 = new org.ccsds.moims.mo.mal.structures.Duration();
        double double8 = duration7.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = duration7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = duration7.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = duration7.getAreaNumber();
        try {
            java.lang.Boolean boolean13 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1, 281475010265070, 281474993487873]", (java.io.Serializable) duration7, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(uShort11);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test452");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails19 = null; // flaky: nanoSatMOConnectorImpl11.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test453");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails5 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test454");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray5 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList6 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList6, parameterInstanceArray5);
        try {
            java.lang.Boolean boolean9 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList6, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(parameterInstanceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test455");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider14 = nanoSatMOConnectorImpl7.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test456");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = identifier5.getAreaVersion();
        boolean boolean8 = identifier5.equals((java.lang.Object) 0);
        java.lang.String str9 = identifier5.getValue();
        try {
            java.lang.Boolean boolean11 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0.0]", (java.io.Serializable) str9, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test457");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.CloseAppListener closeAppListener5 = nanoSatMOConnectorImpl0.getCloseAppListener();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test458");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI3 = nanoSatMOConnectorImpl0.readCentralDirectoryServiceURI();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test459");
        java.lang.Float[] floatArray1 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList2 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList2, floatArray1);
        java.util.ListIterator<java.lang.Float> floatItor4 = floatList2.listIterator();
        int int6 = floatList2.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        int int12 = floatList2.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl7);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray14 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList15 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList15, parameterInstanceArray14);
        try {
            java.lang.Boolean boolean18 = null; // flaky: nanoSatMOConnectorImpl7.pushMultipleParameterValues(parameterInstanceList15, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatItor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(parameterInstanceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test460");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF2 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test461");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.io.Serializable serializable6 = null;
        try {
            java.lang.Boolean boolean7 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[0, 1, 10, 10, 100]", serializable6);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test462");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList8 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        java.lang.Object obj9 = doubleList8.clone();
        java.lang.Integer int10 = doubleList8.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.StringList stringList11 = new org.ccsds.moims.mo.mal.structures.StringList();
        boolean boolean13 = stringList11.equals((java.lang.Object) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = stringList11.getAreaVersion();
        int int15 = doubleList8.lastIndexOf((java.lang.Object) stringList11);
        java.lang.Long long16 = doubleList8.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element17 = doubleList8.createElement();
        org.ccsds.moims.mo.mal.structures.LongList longList18 = new org.ccsds.moims.mo.mal.structures.LongList();
        java.util.stream.Stream<java.lang.Long> longStream19 = longList18.parallelStream();
        boolean boolean20 = doubleList8.equals((java.lang.Object) longStream19);
        java.util.Spliterator<java.lang.Double> doubleSpliterator21 = doubleList8.spliterator();
        java.util.ListIterator<java.lang.Double> doubleItor22 = doubleList8.listIterator();
        org.ccsds.moims.mo.mal.structures.Element element23 = doubleList8.createElement();
        java.util.Spliterator<java.lang.Double> doubleSpliterator24 = doubleList8.spliterator();
        java.lang.Object obj25 = doubleList8.clone();
        try {
            java.lang.Boolean boolean26 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[]", (java.io.Serializable) doubleList8);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10.equals((-5)));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281475010265083L + "'", long16.equals(281475010265083L));
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(longStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(doubleSpliterator21);
        org.junit.Assert.assertNotNull(doubleItor22);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(doubleSpliterator24);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test463");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 10.0d, 0.0d, (-1.0d), (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
        boolean boolean8 = doubleList5.equals((java.lang.Object) 281475010265079L);
        int int9 = doubleList5.size();
        boolean boolean11 = doubleList5.equals((java.lang.Object) "[10.0, 0.0, -1.0, -1.0]");
        java.lang.Float[] floatArray16 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList17 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList17, floatArray16);
        int int20 = floatList17.lastIndexOf((java.lang.Object) (-1L));
        java.util.Iterator<java.lang.Float> floatItor21 = floatList17.iterator();
        org.ccsds.moims.mo.mal.structures.Identifier identifier22 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = identifier22.getAreaVersion();
        boolean boolean25 = identifier22.equals((java.lang.Object) 0);
        boolean boolean26 = floatList17.contains((java.lang.Object) identifier22);
        int int27 = doubleList5.indexOf((java.lang.Object) floatList17);
        doubleList5.add(4, (java.lang.Double) 0.0d);
        doubleList5.clear();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long33 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        java.lang.Long long35 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        boolean boolean36 = doubleList5.equals((java.lang.Object) nanoSatMOConnectorImpl32);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider37 = nanoSatMOConnectorImpl32.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(floatItor21);
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test464");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, (int) (short) 0, 7, 14, (long) (short) -1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test465");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, 11, 5, 9, (long) 18);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test466");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider7 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test467");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider7 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test468");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.Union union9 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Integer) (-1));
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = union9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = union9.getAreaVersion();
        try {
            java.lang.Boolean boolean13 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("2.81475010265084E14", (java.io.Serializable) uOctet11, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(uOctet11);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test469");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        org.ccsds.moims.mo.mal.structures.URIList uRIList6 = new org.ccsds.moims.mo.mal.structures.URIList(8);
        org.ccsds.moims.mo.mal.structures.Element element7 = uRIList6.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = org.ccsds.moims.mo.mal.structures.FloatList.AREA_VERSION;
        int int9 = uRIList6.lastIndexOf((java.lang.Object) uOctet8);
        uRIList6.clear();
        java.lang.Long long11 = uRIList6.getShortForm();
        java.lang.Float[] floatArray16 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList17 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList17, floatArray16);
        int int20 = floatList17.lastIndexOf((java.lang.Object) (-1L));
        java.lang.Long[] longArray23 = new java.lang.Long[] { (-1L), 281475010265070L };
        java.util.ArrayList<java.lang.Long> longList24 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList24, longArray23);
        java.lang.String str26 = longList24.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = org.ccsds.moims.mo.mal.structures.BooleanList.SERVICE_SHORT_FORM;
        int int28 = longList24.lastIndexOf((java.lang.Object) uShort27);
        boolean boolean30 = longList24.add((java.lang.Long) 281474993487873L);
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = org.ccsds.moims.mo.mal.structures.URIList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray33 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort31, uShort32 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList34, uShortArray33);
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort uShort38 = uShortList34.set((int) (short) 0, uShort37);
        boolean boolean39 = longList24.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList34);
        java.lang.String str40 = uShortList34.toString();
        boolean boolean41 = floatList17.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList34);
        boolean boolean42 = uRIList6.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList34);
        java.lang.Object obj43 = uRIList6.clone();
        int int44 = uRIList6.size();
        java.lang.String str45 = uRIList6.toString();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor46 = uRIList6.iterator();
        try {
            java.lang.Boolean boolean47 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[16, 10, 1]", (java.io.Serializable) uRIList6);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(uOctet8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 281475010265070L + "'", long11.equals(281475010265070L));
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[-1, 281475010265070]" + "'", str26.equals("[-1, 281475010265070]"));
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(uShortArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(uShort38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[0, 0]" + "'", str40.equals("[0, 0]"));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "[]" + "'", str45.equals("[]"));
        org.junit.Assert.assertNotNull(uRIItor46);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test470");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[] { (byte) 100, (byte) 100 };
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        java.util.ListIterator<java.lang.Byte> byteItor6 = byteList3.listIterator((int) (short) 1);
        int int7 = byteList3.size();
        int int9 = byteList3.indexOf((java.lang.Object) (short) 100);
        org.ccsds.moims.mo.mal.structures.LongList longList10 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = longList10.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = longList10.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = longList10.getAreaNumber();
        longList10.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = longList10.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl17 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long18 = nanoSatMOConnectorImpl17.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener19 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        nanoSatMOConnectorImpl17.initAdditionalServices();
        java.lang.Long long21 = nanoSatMOConnectorImpl17.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl23 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener24 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl23);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl25 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long26 = nanoSatMOConnectorImpl25.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener27 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl25);
        nanoSatMOConnectorImpl25.initAdditionalServices();
        nanoSatMOConnectorImpl25.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl30 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener31 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl30);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        java.lang.Long long35 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray36 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl17, nanoSatMOConnectorImpl23, nanoSatMOConnectorImpl25, nanoSatMOConnectorImpl30, nanoSatMOConnectorImpl32 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray37 = longList10.toArray(nanoSatMOConnectorImplArray36);
        int int38 = longList10.size();
        boolean boolean39 = byteList3.remove((java.lang.Object) longList10);
        java.lang.Integer int40 = longList10.getTypeShortForm();
        java.lang.Long long41 = longList10.getShortForm();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(byteItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray36);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-13) + "'", int40.equals((-13)));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 281475010265075L + "'", long41.equals(281475010265075L));
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test471");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element2 = shortList0.createElement();
        boolean boolean3 = shortList0.isEmpty();
        int int4 = shortList0.size();
        java.lang.Long long5 = shortList0.getShortForm();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl6 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener7 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl6);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener8 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl6);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl6);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl10 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener11 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl10);
        java.lang.Long long12 = nanoSatMOConnectorImpl10.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl13 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener14 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl13);
        java.lang.Float[] floatArray16 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList17 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList17, floatArray16);
        java.util.ListIterator<java.lang.Float> floatItor19 = floatList17.listIterator();
        int int21 = floatList17.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl22 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long23 = nanoSatMOConnectorImpl22.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener24 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl22);
        nanoSatMOConnectorImpl22.initAdditionalServices();
        java.lang.Long long26 = nanoSatMOConnectorImpl22.getAppDirectoryId();
        int int27 = floatList17.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl22);
        java.lang.Long long28 = nanoSatMOConnectorImpl22.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl29 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long30 = nanoSatMOConnectorImpl29.getAppDirectoryId();
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray31 = new esa.mo.nmf.SimpleMonitoringInterface[] { nanoSatMOConnectorImpl6, nanoSatMOConnectorImpl10, nanoSatMOConnectorImpl13, nanoSatMOConnectorImpl22, nanoSatMOConnectorImpl29 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener35 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl36 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl36);
        java.lang.Long long38 = nanoSatMOConnectorImpl36.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl39 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener40 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        java.lang.Float[] floatArray42 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList43 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList43, floatArray42);
        java.util.ListIterator<java.lang.Float> floatItor45 = floatList43.listIterator();
        int int47 = floatList43.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl48 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long49 = nanoSatMOConnectorImpl48.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener50 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl48);
        nanoSatMOConnectorImpl48.initAdditionalServices();
        java.lang.Long long52 = nanoSatMOConnectorImpl48.getAppDirectoryId();
        int int53 = floatList43.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl48);
        java.lang.Long long54 = nanoSatMOConnectorImpl48.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl55 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long56 = nanoSatMOConnectorImpl55.getAppDirectoryId();
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray57 = new esa.mo.nmf.SimpleMonitoringInterface[] { nanoSatMOConnectorImpl32, nanoSatMOConnectorImpl36, nanoSatMOConnectorImpl39, nanoSatMOConnectorImpl48, nanoSatMOConnectorImpl55 };
        esa.mo.nmf.SimpleMonitoringInterface[][] simpleMonitoringInterfaceArray58 = new esa.mo.nmf.SimpleMonitoringInterface[][] { simpleMonitoringInterfaceArray31, simpleMonitoringInterfaceArray57 };
        esa.mo.nmf.SimpleMonitoringInterface[][] simpleMonitoringInterfaceArray59 = shortList0.toArray(simpleMonitoringInterfaceArray58);
        java.lang.Integer int60 = shortList0.getTypeShortForm();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265079L + "'", long5.equals(281475010265079L));
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(floatItor19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray31);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(floatItor45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(long54);
        org.junit.Assert.assertNull(long56);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray57);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray58);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-9) + "'", int60.equals((-9)));
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test472");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 10.0d, 0.0d, (-1.0d), (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
        boolean boolean8 = doubleList5.equals((java.lang.Object) 281475010265079L);
        int int9 = doubleList5.size();
        boolean boolean11 = doubleList5.equals((java.lang.Object) "[10.0, 0.0, -1.0, -1.0]");
        java.lang.Float[] floatArray16 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList17 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList17, floatArray16);
        int int20 = floatList17.lastIndexOf((java.lang.Object) (-1L));
        java.util.Iterator<java.lang.Float> floatItor21 = floatList17.iterator();
        org.ccsds.moims.mo.mal.structures.Identifier identifier22 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = identifier22.getAreaVersion();
        boolean boolean25 = identifier22.equals((java.lang.Object) 0);
        boolean boolean26 = floatList17.contains((java.lang.Object) identifier22);
        int int27 = doubleList5.indexOf((java.lang.Object) floatList17);
        doubleList5.add(4, (java.lang.Double) 0.0d);
        doubleList5.clear();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long33 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        java.lang.Long long35 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        boolean boolean36 = doubleList5.equals((java.lang.Object) nanoSatMOConnectorImpl32);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        java.lang.Long long38 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(floatItor21);
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNull(long38);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test473");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long7 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.ccsds.moims.mo.mal.structures.Time time11 = new org.ccsds.moims.mo.mal.structures.Time((long) (short) 10);
        try {
            java.lang.Boolean boolean12 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[10.0, 0.0, -1.0, -1.0, 0.0, 0.0]", (java.io.Serializable) time11);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test474");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = null; // flaky: nanoSatMOConnectorImpl0.getMCServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test475");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = nanoSatMOConnectorImpl0.getCOMServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test476");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long8 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList(3);
        floatList11.ensureCapacity(18);
        java.util.stream.Stream<java.lang.Float> floatStream14 = floatList11.stream();
        try {
            java.lang.Boolean boolean16 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("0.0", (java.io.Serializable) floatList11, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNotNull(floatStream14);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test477");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long7 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test478");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long8 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test479");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long4 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer7 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test480");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            esa.mo.platform.impl.util.PlatformServicesConsumer platformServicesConsumer8 = null; // flaky: nanoSatMOConnectorImpl0.getPlatformServices();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test481");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("281474993487886", "[false, true]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test482");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = longList0.getAreaNumber();
        java.lang.Long long2 = longList0.getShortForm();
        java.lang.Integer int3 = longList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = longList0.getAreaNumber();
        java.lang.Object obj5 = longList0.clone();
        java.lang.String str6 = longList0.toString();
        java.lang.Long long7 = longList0.getShortForm();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl8 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long9 = nanoSatMOConnectorImpl8.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener10 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl8);
        nanoSatMOConnectorImpl8.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener12 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl8);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl8);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener14 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl8);
        int int15 = longList0.lastIndexOf((java.lang.Object) closeAppEventListener14);
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265075L + "'", long2.equals(281475010265075L));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-13) + "'", int3.equals((-13)));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "[]" + "'", str6.equals("[]"));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265075L + "'", long7.equals(281475010265075L));
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test483");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 10.0d, 0.0d, (-1.0d), (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
        boolean boolean8 = doubleList5.equals((java.lang.Object) 281475010265079L);
        int int9 = doubleList5.size();
        boolean boolean11 = doubleList5.equals((java.lang.Object) "[10.0, 0.0, -1.0, -1.0]");
        java.lang.Float[] floatArray16 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList17 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList17, floatArray16);
        int int20 = floatList17.lastIndexOf((java.lang.Object) (-1L));
        java.util.Iterator<java.lang.Float> floatItor21 = floatList17.iterator();
        org.ccsds.moims.mo.mal.structures.Identifier identifier22 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = identifier22.getAreaVersion();
        boolean boolean25 = identifier22.equals((java.lang.Object) 0);
        boolean boolean26 = floatList17.contains((java.lang.Object) identifier22);
        int int27 = doubleList5.indexOf((java.lang.Object) floatList17);
        doubleList5.add(4, (java.lang.Double) 0.0d);
        doubleList5.clear();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl32 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long33 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl32);
        java.lang.Long long35 = nanoSatMOConnectorImpl32.getAppDirectoryId();
        boolean boolean36 = doubleList5.equals((java.lang.Object) nanoSatMOConnectorImpl32);
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList37 = null;
        try {
            java.lang.Boolean boolean39 = null; // flaky: nanoSatMOConnectorImpl32.pushMultipleParameterValues(parameterInstanceList37, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(floatItor21);
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test484");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = longList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = longList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = longList0.getAreaNumber();
        longList0.ensureCapacity(14);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = longList0.getAreaVersion();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long8 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        nanoSatMOConnectorImpl7.initAdditionalServices();
        java.lang.Long long11 = nanoSatMOConnectorImpl7.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener12 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl13 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener14 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl13);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl15 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long16 = nanoSatMOConnectorImpl15.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener17 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl15);
        nanoSatMOConnectorImpl15.initAdditionalServices();
        nanoSatMOConnectorImpl15.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl20 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener21 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl20);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl22 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener23 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl22);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener24 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl22);
        java.lang.Long long25 = nanoSatMOConnectorImpl22.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray26 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] { nanoSatMOConnectorImpl7, nanoSatMOConnectorImpl13, nanoSatMOConnectorImpl15, nanoSatMOConnectorImpl20, nanoSatMOConnectorImpl22 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl[] nanoSatMOConnectorImplArray27 = longList0.toArray(nanoSatMOConnectorImplArray26);
        int int28 = longList0.size();
        boolean boolean30 = longList0.add((java.lang.Long) 35L);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray31 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList32, uShortArray31);
        int int35 = uShortList32.lastIndexOf((java.lang.Object) 'a');
        boolean boolean36 = uShortList32.isEmpty();
        uShortList32.clear();
        uShortList32.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray40 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList41, uShortArray40);
        int int44 = uShortList41.lastIndexOf((java.lang.Object) 'a');
        boolean boolean45 = uShortList41.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray47 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort46 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList48 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList48, uShortArray47);
        boolean boolean50 = uShortList41.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList48);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray55 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList56 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList56, uShortArray55);
        int int59 = uShortList56.indexOf((java.lang.Object) 1.0f);
        boolean boolean60 = strList53.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList56);
        boolean boolean61 = uShortList41.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList56);
        boolean boolean62 = uShortList32.addAll(0, (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList56);
        uShortList56.ensureCapacity(5);
        boolean boolean65 = longList0.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList56);
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray26);
        org.junit.Assert.assertNotNull(nanoSatMOConnectorImplArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(uShortArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(uShortArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(uShortArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(uShortArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test485");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.common.configuration.structures.ConfigurationObjectDetails configurationObjectDetails7 = null; // flaky: nanoSatMOConnectorImpl0.getCurrentConfiguration();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test486");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = longList0.getAreaNumber();
        java.lang.Long long2 = longList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.ShortList shortList3 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList3.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element5 = shortList3.createElement();
        java.lang.Object obj6 = shortList3.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = shortList3.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = shortList3.getServiceNumber();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl9 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener10 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl9);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener11 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl9);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener12 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl9);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl13 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener14 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl13);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener15 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl13);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl13);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl17 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener18 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl17);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray19 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener12, closeAppEventListener16, closeAppEventListener18 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl20 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener21 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl20);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener22 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl20);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener23 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl20);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl24 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener25 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl24);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener26 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl24);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener27 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl24);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl28 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener29 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl28);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray30 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener23, closeAppEventListener27, closeAppEventListener29 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl31 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener32 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl31);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener33 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl31);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl31);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl35 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener36 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl35);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener37 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl35);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener38 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl35);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl39 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener40 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl39);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray41 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener34, closeAppEventListener38, closeAppEventListener40 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl42 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener43 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl42);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener44 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl42);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener45 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl42);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl46 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener47 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl46);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener48 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl46);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener49 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl46);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl50 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener51 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl50);
        esa.mo.com.impl.util.EventReceivedListener[] eventReceivedListenerArray52 = new esa.mo.com.impl.util.EventReceivedListener[] { closeAppEventListener45, closeAppEventListener49, closeAppEventListener51 };
        esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray53 = new esa.mo.com.impl.util.EventReceivedListener[][] { eventReceivedListenerArray19, eventReceivedListenerArray30, eventReceivedListenerArray41, eventReceivedListenerArray52 };
        esa.mo.com.impl.util.EventReceivedListener[][] eventReceivedListenerArray54 = shortList3.toArray(eventReceivedListenerArray53);
        java.lang.Double[] doubleArray57 = new java.lang.Double[] { 10.0d, (-1.0d) };
        java.util.ArrayList<java.lang.Double> doubleList58 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList58, doubleArray57);
        java.lang.Object obj60 = doubleList58.clone();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray61 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList62 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList62, uShortArray61);
        int int65 = uShortList62.lastIndexOf((java.lang.Object) 'a');
        boolean boolean66 = uShortList62.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray67 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList68 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList68, uShortArray67);
        int int71 = uShortList68.lastIndexOf((java.lang.Object) 'a');
        boolean boolean72 = uShortList68.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort73 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray74 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort73 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList75 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList75, uShortArray74);
        boolean boolean77 = uShortList68.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList75);
        boolean boolean78 = uShortList62.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList68);
        boolean boolean79 = doubleList58.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList68);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList81 = new org.ccsds.moims.mo.mal.structures.UShortList((int) ' ');
        org.ccsds.moims.mo.mal.structures.UShort uShort82 = uShortList81.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort83 = uShortList81.getAreaNumber();
        boolean boolean84 = uShortList68.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList81);
        org.ccsds.moims.mo.mal.structures.Element element85 = uShortList81.createElement();
        boolean boolean86 = shortList3.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList81);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList88 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        java.lang.Object obj89 = doubleList88.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort90 = doubleList88.getServiceNumber();
        boolean boolean91 = uShortList81.contains((java.lang.Object) doubleList88);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream92 = uShortList81.parallelStream();
        boolean boolean93 = longList0.retainAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList81);
        java.util.stream.Stream<java.lang.Long> longStream94 = longList0.stream();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265075L + "'", long2.equals(281475010265075L));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray19);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray30);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray41);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray52);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray53);
        org.junit.Assert.assertNotNull(eventReceivedListenerArray54);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(uShortArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertNotNull(uShortArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertNotNull(uShortArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79);
        org.junit.Assert.assertNotNull(uShort82);
        org.junit.Assert.assertNotNull(uShort83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertNotNull(element85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(uShort90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
        org.junit.Assert.assertNotNull(uShortStream92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
        org.junit.Assert.assertNotNull(longStream94);
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test487");
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray6 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList7 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList7, uShortArray6);
        int int10 = uShortList7.lastIndexOf((java.lang.Object) 'a');
        boolean boolean11 = uShortList7.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray13 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort12 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList14 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList14, uShortArray13);
        boolean boolean16 = uShortList7.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList14);
        boolean boolean17 = shortList4.remove((java.lang.Object) boolean16);
        shortList4.clear();
        org.ccsds.moims.mo.mal.structures.URI uRI19 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = uRI19.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray21 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI19 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList22, uRIArray21);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor25 = uRIList22.listIterator((int) (short) 0);
        org.ccsds.moims.mo.mal.structures.URI uRI27 = new org.ccsds.moims.mo.mal.structures.URI();
        java.lang.Long long28 = uRI27.getShortForm();
        uRIList22.add(0, uRI27);
        int int30 = shortList4.indexOf((java.lang.Object) uRI27);
        shortList4.add(0, (java.lang.Short) (short) -1);
        org.ccsds.moims.mo.mal.structures.StringList stringList34 = new org.ccsds.moims.mo.mal.structures.StringList();
        boolean boolean36 = stringList34.equals((java.lang.Object) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet37 = stringList34.getAreaVersion();
        stringList34.clear();
        java.lang.Short[] shortArray42 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList43 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList43, shortArray42);
        boolean boolean46 = shortList43.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray51 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList52 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList52, uShortArray51);
        int int55 = uShortList52.indexOf((java.lang.Object) 1.0f);
        boolean boolean56 = strList49.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList52);
        boolean boolean57 = shortList43.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList52);
        boolean boolean58 = stringList34.contains((java.lang.Object) boolean57);
        java.lang.String str59 = stringList34.toString();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl60 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long61 = nanoSatMOConnectorImpl60.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener62 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl60);
        nanoSatMOConnectorImpl60.initAdditionalServices();
        java.lang.Long long64 = nanoSatMOConnectorImpl60.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener65 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl60);
        boolean boolean66 = stringList34.contains((java.lang.Object) nanoSatMOConnectorImpl60);
        int int67 = shortList4.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl60);
        org.ccsds.moims.mo.mal.structures.OctetList octetList70 = new org.ccsds.moims.mo.mal.structures.OctetList((int) '4');
        octetList70.ensureCapacity((int) (short) -1);
        org.ccsds.moims.mo.mal.structures.Element element73 = octetList70.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet74 = octetList70.getAreaVersion();
        try {
            java.lang.Boolean boolean76 = null; // flaky: nanoSatMOConnectorImpl60.pushParameterValue("[hi!]", (java.io.Serializable) uOctet74, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(uShortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(uShortArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(uOctet20);
        org.junit.Assert.assertNotNull(uRIArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(uRIItor25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 281474993487890L + "'", long28.equals(281474993487890L));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(uOctet37);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertNotNull(uShortArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "[]" + "'", str59.equals("[]"));
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNull(long64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertNotNull(uOctet74);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test488");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element2 = shortList0.createElement();
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 1, (short) 100, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList7 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList7, shortArray6);
        boolean boolean10 = shortList7.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray15 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList16 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList16, uShortArray15);
        int int19 = uShortList16.indexOf((java.lang.Object) 1.0f);
        boolean boolean20 = strList13.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList16);
        boolean boolean21 = shortList7.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList16);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor22 = uShortList16.listIterator();
        boolean boolean23 = shortList0.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList16);
        shortList0.trimToSize();
        org.ccsds.moims.mo.mal.structures.Element element25 = shortList0.createElement();
        java.lang.Integer int26 = shortList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.ShortList shortList27 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = shortList27.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element29 = shortList27.createElement();
        boolean boolean30 = shortList27.isEmpty();
        int int31 = shortList27.size();
        java.lang.Long long32 = shortList27.getShortForm();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl33 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener34 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl33);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener35 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl33);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener36 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl33);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl37 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener38 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl37);
        java.lang.Long long39 = nanoSatMOConnectorImpl37.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl40 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener41 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl40);
        java.lang.Float[] floatArray43 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList44 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList44, floatArray43);
        java.util.ListIterator<java.lang.Float> floatItor46 = floatList44.listIterator();
        int int48 = floatList44.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl49 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long50 = nanoSatMOConnectorImpl49.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener51 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl49);
        nanoSatMOConnectorImpl49.initAdditionalServices();
        java.lang.Long long53 = nanoSatMOConnectorImpl49.getAppDirectoryId();
        int int54 = floatList44.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl49);
        java.lang.Long long55 = nanoSatMOConnectorImpl49.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl56 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long57 = nanoSatMOConnectorImpl56.getAppDirectoryId();
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray58 = new esa.mo.nmf.SimpleMonitoringInterface[] { nanoSatMOConnectorImpl33, nanoSatMOConnectorImpl37, nanoSatMOConnectorImpl40, nanoSatMOConnectorImpl49, nanoSatMOConnectorImpl56 };
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl59 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener60 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl59);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener61 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl59);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener62 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl59);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl63 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener64 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl63);
        java.lang.Long long65 = nanoSatMOConnectorImpl63.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl66 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener67 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl66);
        java.lang.Float[] floatArray69 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList70 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList70, floatArray69);
        java.util.ListIterator<java.lang.Float> floatItor72 = floatList70.listIterator();
        int int74 = floatList70.indexOf((java.lang.Object) "[-1, 281475010265070]");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl75 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long76 = nanoSatMOConnectorImpl75.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener77 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl75);
        nanoSatMOConnectorImpl75.initAdditionalServices();
        java.lang.Long long79 = nanoSatMOConnectorImpl75.getAppDirectoryId();
        int int80 = floatList70.lastIndexOf((java.lang.Object) nanoSatMOConnectorImpl75);
        java.lang.Long long81 = nanoSatMOConnectorImpl75.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl82 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long83 = nanoSatMOConnectorImpl82.getAppDirectoryId();
        esa.mo.nmf.SimpleMonitoringInterface[] simpleMonitoringInterfaceArray84 = new esa.mo.nmf.SimpleMonitoringInterface[] { nanoSatMOConnectorImpl59, nanoSatMOConnectorImpl63, nanoSatMOConnectorImpl66, nanoSatMOConnectorImpl75, nanoSatMOConnectorImpl82 };
        esa.mo.nmf.SimpleMonitoringInterface[][] simpleMonitoringInterfaceArray85 = new esa.mo.nmf.SimpleMonitoringInterface[][] { simpleMonitoringInterfaceArray58, simpleMonitoringInterfaceArray84 };
        esa.mo.nmf.SimpleMonitoringInterface[][] simpleMonitoringInterfaceArray86 = shortList27.toArray(simpleMonitoringInterfaceArray85);
        esa.mo.nmf.SimpleMonitoringInterface[][] simpleMonitoringInterfaceArray87 = shortList0.toArray(simpleMonitoringInterfaceArray86);
        org.ccsds.moims.mo.mal.structures.Element element88 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort89 = shortList0.getAreaNumber();
        java.lang.Long long90 = uShort89.getShortForm();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(uShortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(uShortItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-9) + "'", int26.equals((-9)));
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 281475010265079L + "'", long32.equals(281475010265079L));
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(floatItor46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray58);
        org.junit.Assert.assertNull(long65);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertNotNull(floatItor72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(long76);
        org.junit.Assert.assertNull(long79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(long81);
        org.junit.Assert.assertNull(long83);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray84);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray85);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray86);
        org.junit.Assert.assertNotNull(simpleMonitoringInterfaceArray87);
        org.junit.Assert.assertNotNull(element88);
        org.junit.Assert.assertNotNull(uShort89);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 281474993487882L + "'", long90.equals(281474993487882L));
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test489");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test490");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier5 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test491");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.Long long5 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener7 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("[10.0, 0.0, -1.0, -1.0, 0.0, 0.0]", "281474993487875");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test492");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            nanoSatMOConnectorImpl0.writeCentralDirectoryServiceURI("hi!", "[, [true, true]]");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test493");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long6 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        java.lang.Long long7 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.lang.Object[] objArray14 = strList12.toArray();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.ArrayList<java.lang.Integer> intList19 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        intList19.ensureCapacity((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray23 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList24 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList24, uShortArray23);
        int int27 = uShortList24.lastIndexOf((java.lang.Object) 'a');
        boolean boolean28 = uShortList24.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort29 = new org.ccsds.moims.mo.mal.structures.UShort();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray30 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort29 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList31, uShortArray30);
        boolean boolean33 = uShortList24.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList31);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray38 = new org.ccsds.moims.mo.mal.structures.UShort[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList39, uShortArray38);
        int int42 = uShortList39.indexOf((java.lang.Object) 1.0f);
        boolean boolean43 = strList36.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList39);
        boolean boolean44 = uShortList24.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList39);
        boolean boolean45 = intList19.removeAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList39);
        boolean boolean46 = strList12.containsAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList39);
        strList12.trimToSize();
        strList12.clear();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList49 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet50 = integerList49.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = integerList49.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element52 = integerList49.createElement();
        boolean boolean53 = strList12.remove((java.lang.Object) element52);
        try {
            java.lang.Boolean boolean55 = null; // flaky: nanoSatMOConnectorImpl0.pushParameterValue("[-1.0]", (java.io.Serializable) strList12, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(uShortArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(uShortArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(uShortArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(uOctet50);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test494");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(5);
        stringList1.trimToSize();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl3 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl3);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl5 = null;
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener6 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl5);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl7 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener8 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener9 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener10 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl7);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl14 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long15 = nanoSatMOConnectorImpl14.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl14);
        nanoSatMOConnectorImpl14.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener18 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl14);
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl19 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener20 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl19);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener21 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl19);
        java.util.EventListener[] eventListenerArray22 = new java.util.EventListener[] { closeAppEventListener4, closeAppEventListener6, closeAppEventListener10, closeAppEventListener13, closeAppEventListener18, closeAppEventListener21 };
        java.util.EventListener[] eventListenerArray23 = stringList1.toArray(eventListenerArray22);
        java.lang.String str24 = stringList1.toString();
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNotNull(eventListenerArray22);
        org.junit.Assert.assertNotNull(eventListenerArray23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "[]" + "'", str24.equals("[]"));
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test495");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long2 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, (int) (short) -1, (int) (byte) 10, 13, (long) (-10));
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test496");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(true, (-10), 3, (-9), 0L);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test497");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        java.lang.Long long3 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        try {
// flaky:             nanoSatMOConnectorImpl0.reportActionExecutionProgress(false, 65535, 0, (-11), (long) (-4));
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test498");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long1 = nanoSatMOConnectorImpl0.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener2 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener4 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener5 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.mc.impl.provider.ParameterInstance[] parameterInstanceArray10 = new esa.mo.mc.impl.provider.ParameterInstance[] {};
        java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance> parameterInstanceList11 = new java.util.ArrayList<esa.mo.mc.impl.provider.ParameterInstance>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<esa.mo.mc.impl.provider.ParameterInstance>) parameterInstanceList11, parameterInstanceArray10);
        try {
            java.lang.Boolean boolean14 = null; // flaky: nanoSatMOConnectorImpl0.pushMultipleParameterValues(parameterInstanceList11, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(parameterInstanceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test499");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 10.0f, 100.0f, (-1.0f) };
        java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
        boolean boolean7 = floatList4.add((java.lang.Float) 10.0f);
        floatList4.trimToSize();
        boolean boolean9 = floatList4.isEmpty();
        java.util.stream.Stream<java.lang.Float> floatStream10 = floatList4.parallelStream();
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl11 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        java.lang.Long long12 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener13 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        nanoSatMOConnectorImpl11.initAdditionalServices();
        java.lang.Long long15 = nanoSatMOConnectorImpl11.getAppDirectoryId();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener16 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        boolean boolean17 = floatList4.equals((java.lang.Object) nanoSatMOConnectorImpl11);
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener18 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl11);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(floatStream10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test500");
        esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl nanoSatMOConnectorImpl0 = new esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener1 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        esa.mo.nmf.nanosatmoconnector.CloseAppEventListener closeAppEventListener3 = new esa.mo.nmf.nanosatmoconnector.CloseAppEventListener(nanoSatMOConnectorImpl0);
        nanoSatMOConnectorImpl0.initAdditionalServices();
        try {
            org.ccsds.moims.mo.mal.structures.Identifier identifier5 = nanoSatMOConnectorImpl0.getProviderName();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.nmf.nanosatmoconnector.NanoSatMOConnectorImpl.randoop_classUsedFlag from class esa.mo.nmf.NMFProvider");
        } catch (java.lang.IllegalAccessError e) {
        }
    }
}
