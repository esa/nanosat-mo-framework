package esa.nmf.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.lang.Long[] longArray7 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = longList8.contains(obj10);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger13 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean14 = longList8.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList18 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList18,
            booleanArray17);
        boolean boolean20 = longList8.containsAll((java.util.Collection<java.lang.Boolean>) booleanList18);
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList24 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList24,
            booleanArray23);
        java.util.Iterator<java.lang.Boolean> booleanItor26 = booleanList24.iterator();
        int int27 = longList8.indexOf((java.lang.Object) booleanList24);
        boolean boolean28 = uShortList0.retainAll((java.util.Collection<java.lang.Boolean>) booleanList24);
        java.lang.Short[] shortArray31 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList32 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList32,
            shortArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = shortList32.equals(obj34);
        java.util.Iterator<java.lang.Short> shortItor36 = shortList32.iterator();
        java.lang.Object[] objArray37 = shortList32.toArray();
        java.lang.String[] strArray41 = new java.lang.String[]{"[-1, -1, 1, 1, 10]", "100", "100"};
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42,
            strArray41);
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList47 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList47,
            booleanArray46);
        boolean boolean50 = booleanList47.add((java.lang.Boolean) true);
        boolean boolean51 = strList42.removeAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        java.lang.String[] strArray53 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54,
            strArray53);
        int int56 = strList54.size();
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList60 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList60,
            booleanArray59);
        boolean boolean63 = booleanList60.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream64 = booleanList60.stream();
        boolean boolean65 = strList54.containsAll((java.util.Collection<java.lang.Boolean>) booleanList60);
        int int66 = booleanList47.indexOf((java.lang.Object) strList54);
        boolean boolean67 = booleanList47.isEmpty();
        boolean boolean68 = shortList32.containsAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        boolean boolean69 = uShortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        esa.mo.nmf.NMFException nMFException71 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray72 = nMFException71.getSuppressed();
        java.lang.Throwable[] throwableArray73 = nMFException71.getSuppressed();
        java.lang.Throwable[] throwableArray74 = nMFException71.getSuppressed();
        int int75 = booleanList47.indexOf((java.lang.Object) throwableArray74);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(shortItor36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        java.lang.String[] strArray3 = new java.lang.String[]{"[-1, -1, 1, 1, 10]", "100", "100"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        boolean boolean13 = strList4.removeAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.lang.String[] strArray15 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16,
            strArray15);
        int int18 = strList16.size();
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList22 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList22,
            booleanArray21);
        boolean boolean25 = booleanList22.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream26 = booleanList22.stream();
        boolean boolean27 = strList16.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        int int28 = booleanList9.indexOf((java.lang.Object) strList16);
        java.util.Iterator<java.lang.String> strItor29 = strList16.iterator();
        java.util.Iterator<java.lang.String> strItor30 = strList16.iterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF31 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl33 = mCServicesProviderNMF31
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF34 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF34
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl36 = mCServicesProviderNMF34
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl39 = mCServicesProviderNMF37
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF40 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl41 = mCServicesProviderNMF40
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl42 = mCServicesProviderNMF40
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF43 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl44 = mCServicesProviderNMF43
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl45 = mCServicesProviderNMF43
            .getAlertService();
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[] alertHandlerArray46 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[]{alertProviderServiceImpl33,
                                                                                                                                          alertProviderServiceImpl36,
                                                                                                                                          alertProviderServiceImpl39,
                                                                                                                                          alertProviderServiceImpl42,
                                                                                                                                          alertProviderServiceImpl45};
        try {
            org.ccsds.moims.mo.mc.alert.provider.AlertHandler[] alertHandlerArray47 = strList16.toArray(
                alertHandlerArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl33);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl39);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl41);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl42);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl44);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl45);
        org.junit.Assert.assertNotNull(alertHandlerArray46);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("1");
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        esa.mo.nmf.NMFException nMFException0 = new esa.mo.nmf.NMFException();
        java.lang.Throwable[] throwableArray1 = nMFException0.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray1);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        java.lang.Long[] longArray8 = new java.lang.Long[]{4294967295L, 281475010265084L, 100L, 281474993487886L, 0L,
                                                           281474993487876L, 100L, 281474993487890L};
        java.util.ArrayList<java.lang.Long> longList9 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList9, longArray8);
        java.util.ListIterator<java.lang.Long> longItor11 = longList9.listIterator();
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean18 = booleanList15.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.stream();
        java.lang.Double[] doubleArray21 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList22 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList22,
            doubleArray21);
        java.util.Spliterator<java.lang.Double> doubleSpliterator24 = doubleList22.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor25 = doubleList22.iterator();
        boolean boolean26 = booleanList15.contains((java.lang.Object) doubleItor25);
        boolean boolean27 = longList9.removeAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        java.util.Spliterator<java.lang.Long> longSpliterator28 = longList9.spliterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF29 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCServicesProviderNMF29
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl32 = mCServicesProviderNMF29
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF29
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl34 = mCServicesProviderNMF29
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF35 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCServicesProviderNMF35
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF37
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl41 = mCServicesProviderNMF37
            .getAggregationService();
        org.ccsds.moims.mo.mal.provider.MALInteractionHandler[] mALInteractionHandlerArray42 = new org.ccsds.moims.mo.mal.provider.MALInteractionHandler[]{alertProviderServiceImpl34,
                                                                                                                                                           parameterProviderServiceImpl36,
                                                                                                                                                           aggregationProviderServiceImpl41};
        try {
            org.ccsds.moims.mo.mal.provider.MALInteractionHandler[] mALInteractionHandlerArray43 = longList9.toArray(
                mALInteractionHandlerArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(longItor11);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator24);
        org.junit.Assert.assertNotNull(doubleItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(longSpliterator28);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl34);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl41);
        org.junit.Assert.assertNotNull(mALInteractionHandlerArray42);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element17 = shortList0.createElement();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = shortList0.indexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList22 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str23 = doubleList22.toString();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        java.util.ListIterator<java.lang.Boolean> booleanItor29 = booleanList26.listIterator((int) (short) 1);
        boolean boolean30 = doubleList22.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34,
            byteArray33);
        boolean boolean36 = byteList34.isEmpty();
        int int37 = byteList34.size();
        int int38 = booleanList26.indexOf((java.lang.Object) byteList34);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        java.util.Iterator<java.lang.Boolean> booleanItor44 = booleanList42.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream45 = booleanList42.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor46 = booleanList42.iterator();
        boolean boolean47 = byteList34.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = shortList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        try {
            java.util.ListIterator<java.lang.Boolean> booleanItor50 = booleanList42.listIterator((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "[]" + "'", str23.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanItor44);
        org.junit.Assert.assertNotNull(booleanStream45);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        org.ccsds.moims.mo.mal.structures.UShortList uShortList21 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Long long22 = uShortList21.getShortForm();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList23 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) uShortList21);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281475010265078L + "'", long22.equals(281475010265078L));
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.MALEncoder mALEncoder22 = null;
        try {
            floatList0.encode(mALEncoder22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.util.ListIterator<java.lang.Float> floatItor22 = floatList0.listIterator();
        floatList0.clear();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(floatItor22);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl5 = mCServicesProviderNMF0
            .getActionService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl5);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        java.util.Iterator<java.lang.Byte> byteItor7 = byteList5.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration9 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long10 = duration9.getShortForm();
        int int11 = byteList5.indexOf((java.lang.Object) long10);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF12 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl13 = mCServicesProviderNMF12
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF12
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF12
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl16 = mCServicesProviderNMF12
            .getParameterService();
        org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[] parameterSkeletonArray17 = new org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[]{parameterProviderServiceImpl16};
        try {
            org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[] parameterSkeletonArray18 = byteList5.toArray(
                parameterSkeletonArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(byteItor7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487875L + "'", long10.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl16);
        org.junit.Assert.assertNotNull(parameterSkeletonArray17);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[-1, -1, 1, 1, 10]");
        java.lang.Throwable[] throwableArray2 = nMFException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl6 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF0
            .getParameterService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl6);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = stringList12.getAreaVersion();
        try {
            java.lang.String str28 = stringList12.set(17,
                "[4294967295, 281475010265084, 100, 281474993487886, 0, 281474993487876, 100, 281474993487890]");
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 17, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(uOctet25);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        org.ccsds.moims.mo.mal.structures.UShortList uShortList21 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int22 = uShortList21.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor23 = uShortList21.iterator();
        java.lang.Long long24 = uShortList21.getShortForm();
        java.lang.Object[] objArray25 = uShortList21.toArray();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList26 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) uShortList21);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-10) + "'", int22.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 281475010265078L + "'", long24.equals(281475010265078L));
        org.junit.Assert.assertNotNull(objArray25);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList0.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor4 = uShortList0.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF16
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF19 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF19
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF19
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF19
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCServicesProviderNMF19
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration24 = new esa.mo.nmf.MCRegistration(cOMServicesProvider5,
            parameterProviderServiceImpl10, aggregationProviderServiceImpl15, alertProviderServiceImpl18,
            actionProviderServiceImpl23);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl25 = mCRegistration24.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration24.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider27 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF41
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCServicesProviderNMF41
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration46 = new esa.mo.nmf.MCRegistration(cOMServicesProvider27,
            parameterProviderServiceImpl32, aggregationProviderServiceImpl37, alertProviderServiceImpl40,
            actionProviderServiceImpl45);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl50 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCServicesProviderNMF47
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl60 = mCServicesProviderNMF54
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray61 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl26,
                                                                                                                                                                                   actionProviderServiceImpl45,
                                                                                                                                                                                   actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl60};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray62 = uShortList0
            .toArray(actionInheritanceSkeletonArray61);
        uShortList0.clear();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uShortItor4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray61);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray62);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        java.lang.Long[] longArray4 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList5 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList5, longArray4);
        java.lang.Object obj7 = null;
        boolean boolean8 = longList5.contains(obj7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean11 = longList5.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean17 = longList5.containsAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList21 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList21,
            booleanArray20);
        java.util.Iterator<java.lang.Boolean> booleanItor23 = booleanList21.iterator();
        int int24 = longList5.indexOf((java.lang.Object) booleanList21);
        java.lang.Object[] objArray25 = longList5.toArray();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF26 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl27 = mCServicesProviderNMF26
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl28 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF31 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl34 = mCServicesProviderNMF31
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF36 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl37 = mCServicesProviderNMF36
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl38 = mCServicesProviderNMF36
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl39 = mCServicesProviderNMF36
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl40 = mCServicesProviderNMF36
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl41 = mCServicesProviderNMF36
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl42 = mCServicesProviderNMF36
            .getActionService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF36
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF44 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl45 = mCServicesProviderNMF44
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl46 = mCServicesProviderNMF44
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        org.ccsds.moims.mo.mc.aggregation.provider.AggregationInheritanceSkeleton[] aggregationInheritanceSkeletonArray50 = new org.ccsds.moims.mo.mc.aggregation.provider.AggregationInheritanceSkeleton[]{aggregationProviderServiceImpl30,
                                                                                                                                                                                                            aggregationProviderServiceImpl35,
                                                                                                                                                                                                            aggregationProviderServiceImpl43,
                                                                                                                                                                                                            aggregationProviderServiceImpl46,
                                                                                                                                                                                                            aggregationProviderServiceImpl49};
        try {
            org.ccsds.moims.mo.mc.aggregation.provider.AggregationInheritanceSkeleton[] aggregationInheritanceSkeletonArray51 = longList5
                .toArray(aggregationInheritanceSkeletonArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanItor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl27);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl37);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl38);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl39);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl40);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl41);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl45);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl46);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(aggregationInheritanceSkeletonArray50);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("esa.mo.nmf.NMFException");
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        try {
            java.lang.String str26 = stringList12.remove((-18));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.lang.Long long2 = shortList0.getShortForm();
        java.lang.Object[] objArray3 = shortList0.toArray();
        java.lang.Byte[] byteArray8 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
        boolean boolean12 = byteList9.add((java.lang.Byte) (byte) 10);
        java.lang.String str13 = byteList9.toString();
        int int14 = shortList0.lastIndexOf((java.lang.Object) byteList9);
        boolean boolean16 = byteList9.add((java.lang.Byte) (byte) 0);
        boolean boolean18 = byteList9.add((java.lang.Byte) (byte) -1);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider19 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF20 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCServicesProviderNMF20
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl22 = mCServicesProviderNMF20
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl23 = mCServicesProviderNMF20
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl24 = mCServicesProviderNMF20
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF25 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCServicesProviderNMF25
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl27 = mCServicesProviderNMF25
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl28 = mCServicesProviderNMF25
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF25
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF30 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl31 = mCServicesProviderNMF30
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl32 = mCServicesProviderNMF30
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl36 = mCServicesProviderNMF33
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl37 = mCServicesProviderNMF33
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration38 = new esa.mo.nmf.MCRegistration(cOMServicesProvider19,
            parameterProviderServiceImpl24, aggregationProviderServiceImpl29, alertProviderServiceImpl32,
            actionProviderServiceImpl37);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl39 = mCRegistration38.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl[] actionProviderServiceImplArray40 = new esa.mo.mc.impl.provider.ActionProviderServiceImpl[]{actionProviderServiceImpl39};
        try {
            esa.mo.mc.impl.provider.ActionProviderServiceImpl[] actionProviderServiceImplArray41 = byteList9.toArray(
                actionProviderServiceImplArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265079L + "'", long2.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str13.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl22);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl23);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl27);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl31);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl36);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl37);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl39);
        org.junit.Assert.assertNotNull(actionProviderServiceImplArray40);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList23 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.Integer int24 = doubleList23.getTypeShortForm();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList25 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) doubleList23);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-5) + "'", int24.equals((-5)));
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        org.ccsds.moims.mo.mal.structures.StringList stringList25 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        java.lang.Double[] doubleArray27 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList28 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList28,
            doubleArray27);
        java.util.Spliterator<java.lang.Double> doubleSpliterator30 = doubleList28.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor31 = doubleList28.iterator();
        boolean boolean32 = stringList25.equals((java.lang.Object) doubleItor31);
        java.lang.Long long33 = stringList25.getShortForm();
        java.lang.Long[] longArray38 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList39 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList39,
            longArray38);
        java.lang.Object obj41 = null;
        boolean boolean42 = longList39.contains(obj41);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger44 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean45 = longList39.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray48 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList49 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList49,
            booleanArray48);
        boolean boolean51 = longList39.containsAll((java.util.Collection<java.lang.Boolean>) booleanList49);
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList55 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList55,
            booleanArray54);
        java.util.Iterator<java.lang.Boolean> booleanItor57 = booleanList55.iterator();
        int int58 = longList39.indexOf((java.lang.Object) booleanList55);
        longList39.trimToSize();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray60 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList61 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean62 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList61, uRIArray60);
        java.lang.Boolean[] booleanArray65 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList66 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList66,
            booleanArray65);
        java.util.Iterator<java.lang.Boolean> booleanItor68 = booleanList66.iterator();
        boolean boolean69 = uRIList61.retainAll((java.util.Collection<java.lang.Boolean>) booleanList66);
        booleanList66.clear();
        boolean boolean71 = longList39.retainAll((java.util.Collection<java.lang.Boolean>) booleanList66);
        boolean boolean72 = stringList25.containsAll((java.util.Collection<java.lang.Boolean>) booleanList66);
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList73 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) stringList25);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator30);
        org.junit.Assert.assertNotNull(doubleItor31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 281475010265073L + "'", long33.equals(281475010265073L));
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(booleanItor57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(uRIArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(booleanItor68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        try {
            java.lang.String str27 = stringList12.set((-15), "esa.mo.nmf.NMFException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        org.ccsds.moims.mo.mal.structures.LongList longList23 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream24 = longList23.parallelStream();
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList28 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList28,
            booleanArray27);
        java.util.Iterator<java.lang.Boolean> booleanItor30 = booleanList28.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream31 = booleanList28.stream();
        boolean boolean32 = longList23.containsAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList33 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) longList23);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(longStream24);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanItor30);
        org.junit.Assert.assertNotNull(booleanStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("14.0");
        java.lang.String str2 = nMFException1.toString();
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "esa.mo.nmf.NMFException: 14.0" + "'", str2.equals(
            "esa.mo.nmf.NMFException: 14.0"));
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        longList22.trimToSize();
        try {
            java.util.ListIterator<java.lang.Long> longItor26 = longList22.listIterator((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        int int7 = byteList3.indexOf((java.lang.Object) 'a');
        int int9 = byteList3.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12,
            booleanArray11);
        java.util.ListIterator<java.lang.Boolean> booleanItor15 = booleanList12.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream16 = booleanList12.parallelStream();
        boolean boolean18 = booleanList12.add((java.lang.Boolean) false);
        boolean boolean19 = byteList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList12);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList20 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj21 = uShortList20.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream22 = uShortList20
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor23 = uShortList20.iterator();
        boolean boolean24 = byteList3.equals((java.lang.Object) uShortItor23);
        org.ccsds.moims.mo.mal.structures.ShortList shortList25 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj26 = shortList25.clone();
        boolean boolean27 = byteList3.equals((java.lang.Object) shortList25);
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException("-1");
        boolean boolean30 = byteList3.equals((java.lang.Object) nMFException29);
        java.util.Collection<java.lang.Boolean> booleanCollection31 = null;
        try {
            boolean boolean32 = byteList3.removeAll(booleanCollection31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanItor15);
        org.junit.Assert.assertNotNull(booleanStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(uShortStream22);
        org.junit.Assert.assertNotNull(uShortItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        java.lang.Long[] longArray14 = new java.lang.Long[]{281475010265077L, 281474993487884L, 281475010265073L,
                                                            281475010265083L, 281475010265084L, (-1L), 281474993487884L,
                                                            281474993487874L, 281475010265070L, 281474993487888L,
                                                            281474993487887L, 281474993487886L, 100L, 281474993487885L};
        java.util.ArrayList<java.lang.Long> longList15 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList15,
            longArray14);
        java.lang.String str17 = longList15.toString();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        esa.mo.nmf.NMFException nMFException22 = new esa.mo.nmf.NMFException("14.0");
        esa.mo.nmf.NMFException nMFException24 = new esa.mo.nmf.NMFException("[-1, -1, 1, 1, 10]");
        java.lang.Throwable[] throwableArray25 = nMFException24.getSuppressed();
        esa.mo.nmf.NMFException nMFException27 = new esa.mo.nmf.NMFException("esa.mo.nmf.NMFException");
        esa.mo.nmf.NMFException[] nMFExceptionArray28 = new esa.mo.nmf.NMFException[]{nMFException19, nMFException22,
                                                                                      nMFException24, nMFException27};
        try {
            esa.mo.nmf.NMFException[] nMFExceptionArray29 = longList15.toArray(nMFExceptionArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" +
            "[281475010265077, 281474993487884, 281475010265073, 281475010265083, 281475010265084, -1, 281474993487884, 281474993487874, 281475010265070, 281474993487888, 281474993487887, 281474993487886, 100, 281474993487885]" +
            "'", str17.equals(
                "[281475010265077, 281474993487884, 281475010265073, 281475010265083, 281475010265084, -1, 281474993487884, 281474993487874, 281475010265070, 281474993487888, 281474993487887, 281474993487886, 100, 281474993487885]"));
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(nMFExceptionArray28);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        java.lang.Integer[] intArray35 = new java.lang.Integer[]{4, 12, 1, 4, 10, 65535, 5, 0, 5, 0, 14, 13, (-1)};
        java.util.ArrayList<java.lang.Integer> intList36 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36,
            intArray35);
        org.ccsds.moims.mo.mal.structures.Identifier identifier38 = new org.ccsds.moims.mo.mal.structures.Identifier();
        boolean boolean39 = intList36.contains((java.lang.Object) identifier38);
        boolean boolean41 = intList36.remove((java.lang.Object) 281475010265075L);
        intList36.ensureCapacity(6);
        int int44 = intList36.size();
        org.ccsds.moims.mo.mal.structures.LongList longList46 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet47 = longList46.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = longList46.getAreaNumber();
        java.util.Spliterator<java.lang.Long> longSpliterator49 = longList46.spliterator();
        java.lang.Long long50 = longList46.getShortForm();
        boolean boolean51 = intList36.equals((java.lang.Object) longList46);
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList52 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) longList46);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 13 + "'", int44 == 13);
        org.junit.Assert.assertNotNull(uOctet47);
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertNotNull(longSpliterator49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 281475010265075L + "'", long50.equals(281475010265075L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.stream.Stream<java.lang.String> strStream25 = stringList12.parallelStream();
        java.lang.Long long26 = stringList12.getShortForm();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281475010265073L + "'", long26.equals(281475010265073L));
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = longList1.getAreaVersion();
        java.util.Iterator<java.lang.Long> longItor3 = longList1.iterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl6 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl7 = mCServicesProviderNMF4
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl9 = mCServicesProviderNMF4
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF4
            .getParameterService();
        int int11 = longList1.indexOf((java.lang.Object) mCServicesProviderNMF4);
        try {
            java.lang.Long long13 = longList1.remove((int) (short) 0);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(longItor3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl6);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl7);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        int int7 = byteList3.indexOf((java.lang.Object) 'a');
        int int9 = byteList3.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12,
            booleanArray11);
        java.util.ListIterator<java.lang.Boolean> booleanItor15 = booleanList12.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream16 = booleanList12.parallelStream();
        boolean boolean18 = booleanList12.add((java.lang.Boolean) false);
        boolean boolean19 = byteList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList12);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList20 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj21 = uShortList20.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream22 = uShortList20
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor23 = uShortList20.iterator();
        boolean boolean24 = byteList3.equals((java.lang.Object) uShortItor23);
        org.ccsds.moims.mo.mal.structures.ShortList shortList25 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj26 = shortList25.clone();
        boolean boolean27 = byteList3.equals((java.lang.Object) shortList25);
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException("-1");
        boolean boolean30 = byteList3.equals((java.lang.Object) nMFException29);
        byteList3.trimToSize();
        java.util.Iterator<java.lang.Byte> byteItor32 = byteList3.iterator();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanItor15);
        org.junit.Assert.assertNotNull(booleanStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(uShortStream22);
        org.junit.Assert.assertNotNull(uShortItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteItor32);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[-1.0, 10.0]");
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray2 = nMFException1.getSuppressed();
        java.lang.String str3 = nMFException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "esa.mo.nmf.NMFException: false" + "'", str3.equals(
            "esa.mo.nmf.NMFException: false"));
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        java.lang.Long[] longArray4 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList5 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList5, longArray4);
        java.lang.Object obj7 = null;
        boolean boolean8 = longList5.contains(obj7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean11 = longList5.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean17 = longList5.containsAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList21 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList21,
            booleanArray20);
        java.util.Iterator<java.lang.Boolean> booleanItor23 = booleanList21.iterator();
        int int24 = longList5.indexOf((java.lang.Object) booleanList21);
        longList5.trimToSize();
        org.ccsds.moims.mo.mal.structures.Identifier identifier26 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = identifier26.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray28 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean30 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList29, uRIArray28);
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList34 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList34,
            booleanArray33);
        java.util.Iterator<java.lang.Boolean> booleanItor36 = booleanList34.iterator();
        boolean boolean37 = uRIList29.retainAll((java.util.Collection<java.lang.Boolean>) booleanList34);
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList41 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList41,
            booleanArray40);
        boolean boolean44 = booleanList41.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream45 = booleanList41.stream();
        boolean boolean46 = uRIList29.retainAll((java.util.Collection<java.lang.Boolean>) booleanList41);
        uRIList29.ensureCapacity(5);
        boolean boolean49 = identifier26.equals((java.lang.Object) uRIList29);
        boolean boolean50 = uRIList29.isEmpty();
        boolean boolean51 = longList5.equals((java.lang.Object) uRIList29);
        esa.mo.nmf.NMFException nMFException54 = new esa.mo.nmf.NMFException("0");
        esa.mo.nmf.NMFException nMFException55 = new esa.mo.nmf.NMFException("hi!",
            (java.lang.Throwable) nMFException54);
        esa.mo.nmf.NMFException nMFException57 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray58 = nMFException57.getSuppressed();
        java.lang.Throwable[] throwableArray59 = nMFException57.getSuppressed();
        esa.mo.nmf.NMFException nMFException61 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray62 = nMFException61.getSuppressed();
        nMFException57.addSuppressed((java.lang.Throwable) nMFException61);
        esa.mo.nmf.NMFException nMFException65 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray66 = new java.lang.Throwable[]{nMFException55, nMFException61,
                                                                           nMFException65};
        esa.mo.nmf.NMFException nMFException69 = new esa.mo.nmf.NMFException("0");
        esa.mo.nmf.NMFException nMFException70 = new esa.mo.nmf.NMFException("hi!",
            (java.lang.Throwable) nMFException69);
        esa.mo.nmf.NMFException nMFException72 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray73 = nMFException72.getSuppressed();
        java.lang.Throwable[] throwableArray74 = nMFException72.getSuppressed();
        esa.mo.nmf.NMFException nMFException76 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray77 = nMFException76.getSuppressed();
        nMFException72.addSuppressed((java.lang.Throwable) nMFException76);
        esa.mo.nmf.NMFException nMFException80 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray81 = new java.lang.Throwable[]{nMFException70, nMFException76,
                                                                           nMFException80};
        java.lang.Throwable[][] throwableArray82 = new java.lang.Throwable[][]{throwableArray66, throwableArray81};
        try {
            java.lang.Throwable[][] throwableArray83 = longList5.toArray(throwableArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanItor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertNotNull(uRIArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(booleanItor36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(booleanStream45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray82);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("false");
        java.lang.String str2 = nMFException1.toString();
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "esa.mo.nmf.NMFException: false" + "'", str2.equals(
            "esa.mo.nmf.NMFException: false"));
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element17 = shortList0.createElement();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = shortList0.indexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList22 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str23 = doubleList22.toString();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        java.util.ListIterator<java.lang.Boolean> booleanItor29 = booleanList26.listIterator((int) (short) 1);
        boolean boolean30 = doubleList22.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34,
            byteArray33);
        boolean boolean36 = byteList34.isEmpty();
        int int37 = byteList34.size();
        int int38 = booleanList26.indexOf((java.lang.Object) byteList34);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        java.util.Iterator<java.lang.Boolean> booleanItor44 = booleanList42.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream45 = booleanList42.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor46 = booleanList42.iterator();
        boolean boolean47 = byteList34.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = shortList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean49 = shortList0.isEmpty();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "[]" + "'", str23.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanItor44);
        org.junit.Assert.assertNotNull(booleanStream45);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList22.getServiceNumber();
        try {
            longList22.add(14, (java.lang.Long) 281475010265073L);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 14, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(uShort24);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        org.ccsds.moims.mo.mal.structures.LongList longList23 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList23.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList25 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element26 = stringList25.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList27 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        boolean boolean28 = stringList25.retainAll((java.util.Collection<java.lang.Boolean>) booleanList27);
        boolean boolean29 = longList23.retainAll((java.util.Collection<java.lang.Boolean>) booleanList27);
        java.lang.Long long30 = longList23.getShortForm();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList31 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) longList23);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 281475010265075L + "'", long30.equals(281475010265075L));
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList22.getServiceNumber();
        boolean boolean25 = longList22.isEmpty();
        org.ccsds.moims.mo.mal.structures.Element element26 = longList22.createElement();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(element26);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl4 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl4);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        java.lang.Long[] longArray8 = new java.lang.Long[]{4294967295L, 281475010265084L, 100L, 281474993487886L, 0L,
                                                           281474993487876L, 100L, 281474993487890L};
        java.util.ArrayList<java.lang.Long> longList9 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList9, longArray8);
        java.util.ListIterator<java.lang.Long> longItor11 = longList9.listIterator();
        java.lang.Object obj12 = null;
        boolean boolean13 = longList9.contains(obj12);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList14 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj15 = uShortList14.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = uShortList14.getServiceNumber();
        java.lang.Integer int17 = uShortList14.getTypeShortForm();
        java.lang.Object obj18 = uShortList14.clone();
        org.ccsds.moims.mo.mal.structures.ShortList shortList19 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj20 = shortList19.clone();
        java.util.stream.Stream<java.lang.Short> shortStream21 = shortList19.parallelStream();
        shortList19.trimToSize();
        shortList19.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray41 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList42 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42,
            intArray41);
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList47 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList47,
            booleanArray46);
        java.util.Iterator<java.lang.Boolean> booleanItor49 = booleanList47.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream50 = booleanList47.stream();
        boolean boolean51 = intList42.retainAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        boolean boolean52 = shortList19.containsAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList55 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList55,
            booleanArray54);
        java.util.ListIterator<java.lang.Boolean> booleanItor58 = booleanList55.listIterator((int) (short) 1);
        boolean boolean59 = shortList19.containsAll((java.util.Collection<java.lang.Boolean>) booleanList55);
        java.util.stream.Stream<java.lang.Boolean> booleanStream60 = booleanList55.stream();
        boolean boolean61 = booleanList55.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList62 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long63 = floatList62.getShortForm();
        java.lang.String[] strArray65 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66,
            strArray65);
        int int68 = strList66.size();
        java.lang.Boolean[] booleanArray71 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList72 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList72,
            booleanArray71);
        boolean boolean75 = booleanList72.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream76 = booleanList72.stream();
        boolean boolean77 = strList66.containsAll((java.util.Collection<java.lang.Boolean>) booleanList72);
        boolean boolean78 = floatList62.containsAll((java.util.Collection<java.lang.Boolean>) booleanList72);
        java.util.Spliterator<java.lang.Float> floatSpliterator79 = floatList62.spliterator();
        esa.mo.nmf.NMFException nMFException81 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray82 = nMFException81.getSuppressed();
        int int83 = floatList62.lastIndexOf((java.lang.Object) throwableArray82);
        org.ccsds.moims.mo.mal.structures.Element element84 = floatList62.createElement();
        int int85 = booleanList55.lastIndexOf((java.lang.Object) element84);
        int int86 = uShortList14.lastIndexOf((java.lang.Object) int85);
        boolean boolean87 = longList9.remove((java.lang.Object) int86);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(longItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-10) + "'", int17.equals((-10)));
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(shortStream21);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanItor49);
        org.junit.Assert.assertNotNull(booleanStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(booleanItor58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(booleanStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 281475010265084L + "'", long63.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(booleanStream76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(floatSpliterator79);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(element84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        java.lang.String[] strArray3 = new java.lang.String[]{"[-1, -1, 1, 1, 10]", "100", "100"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        boolean boolean13 = strList4.removeAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.lang.String[] strArray15 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16,
            strArray15);
        int int18 = strList16.size();
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList22 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList22,
            booleanArray21);
        boolean boolean25 = booleanList22.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream26 = booleanList22.stream();
        boolean boolean27 = strList16.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        int int28 = booleanList9.indexOf((java.lang.Object) strList16);
        java.util.Iterator<java.lang.String> strItor29 = strList16.iterator();
        java.util.stream.Stream<java.lang.String> strStream30 = strList16.parallelStream();
        java.lang.Object[] objArray31 = strList16.toArray();
        int int32 = strList16.size();
        strList16.trimToSize();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF34 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF34
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF34
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF34
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF34
            .getParameterService();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider39 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF40 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl41 = mCServicesProviderNMF40
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl42 = mCServicesProviderNMF40
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF40
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl44 = mCServicesProviderNMF40
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF45 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl46 = mCServicesProviderNMF45
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl47 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl48 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF50 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF50
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF53 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl54 = mCServicesProviderNMF53
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl55 = mCServicesProviderNMF53
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl56 = mCServicesProviderNMF53
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl57 = mCServicesProviderNMF53
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration58 = new esa.mo.nmf.MCRegistration(cOMServicesProvider39,
            parameterProviderServiceImpl44, aggregationProviderServiceImpl49, alertProviderServiceImpl52,
            actionProviderServiceImpl57);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF59 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl60 = mCServicesProviderNMF59
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl61 = mCServicesProviderNMF59
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl62 = mCServicesProviderNMF59
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl63 = mCServicesProviderNMF59
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl64 = mCServicesProviderNMF59
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl65 = mCServicesProviderNMF59
            .getParameterService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl66 = mCServicesProviderNMF59
            .getParameterService();
        org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[] parameterSkeletonArray67 = new org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[]{parameterProviderServiceImpl38,
                                                                                                                                                                 parameterProviderServiceImpl44,
                                                                                                                                                                 parameterProviderServiceImpl66};
        try {
            org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[] parameterSkeletonArray68 = strList16.toArray(
                parameterSkeletonArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl41);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl44);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl46);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl47);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl54);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl55);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl56);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl60);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl61);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl62);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl63);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl65);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl66);
        org.junit.Assert.assertNotNull(parameterSkeletonArray67);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray7 = nMFException6.getSuppressed();
        nMFException2.addSuppressed((java.lang.Throwable) nMFException6);
        esa.mo.nmf.NMFException nMFException9 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException6);
        java.lang.Throwable[] throwableArray10 = nMFException6.getSuppressed();
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray15 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray16 = nMFException12.getSuppressed();
        nMFException6.addSuppressed((java.lang.Throwable) nMFException12);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.Integer int1 = doubleList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList0.getServiceNumber();
        java.lang.Byte[] byteArray5 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList6 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList6, byteArray5);
        boolean boolean8 = byteList6.isEmpty();
        int int10 = byteList6.indexOf((java.lang.Object) 'a');
        int int12 = byteList6.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        java.util.ListIterator<java.lang.Boolean> booleanItor18 = booleanList15.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.parallelStream();
        boolean boolean21 = booleanList15.add((java.lang.Boolean) false);
        boolean boolean22 = byteList6.retainAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList23 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj24 = uShortList23.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream25 = uShortList23
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor26 = uShortList23.iterator();
        boolean boolean27 = byteList6.equals((java.lang.Object) uShortItor26);
        org.ccsds.moims.mo.mal.structures.ShortList shortList28 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj29 = shortList28.clone();
        boolean boolean30 = byteList6.equals((java.lang.Object) shortList28);
        esa.mo.nmf.NMFException nMFException32 = new esa.mo.nmf.NMFException("-1");
        boolean boolean33 = byteList6.equals((java.lang.Object) nMFException32);
        byteList6.trimToSize();
        int int35 = doubleList0.indexOf((java.lang.Object) byteList6);
        try {
            java.lang.Byte byte37 = byteList6.get(8);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-5) + "'", int1.equals((-5)));
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanItor18);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(uShortStream25);
        org.junit.Assert.assertNotNull(uShortItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = longList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList3 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element4 = stringList3.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList5 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        boolean boolean6 = stringList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList5);
        boolean boolean7 = longList1.retainAll((java.util.Collection<java.lang.Boolean>) booleanList5);
        esa.mo.nmf.NMFException nMFException9 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray10 = nMFException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = nMFException9.getSuppressed();
        boolean boolean12 = longList1.contains((java.lang.Object) throwableArray11);
        try {
            java.lang.Long long15 = longList1.set(0, (java.lang.Long) 281474993487873L);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element17 = shortList0.createElement();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = shortList0.indexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList22 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str23 = doubleList22.toString();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        java.util.ListIterator<java.lang.Boolean> booleanItor29 = booleanList26.listIterator((int) (short) 1);
        boolean boolean30 = doubleList22.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34,
            byteArray33);
        boolean boolean36 = byteList34.isEmpty();
        int int37 = byteList34.size();
        int int38 = booleanList26.indexOf((java.lang.Object) byteList34);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        java.util.Iterator<java.lang.Boolean> booleanItor44 = booleanList42.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream45 = booleanList42.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor46 = booleanList42.iterator();
        boolean boolean47 = byteList34.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = shortList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        org.ccsds.moims.mo.mal.structures.Element element49 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList50 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int51 = booleanList50.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element52 = booleanList50.createElement();
        boolean boolean53 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        boolean boolean55 = booleanList50.add((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "[]" + "'", str23.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanItor44);
        org.junit.Assert.assertNotNull(booleanStream45);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51.equals((-2)));
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList0.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor4 = uShortList0.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF16
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF19 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF19
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF19
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF19
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCServicesProviderNMF19
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration24 = new esa.mo.nmf.MCRegistration(cOMServicesProvider5,
            parameterProviderServiceImpl10, aggregationProviderServiceImpl15, alertProviderServiceImpl18,
            actionProviderServiceImpl23);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl25 = mCRegistration24.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration24.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider27 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF41
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCServicesProviderNMF41
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration46 = new esa.mo.nmf.MCRegistration(cOMServicesProvider27,
            parameterProviderServiceImpl32, aggregationProviderServiceImpl37, alertProviderServiceImpl40,
            actionProviderServiceImpl45);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl50 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCServicesProviderNMF47
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl60 = mCServicesProviderNMF54
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray61 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl26,
                                                                                                                                                                                   actionProviderServiceImpl45,
                                                                                                                                                                                   actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl60};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray62 = uShortList0
            .toArray(actionInheritanceSkeletonArray61);
        uShortList0.ensureCapacity(18);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime66 = new org.ccsds.moims.mo.mal.structures.FineTime(
            281474993487884L);
        org.ccsds.moims.mo.mal.structures.UShort uShort67 = fineTime66.getAreaNumber();
        boolean boolean68 = uShortList0.equals((java.lang.Object) fineTime66);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet69 = fineTime66.getAreaVersion();
        java.lang.Integer int70 = uOctet69.getTypeShortForm();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uShortItor4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray61);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray62);
        org.junit.Assert.assertNotNull(uShort67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(uOctet69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8 + "'", int70.equals(8));
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        java.lang.Long[] longArray4 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList5 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList5, longArray4);
        java.lang.Object obj7 = null;
        boolean boolean8 = longList5.contains(obj7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean11 = longList5.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean17 = longList5.containsAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList21 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList21,
            booleanArray20);
        java.util.Iterator<java.lang.Boolean> booleanItor23 = booleanList21.iterator();
        int int24 = longList5.indexOf((java.lang.Object) booleanList21);
        java.lang.Object[] objArray25 = longList5.toArray();
        java.util.ListIterator<java.lang.Long> longItor26 = longList5.listIterator();
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList30 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList30,
            booleanArray29);
        java.util.Iterator<java.lang.Boolean> booleanItor32 = booleanList30.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream33 = booleanList30.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor34 = booleanList30.iterator();
        int int35 = longList5.indexOf((java.lang.Object) booleanList30);
        org.ccsds.moims.mo.mal.structures.FloatList floatList36 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long37 = floatList36.getShortForm();
        floatList36.trimToSize();
        java.lang.String str39 = floatList36.toString();
        java.util.Spliterator<java.lang.Float> floatSpliterator40 = floatList36.spliterator();
        java.lang.Byte[] byteArray43 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList44 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList44,
            byteArray43);
        boolean boolean46 = byteList44.isEmpty();
        int int48 = byteList44.indexOf((java.lang.Object) 'a');
        int int50 = byteList44.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList53 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList53,
            booleanArray52);
        java.util.ListIterator<java.lang.Boolean> booleanItor56 = booleanList53.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream57 = booleanList53.parallelStream();
        boolean boolean59 = booleanList53.add((java.lang.Boolean) false);
        boolean boolean60 = byteList44.retainAll((java.util.Collection<java.lang.Boolean>) booleanList53);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList61 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj62 = uShortList61.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream63 = uShortList61
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor64 = uShortList61.iterator();
        boolean boolean65 = byteList44.equals((java.lang.Object) uShortItor64);
        org.ccsds.moims.mo.mal.structures.ShortList shortList66 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj67 = shortList66.clone();
        boolean boolean68 = byteList44.equals((java.lang.Object) shortList66);
        esa.mo.nmf.NMFException nMFException70 = new esa.mo.nmf.NMFException("-1");
        boolean boolean71 = byteList44.equals((java.lang.Object) nMFException70);
        byteList44.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList73 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element74 = booleanList73.createElement();
        java.lang.Long long75 = booleanList73.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort76 = booleanList73.getAreaNumber();
        java.lang.Integer int77 = booleanList73.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray78 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList73};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray79 = byteList44.toArray(booleanListArray78);
        boolean boolean80 = floatList36.remove((java.lang.Object) booleanListArray78);
        try {
            java.util.AbstractCollection<java.lang.Boolean>[] booleanCollectionArray81 = longList5.toArray(
                (java.util.AbstractCollection<java.lang.Boolean>[]) booleanListArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanItor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(longItor26);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(booleanItor32);
        org.junit.Assert.assertNotNull(booleanStream33);
        org.junit.Assert.assertNotNull(booleanItor34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 281475010265084L + "'", long37.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[]" + "'", str39.equals("[]"));
        org.junit.Assert.assertNotNull(floatSpliterator40);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(booleanItor56);
        org.junit.Assert.assertNotNull(booleanStream57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(uShortStream63);
        org.junit.Assert.assertNotNull(uShortItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(element74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 281475010265086L + "'", long75.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-2) + "'", int77.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray78);
        org.junit.Assert.assertNotNull(booleanListArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (short) 10);
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean7 = byteList5.isEmpty();
        int int9 = byteList5.indexOf((java.lang.Object) 'a');
        int int11 = byteList5.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14,
            booleanArray13);
        java.util.ListIterator<java.lang.Boolean> booleanItor17 = booleanList14.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream18 = booleanList14.parallelStream();
        boolean boolean20 = booleanList14.add((java.lang.Boolean) false);
        boolean boolean21 = byteList5.retainAll((java.util.Collection<java.lang.Boolean>) booleanList14);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList22 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj23 = uShortList22.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream24 = uShortList22
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor25 = uShortList22.iterator();
        boolean boolean26 = byteList5.equals((java.lang.Object) uShortItor25);
        org.ccsds.moims.mo.mal.structures.ShortList shortList27 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj28 = shortList27.clone();
        boolean boolean29 = byteList5.equals((java.lang.Object) shortList27);
        esa.mo.nmf.NMFException nMFException31 = new esa.mo.nmf.NMFException("-1");
        boolean boolean32 = byteList5.equals((java.lang.Object) nMFException31);
        boolean boolean33 = uInteger1.equals((java.lang.Object) byteList5);
        org.ccsds.moims.mo.mal.structures.UShort uShort34 = uInteger1.getServiceNumber();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(booleanItor17);
        org.junit.Assert.assertNotNull(booleanStream18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(uShortStream24);
        org.junit.Assert.assertNotNull(uShortItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(uShort34);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl22 = mCRegistration19.actionService;
        org.ccsds.moims.mo.mal.structures.UShortList uShortList23 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj24 = uShortList23.clone();
        boolean boolean25 = uShortList23.isEmpty();
        uShortList23.ensureCapacity(0);
        org.ccsds.moims.mo.mal.structures.Element element28 = uShortList23.createElement();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList29 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) uShortList23);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(element28);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        org.ccsds.moims.mo.mal.structures.URI uRI17 = new org.ccsds.moims.mo.mal.structures.URI();
        int int18 = floatList0.lastIndexOf((java.lang.Object) uRI17);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22,
            byteArray21);
        boolean boolean24 = byteList22.isEmpty();
        int int26 = byteList22.indexOf((java.lang.Object) 'a');
        int int28 = byteList22.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList31 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList31,
            booleanArray30);
        java.util.ListIterator<java.lang.Boolean> booleanItor34 = booleanList31.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream35 = booleanList31.parallelStream();
        boolean boolean37 = booleanList31.add((java.lang.Boolean) false);
        boolean boolean38 = byteList22.retainAll((java.util.Collection<java.lang.Boolean>) booleanList31);
        int int39 = floatList0.indexOf((java.lang.Object) boolean38);
        org.ccsds.moims.mo.mal.structures.LongList longList41 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort42 = longList41.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList43 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element44 = stringList43.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList45 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        boolean boolean46 = stringList43.retainAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        boolean boolean47 = longList41.retainAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        java.lang.Long long48 = booleanList45.getShortForm();
        java.lang.Byte[] byteArray51 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList52 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList52,
            byteArray51);
        boolean boolean54 = byteList52.isEmpty();
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList58 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList58,
            booleanArray57);
        boolean boolean61 = booleanList58.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream62 = booleanList58.stream();
        boolean boolean63 = byteList52.removeAll((java.util.Collection<java.lang.Boolean>) booleanList58);
        boolean boolean64 = booleanList45.removeAll((java.util.Collection<java.lang.Boolean>) booleanList58);
        boolean boolean65 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        java.lang.Integer int66 = floatList0.getTypeShortForm();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider67 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF68 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl69 = mCServicesProviderNMF68
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl70 = mCServicesProviderNMF68
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl71 = mCServicesProviderNMF68
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl72 = mCServicesProviderNMF68
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF73 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl74 = mCServicesProviderNMF73
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl75 = mCServicesProviderNMF73
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl76 = mCServicesProviderNMF73
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl77 = mCServicesProviderNMF73
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF78 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl79 = mCServicesProviderNMF78
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl80 = mCServicesProviderNMF78
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF81 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl82 = mCServicesProviderNMF81
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl83 = mCServicesProviderNMF81
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl84 = mCServicesProviderNMF81
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl85 = mCServicesProviderNMF81
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration86 = new esa.mo.nmf.MCRegistration(cOMServicesProvider67,
            parameterProviderServiceImpl72, aggregationProviderServiceImpl77, alertProviderServiceImpl80,
            actionProviderServiceImpl85);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl87 = mCRegistration86.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl88 = mCRegistration86.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl89 = mCRegistration86.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl90 = mCRegistration86.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl91 = mCRegistration86.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl92 = mCRegistration86.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl93 = mCRegistration86.actionService;
        boolean boolean94 = floatList0.equals((java.lang.Object) actionProviderServiceImpl93);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(booleanItor34);
        org.junit.Assert.assertNotNull(booleanStream35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(uShort42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 281475010265086L + "'", long48.equals(281475010265086L));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(booleanStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-4) + "'", int66.equals((-4)));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl69);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl70);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl71);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl72);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl74);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl75);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl76);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl77);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl79);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl80);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl82);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl83);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl84);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl85);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl87);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl88);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl89);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl90);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl91);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl92);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        java.lang.String[] strArray1 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean5 = strList2.add("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = strList2.equals(obj6);
        java.util.ListIterator<java.lang.String> strItor8 = strList2.listIterator();
        java.lang.Object obj9 = null;
        boolean boolean10 = strList2.remove(obj9);
        java.util.Iterator<java.lang.String> strItor11 = strList2.iterator();
        byte[] byteArray13 = new byte[]{(byte) 10};
        org.ccsds.moims.mo.mal.structures.Blob blob16 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray13, 2,
            (int) ' ');
        java.lang.String str17 = blob16.getURL();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = blob16.getAreaVersion();
        boolean boolean19 = strList2.remove((java.lang.Object) uOctet18);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList21 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        integerList21.add(0, (java.lang.Integer) 4);
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = integerList21.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet26 = integerList21.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList27 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int28 = uShortList27.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor29 = uShortList27.iterator();
        int int30 = integerList21.indexOf((java.lang.Object) uShortList27);
        uShortList27.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream32 = uShortList27.stream();
        java.lang.Byte[] byteArray35 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList36 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList36,
            byteArray35);
        boolean boolean38 = byteList36.isEmpty();
        int int40 = byteList36.indexOf((java.lang.Object) 'a');
        int int42 = byteList36.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList45 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList45,
            booleanArray44);
        java.util.ListIterator<java.lang.Boolean> booleanItor48 = booleanList45.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream49 = booleanList45.parallelStream();
        boolean boolean51 = booleanList45.add((java.lang.Boolean) false);
        boolean boolean52 = byteList36.retainAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList53 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj54 = uShortList53.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream55 = uShortList53
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor56 = uShortList53.iterator();
        boolean boolean57 = byteList36.equals((java.lang.Object) uShortItor56);
        org.ccsds.moims.mo.mal.structures.ShortList shortList58 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj59 = shortList58.clone();
        boolean boolean60 = byteList36.equals((java.lang.Object) shortList58);
        esa.mo.nmf.NMFException nMFException62 = new esa.mo.nmf.NMFException("-1");
        boolean boolean63 = byteList36.equals((java.lang.Object) nMFException62);
        byteList36.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList65 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element66 = booleanList65.createElement();
        java.lang.Long long67 = booleanList65.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort68 = booleanList65.getAreaNumber();
        java.lang.Integer int69 = booleanList65.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray70 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList65};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray71 = byteList36.toArray(booleanListArray70);
        java.util.AbstractList<java.lang.Boolean>[] booleanListArray72 = uShortList27.toArray(
            (java.util.AbstractList<java.lang.Boolean>[]) booleanListArray70);
        try {
            org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray73 = strList2.toArray(booleanListArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strItor8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(uOctet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(uOctet26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-10) + "'", int28.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(uShortStream32);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanItor48);
        org.junit.Assert.assertNotNull(booleanStream49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(uShortStream55);
        org.junit.Assert.assertNotNull(uShortItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(element66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 281475010265086L + "'", long67.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-2) + "'", int69.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray70);
        org.junit.Assert.assertNotNull(booleanListArray71);
        org.junit.Assert.assertNotNull(booleanListArray72);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCRegistration19.aggregationService;
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList22 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element23 = booleanList22.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = booleanList22.getAreaNumber();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList25 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) booleanList22);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(uShort24);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        java.util.stream.Stream<java.lang.Float> floatStream23 = floatList0.stream();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList24 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj25 = uShortList24.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream26 = uShortList24
            .parallelStream();
        java.lang.Long[] longArray31 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList32 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList32,
            longArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = longList32.contains(obj34);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger37 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean38 = longList32.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        boolean boolean44 = longList32.containsAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        java.lang.Boolean[] booleanArray47 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList48 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList48,
            booleanArray47);
        java.util.Iterator<java.lang.Boolean> booleanItor50 = booleanList48.iterator();
        int int51 = longList32.indexOf((java.lang.Object) booleanList48);
        boolean boolean52 = uShortList24.retainAll((java.util.Collection<java.lang.Boolean>) booleanList48);
        java.lang.Double[] doubleArray54 = new java.lang.Double[]{100.0d};
        java.util.ArrayList<java.lang.Double> doubleList55 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList55,
            doubleArray54);
        boolean boolean57 = doubleList55.isEmpty();
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList61 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList61,
            booleanArray60);
        java.util.Iterator<java.lang.Boolean> booleanItor63 = booleanList61.iterator();
        boolean boolean64 = doubleList55.equals((java.lang.Object) booleanList61);
        boolean boolean65 = uShortList24.retainAll((java.util.Collection<java.lang.Boolean>) booleanList61);
        java.lang.Object[] objArray66 = uShortList24.toArray();
        java.lang.Object obj67 = null;
        boolean boolean68 = uShortList24.remove(obj67);
        int int69 = floatList0.indexOf((java.lang.Object) boolean68);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(floatStream23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(uShortStream26);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(booleanItor50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(booleanItor63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        java.lang.Long[] longArray4 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList5 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList5, longArray4);
        java.lang.Object obj7 = null;
        boolean boolean8 = longList5.contains(obj7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean11 = longList5.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor12 = longList5.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean14 = longList5.remove((java.lang.Object) uShort13);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList15 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int16 = uShortList15.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor17 = uShortList15.iterator();
        java.lang.Object[] objArray18 = uShortList15.toArray();
        uShortList15.clear();
        uShortList15.clear();
        boolean boolean21 = uShortList15.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor22 = uShortList15.iterator();
        boolean boolean23 = longList5.contains((java.lang.Object) uShortList15);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList24 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = booleanList24.getAreaNumber();
        boolean boolean26 = longList5.retainAll((java.util.Collection<java.lang.Boolean>) booleanList24);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF27 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCServicesProviderNMF27
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl30 = mCServicesProviderNMF27
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl31 = mCServicesProviderNMF27
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl32 = mCServicesProviderNMF27
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF27
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl34 = mCServicesProviderNMF27
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF35 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCServicesProviderNMF35
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl37 = mCServicesProviderNMF35
            .getActionService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl38 = mCServicesProviderNMF35
            .getAlertService();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider39 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF40 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl41 = mCServicesProviderNMF40
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl42 = mCServicesProviderNMF40
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF40
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl44 = mCServicesProviderNMF40
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF45 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl46 = mCServicesProviderNMF45
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl47 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl48 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF50 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF50
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF53 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl54 = mCServicesProviderNMF53
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl55 = mCServicesProviderNMF53
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl56 = mCServicesProviderNMF53
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl57 = mCServicesProviderNMF53
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration58 = new esa.mo.nmf.MCRegistration(cOMServicesProvider39,
            parameterProviderServiceImpl44, aggregationProviderServiceImpl49, alertProviderServiceImpl52,
            actionProviderServiceImpl57);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF59 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl60 = mCServicesProviderNMF59
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl61 = mCServicesProviderNMF59
            .getAlertService();
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[] alertHandlerArray62 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[]{alertProviderServiceImpl34,
                                                                                                                                          alertProviderServiceImpl38,
                                                                                                                                          alertProviderServiceImpl52,
                                                                                                                                          alertProviderServiceImpl61};
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[] alertHandlerArray63 = longList5.toArray(
            alertHandlerArray62);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(longItor12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-10) + "'", int16.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(uShortItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl31);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl34);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl37);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl38);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl41);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl44);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl46);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl47);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl54);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl55);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl56);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl60);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl61);
        org.junit.Assert.assertNotNull(alertHandlerArray62);
        org.junit.Assert.assertNotNull(alertHandlerArray63);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl4 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl4);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.stream.Stream<java.lang.String> strStream25 = stringList12.parallelStream();
        java.lang.Long[] longArray30 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList31 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList31,
            longArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = longList31.contains(obj33);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger36 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean37 = longList31.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor38 = longList31.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean40 = longList31.remove((java.lang.Object) uShort39);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList41 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int42 = uShortList41.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor43 = uShortList41.iterator();
        java.lang.Object[] objArray44 = uShortList41.toArray();
        uShortList41.clear();
        uShortList41.clear();
        boolean boolean47 = uShortList41.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor48 = uShortList41.iterator();
        boolean boolean49 = longList31.contains((java.lang.Object) uShortList41);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList50 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = booleanList50.getAreaNumber();
        boolean boolean52 = longList31.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        java.lang.Integer int53 = booleanList50.getTypeShortForm();
        boolean boolean55 = booleanList50.add((java.lang.Boolean) true);
        boolean boolean56 = stringList12.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        try {
            java.lang.String str58 = stringList12.remove((int) (byte) 10);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(longItor38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-10) + "'", int42.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(uShortItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-2) + "'", int53.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.LongList longList25 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream26 = longList25.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = longList25.getServiceNumber();
        int int28 = floatList0.indexOf((java.lang.Object) longList25);
        try {
            java.lang.Float float30 = floatList0.get(32);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(longStream26);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray5 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl3 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl4 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl3);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl4);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        org.ccsds.moims.mo.mal.structures.Time time1 = new org.ccsds.moims.mo.mal.structures.Time((long) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = time1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = time1.getServiceNumber();
        java.lang.Integer int4 = time1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element5 = time1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = time1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.FloatList floatList7 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long8 = floatList7.getShortForm();
        java.lang.String[] strArray10 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11,
            strArray10);
        int int13 = strList11.size();
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17,
            booleanArray16);
        boolean boolean20 = booleanList17.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream21 = booleanList17.stream();
        boolean boolean22 = strList11.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        boolean boolean23 = floatList7.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        java.util.Spliterator<java.lang.Float> floatSpliterator24 = floatList7.spliterator();
        esa.mo.nmf.NMFException nMFException26 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray27 = nMFException26.getSuppressed();
        int int28 = floatList7.lastIndexOf((java.lang.Object) throwableArray27);
        java.lang.Integer int29 = floatList7.getTypeShortForm();
        java.util.ListIterator<java.lang.Float> floatItor30 = floatList7.listIterator();
        boolean boolean31 = time1.equals((java.lang.Object) floatList7);
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = time1.getAreaNumber();
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 16 + "'", int4.equals(16));
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265084L + "'", long8.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatSpliterator24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-4) + "'", int29.equals((-4)));
        org.junit.Assert.assertNotNull(floatItor30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(uShort32);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        org.ccsds.moims.mo.mal.structures.FloatList floatList20 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long21 = floatList20.getShortForm();
        java.lang.String[] strArray23 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24,
            strArray23);
        int int26 = strList24.size();
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList30 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList30,
            booleanArray29);
        boolean boolean33 = booleanList30.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream34 = booleanList30.stream();
        boolean boolean35 = strList24.containsAll((java.util.Collection<java.lang.Boolean>) booleanList30);
        boolean boolean36 = floatList20.containsAll((java.util.Collection<java.lang.Boolean>) booleanList30);
        java.util.ListIterator<java.lang.Float> floatItor37 = floatList20.listIterator();
        floatList20.add(0, (java.lang.Float) (-1.0f));
        org.ccsds.moims.mo.mal.structures.ShortList shortList41 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj42 = shortList41.clone();
        java.lang.String str43 = shortList41.toString();
        java.util.Spliterator<java.lang.Short> shortSpliterator44 = shortList41.spliterator();
        boolean boolean45 = floatList20.equals((java.lang.Object) shortList41);
        java.lang.Class<?> wildcardClass46 = shortList41.getClass();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList47 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) shortList41);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 281475010265084L + "'", long21.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(booleanStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(floatItor37);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "[]" + "'", str43.equals("[]"));
        org.junit.Assert.assertNotNull(shortSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        java.lang.Short[] shortArray4 = new java.lang.Short[]{(short) 1, (short) -1, (short) 100, (short) 100};
        java.util.ArrayList<java.lang.Short> shortList5 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList5,
            shortArray4);
        java.lang.Double[] doubleArray8 = new java.lang.Double[]{100.0d};
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9,
            doubleArray8);
        boolean boolean11 = doubleList9.isEmpty();
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        java.util.Iterator<java.lang.Boolean> booleanItor17 = booleanList15.iterator();
        boolean boolean18 = doubleList9.equals((java.lang.Object) booleanList15);
        boolean boolean19 = shortList5.removeAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider20 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF21 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCServicesProviderNMF21
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl23 = mCServicesProviderNMF21
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCServicesProviderNMF21
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCServicesProviderNMF21
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF26 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl27 = mCServicesProviderNMF26
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl28 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF31 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl33 = mCServicesProviderNMF31
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF34 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF34
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF34
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl37 = mCServicesProviderNMF34
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl38 = mCServicesProviderNMF34
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration39 = new esa.mo.nmf.MCRegistration(cOMServicesProvider20,
            parameterProviderServiceImpl25, aggregationProviderServiceImpl30, alertProviderServiceImpl33,
            actionProviderServiceImpl38);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl40 = mCRegistration39.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl41 = mCRegistration39.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider42 = mCRegistration39.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider43 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF44 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl45 = mCServicesProviderNMF44
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl46 = mCServicesProviderNMF44
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl47 = mCServicesProviderNMF44
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF44
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF49 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl50 = mCServicesProviderNMF49
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl51 = mCServicesProviderNMF49
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl52 = mCServicesProviderNMF49
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl53 = mCServicesProviderNMF49
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl56 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF57 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF57
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl59 = mCServicesProviderNMF57
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl60 = mCServicesProviderNMF57
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl61 = mCServicesProviderNMF57
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration62 = new esa.mo.nmf.MCRegistration(cOMServicesProvider43,
            parameterProviderServiceImpl48, aggregationProviderServiceImpl53, alertProviderServiceImpl56,
            actionProviderServiceImpl61);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl63 = mCRegistration62.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl64 = mCRegistration62.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl65 = mCRegistration62.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl66 = mCRegistration62.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl67 = mCRegistration62.actionService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode68 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration62.setMode(registrationMode68);
        mCRegistration39.setMode(registrationMode68);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider71 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF72 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl73 = mCServicesProviderNMF72
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl74 = mCServicesProviderNMF72
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl75 = mCServicesProviderNMF72
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl76 = mCServicesProviderNMF72
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF77 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl78 = mCServicesProviderNMF77
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl79 = mCServicesProviderNMF77
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl80 = mCServicesProviderNMF77
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl81 = mCServicesProviderNMF77
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF82 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl83 = mCServicesProviderNMF82
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl84 = mCServicesProviderNMF82
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF85 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl86 = mCServicesProviderNMF85
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl87 = mCServicesProviderNMF85
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl88 = mCServicesProviderNMF85
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl89 = mCServicesProviderNMF85
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration90 = new esa.mo.nmf.MCRegistration(cOMServicesProvider71,
            parameterProviderServiceImpl76, aggregationProviderServiceImpl81, alertProviderServiceImpl84,
            actionProviderServiceImpl89);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl91 = mCRegistration90.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode92 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration90.setMode(registrationMode92);
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode94 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        esa.mo.nmf.MCRegistration.RegistrationMode[] registrationModeArray95 = new esa.mo.nmf.MCRegistration.RegistrationMode[]{registrationMode68,
                                                                                                                                registrationMode92,
                                                                                                                                registrationMode94};
        try {
            java.lang.Enum<esa.mo.nmf.MCRegistration.RegistrationMode>[] registrationModeEnumArray96 = shortList5
                .toArray((java.lang.Enum<esa.mo.nmf.MCRegistration.RegistrationMode>[]) registrationModeArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanItor17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl27);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl33);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl37);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl38);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl41);
        org.junit.Assert.assertNull(cOMServicesProvider42);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl45);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl46);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl47);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl50);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl51);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl52);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl56);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl59);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl61);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl63);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl65);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl66);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl67);
        org.junit.Assert.assertTrue("'" + registrationMode68 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode68.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl73);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl74);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl75);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl76);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl78);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl79);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl80);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl81);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl83);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl84);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl86);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl87);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl88);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl89);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl91);
        org.junit.Assert.assertTrue("'" + registrationMode92 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode92.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertTrue("'" + registrationMode94 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode94.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(registrationModeArray95);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        org.ccsds.moims.mo.mal.structures.OctetList octetList24 = new org.ccsds.moims.mo.mal.structures.OctetList();
        octetList24.clear();
        java.util.Iterator<java.lang.Byte> byteItor26 = octetList24.iterator();
        org.ccsds.moims.mo.mal.structures.Element element27 = octetList24.createElement();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList28 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) octetList24);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(byteItor26);
        org.junit.Assert.assertNotNull(element27);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl2 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF0
            .getAggregationService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        boolean boolean5 = uShortList0.equals((java.lang.Object) 1);
        java.lang.Byte[] byteArray10 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList11,
            byteArray10);
        java.util.Iterator<java.lang.Byte> byteItor13 = byteList11.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration15 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long16 = duration15.getShortForm();
        int int17 = byteList11.indexOf((java.lang.Object) long16);
        int int18 = uShortList0.lastIndexOf((java.lang.Object) byteList11);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24,
            byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 10);
        java.lang.String str28 = byteList24.toString();
        java.util.stream.Stream<java.lang.Byte> byteStream29 = byteList24.parallelStream();
        int int30 = byteList24.size();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray31 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean33 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList32, uRIArray31);
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList37 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList37,
            booleanArray36);
        java.util.Iterator<java.lang.Boolean> booleanItor39 = booleanList37.iterator();
        boolean boolean40 = uRIList32.retainAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        booleanList37.clear();
        boolean boolean42 = byteList24.removeAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        java.util.stream.Stream<java.lang.Boolean> booleanStream43 = booleanList37.stream();
        int int44 = uShortList0.lastIndexOf((java.lang.Object) booleanList37);
        java.util.ListIterator<java.lang.Boolean> booleanItor45 = booleanList37.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList47 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet48 = longList47.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = longList47.getAreaNumber();
        java.util.Spliterator<java.lang.Long> longSpliterator50 = longList47.spliterator();
        int int51 = booleanList37.lastIndexOf((java.lang.Object) longList47);
        org.ccsds.moims.mo.mal.structures.URIList uRIList53 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.Element element54 = uRIList53.createElement();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor55 = uRIList53.iterator();
        int int56 = longList47.lastIndexOf((java.lang.Object) uRIList53);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet57 = uRIList53.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList58 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long59 = floatList58.getShortForm();
        java.lang.String[] strArray61 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62,
            strArray61);
        int int64 = strList62.size();
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList68 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList68,
            booleanArray67);
        boolean boolean71 = booleanList68.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream72 = booleanList68.stream();
        boolean boolean73 = strList62.containsAll((java.util.Collection<java.lang.Boolean>) booleanList68);
        boolean boolean74 = floatList58.containsAll((java.util.Collection<java.lang.Boolean>) booleanList68);
        java.util.Spliterator<java.lang.Float> floatSpliterator75 = floatList58.spliterator();
        esa.mo.nmf.NMFException nMFException77 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray78 = nMFException77.getSuppressed();
        int int79 = floatList58.lastIndexOf((java.lang.Object) throwableArray78);
        org.ccsds.moims.mo.mal.structures.LongList longList80 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int81 = floatList58.lastIndexOf((java.lang.Object) longList80);
        org.ccsds.moims.mo.mal.structures.UShort uShort82 = longList80.getServiceNumber();
        boolean boolean83 = uRIList53.remove((java.lang.Object) uShort82);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI85 = uRIList53.remove((-5));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteItor13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281474993487875L + "'", long16.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str28.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertNotNull(uRIArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(booleanStream43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(booleanItor45);
        org.junit.Assert.assertNotNull(uOctet48);
        org.junit.Assert.assertNotNull(uShort49);
        org.junit.Assert.assertNotNull(longSpliterator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(uRIItor55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(uOctet57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 281475010265084L + "'", long59.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(booleanStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(floatSpliterator75);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(uShort82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        int int7 = byteList3.indexOf((java.lang.Object) 'a');
        int int9 = byteList3.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12,
            booleanArray11);
        java.util.ListIterator<java.lang.Boolean> booleanItor15 = booleanList12.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream16 = booleanList12.parallelStream();
        boolean boolean18 = booleanList12.add((java.lang.Boolean) false);
        boolean boolean19 = byteList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList12);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList20 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj21 = uShortList20.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream22 = uShortList20
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor23 = uShortList20.iterator();
        boolean boolean24 = byteList3.equals((java.lang.Object) uShortItor23);
        org.ccsds.moims.mo.mal.structures.ShortList shortList25 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj26 = shortList25.clone();
        boolean boolean27 = byteList3.equals((java.lang.Object) shortList25);
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException("-1");
        boolean boolean30 = byteList3.equals((java.lang.Object) nMFException29);
        byteList3.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList32 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element33 = booleanList32.createElement();
        java.lang.Long long34 = booleanList32.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = booleanList32.getAreaNumber();
        java.lang.Integer int36 = booleanList32.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray37 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList32};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray38 = byteList3.toArray(booleanListArray37);
        try {
            java.util.ListIterator<java.lang.Byte> byteItor40 = byteList3.listIterator(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanItor15);
        org.junit.Assert.assertNotNull(booleanStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(uShortStream22);
        org.junit.Assert.assertNotNull(uShortItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 281475010265086L + "'", long34.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-2) + "'", int36.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray37);
        org.junit.Assert.assertNotNull(booleanListArray38);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = longList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList3 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element4 = stringList3.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList5 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        boolean boolean6 = stringList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList5);
        boolean boolean7 = longList1.retainAll((java.util.Collection<java.lang.Boolean>) booleanList5);
        esa.mo.nmf.NMFException nMFException9 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray10 = nMFException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = nMFException9.getSuppressed();
        boolean boolean12 = longList1.contains((java.lang.Object) throwableArray11);
        try {
            java.lang.Long long14 = longList1.remove(2);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl6 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl7 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl6);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl7);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[1]");
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element17 = shortList0.createElement();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = shortList0.indexOf((java.lang.Object) throwableArray20);
        java.util.stream.Stream<java.lang.Short> shortStream22 = shortList0.stream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(shortStream22);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException4 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray5 = nMFException4.getSuppressed();
        java.lang.Throwable[] throwableArray6 = nMFException4.getSuppressed();
        esa.mo.nmf.NMFException nMFException7 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException4);
        java.lang.String str8 = nMFException4.toString();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException4);
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = nMFException12.getSuppressed();
        esa.mo.nmf.NMFException nMFException16 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray17 = nMFException16.getSuppressed();
        nMFException12.addSuppressed((java.lang.Throwable) nMFException16);
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException16);
        java.lang.Throwable[] throwableArray20 = nMFException16.getSuppressed();
        nMFException4.addSuppressed((java.lang.Throwable) nMFException16);
        java.lang.Throwable throwable22 = null;
        try {
            nMFException4.addSuppressed(throwable22);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str8.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int2 = uShortList1.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList1.iterator();
        java.lang.Object[] objArray4 = uShortList1.toArray();
        boolean boolean6 = uShortList1.equals((java.lang.Object) 1);
        esa.mo.nmf.NMFException nMFException9 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray10 = nMFException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = nMFException9.getSuppressed();
        esa.mo.nmf.NMFException nMFException13 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray14 = nMFException13.getSuppressed();
        nMFException9.addSuppressed((java.lang.Throwable) nMFException13);
        java.lang.Throwable[] throwableArray16 = nMFException13.getSuppressed();
        java.lang.Throwable[] throwableArray17 = nMFException13.getSuppressed();
        esa.mo.nmf.NMFException nMFException18 = new esa.mo.nmf.NMFException("[]",
            (java.lang.Throwable) nMFException13);
        int int19 = uShortList1.indexOf((java.lang.Object) nMFException18);
        esa.mo.nmf.NMFException nMFException20 = new esa.mo.nmf.NMFException("false",
            (java.lang.Throwable) nMFException18);
        java.lang.String str21 = nMFException20.toString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-10) + "'", int2.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "esa.mo.nmf.NMFException: false" + "'", str21.equals(
            "esa.mo.nmf.NMFException: false"));
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCRegistration19.aggregationService;
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList25 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = doubleList25.getServiceNumber();
        boolean boolean28 = doubleList25.add((java.lang.Double) 1.0d);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet29 = doubleList25.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element30 = doubleList25.createElement();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList31 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) doubleList25);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(uOctet29);
        org.junit.Assert.assertNotNull(element30);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.Element element24 = floatList0.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = floatList0.getAreaVersion();
        try {
            java.util.List<java.lang.Float> floatList28 = floatList0.subList((int) (byte) 0, (int) (byte) -1);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(0) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(uOctet25);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = longList1.getAreaVersion();
        java.util.Iterator<java.lang.Long> longItor3 = longList1.iterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl6 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl7 = mCServicesProviderNMF4
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl9 = mCServicesProviderNMF4
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF4
            .getParameterService();
        int int11 = longList1.indexOf((java.lang.Object) mCServicesProviderNMF4);
        longList1.trimToSize();
        java.lang.Long long13 = longList1.getShortForm();
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(longItor3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl6);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl7);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 281475010265075L + "'", long13.equals(281475010265075L));
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        java.lang.Throwable throwable1 = null;
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("18.0", throwable1);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCRegistration19.aggregationService;
        org.ccsds.moims.mo.mal.structures.ShortList shortList23 = new org.ccsds.moims.mo.mal.structures.ShortList(14);
        boolean boolean25 = shortList23.add((java.lang.Short) (short) 100);
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList26 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) shortList23);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList18 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        integerList18.add(0, (java.lang.Integer) 4);
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = integerList18.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = integerList18.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList24 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int25 = uShortList24.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor26 = uShortList24.iterator();
        int int27 = integerList18.indexOf((java.lang.Object) uShortList24);
        uShortList24.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream29 = uShortList24.stream();
        java.lang.Byte[] byteArray32 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList33,
            byteArray32);
        boolean boolean35 = byteList33.isEmpty();
        int int37 = byteList33.indexOf((java.lang.Object) 'a');
        int int39 = byteList33.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        java.util.ListIterator<java.lang.Boolean> booleanItor45 = booleanList42.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream46 = booleanList42.parallelStream();
        boolean boolean48 = booleanList42.add((java.lang.Boolean) false);
        boolean boolean49 = byteList33.retainAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList50 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj51 = uShortList50.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream52 = uShortList50
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor53 = uShortList50.iterator();
        boolean boolean54 = byteList33.equals((java.lang.Object) uShortItor53);
        org.ccsds.moims.mo.mal.structures.ShortList shortList55 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj56 = shortList55.clone();
        boolean boolean57 = byteList33.equals((java.lang.Object) shortList55);
        esa.mo.nmf.NMFException nMFException59 = new esa.mo.nmf.NMFException("-1");
        boolean boolean60 = byteList33.equals((java.lang.Object) nMFException59);
        byteList33.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList62 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element63 = booleanList62.createElement();
        java.lang.Long long64 = booleanList62.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = booleanList62.getAreaNumber();
        java.lang.Integer int66 = booleanList62.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray67 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList62};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray68 = byteList33.toArray(booleanListArray67);
        java.util.AbstractList<java.lang.Boolean>[] booleanListArray69 = uShortList24.toArray(
            (java.util.AbstractList<java.lang.Boolean>[]) booleanListArray67);
        org.ccsds.moims.mo.mal.structures.Element[] elementArray70 = shortList0.toArray(
            (org.ccsds.moims.mo.mal.structures.Element[]) booleanListArray67);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-10) + "'", int25.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(uShortStream29);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanItor45);
        org.junit.Assert.assertNotNull(booleanStream46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(uShortStream52);
        org.junit.Assert.assertNotNull(uShortItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 281475010265086L + "'", long64.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-2) + "'", int66.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray67);
        org.junit.Assert.assertNotNull(booleanListArray68);
        org.junit.Assert.assertNotNull(booleanListArray69);
        org.junit.Assert.assertNotNull(elementArray70);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray2 = nMFException1.getSuppressed();
        java.lang.Throwable[] throwableArray3 = nMFException1.getSuppressed();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException5);
        java.lang.Throwable[] throwableArray8 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray9 = nMFException5.getSuppressed();
        esa.mo.nmf.NMFException nMFException10 = new esa.mo.nmf.NMFException();
        nMFException5.addSuppressed((java.lang.Throwable) nMFException10);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList24 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.util.Iterator<java.lang.Double> doubleItor25 = doubleList24.iterator();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList26 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) doubleList24);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(doubleItor25);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("esa.mo.nmf.NMFException: 14.0");
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl26 = mCRegistration19.alertService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl26);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList0.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor4 = uShortList0.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF16
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF19 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF19
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF19
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF19
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCServicesProviderNMF19
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration24 = new esa.mo.nmf.MCRegistration(cOMServicesProvider5,
            parameterProviderServiceImpl10, aggregationProviderServiceImpl15, alertProviderServiceImpl18,
            actionProviderServiceImpl23);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl25 = mCRegistration24.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration24.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider27 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF41
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCServicesProviderNMF41
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration46 = new esa.mo.nmf.MCRegistration(cOMServicesProvider27,
            parameterProviderServiceImpl32, aggregationProviderServiceImpl37, alertProviderServiceImpl40,
            actionProviderServiceImpl45);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl50 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCServicesProviderNMF47
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl60 = mCServicesProviderNMF54
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray61 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl26,
                                                                                                                                                                                   actionProviderServiceImpl45,
                                                                                                                                                                                   actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl60};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray62 = uShortList0
            .toArray(actionInheritanceSkeletonArray61);
        uShortList0.ensureCapacity(18);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList66 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str67 = doubleList66.toString();
        java.util.stream.Stream<java.lang.Double> doubleStream68 = doubleList66.stream();
        java.lang.Object obj69 = doubleList66.clone();
        java.util.stream.Stream<java.lang.Double> doubleStream70 = doubleList66.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort71 = doubleList66.getServiceNumber();
        try {
            uShortList0.add(6, uShort71);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uShortItor4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray61);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray62);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "[]" + "'", str67.equals("[]"));
        org.junit.Assert.assertNotNull(doubleStream68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(doubleStream70);
        org.junit.Assert.assertNotNull(uShort71);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.parallelStream();
        shortList0.trimToSize();
        shortList0.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray22 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList23 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23,
            intArray22);
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList28 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList28,
            booleanArray27);
        java.util.Iterator<java.lang.Boolean> booleanItor30 = booleanList28.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream31 = booleanList28.stream();
        boolean boolean32 = intList23.retainAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        boolean boolean33 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        java.lang.Object obj34 = booleanList28.clone();
        java.lang.Short[] shortArray37 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList38 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList38,
            shortArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = shortList38.equals(obj40);
        java.util.Iterator<java.lang.Short> shortItor42 = shortList38.iterator();
        java.lang.Long[] longArray47 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList48 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList48,
            longArray47);
        java.lang.Object obj50 = null;
        boolean boolean51 = longList48.contains(obj50);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger53 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean54 = longList48.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList58 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList58,
            booleanArray57);
        boolean boolean60 = longList48.containsAll((java.util.Collection<java.lang.Boolean>) booleanList58);
        java.lang.Boolean[] booleanArray63 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList64 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList64,
            booleanArray63);
        java.util.Iterator<java.lang.Boolean> booleanItor66 = booleanList64.iterator();
        int int67 = longList48.indexOf((java.lang.Object) booleanList64);
        int int68 = shortList38.indexOf((java.lang.Object) booleanList64);
        java.util.stream.Stream<java.lang.Boolean> booleanStream69 = booleanList64.parallelStream();
        boolean boolean70 = booleanList28.containsAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        boolean boolean72 = booleanList28.add((java.lang.Boolean) false);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF73 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl74 = mCServicesProviderNMF73
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl75 = mCServicesProviderNMF73
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl76 = mCServicesProviderNMF73
            .getParameterService();
        boolean boolean77 = booleanList28.contains((java.lang.Object) parameterProviderServiceImpl76);
        booleanList28.trimToSize();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanItor30);
        org.junit.Assert.assertNotNull(booleanStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shortItor42);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(booleanItor66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(booleanStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl74);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl75);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str1 = doubleList0.toString();
        java.util.stream.Stream<java.lang.Double> doubleStream2 = doubleList0.stream();
        doubleList0.trimToSize();
        java.util.Iterator<java.lang.Double> doubleItor4 = doubleList0.iterator();
        doubleList0.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList6 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int7 = uShortList6.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor8 = uShortList6.iterator();
        java.lang.Object[] objArray9 = uShortList6.toArray();
        boolean boolean11 = uShortList6.equals((java.lang.Object) 1);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17,
            byteArray16);
        java.util.Iterator<java.lang.Byte> byteItor19 = byteList17.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration21 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long22 = duration21.getShortForm();
        int int23 = byteList17.indexOf((java.lang.Object) long22);
        int int24 = uShortList6.lastIndexOf((java.lang.Object) byteList17);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30,
            byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 10);
        java.lang.String str34 = byteList30.toString();
        java.util.stream.Stream<java.lang.Byte> byteStream35 = byteList30.parallelStream();
        int int36 = byteList30.size();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray37 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList38 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean39 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList38, uRIArray37);
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList43 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList43,
            booleanArray42);
        java.util.Iterator<java.lang.Boolean> booleanItor45 = booleanList43.iterator();
        boolean boolean46 = uRIList38.retainAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        booleanList43.clear();
        boolean boolean48 = byteList30.removeAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        java.util.stream.Stream<java.lang.Boolean> booleanStream49 = booleanList43.stream();
        int int50 = uShortList6.lastIndexOf((java.lang.Object) booleanList43);
        java.util.ListIterator<java.lang.Boolean> booleanItor51 = booleanList43.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList53 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet54 = longList53.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort55 = longList53.getAreaNumber();
        java.util.Spliterator<java.lang.Long> longSpliterator56 = longList53.spliterator();
        int int57 = booleanList43.lastIndexOf((java.lang.Object) longList53);
        org.ccsds.moims.mo.mal.structures.URIList uRIList59 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.Element element60 = uRIList59.createElement();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor61 = uRIList59.iterator();
        int int62 = longList53.lastIndexOf((java.lang.Object) uRIList59);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor63 = uRIList59.iterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF64 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl65 = mCServicesProviderNMF64
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl66 = mCServicesProviderNMF64
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl67 = mCServicesProviderNMF64
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl68 = mCServicesProviderNMF64
            .getParameterService();
        boolean boolean69 = uRIList59.remove((java.lang.Object) parameterProviderServiceImpl68);
        boolean boolean70 = doubleList0.contains((java.lang.Object) parameterProviderServiceImpl68);
        try {
            java.lang.Double double72 = doubleList0.remove(32);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "[]" + "'", str1.equals("[]"));
        org.junit.Assert.assertNotNull(doubleStream2);
        org.junit.Assert.assertNotNull(doubleItor4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-10) + "'", int7.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteItor19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281474993487875L + "'", long22.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str34.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertNotNull(uRIArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(booleanItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(booleanStream49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(booleanItor51);
        org.junit.Assert.assertNotNull(uOctet54);
        org.junit.Assert.assertNotNull(uShort55);
        org.junit.Assert.assertNotNull(longSpliterator56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(element60);
        org.junit.Assert.assertNotNull(uRIItor61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(uRIItor63);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl65);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl66);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        java.lang.Float[] floatArray5 = new java.lang.Float[]{1.0f, 1.0f, 1.0f, 100.0f, 10.0f};
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6,
            floatArray5);
        java.util.stream.Stream<java.lang.Float> floatStream8 = floatList6.stream();
        floatList6.clear();
        org.ccsds.moims.mo.mal.structures.ShortList shortList10 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray12 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13,
            strArray12);
        int int15 = strList13.size();
        java.lang.Boolean[] booleanArray18 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList19 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList19,
            booleanArray18);
        boolean boolean22 = booleanList19.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream23 = booleanList19.stream();
        boolean boolean24 = strList13.containsAll((java.util.Collection<java.lang.Boolean>) booleanList19);
        boolean boolean25 = shortList10.containsAll((java.util.Collection<java.lang.Boolean>) booleanList19);
        java.util.stream.Stream<java.lang.Short> shortStream26 = shortList10.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element27 = shortList10.createElement();
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray30 = nMFException29.getSuppressed();
        int int31 = shortList10.indexOf((java.lang.Object) throwableArray30);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList32 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str33 = doubleList32.toString();
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36,
            booleanArray35);
        java.util.ListIterator<java.lang.Boolean> booleanItor39 = booleanList36.listIterator((int) (short) 1);
        boolean boolean40 = doubleList32.containsAll((java.util.Collection<java.lang.Boolean>) booleanList36);
        java.lang.Byte[] byteArray43 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList44 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList44,
            byteArray43);
        boolean boolean46 = byteList44.isEmpty();
        int int47 = byteList44.size();
        int int48 = booleanList36.indexOf((java.lang.Object) byteList44);
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList52 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList52,
            booleanArray51);
        java.util.Iterator<java.lang.Boolean> booleanItor54 = booleanList52.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream55 = booleanList52.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor56 = booleanList52.iterator();
        boolean boolean57 = byteList44.removeAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        boolean boolean58 = shortList10.removeAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        boolean boolean59 = booleanList52.isEmpty();
        boolean boolean60 = floatList6.retainAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        try {
            java.lang.Float float62 = floatList6.remove((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatStream8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shortStream26);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "[]" + "'", str33.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertNotNull(booleanStream55);
        org.junit.Assert.assertNotNull(booleanItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray2 = nMFException1.getSuppressed();
        java.lang.Throwable[] throwableArray3 = nMFException1.getSuppressed();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray7 = nMFException6.getSuppressed();
        java.lang.Throwable[] throwableArray8 = nMFException6.getSuppressed();
        esa.mo.nmf.NMFException nMFException10 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray11 = nMFException10.getSuppressed();
        nMFException6.addSuppressed((java.lang.Throwable) nMFException10);
        esa.mo.nmf.NMFException nMFException13 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException10);
        nMFException1.addSuppressed((java.lang.Throwable) nMFException13);
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("0");
        esa.mo.nmf.NMFException nMFException18 = new esa.mo.nmf.NMFException("hi!",
            (java.lang.Throwable) nMFException17);
        java.lang.String str19 = nMFException18.toString();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException18);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "esa.mo.nmf.NMFException: hi!" + "'", str19.equals(
            "esa.mo.nmf.NMFException: hi!"));
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        java.lang.Float[] floatArray5 = new java.lang.Float[]{1.0f, 1.0f, 1.0f, 100.0f, 10.0f};
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6,
            floatArray5);
        java.util.stream.Stream<java.lang.Float> floatStream8 = floatList6.stream();
        floatList6.clear();
        org.ccsds.moims.mo.mal.structures.ShortList shortList10 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray12 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13,
            strArray12);
        int int15 = strList13.size();
        java.lang.Boolean[] booleanArray18 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList19 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList19,
            booleanArray18);
        boolean boolean22 = booleanList19.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream23 = booleanList19.stream();
        boolean boolean24 = strList13.containsAll((java.util.Collection<java.lang.Boolean>) booleanList19);
        boolean boolean25 = shortList10.containsAll((java.util.Collection<java.lang.Boolean>) booleanList19);
        java.util.stream.Stream<java.lang.Short> shortStream26 = shortList10.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element27 = shortList10.createElement();
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray30 = nMFException29.getSuppressed();
        int int31 = shortList10.indexOf((java.lang.Object) throwableArray30);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList32 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str33 = doubleList32.toString();
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36,
            booleanArray35);
        java.util.ListIterator<java.lang.Boolean> booleanItor39 = booleanList36.listIterator((int) (short) 1);
        boolean boolean40 = doubleList32.containsAll((java.util.Collection<java.lang.Boolean>) booleanList36);
        java.lang.Byte[] byteArray43 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList44 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList44,
            byteArray43);
        boolean boolean46 = byteList44.isEmpty();
        int int47 = byteList44.size();
        int int48 = booleanList36.indexOf((java.lang.Object) byteList44);
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList52 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList52,
            booleanArray51);
        java.util.Iterator<java.lang.Boolean> booleanItor54 = booleanList52.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream55 = booleanList52.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor56 = booleanList52.iterator();
        boolean boolean57 = byteList44.removeAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        boolean boolean58 = shortList10.removeAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        boolean boolean59 = booleanList52.isEmpty();
        boolean boolean60 = floatList6.retainAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        try {
            java.lang.Float float62 = floatList6.get(0);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatStream8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shortStream26);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "[]" + "'", str33.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertNotNull(booleanStream55);
        org.junit.Assert.assertNotNull(booleanItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.Integer int1 = doubleList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList0.getServiceNumber();
        java.lang.Byte[] byteArray5 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList6 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList6, byteArray5);
        boolean boolean8 = byteList6.isEmpty();
        int int10 = byteList6.indexOf((java.lang.Object) 'a');
        int int12 = byteList6.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        java.util.ListIterator<java.lang.Boolean> booleanItor18 = booleanList15.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.parallelStream();
        boolean boolean21 = booleanList15.add((java.lang.Boolean) false);
        boolean boolean22 = byteList6.retainAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList23 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj24 = uShortList23.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream25 = uShortList23
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor26 = uShortList23.iterator();
        boolean boolean27 = byteList6.equals((java.lang.Object) uShortItor26);
        org.ccsds.moims.mo.mal.structures.ShortList shortList28 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj29 = shortList28.clone();
        boolean boolean30 = byteList6.equals((java.lang.Object) shortList28);
        esa.mo.nmf.NMFException nMFException32 = new esa.mo.nmf.NMFException("-1");
        boolean boolean33 = byteList6.equals((java.lang.Object) nMFException32);
        byteList6.trimToSize();
        int int35 = doubleList0.indexOf((java.lang.Object) byteList6);
        java.util.Spliterator<java.lang.Double> doubleSpliterator36 = doubleList0.spliterator();
        java.util.ListIterator<java.lang.Double> doubleItor37 = doubleList0.listIterator();
        try {
            java.lang.Double double40 = doubleList0.set((int) '#', (java.lang.Double) (-1.0d));
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-5) + "'", int1.equals((-5)));
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanItor18);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(uShortStream25);
        org.junit.Assert.assertNotNull(uShortItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(doubleSpliterator36);
        org.junit.Assert.assertNotNull(doubleItor37);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.Element element2 = uRIList1.createElement();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF3 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF3
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF3
            .getAlertService();
        boolean boolean6 = uRIList1.equals((java.lang.Object) mCServicesProviderNMF3);
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl7 = mCServicesProviderNMF3
            .getAlertService();
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl7);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = longList1.getAreaVersion();
        java.util.Iterator<java.lang.Long> longItor3 = longList1.iterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl6 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl7 = mCServicesProviderNMF4
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl9 = mCServicesProviderNMF4
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF4
            .getParameterService();
        int int11 = longList1.indexOf((java.lang.Object) mCServicesProviderNMF4);
        java.lang.Integer int12 = longList1.getTypeShortForm();
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(longItor3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl6);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl7);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-13) + "'", int12.equals((-13)));
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.Integer int1 = doubleList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList0.getServiceNumber();
        java.lang.Byte[] byteArray5 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList6 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList6, byteArray5);
        boolean boolean8 = byteList6.isEmpty();
        int int10 = byteList6.indexOf((java.lang.Object) 'a');
        int int12 = byteList6.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        java.util.ListIterator<java.lang.Boolean> booleanItor18 = booleanList15.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.parallelStream();
        boolean boolean21 = booleanList15.add((java.lang.Boolean) false);
        boolean boolean22 = byteList6.retainAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList23 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj24 = uShortList23.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream25 = uShortList23
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor26 = uShortList23.iterator();
        boolean boolean27 = byteList6.equals((java.lang.Object) uShortItor26);
        org.ccsds.moims.mo.mal.structures.ShortList shortList28 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj29 = shortList28.clone();
        boolean boolean30 = byteList6.equals((java.lang.Object) shortList28);
        esa.mo.nmf.NMFException nMFException32 = new esa.mo.nmf.NMFException("-1");
        boolean boolean33 = byteList6.equals((java.lang.Object) nMFException32);
        byteList6.trimToSize();
        int int35 = doubleList0.indexOf((java.lang.Object) byteList6);
        java.util.Spliterator<java.lang.Double> doubleSpliterator36 = doubleList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = doubleList0.getAreaNumber();
        java.lang.Long long38 = doubleList0.getShortForm();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-5) + "'", int1.equals((-5)));
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanItor18);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(uShortStream25);
        org.junit.Assert.assertNotNull(uShortItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(doubleSpliterator36);
        org.junit.Assert.assertNotNull(uShort37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 281475010265083L + "'", long38.equals(281475010265083L));
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl23 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl24 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCRegistration19.aggregationService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider26 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF27 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCServicesProviderNMF27
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl31 = mCServicesProviderNMF27
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF32 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl34 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl39 = mCServicesProviderNMF37
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF40 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl41 = mCServicesProviderNMF40
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl42 = mCServicesProviderNMF40
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl43 = mCServicesProviderNMF40
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl44 = mCServicesProviderNMF40
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration45 = new esa.mo.nmf.MCRegistration(cOMServicesProvider26,
            parameterProviderServiceImpl31, aggregationProviderServiceImpl36, alertProviderServiceImpl39,
            actionProviderServiceImpl44);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl46 = mCRegistration45.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl47 = mCRegistration45.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider48 = mCRegistration45.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider49 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF50 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl52 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl53 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl54 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl57 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl58 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl59 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl62 = mCServicesProviderNMF60
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF63 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl64 = mCServicesProviderNMF63
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl65 = mCServicesProviderNMF63
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl66 = mCServicesProviderNMF63
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl67 = mCServicesProviderNMF63
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration68 = new esa.mo.nmf.MCRegistration(cOMServicesProvider49,
            parameterProviderServiceImpl54, aggregationProviderServiceImpl59, alertProviderServiceImpl62,
            actionProviderServiceImpl67);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl69 = mCRegistration68.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl70 = mCRegistration68.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl71 = mCRegistration68.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl72 = mCRegistration68.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl73 = mCRegistration68.actionService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode74 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration68.setMode(registrationMode74);
        mCRegistration45.setMode(registrationMode74);
        mCRegistration19.setMode(registrationMode74);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl23);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl24);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl39);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl41);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl42);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl43);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl46);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl47);
        org.junit.Assert.assertNull(cOMServicesProvider48);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl52);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl54);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl57);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl58);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl62);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl64);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl65);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl66);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl69);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl70);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl71);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl72);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl73);
        org.junit.Assert.assertTrue("'" + registrationMode74 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode74.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str1 = doubleList0.toString();
        java.util.stream.Stream<java.lang.Double> doubleStream2 = doubleList0.stream();
        doubleList0.trimToSize();
        java.util.Iterator<java.lang.Double> doubleItor4 = doubleList0.iterator();
        doubleList0.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList6 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int7 = uShortList6.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor8 = uShortList6.iterator();
        java.lang.Object[] objArray9 = uShortList6.toArray();
        boolean boolean11 = uShortList6.equals((java.lang.Object) 1);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17,
            byteArray16);
        java.util.Iterator<java.lang.Byte> byteItor19 = byteList17.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration21 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long22 = duration21.getShortForm();
        int int23 = byteList17.indexOf((java.lang.Object) long22);
        int int24 = uShortList6.lastIndexOf((java.lang.Object) byteList17);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList30,
            byteArray29);
        boolean boolean33 = byteList30.add((java.lang.Byte) (byte) 10);
        java.lang.String str34 = byteList30.toString();
        java.util.stream.Stream<java.lang.Byte> byteStream35 = byteList30.parallelStream();
        int int36 = byteList30.size();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray37 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList38 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean39 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList38, uRIArray37);
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList43 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList43,
            booleanArray42);
        java.util.Iterator<java.lang.Boolean> booleanItor45 = booleanList43.iterator();
        boolean boolean46 = uRIList38.retainAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        booleanList43.clear();
        boolean boolean48 = byteList30.removeAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        java.util.stream.Stream<java.lang.Boolean> booleanStream49 = booleanList43.stream();
        int int50 = uShortList6.lastIndexOf((java.lang.Object) booleanList43);
        java.util.ListIterator<java.lang.Boolean> booleanItor51 = booleanList43.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList53 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet54 = longList53.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort55 = longList53.getAreaNumber();
        java.util.Spliterator<java.lang.Long> longSpliterator56 = longList53.spliterator();
        int int57 = booleanList43.lastIndexOf((java.lang.Object) longList53);
        org.ccsds.moims.mo.mal.structures.URIList uRIList59 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.Element element60 = uRIList59.createElement();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor61 = uRIList59.iterator();
        int int62 = longList53.lastIndexOf((java.lang.Object) uRIList59);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor63 = uRIList59.iterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF64 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl65 = mCServicesProviderNMF64
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl66 = mCServicesProviderNMF64
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl67 = mCServicesProviderNMF64
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl68 = mCServicesProviderNMF64
            .getParameterService();
        boolean boolean69 = uRIList59.remove((java.lang.Object) parameterProviderServiceImpl68);
        boolean boolean70 = doubleList0.contains((java.lang.Object) parameterProviderServiceImpl68);
        doubleList0.ensureCapacity((-15));
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "[]" + "'", str1.equals("[]"));
        org.junit.Assert.assertNotNull(doubleStream2);
        org.junit.Assert.assertNotNull(doubleItor4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-10) + "'", int7.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteItor19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281474993487875L + "'", long22.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str34.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertNotNull(uRIArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(booleanItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(booleanStream49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(booleanItor51);
        org.junit.Assert.assertNotNull(uOctet54);
        org.junit.Assert.assertNotNull(uShort55);
        org.junit.Assert.assertNotNull(longSpliterator56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(element60);
        org.junit.Assert.assertNotNull(uRIItor61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(uRIItor63);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl65);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl66);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF24 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCServicesProviderNMF24
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl26 = mCServicesProviderNMF24
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl27 = mCServicesProviderNMF24
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCServicesProviderNMF24
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF29 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCServicesProviderNMF29
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl32 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF34 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF34
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl36 = mCServicesProviderNMF34
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF37
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl41 = mCServicesProviderNMF37
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration42 = new esa.mo.nmf.MCRegistration(cOMServicesProvider23,
            parameterProviderServiceImpl28, aggregationProviderServiceImpl33, alertProviderServiceImpl36,
            actionProviderServiceImpl41);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCRegistration42.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl44 = mCRegistration42.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl45 = mCRegistration42.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl46 = mCRegistration42.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl47 = mCRegistration42.actionService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode48 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration42.setMode(registrationMode48);
        mCRegistration19.setMode(registrationMode48);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider51 = mCRegistration19.comServices;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl26);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl27);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl44);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl45);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl46);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl47);
        org.junit.Assert.assertTrue("'" + registrationMode48 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode48.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
        org.junit.Assert.assertNull(cOMServicesProvider51);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF1
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF1
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl6 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF7 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF7
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF7
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl10 = mCServicesProviderNMF7
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl11 = mCServicesProviderNMF7
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl12 = mCServicesProviderNMF7
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl13 = mCServicesProviderNMF7
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF7
            .getAggregationService();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider15 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl18 = mCServicesProviderNMF16
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl19 = mCServicesProviderNMF16
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF21 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCServicesProviderNMF21
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl23 = mCServicesProviderNMF21
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCServicesProviderNMF21
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCServicesProviderNMF21
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF26 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl27 = mCServicesProviderNMF26
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl28 = mCServicesProviderNMF26
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF29 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCServicesProviderNMF29
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl32 = mCServicesProviderNMF29
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl33 = mCServicesProviderNMF29
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration34 = new esa.mo.nmf.MCRegistration(cOMServicesProvider15,
            parameterProviderServiceImpl20, aggregationProviderServiceImpl25, alertProviderServiceImpl28,
            actionProviderServiceImpl33);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF35 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCServicesProviderNMF35
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF35
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl38 = mCServicesProviderNMF35
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF35
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF35
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl41 = mCServicesProviderNMF35
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl42 = mCServicesProviderNMF35
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl43 = mCServicesProviderNMF35
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration44 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl6, aggregationProviderServiceImpl14, alertProviderServiceImpl28,
            actionProviderServiceImpl43);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl6);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl11);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl12);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl18);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl19);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl27);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl28);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl32);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl33);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl38);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl41);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl42);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl43);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl26 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl27 = mCRegistration19.alertService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl26);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl27);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList0.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor4 = uShortList0.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF16
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF19 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF19
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF19
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF19
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCServicesProviderNMF19
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration24 = new esa.mo.nmf.MCRegistration(cOMServicesProvider5,
            parameterProviderServiceImpl10, aggregationProviderServiceImpl15, alertProviderServiceImpl18,
            actionProviderServiceImpl23);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl25 = mCRegistration24.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration24.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider27 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF41
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCServicesProviderNMF41
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration46 = new esa.mo.nmf.MCRegistration(cOMServicesProvider27,
            parameterProviderServiceImpl32, aggregationProviderServiceImpl37, alertProviderServiceImpl40,
            actionProviderServiceImpl45);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl50 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCServicesProviderNMF47
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl60 = mCServicesProviderNMF54
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray61 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl26,
                                                                                                                                                                                   actionProviderServiceImpl45,
                                                                                                                                                                                   actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl60};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray62 = uShortList0
            .toArray(actionInheritanceSkeletonArray61);
        uShortList0.ensureCapacity(18);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime66 = new org.ccsds.moims.mo.mal.structures.FineTime(
            281474993487884L);
        org.ccsds.moims.mo.mal.structures.UShort uShort67 = fineTime66.getAreaNumber();
        boolean boolean68 = uShortList0.equals((java.lang.Object) fineTime66);
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = fineTime66.getServiceNumber();
        int int70 = uShort69.getValue();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uShortItor4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray61);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray62);
        org.junit.Assert.assertNotNull(uShort67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(uShort69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("hi!");
        java.lang.String str2 = nMFException1.toString();
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "esa.mo.nmf.NMFException: hi!" + "'", str2.equals(
            "esa.mo.nmf.NMFException: hi!"));
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element17 = shortList0.createElement();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = shortList0.indexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList22 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str23 = doubleList22.toString();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        java.util.ListIterator<java.lang.Boolean> booleanItor29 = booleanList26.listIterator((int) (short) 1);
        boolean boolean30 = doubleList22.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34,
            byteArray33);
        boolean boolean36 = byteList34.isEmpty();
        int int37 = byteList34.size();
        int int38 = booleanList26.indexOf((java.lang.Object) byteList34);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        java.util.Iterator<java.lang.Boolean> booleanItor44 = booleanList42.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream45 = booleanList42.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor46 = booleanList42.iterator();
        boolean boolean47 = byteList34.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = shortList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        org.ccsds.moims.mo.mal.structures.Element element49 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList50 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int51 = booleanList50.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element52 = booleanList50.createElement();
        boolean boolean53 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        org.ccsds.moims.mo.mal.structures.OctetList octetList54 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort55 = octetList54.getServiceNumber();
        boolean boolean56 = octetList54.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = octetList54.getServiceNumber();
        java.lang.Long long58 = octetList54.getShortForm();
        boolean boolean59 = shortList0.contains((java.lang.Object) octetList54);
        boolean boolean61 = shortList0.add((java.lang.Short) (short) 255);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "[]" + "'", str23.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanItor44);
        org.junit.Assert.assertNotNull(booleanStream45);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51.equals((-2)));
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(uShort55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(uShort57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 281475010265081L + "'", long58.equals(281475010265081L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = longList22.getServiceNumber();
        java.lang.Integer int26 = uShort25.getTypeShortForm();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26.equals(10));
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.parallelStream();
        shortList0.trimToSize();
        shortList0.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray22 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList23 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23,
            intArray22);
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList28 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList28,
            booleanArray27);
        java.util.Iterator<java.lang.Boolean> booleanItor30 = booleanList28.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream31 = booleanList28.stream();
        boolean boolean32 = intList23.retainAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        boolean boolean33 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        java.lang.Object obj34 = booleanList28.clone();
        java.lang.Short[] shortArray37 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList38 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList38,
            shortArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = shortList38.equals(obj40);
        java.util.Iterator<java.lang.Short> shortItor42 = shortList38.iterator();
        java.lang.Long[] longArray47 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList48 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList48,
            longArray47);
        java.lang.Object obj50 = null;
        boolean boolean51 = longList48.contains(obj50);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger53 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean54 = longList48.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList58 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList58,
            booleanArray57);
        boolean boolean60 = longList48.containsAll((java.util.Collection<java.lang.Boolean>) booleanList58);
        java.lang.Boolean[] booleanArray63 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList64 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList64,
            booleanArray63);
        java.util.Iterator<java.lang.Boolean> booleanItor66 = booleanList64.iterator();
        int int67 = longList48.indexOf((java.lang.Object) booleanList64);
        int int68 = shortList38.indexOf((java.lang.Object) booleanList64);
        java.util.stream.Stream<java.lang.Boolean> booleanStream69 = booleanList64.parallelStream();
        boolean boolean70 = booleanList28.containsAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        boolean boolean72 = booleanList28.add((java.lang.Boolean) false);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF73 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl74 = mCServicesProviderNMF73
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl75 = mCServicesProviderNMF73
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl76 = mCServicesProviderNMF73
            .getParameterService();
        boolean boolean77 = booleanList28.contains((java.lang.Object) parameterProviderServiceImpl76);
        java.lang.Object obj78 = booleanList28.clone();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanItor30);
        org.junit.Assert.assertNotNull(booleanStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shortItor42);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(booleanItor66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(booleanStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl74);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl75);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl27 = mCRegistration19.actionService;
        org.ccsds.moims.mo.mal.structures.IntegerList integerList29 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        integerList29.add(0, (java.lang.Integer) 4);
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = integerList29.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList34 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element35 = booleanList34.createElement();
        java.lang.Long long36 = booleanList34.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = booleanList34.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element38 = booleanList34.createElement();
        boolean boolean39 = integerList29.removeAll((java.util.Collection<java.lang.Boolean>) booleanList34);
        org.ccsds.moims.mo.mal.structures.Element element40 = booleanList34.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = booleanList34.getAreaVersion();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList42 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) booleanList34);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl27);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 281475010265086L + "'", long36.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort37);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(uOctet41);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode25 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration19.setMode(registrationMode25);
        org.ccsds.moims.mo.mal.structures.FloatList floatList27 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long28 = floatList27.getShortForm();
        java.lang.String[] strArray30 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31,
            strArray30);
        int int33 = strList31.size();
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList37 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList37,
            booleanArray36);
        boolean boolean40 = booleanList37.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream41 = booleanList37.stream();
        boolean boolean42 = strList31.containsAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        boolean boolean43 = floatList27.containsAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        java.util.Spliterator<java.lang.Float> floatSpliterator44 = floatList27.spliterator();
        esa.mo.nmf.NMFException nMFException46 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray47 = nMFException46.getSuppressed();
        int int48 = floatList27.lastIndexOf((java.lang.Object) throwableArray47);
        org.ccsds.moims.mo.mal.structures.LongList longList49 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int50 = floatList27.lastIndexOf((java.lang.Object) longList49);
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = longList49.getServiceNumber();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList52 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) longList49);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertTrue("'" + registrationMode25 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode25.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 281475010265084L + "'", long28.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(booleanStream41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(floatSpliterator44);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(uShort51);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        java.lang.Long[] longArray4 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList5 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList5, longArray4);
        java.lang.Object obj7 = null;
        boolean boolean8 = longList5.contains(obj7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean11 = longList5.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean17 = longList5.containsAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList21 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList21,
            booleanArray20);
        java.util.Iterator<java.lang.Boolean> booleanItor23 = booleanList21.iterator();
        int int24 = longList5.indexOf((java.lang.Object) booleanList21);
        longList5.trimToSize();
        java.lang.Object[] objArray26 = longList5.toArray();
        java.lang.String str27 = longList5.toString();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList28 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element29 = doubleList28.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = doubleList28.getServiceNumber();
        java.lang.Integer int31 = doubleList28.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = doubleList28.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Union union34 = new org.ccsds.moims.mo.mal.structures.Union(
            (java.lang.Float) 100.0f);
        int int35 = doubleList28.indexOf((java.lang.Object) 100.0f);
        org.ccsds.moims.mo.mal.structures.ShortList shortList36 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray38 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39,
            strArray38);
        int int41 = strList39.size();
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList45 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList45,
            booleanArray44);
        boolean boolean48 = booleanList45.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream49 = booleanList45.stream();
        boolean boolean50 = strList39.containsAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        boolean boolean51 = shortList36.containsAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        java.util.stream.Stream<java.lang.Short> shortStream52 = shortList36.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element53 = shortList36.createElement();
        esa.mo.nmf.NMFException nMFException55 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray56 = nMFException55.getSuppressed();
        int int57 = shortList36.indexOf((java.lang.Object) throwableArray56);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList58 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str59 = doubleList58.toString();
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList62 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList62,
            booleanArray61);
        java.util.ListIterator<java.lang.Boolean> booleanItor65 = booleanList62.listIterator((int) (short) 1);
        boolean boolean66 = doubleList58.containsAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        java.lang.Byte[] byteArray69 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList70 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList70,
            byteArray69);
        boolean boolean72 = byteList70.isEmpty();
        int int73 = byteList70.size();
        int int74 = booleanList62.indexOf((java.lang.Object) byteList70);
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList78 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList78,
            booleanArray77);
        java.util.Iterator<java.lang.Boolean> booleanItor80 = booleanList78.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream81 = booleanList78.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor82 = booleanList78.iterator();
        boolean boolean83 = byteList70.removeAll((java.util.Collection<java.lang.Boolean>) booleanList78);
        boolean boolean84 = shortList36.removeAll((java.util.Collection<java.lang.Boolean>) booleanList78);
        boolean boolean85 = booleanList78.isEmpty();
        boolean boolean86 = doubleList28.remove((java.lang.Object) booleanList78);
        boolean boolean87 = longList5.retainAll((java.util.Collection<java.lang.Boolean>) booleanList78);
        java.util.Collection<java.lang.Boolean> booleanCollection88 = null;
        try {
            boolean boolean89 = booleanList78.addAll(booleanCollection88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanItor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[10, -1, -1, 10]" + "'", str27.equals(
            "[10, -1, -1, 10]"));
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(uShort30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-5) + "'", int31.equals((-5)));
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanStream49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shortStream52);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "[]" + "'", str59.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(booleanItor80);
        org.junit.Assert.assertNotNull(booleanStream81);
        org.junit.Assert.assertNotNull(booleanItor82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList(14);
        java.lang.Integer int2 = uRIList1.getTypeShortForm();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = nMFException5.getSuppressed();
        esa.mo.nmf.NMFException nMFException9 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray10 = nMFException9.getSuppressed();
        nMFException5.addSuppressed((java.lang.Throwable) nMFException9);
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException(
            "[281475010265077, 281474993487884, 281475010265073, 281475010265083, 281475010265084, -1, 281474993487884, 281474993487874, 281475010265070, 281474993487888, 281474993487887, 281474993487886, 100, 281474993487885]",
            (java.lang.Throwable) nMFException5);
        boolean boolean13 = uRIList1.equals(
            (java.lang.Object) "[281475010265077, 281474993487884, 281475010265073, 281475010265083, 281475010265084, -1, 281474993487884, 281474993487874, 281475010265070, 281474993487888, 281474993487887, 281474993487886, 100, 281474993487885]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element17 = shortList0.createElement();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = shortList0.indexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList22 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str23 = doubleList22.toString();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        java.util.ListIterator<java.lang.Boolean> booleanItor29 = booleanList26.listIterator((int) (short) 1);
        boolean boolean30 = doubleList22.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34,
            byteArray33);
        boolean boolean36 = byteList34.isEmpty();
        int int37 = byteList34.size();
        int int38 = booleanList26.indexOf((java.lang.Object) byteList34);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        java.util.Iterator<java.lang.Boolean> booleanItor44 = booleanList42.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream45 = booleanList42.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor46 = booleanList42.iterator();
        boolean boolean47 = byteList34.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = shortList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        org.ccsds.moims.mo.mal.structures.Element element49 = shortList0.createElement();
        java.util.stream.Stream<java.lang.Short> shortStream50 = shortList0.stream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "[]" + "'", str23.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanItor44);
        org.junit.Assert.assertNotNull(booleanStream45);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(shortStream50);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.stream.Stream<java.lang.String> strStream25 = stringList12.parallelStream();
        java.lang.Long[] longArray30 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList31 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList31,
            longArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = longList31.contains(obj33);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger36 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean37 = longList31.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor38 = longList31.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean40 = longList31.remove((java.lang.Object) uShort39);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList41 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int42 = uShortList41.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor43 = uShortList41.iterator();
        java.lang.Object[] objArray44 = uShortList41.toArray();
        uShortList41.clear();
        uShortList41.clear();
        boolean boolean47 = uShortList41.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor48 = uShortList41.iterator();
        boolean boolean49 = longList31.contains((java.lang.Object) uShortList41);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList50 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = booleanList50.getAreaNumber();
        boolean boolean52 = longList31.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        java.lang.Integer int53 = booleanList50.getTypeShortForm();
        boolean boolean55 = booleanList50.add((java.lang.Boolean) true);
        boolean boolean56 = stringList12.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = booleanList50.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = booleanList50.getAreaVersion();
        try {
            java.util.List<java.lang.Boolean> booleanList61 = booleanList50.subList((int) ' ', (int) (byte) 1);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(32) > toIndex(1)");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(longItor38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-10) + "'", int42.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(uShortItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-2) + "'", int53.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(uShort57);
        org.junit.Assert.assertNotNull(uOctet58);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl27 = mCRegistration19.parameterService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl27);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("-1");
        java.lang.String str2 = nMFException1.toString();
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "esa.mo.nmf.NMFException: -1" + "'", str2.equals(
            "esa.mo.nmf.NMFException: -1"));
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException4 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray5 = nMFException4.getSuppressed();
        java.lang.Throwable[] throwableArray6 = nMFException4.getSuppressed();
        esa.mo.nmf.NMFException nMFException7 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException4);
        java.lang.String str8 = nMFException4.toString();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException4);
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = nMFException12.getSuppressed();
        esa.mo.nmf.NMFException nMFException16 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray17 = nMFException16.getSuppressed();
        nMFException12.addSuppressed((java.lang.Throwable) nMFException16);
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException16);
        java.lang.Throwable[] throwableArray20 = nMFException16.getSuppressed();
        nMFException4.addSuppressed((java.lang.Throwable) nMFException16);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList23 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int24 = uShortList23.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor25 = uShortList23.iterator();
        java.lang.Object[] objArray26 = uShortList23.toArray();
        boolean boolean28 = uShortList23.equals((java.lang.Object) 1);
        esa.mo.nmf.NMFException nMFException31 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray32 = nMFException31.getSuppressed();
        java.lang.Throwable[] throwableArray33 = nMFException31.getSuppressed();
        esa.mo.nmf.NMFException nMFException35 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray36 = nMFException35.getSuppressed();
        nMFException31.addSuppressed((java.lang.Throwable) nMFException35);
        java.lang.Throwable[] throwableArray38 = nMFException35.getSuppressed();
        java.lang.Throwable[] throwableArray39 = nMFException35.getSuppressed();
        esa.mo.nmf.NMFException nMFException40 = new esa.mo.nmf.NMFException("[]",
            (java.lang.Throwable) nMFException35);
        int int41 = uShortList23.indexOf((java.lang.Object) nMFException40);
        esa.mo.nmf.NMFException nMFException42 = new esa.mo.nmf.NMFException("false",
            (java.lang.Throwable) nMFException40);
        nMFException4.addSuppressed((java.lang.Throwable) nMFException42);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str8.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-10) + "'", int24.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl6 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl7 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl8 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF0
            .getAggregationService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl6);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl7);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        org.ccsds.moims.mo.mal.structures.StringList stringList26 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        java.lang.Double[] doubleArray28 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList29 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList29,
            doubleArray28);
        java.util.Spliterator<java.lang.Double> doubleSpliterator31 = doubleList29.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor32 = doubleList29.iterator();
        boolean boolean33 = stringList26.equals((java.lang.Object) doubleItor32);
        java.lang.Long long34 = stringList26.getShortForm();
        stringList26.clear();
        byte[] byteArray37 = new byte[]{(byte) 10};
        org.ccsds.moims.mo.mal.structures.Blob blob40 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray37, 2,
            (int) ' ');
        java.lang.Long long41 = blob40.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet42 = blob40.getAreaVersion();
        boolean boolean43 = stringList26.remove((java.lang.Object) blob40);
        boolean boolean45 = stringList26.add("");
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList46 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) stringList26);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator31);
        org.junit.Assert.assertNotNull(doubleItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 281475010265073L + "'", long34.equals(281475010265073L));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 281474993487873L + "'", long41.equals(281474993487873L));
        org.junit.Assert.assertNotNull(uOctet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList0.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor4 = uShortList0.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF16
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF19 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF19
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF19
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF19
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCServicesProviderNMF19
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration24 = new esa.mo.nmf.MCRegistration(cOMServicesProvider5,
            parameterProviderServiceImpl10, aggregationProviderServiceImpl15, alertProviderServiceImpl18,
            actionProviderServiceImpl23);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl25 = mCRegistration24.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration24.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider27 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF41
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCServicesProviderNMF41
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration46 = new esa.mo.nmf.MCRegistration(cOMServicesProvider27,
            parameterProviderServiceImpl32, aggregationProviderServiceImpl37, alertProviderServiceImpl40,
            actionProviderServiceImpl45);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl50 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCServicesProviderNMF47
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl60 = mCServicesProviderNMF54
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray61 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl26,
                                                                                                                                                                                   actionProviderServiceImpl45,
                                                                                                                                                                                   actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl60};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray62 = uShortList0
            .toArray(actionInheritanceSkeletonArray61);
        uShortList0.ensureCapacity(18);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime66 = new org.ccsds.moims.mo.mal.structures.FineTime(
            281474993487884L);
        org.ccsds.moims.mo.mal.structures.UShort uShort67 = fineTime66.getAreaNumber();
        boolean boolean68 = uShortList0.equals((java.lang.Object) fineTime66);
        java.lang.Integer int69 = fineTime66.getTypeShortForm();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uShortItor4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray61);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray62);
        org.junit.Assert.assertNotNull(uShort67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 17 + "'", int69.equals(17));
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray7 = nMFException6.getSuppressed();
        nMFException2.addSuppressed((java.lang.Throwable) nMFException6);
        java.lang.Throwable[] throwableArray9 = nMFException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = nMFException6.getSuppressed();
        esa.mo.nmf.NMFException nMFException11 = new esa.mo.nmf.NMFException("[]", (java.lang.Throwable) nMFException6);
        java.lang.String str12 = nMFException11.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "esa.mo.nmf.NMFException: []" + "'", str12.equals(
            "esa.mo.nmf.NMFException: []"));
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int2 = uShortList1.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList1.iterator();
        java.lang.Object[] objArray4 = uShortList1.toArray();
        boolean boolean6 = uShortList1.equals((java.lang.Object) 1);
        esa.mo.nmf.NMFException nMFException9 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray10 = nMFException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = nMFException9.getSuppressed();
        esa.mo.nmf.NMFException nMFException13 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray14 = nMFException13.getSuppressed();
        nMFException9.addSuppressed((java.lang.Throwable) nMFException13);
        java.lang.Throwable[] throwableArray16 = nMFException13.getSuppressed();
        java.lang.Throwable[] throwableArray17 = nMFException13.getSuppressed();
        esa.mo.nmf.NMFException nMFException18 = new esa.mo.nmf.NMFException("[]",
            (java.lang.Throwable) nMFException13);
        int int19 = uShortList1.indexOf((java.lang.Object) nMFException18);
        java.lang.String str20 = nMFException18.toString();
        esa.mo.nmf.NMFException nMFException21 = new esa.mo.nmf.NMFException("[100]",
            (java.lang.Throwable) nMFException18);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-10) + "'", int2.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "esa.mo.nmf.NMFException: []" + "'", str20.equals(
            "esa.mo.nmf.NMFException: []"));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger3 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        org.ccsds.moims.mo.mal.structures.Element element4 = uInteger3.createElement();
        boolean boolean5 = duration1.equals((java.lang.Object) uInteger3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = duration1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Time time8 = new org.ccsds.moims.mo.mal.structures.Time((long) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = time8.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = time8.getServiceNumber();
        java.lang.Integer int11 = time8.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element12 = time8.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = time8.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.FloatList floatList14 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long15 = floatList14.getShortForm();
        java.lang.String[] strArray17 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18,
            strArray17);
        int int20 = strList18.size();
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList24 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList24,
            booleanArray23);
        boolean boolean27 = booleanList24.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream28 = booleanList24.stream();
        boolean boolean29 = strList18.containsAll((java.util.Collection<java.lang.Boolean>) booleanList24);
        boolean boolean30 = floatList14.containsAll((java.util.Collection<java.lang.Boolean>) booleanList24);
        java.util.Spliterator<java.lang.Float> floatSpliterator31 = floatList14.spliterator();
        esa.mo.nmf.NMFException nMFException33 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray34 = nMFException33.getSuppressed();
        int int35 = floatList14.lastIndexOf((java.lang.Object) throwableArray34);
        java.lang.Integer int36 = floatList14.getTypeShortForm();
        java.util.ListIterator<java.lang.Float> floatItor37 = floatList14.listIterator();
        boolean boolean38 = time8.equals((java.lang.Object) floatList14);
        java.lang.Object obj39 = floatList14.clone();
        boolean boolean40 = uOctet6.equals((java.lang.Object) floatList14);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 16 + "'", int11.equals(16));
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281475010265084L + "'", long15.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanStream28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(floatSpliterator31);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-4) + "'", int36.equals((-4)));
        org.junit.Assert.assertNotNull(floatItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element1 = doubleList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList0.getServiceNumber();
        java.lang.Integer int3 = doubleList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Union union6 = new org.ccsds.moims.mo.mal.structures.Union(
            (java.lang.Float) 100.0f);
        int int7 = doubleList0.indexOf((java.lang.Object) 100.0f);
        org.ccsds.moims.mo.mal.structures.ShortList shortList8 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray10 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11,
            strArray10);
        int int13 = strList11.size();
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17,
            booleanArray16);
        boolean boolean20 = booleanList17.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream21 = booleanList17.stream();
        boolean boolean22 = strList11.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        boolean boolean23 = shortList8.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        java.util.stream.Stream<java.lang.Short> shortStream24 = shortList8.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element25 = shortList8.createElement();
        esa.mo.nmf.NMFException nMFException27 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray28 = nMFException27.getSuppressed();
        int int29 = shortList8.indexOf((java.lang.Object) throwableArray28);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList30 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str31 = doubleList30.toString();
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList34 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList34,
            booleanArray33);
        java.util.ListIterator<java.lang.Boolean> booleanItor37 = booleanList34.listIterator((int) (short) 1);
        boolean boolean38 = doubleList30.containsAll((java.util.Collection<java.lang.Boolean>) booleanList34);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42,
            byteArray41);
        boolean boolean44 = byteList42.isEmpty();
        int int45 = byteList42.size();
        int int46 = booleanList34.indexOf((java.lang.Object) byteList42);
        java.lang.Boolean[] booleanArray49 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList50 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList50,
            booleanArray49);
        java.util.Iterator<java.lang.Boolean> booleanItor52 = booleanList50.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream53 = booleanList50.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor54 = booleanList50.iterator();
        boolean boolean55 = byteList42.removeAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        boolean boolean56 = shortList8.removeAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        boolean boolean57 = booleanList50.isEmpty();
        boolean boolean58 = doubleList0.remove((java.lang.Object) booleanList50);
        try {
            booleanList50.add((-1), (java.lang.Boolean) true);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-5) + "'", int3.equals((-5)));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shortStream24);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "[]" + "'", str31.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(booleanItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(booleanItor52);
        org.junit.Assert.assertNotNull(booleanStream53);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        floatList0.clear();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF26 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl27 = mCServicesProviderNMF26
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl28 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCServicesProviderNMF26
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF31 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl34 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF36 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl37 = mCServicesProviderNMF36
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl38 = mCServicesProviderNMF36
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF39 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl40 = mCServicesProviderNMF39
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl41 = mCServicesProviderNMF39
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl42 = mCServicesProviderNMF39
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl43 = mCServicesProviderNMF39
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration44 = new esa.mo.nmf.MCRegistration(cOMServicesProvider25,
            parameterProviderServiceImpl30, aggregationProviderServiceImpl35, alertProviderServiceImpl38,
            actionProviderServiceImpl43);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCRegistration44.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl46 = mCRegistration44.aggregationService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider47 = mCRegistration44.comServices;
        boolean boolean48 = floatList0.remove((java.lang.Object) cOMServicesProvider47);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl27);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl37);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl38);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl40);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl41);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl42);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl43);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl46);
        org.junit.Assert.assertNull(cOMServicesProvider47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        java.lang.Integer[] intArray25 = new java.lang.Integer[]{(-5), (-5)};
        java.util.ArrayList<java.lang.Integer> intList26 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26,
            intArray25);
        java.util.Spliterator<java.lang.Integer> intSpliterator28 = intList26.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort29 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean30 = intList26.remove((java.lang.Object) uShort29);
        boolean boolean31 = intList26.isEmpty();
        java.lang.Object obj32 = intList26.clone();
        boolean boolean33 = floatList0.contains((java.lang.Object) intList26);
        org.ccsds.moims.mo.mal.structures.Duration duration35 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long36 = duration35.getShortForm();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray37 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList38 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean39 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList38, uRIArray37);
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList43 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList43,
            booleanArray42);
        java.util.Iterator<java.lang.Boolean> booleanItor45 = booleanList43.iterator();
        boolean boolean46 = uRIList38.retainAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        java.lang.Boolean[] booleanArray49 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList50 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList50,
            booleanArray49);
        boolean boolean53 = booleanList50.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream54 = booleanList50.stream();
        boolean boolean55 = uRIList38.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        java.lang.Boolean[] booleanArray58 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList59 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList59,
            booleanArray58);
        java.util.Iterator<java.lang.Boolean> booleanItor61 = booleanList59.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream62 = booleanList59.stream();
        boolean boolean63 = uRIList38.containsAll((java.util.Collection<java.lang.Boolean>) booleanList59);
        boolean boolean64 = duration35.equals((java.lang.Object) boolean63);
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = duration35.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort66 = duration35.getServiceNumber();
        double double67 = duration35.getValue();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet68 = duration35.getAreaVersion();
        boolean boolean69 = intList26.remove((java.lang.Object) duration35);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intSpliterator28);
        org.junit.Assert.assertNotNull(uShort29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 281474993487875L + "'", long36.equals(281474993487875L));
        org.junit.Assert.assertNotNull(uRIArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(booleanItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(booleanItor61);
        org.junit.Assert.assertNotNull(booleanStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertNotNull(uShort66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 14.0d + "'", double67 == 14.0d);
        org.junit.Assert.assertNotNull(uOctet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.Element element24 = longList22.createElement();
        try {
            java.lang.Long long26 = longList22.remove((-13));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(element24);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = org.ccsds.moims.mo.mal.structures.LongList.AREA_SHORT_FORM;
        java.lang.Long long18 = uShort17.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = uShort17.getServiceNumber();
        boolean boolean20 = floatList0.remove((java.lang.Object) uShort17);
        java.util.Spliterator<java.lang.Float> floatSpliterator21 = floatList0.spliterator();
        java.lang.Byte[] byteArray26 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList27 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList27,
            byteArray26);
        boolean boolean30 = byteList27.add((java.lang.Byte) (byte) 10);
        java.lang.String str31 = byteList27.toString();
        java.util.stream.Stream<java.lang.Byte> byteStream32 = byteList27.parallelStream();
        int int33 = byteList27.size();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray34 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean36 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList35, uRIArray34);
        java.lang.Boolean[] booleanArray39 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList40 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList40,
            booleanArray39);
        java.util.Iterator<java.lang.Boolean> booleanItor42 = booleanList40.iterator();
        boolean boolean43 = uRIList35.retainAll((java.util.Collection<java.lang.Boolean>) booleanList40);
        booleanList40.clear();
        boolean boolean45 = byteList27.removeAll((java.util.Collection<java.lang.Boolean>) booleanList40);
        java.util.stream.Stream<java.lang.Boolean> booleanStream46 = booleanList40.stream();
        boolean boolean47 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList40);
        java.lang.Byte[] byteArray52 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53,
            byteArray52);
        boolean boolean56 = byteList53.add((java.lang.Byte) (byte) 10);
        java.lang.String str57 = byteList53.toString();
        java.util.stream.Stream<java.lang.Byte> byteStream58 = byteList53.parallelStream();
        boolean boolean59 = floatList0.equals((java.lang.Object) byteStream58);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl62 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl63 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl64 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl65 = mCServicesProviderNMF60
            .getActionService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl66 = mCServicesProviderNMF60
            .getActionService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl67 = mCServicesProviderNMF60
            .getAlertService();
        int int68 = floatList0.lastIndexOf((java.lang.Object) mCServicesProviderNMF60);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 281474993487882L + "'", long18.equals(281474993487882L));
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(floatSpliterator21);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str31.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertNotNull(uRIArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(booleanStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str57.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl62);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl63);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl64);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl65);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl66);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        esa.mo.nmf.NMFException nMFException3 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray4 = nMFException3.getSuppressed();
        java.lang.Throwable[] throwableArray5 = nMFException3.getSuppressed();
        esa.mo.nmf.NMFException nMFException7 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray8 = nMFException7.getSuppressed();
        nMFException3.addSuppressed((java.lang.Throwable) nMFException7);
        esa.mo.nmf.NMFException nMFException10 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException7);
        esa.mo.nmf.NMFException nMFException11 = new esa.mo.nmf.NMFException("[true]",
            (java.lang.Throwable) nMFException7);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl27 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl28 = mCRegistration19.actionService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl27);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl28);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCServicesProviderNMF23
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl26 = mCServicesProviderNMF23
            .getAggregationService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl27 = mCServicesProviderNMF23
            .getActionService();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl26);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl27);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = identifier0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray2 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean4 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList3, uRIArray2);
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList8 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList8,
            booleanArray7);
        java.util.Iterator<java.lang.Boolean> booleanItor10 = booleanList8.iterator();
        boolean boolean11 = uRIList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList8);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean18 = booleanList15.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.stream();
        boolean boolean20 = uRIList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        uRIList3.ensureCapacity(5);
        boolean boolean23 = identifier0.equals((java.lang.Object) uRIList3);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor24 = uRIList3.listIterator();
        java.lang.String str25 = uRIList3.toString();
        org.ccsds.moims.mo.mal.structures.Union union27 = new org.ccsds.moims.mo.mal.structures.Union(
            (java.lang.Double) 100.0d);
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = union27.getAreaNumber();
        boolean boolean29 = uRIList3.equals((java.lang.Object) union27);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream30 = uRIList3.parallelStream();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider31 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF32 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl34 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl40 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl41 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF42 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCServicesProviderNMF42
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF42
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF45 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl46 = mCServicesProviderNMF45
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl47 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl48 = mCServicesProviderNMF45
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl49 = mCServicesProviderNMF45
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration50 = new esa.mo.nmf.MCRegistration(cOMServicesProvider31,
            parameterProviderServiceImpl36, aggregationProviderServiceImpl41, alertProviderServiceImpl44,
            actionProviderServiceImpl49);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl51 = mCRegistration50.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl52 = mCRegistration50.aggregationService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCRegistration50.actionService;
        boolean boolean54 = uRIList3.remove((java.lang.Object) mCRegistration50);
        org.ccsds.moims.mo.mal.structures.FloatList floatList55 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long56 = floatList55.getShortForm();
        java.lang.String[] strArray58 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59,
            strArray58);
        int int61 = strList59.size();
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList65 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList65,
            booleanArray64);
        boolean boolean68 = booleanList65.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream69 = booleanList65.stream();
        boolean boolean70 = strList59.containsAll((java.util.Collection<java.lang.Boolean>) booleanList65);
        boolean boolean71 = floatList55.containsAll((java.util.Collection<java.lang.Boolean>) booleanList65);
        java.util.Spliterator<java.lang.Float> floatSpliterator72 = floatList55.spliterator();
        java.util.Iterator<java.lang.Float> floatItor73 = floatList55.iterator();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList74 = mCRegistration50.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) floatList55);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uRIArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(booleanItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(uRIItor24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[]" + "'", str25.equals("[]"));
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(uRIStream30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl40);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl46);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl47);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl48);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl49);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl51);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 281475010265084L + "'", long56.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(floatSpliterator72);
        org.junit.Assert.assertNotNull(floatItor73);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl6 = mCServicesProviderNMF0
            .getActionService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl6);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl27 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider28 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF29 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCServicesProviderNMF29
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl32 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF29
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF34 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF34
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF34
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF34
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl38 = mCServicesProviderNMF34
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF39 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl40 = mCServicesProviderNMF39
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl41 = mCServicesProviderNMF39
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF42 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCServicesProviderNMF42
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl44 = mCServicesProviderNMF42
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl45 = mCServicesProviderNMF42
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl46 = mCServicesProviderNMF42
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration47 = new esa.mo.nmf.MCRegistration(cOMServicesProvider28,
            parameterProviderServiceImpl33, aggregationProviderServiceImpl38, alertProviderServiceImpl41,
            actionProviderServiceImpl46);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCRegistration47.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode49 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration47.setMode(registrationMode49);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider51 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF52 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl53 = mCServicesProviderNMF52
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl54 = mCServicesProviderNMF52
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl55 = mCServicesProviderNMF52
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF52
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF57 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF57
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl59 = mCServicesProviderNMF57
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl60 = mCServicesProviderNMF57
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl61 = mCServicesProviderNMF57
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF62 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl63 = mCServicesProviderNMF62
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl64 = mCServicesProviderNMF62
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF65 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl66 = mCServicesProviderNMF65
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl67 = mCServicesProviderNMF65
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl68 = mCServicesProviderNMF65
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl69 = mCServicesProviderNMF65
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration70 = new esa.mo.nmf.MCRegistration(cOMServicesProvider51,
            parameterProviderServiceImpl56, aggregationProviderServiceImpl61, alertProviderServiceImpl64,
            actionProviderServiceImpl69);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl71 = mCRegistration70.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl72 = mCRegistration70.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl73 = mCRegistration70.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl74 = mCRegistration70.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl75 = mCRegistration70.actionService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode76 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration70.setMode(registrationMode76);
        mCRegistration47.setMode(registrationMode76);
        mCRegistration19.setMode(registrationMode76);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList80 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UShort uShort81 = doubleList80.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream82 = doubleList80.stream();
        java.lang.Boolean[] booleanArray84 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList85 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList85,
            booleanArray84);
        java.util.ListIterator<java.lang.Boolean> booleanItor88 = booleanList85.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream89 = booleanList85.parallelStream();
        boolean boolean91 = booleanList85.add((java.lang.Boolean) false);
        java.util.ListIterator<java.lang.Boolean> booleanItor93 = booleanList85.listIterator(0);
        java.lang.Object obj94 = booleanList85.clone();
        boolean boolean96 = booleanList85.add((java.lang.Boolean) false);
        boolean boolean97 = doubleList80.containsAll((java.util.Collection<java.lang.Boolean>) booleanList85);
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList98 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) doubleList80);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl27);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl38);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl40);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl44);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl45);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl46);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertTrue("'" + registrationMode49 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode49.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl53);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl54);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl55);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl59);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl60);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl61);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl63);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl66);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl67);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl68);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl69);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl71);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl72);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl73);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl74);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl75);
        org.junit.Assert.assertTrue("'" + registrationMode76 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode76.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(uShort81);
        org.junit.Assert.assertNotNull(doubleStream82);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(booleanItor88);
        org.junit.Assert.assertNotNull(booleanStream89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(booleanItor93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getAreaNumber();
        java.util.Spliterator<java.lang.Short> shortSpliterator2 = shortList0.spliterator();
        org.ccsds.moims.mo.mal.structures.LongList longList4 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream5 = longList4.parallelStream();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        java.util.Iterator<java.lang.Boolean> booleanItor11 = booleanList9.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream12 = booleanList9.stream();
        boolean boolean13 = longList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = longList4.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = longList4.getAreaNumber();
        boolean boolean16 = shortList0.contains((java.lang.Object) longList4);
        org.ccsds.moims.mo.mal.structures.ShortList shortList17 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj18 = shortList17.clone();
        java.util.stream.Stream<java.lang.Short> shortStream19 = shortList17.parallelStream();
        shortList17.trimToSize();
        shortList17.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray39 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList40 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40,
            intArray39);
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList45 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList45,
            booleanArray44);
        java.util.Iterator<java.lang.Boolean> booleanItor47 = booleanList45.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream48 = booleanList45.stream();
        boolean boolean49 = intList40.retainAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        boolean boolean50 = shortList17.containsAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList53 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList53,
            booleanArray52);
        java.util.ListIterator<java.lang.Boolean> booleanItor56 = booleanList53.listIterator((int) (short) 1);
        boolean boolean57 = shortList17.containsAll((java.util.Collection<java.lang.Boolean>) booleanList53);
        java.util.stream.Stream<java.lang.Boolean> booleanStream58 = booleanList53.stream();
        boolean boolean59 = booleanList53.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList60 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long61 = floatList60.getShortForm();
        java.lang.String[] strArray63 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64,
            strArray63);
        int int66 = strList64.size();
        java.lang.Boolean[] booleanArray69 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList70 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList70,
            booleanArray69);
        boolean boolean73 = booleanList70.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream74 = booleanList70.stream();
        boolean boolean75 = strList64.containsAll((java.util.Collection<java.lang.Boolean>) booleanList70);
        boolean boolean76 = floatList60.containsAll((java.util.Collection<java.lang.Boolean>) booleanList70);
        java.util.Spliterator<java.lang.Float> floatSpliterator77 = floatList60.spliterator();
        esa.mo.nmf.NMFException nMFException79 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray80 = nMFException79.getSuppressed();
        int int81 = floatList60.lastIndexOf((java.lang.Object) throwableArray80);
        org.ccsds.moims.mo.mal.structures.Element element82 = floatList60.createElement();
        int int83 = booleanList53.lastIndexOf((java.lang.Object) element82);
        boolean boolean84 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList53);
        try {
            booleanList53.add((-4), (java.lang.Boolean) true);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -4, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(shortSpliterator2);
        org.junit.Assert.assertNotNull(longStream5);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanItor11);
        org.junit.Assert.assertNotNull(booleanStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(shortStream19);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanItor47);
        org.junit.Assert.assertNotNull(booleanStream48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(booleanItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(booleanStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 281475010265084L + "'", long61.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(booleanStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(floatSpliterator77);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(element82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = longList1.getAreaVersion();
        java.util.Iterator<java.lang.Long> longItor3 = longList1.iterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl6 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl7 = mCServicesProviderNMF4
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl9 = mCServicesProviderNMF4
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF4
            .getParameterService();
        int int11 = longList1.indexOf((java.lang.Object) mCServicesProviderNMF4);
        try {
            java.util.ListIterator<java.lang.Long> longItor13 = longList1.listIterator(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(longItor3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl6);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl7);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.Element element24 = longList22.createElement();
        try {
            java.lang.Long long27 = longList22.set((int) (byte) 0, (java.lang.Long) 281474993487873L);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(element24);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        int int7 = byteList3.indexOf((java.lang.Object) 'a');
        int int9 = byteList3.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12,
            booleanArray11);
        java.util.ListIterator<java.lang.Boolean> booleanItor15 = booleanList12.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream16 = booleanList12.parallelStream();
        boolean boolean18 = booleanList12.add((java.lang.Boolean) false);
        boolean boolean19 = byteList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList12);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList20 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj21 = uShortList20.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream22 = uShortList20
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor23 = uShortList20.iterator();
        boolean boolean24 = byteList3.equals((java.lang.Object) uShortItor23);
        org.ccsds.moims.mo.mal.structures.ShortList shortList25 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj26 = shortList25.clone();
        boolean boolean27 = byteList3.equals((java.lang.Object) shortList25);
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException("-1");
        boolean boolean30 = byteList3.equals((java.lang.Object) nMFException29);
        java.util.stream.Stream<java.lang.Byte> byteStream31 = byteList3.parallelStream();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanItor15);
        org.junit.Assert.assertNotNull(booleanStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(uShortStream22);
        org.junit.Assert.assertNotNull(uShortItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteStream31);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("");
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.util.ListIterator<java.lang.Byte> byteItor9 = byteList5.listIterator();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList11 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        integerList11.add(0, (java.lang.Integer) 4);
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = integerList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = integerList11.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList17 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int18 = uShortList17.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor19 = uShortList17.iterator();
        int int20 = integerList11.indexOf((java.lang.Object) uShortList17);
        uShortList17.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream22 = uShortList17.stream();
        java.lang.Byte[] byteArray25 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26,
            byteArray25);
        boolean boolean28 = byteList26.isEmpty();
        int int30 = byteList26.indexOf((java.lang.Object) 'a');
        int int32 = byteList26.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList35 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList35,
            booleanArray34);
        java.util.ListIterator<java.lang.Boolean> booleanItor38 = booleanList35.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream39 = booleanList35.parallelStream();
        boolean boolean41 = booleanList35.add((java.lang.Boolean) false);
        boolean boolean42 = byteList26.retainAll((java.util.Collection<java.lang.Boolean>) booleanList35);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList43 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj44 = uShortList43.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream45 = uShortList43
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor46 = uShortList43.iterator();
        boolean boolean47 = byteList26.equals((java.lang.Object) uShortItor46);
        org.ccsds.moims.mo.mal.structures.ShortList shortList48 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj49 = shortList48.clone();
        boolean boolean50 = byteList26.equals((java.lang.Object) shortList48);
        esa.mo.nmf.NMFException nMFException52 = new esa.mo.nmf.NMFException("-1");
        boolean boolean53 = byteList26.equals((java.lang.Object) nMFException52);
        byteList26.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList55 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element56 = booleanList55.createElement();
        java.lang.Long long57 = booleanList55.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = booleanList55.getAreaNumber();
        java.lang.Integer int59 = booleanList55.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray60 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList55};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray61 = byteList26.toArray(booleanListArray60);
        java.util.AbstractList<java.lang.Boolean>[] booleanListArray62 = uShortList17.toArray(
            (java.util.AbstractList<java.lang.Boolean>[]) booleanListArray60);
        try {
            java.util.AbstractCollection<java.lang.Boolean>[] booleanCollectionArray63 = byteList5.toArray(
                (java.util.AbstractCollection<java.lang.Boolean>[]) booleanListArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteItor9);
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-10) + "'", int18.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(uShortStream22);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanItor38);
        org.junit.Assert.assertNotNull(booleanStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(uShortStream45);
        org.junit.Assert.assertNotNull(uShortItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 281475010265086L + "'", long57.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-2) + "'", int59.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray60);
        org.junit.Assert.assertNotNull(booleanListArray61);
        org.junit.Assert.assertNotNull(booleanListArray62);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[10.0]");
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl23 = mCRegistration19.parameterService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl23);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl23 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl24 = mCRegistration19.parameterService;
        org.ccsds.moims.mo.mal.structures.FloatList floatList25 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long26 = floatList25.getShortForm();
        floatList25.trimToSize();
        java.lang.String str28 = floatList25.toString();
        java.util.Spliterator<java.lang.Float> floatSpliterator29 = floatList25.spliterator();
        java.util.ListIterator<java.lang.Float> floatItor30 = floatList25.listIterator();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList31 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) floatList25);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl23);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281475010265084L + "'", long26.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]" + "'", str28.equals("[]"));
        org.junit.Assert.assertNotNull(floatSpliterator29);
        org.junit.Assert.assertNotNull(floatItor30);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (short) 10);
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean7 = byteList5.isEmpty();
        int int9 = byteList5.indexOf((java.lang.Object) 'a');
        int int11 = byteList5.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14,
            booleanArray13);
        java.util.ListIterator<java.lang.Boolean> booleanItor17 = booleanList14.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream18 = booleanList14.parallelStream();
        boolean boolean20 = booleanList14.add((java.lang.Boolean) false);
        boolean boolean21 = byteList5.retainAll((java.util.Collection<java.lang.Boolean>) booleanList14);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList22 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj23 = uShortList22.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream24 = uShortList22
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor25 = uShortList22.iterator();
        boolean boolean26 = byteList5.equals((java.lang.Object) uShortItor25);
        org.ccsds.moims.mo.mal.structures.ShortList shortList27 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj28 = shortList27.clone();
        boolean boolean29 = byteList5.equals((java.lang.Object) shortList27);
        esa.mo.nmf.NMFException nMFException31 = new esa.mo.nmf.NMFException("-1");
        boolean boolean32 = byteList5.equals((java.lang.Object) nMFException31);
        boolean boolean33 = uInteger1.equals((java.lang.Object) byteList5);
        byteList5.clear();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(booleanItor17);
        org.junit.Assert.assertNotNull(booleanStream18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(uShortStream24);
        org.junit.Assert.assertNotNull(uShortItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl4 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element17 = shortList0.createElement();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = shortList0.indexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList22 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str23 = doubleList22.toString();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        java.util.ListIterator<java.lang.Boolean> booleanItor29 = booleanList26.listIterator((int) (short) 1);
        boolean boolean30 = doubleList22.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34,
            byteArray33);
        boolean boolean36 = byteList34.isEmpty();
        int int37 = byteList34.size();
        int int38 = booleanList26.indexOf((java.lang.Object) byteList34);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        java.util.Iterator<java.lang.Boolean> booleanItor44 = booleanList42.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream45 = booleanList42.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor46 = booleanList42.iterator();
        boolean boolean47 = byteList34.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = shortList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        org.ccsds.moims.mo.mal.structures.Element element49 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList50 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int51 = booleanList50.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element52 = booleanList50.createElement();
        boolean boolean53 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = booleanList50.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort55 = booleanList50.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element56 = uShort55.createElement();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "[]" + "'", str23.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanItor44);
        org.junit.Assert.assertNotNull(booleanStream45);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51.equals((-2)));
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertNotNull(uShort55);
        org.junit.Assert.assertNotNull(element56);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        org.ccsds.moims.mo.mal.structures.Time time1 = new org.ccsds.moims.mo.mal.structures.Time((long) (byte) 0);
        java.lang.Long long2 = time1.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = time1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = time1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList6 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = longList6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = longList6.getAreaNumber();
        longList6.clear();
        longList6.clear();
        java.lang.Short[] shortArray13 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList14 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList14,
            shortArray13);
        java.lang.Object obj16 = null;
        boolean boolean17 = shortList14.equals(obj16);
        java.util.Iterator<java.lang.Short> shortItor18 = shortList14.iterator();
        java.lang.Long[] longArray23 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList24 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList24,
            longArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = longList24.contains(obj26);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger29 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean30 = longList24.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList34 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList34,
            booleanArray33);
        boolean boolean36 = longList24.containsAll((java.util.Collection<java.lang.Boolean>) booleanList34);
        java.lang.Boolean[] booleanArray39 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList40 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList40,
            booleanArray39);
        java.util.Iterator<java.lang.Boolean> booleanItor42 = booleanList40.iterator();
        int int43 = longList24.indexOf((java.lang.Object) booleanList40);
        int int44 = shortList14.indexOf((java.lang.Object) booleanList40);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList45 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj46 = uShortList45.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream47 = uShortList45
            .parallelStream();
        java.lang.Long[] longArray52 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList53 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList53,
            longArray52);
        java.lang.Object obj55 = null;
        boolean boolean56 = longList53.contains(obj55);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger58 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean59 = longList53.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray62 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList63 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList63,
            booleanArray62);
        boolean boolean65 = longList53.containsAll((java.util.Collection<java.lang.Boolean>) booleanList63);
        java.lang.Boolean[] booleanArray68 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList69 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList69,
            booleanArray68);
        java.util.Iterator<java.lang.Boolean> booleanItor71 = booleanList69.iterator();
        int int72 = longList53.indexOf((java.lang.Object) booleanList69);
        boolean boolean73 = uShortList45.retainAll((java.util.Collection<java.lang.Boolean>) booleanList69);
        boolean boolean74 = booleanList40.containsAll((java.util.Collection<java.lang.Boolean>) booleanList69);
        boolean boolean75 = longList6.removeAll((java.util.Collection<java.lang.Boolean>) booleanList69);
        java.util.stream.Stream<java.lang.Long> longStream76 = longList6.parallelStream();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF77 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl78 = mCServicesProviderNMF77
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl79 = mCServicesProviderNMF77
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl80 = mCServicesProviderNMF77
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl81 = mCServicesProviderNMF77
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl82 = mCServicesProviderNMF77
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl83 = mCServicesProviderNMF77
            .getActionService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl84 = mCServicesProviderNMF77
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl85 = mCServicesProviderNMF77
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl86 = mCServicesProviderNMF77
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF87 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl88 = mCServicesProviderNMF87
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl89 = mCServicesProviderNMF87
            .getActionService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl90 = mCServicesProviderNMF87
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl91 = mCServicesProviderNMF87
            .getAggregationService();
        org.ccsds.moims.mo.mc.aggregation.provider.AggregationHandler[] aggregationHandlerArray92 = new org.ccsds.moims.mo.mc.aggregation.provider.AggregationHandler[]{aggregationProviderServiceImpl86,
                                                                                                                                                                        aggregationProviderServiceImpl91};
        org.ccsds.moims.mo.mc.aggregation.provider.AggregationHandler[] aggregationHandlerArray93 = longList6.toArray(
            aggregationHandlerArray92);
        boolean boolean94 = time1.equals((java.lang.Object) aggregationHandlerArray92);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487888L + "'", long2.equals(281474993487888L));
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shortItor18);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanItor42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(uShortStream47);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(booleanItor71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(longStream76);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl78);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl79);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl80);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl81);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl82);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl83);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl84);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl85);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl86);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl88);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl89);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl90);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl91);
        org.junit.Assert.assertNotNull(aggregationHandlerArray92);
        org.junit.Assert.assertNotNull(aggregationHandlerArray93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        boolean boolean2 = uShortList0.isEmpty();
        uShortList0.ensureCapacity(0);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList5 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int6 = uShortList5.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor7 = uShortList5.iterator();
        java.lang.Object[] objArray8 = uShortList5.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = uShortList5.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = org.ccsds.moims.mo.mal.structures.UShortList.AREA_SHORT_FORM;
        boolean boolean11 = uShortList5.add(uShort10);
        java.lang.String str12 = uShortList5.toString();
        java.lang.Object obj13 = uShortList5.clone();
        org.ccsds.moims.mo.mal.structures.ShortList shortList14 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray16 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17,
            strArray16);
        int int19 = strList17.size();
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList23 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList23,
            booleanArray22);
        boolean boolean26 = booleanList23.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream27 = booleanList23.stream();
        boolean boolean28 = strList17.containsAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        boolean boolean29 = shortList14.containsAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        boolean boolean31 = booleanList23.contains((java.lang.Object) 3);
        boolean boolean32 = uShortList5.containsAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        boolean boolean34 = booleanList23.add((java.lang.Boolean) true);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList40,
            byteArray39);
        boolean boolean43 = byteList40.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj44 = byteList40.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream45 = byteList40.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList47 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int48 = byteList40.indexOf((java.lang.Object) stringList47);
        byte[] byteArray52 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob53 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray52);
        int int54 = blob53.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob55 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean56 = blob53.equals((java.lang.Object) blob55);
        boolean boolean57 = stringList47.remove((java.lang.Object) blob55);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF58 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean59 = stringList47.equals((java.lang.Object) mCServicesProviderNMF58);
        java.util.stream.Stream<java.lang.String> strStream60 = stringList47.parallelStream();
        java.lang.Long[] longArray65 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList66 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList66,
            longArray65);
        java.lang.Object obj68 = null;
        boolean boolean69 = longList66.contains(obj68);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger71 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean72 = longList66.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor73 = longList66.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort74 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean75 = longList66.remove((java.lang.Object) uShort74);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList76 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int77 = uShortList76.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor78 = uShortList76.iterator();
        java.lang.Object[] objArray79 = uShortList76.toArray();
        uShortList76.clear();
        uShortList76.clear();
        boolean boolean82 = uShortList76.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor83 = uShortList76.iterator();
        boolean boolean84 = longList66.contains((java.lang.Object) uShortList76);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList85 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort86 = booleanList85.getAreaNumber();
        boolean boolean87 = longList66.retainAll((java.util.Collection<java.lang.Boolean>) booleanList85);
        java.lang.Integer int88 = booleanList85.getTypeShortForm();
        boolean boolean90 = booleanList85.add((java.lang.Boolean) true);
        boolean boolean91 = stringList47.retainAll((java.util.Collection<java.lang.Boolean>) booleanList85);
        org.ccsds.moims.mo.mal.structures.UShort uShort92 = booleanList85.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet93 = booleanList85.getAreaVersion();
        boolean boolean94 = booleanList23.addAll((java.util.Collection<java.lang.Boolean>) booleanList85);
        boolean boolean95 = uShortList0.retainAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-10) + "'", int6.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[1]" + "'", str12.equals("[1]"));
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(booleanStream27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(byteStream45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strStream60);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(longItor73);
        org.junit.Assert.assertNotNull(uShort74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-10) + "'", int77.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(uShortItor83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(uShort86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-2) + "'", int88.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(uShort92);
        org.junit.Assert.assertNotNull(uOctet93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        org.ccsds.moims.mo.mal.structures.Identifier identifier1 = new org.ccsds.moims.mo.mal.structures.Identifier(
            "hi!");
        java.lang.Integer int2 = identifier1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = identifier1.createElement();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList4 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = doubleList4.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream6 = doubleList4.stream();
        boolean boolean7 = identifier1.equals((java.lang.Object) doubleList4);
        java.lang.Byte[] byteArray12 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList13,
            byteArray12);
        boolean boolean16 = byteList13.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj17 = byteList13.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream18 = byteList13.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList20 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int21 = byteList13.indexOf((java.lang.Object) stringList20);
        byte[] byteArray25 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob26 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray25);
        int int27 = blob26.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob28 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean29 = blob26.equals((java.lang.Object) blob28);
        boolean boolean30 = stringList20.remove((java.lang.Object) blob28);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF31 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean32 = stringList20.equals((java.lang.Object) mCServicesProviderNMF31);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF31
            .getParameterService();
        boolean boolean34 = identifier1.equals((java.lang.Object) parameterProviderServiceImpl33);
        java.lang.String str35 = identifier1.getValue();
        java.lang.Integer int36 = identifier1.getTypeShortForm();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 6 + "'", int2.equals(6));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(doubleStream6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(byteStream18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "hi!" + "'", str35.equals("hi!"));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 6 + "'", int36.equals(6));
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.Integer int1 = doubleList0.getTypeShortForm();
        java.lang.Integer int2 = doubleList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList3 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element4 = doubleList3.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = doubleList3.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element6 = doubleList3.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = doubleList3.getServiceNumber();
        doubleList3.ensureCapacity(9);
        doubleList3.ensureCapacity((int) '#');
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider12 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF13 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl14 = mCServicesProviderNMF13
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF13
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF13
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF13
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF18 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl19 = mCServicesProviderNMF18
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl20 = mCServicesProviderNMF18
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF18
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl22 = mCServicesProviderNMF18
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl24 = mCServicesProviderNMF23
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl25 = mCServicesProviderNMF23
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF26 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl27 = mCServicesProviderNMF26
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl28 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl29 = mCServicesProviderNMF26
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl30 = mCServicesProviderNMF26
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration31 = new esa.mo.nmf.MCRegistration(cOMServicesProvider12,
            parameterProviderServiceImpl17, aggregationProviderServiceImpl22, alertProviderServiceImpl25,
            actionProviderServiceImpl30);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCRegistration31.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl33 = mCRegistration31.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider34 = mCRegistration31.comServices;
        int int35 = doubleList3.indexOf((java.lang.Object) cOMServicesProvider34);
        boolean boolean36 = doubleList0.contains((java.lang.Object) doubleList3);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-5) + "'", int1.equals((-5)));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-5) + "'", int2.equals((-5)));
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl19);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl22);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl24);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl27);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl28);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl29);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl33);
        org.junit.Assert.assertNull(cOMServicesProvider34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = floatList0.createElement();
        try {
            java.util.List<java.lang.Float> floatList25 = floatList0.subList((int) (byte) 0, 12);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 12");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(element22);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList(12);
        java.lang.Long long2 = shortList1.getShortForm();
        java.util.ListIterator<java.lang.Short> shortItor4 = shortList1.listIterator((int) (byte) 0);
        int int5 = shortList1.size();
        shortList1.ensureCapacity(3);
        boolean boolean9 = shortList1.add((java.lang.Short) (short) 0);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider10 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl18 = mCServicesProviderNMF16
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl19 = mCServicesProviderNMF16
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl20 = mCServicesProviderNMF16
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF21 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCServicesProviderNMF21
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl23 = mCServicesProviderNMF21
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF24 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCServicesProviderNMF24
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl26 = mCServicesProviderNMF24
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl27 = mCServicesProviderNMF24
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl28 = mCServicesProviderNMF24
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration29 = new esa.mo.nmf.MCRegistration(cOMServicesProvider10,
            parameterProviderServiceImpl15, aggregationProviderServiceImpl20, alertProviderServiceImpl23,
            actionProviderServiceImpl28);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCRegistration29.parameterService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCRegistration29.aggregationService;
        boolean boolean32 = shortList1.remove((java.lang.Object) mCRegistration29);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265079L + "'", long2.equals(281475010265079L));
        org.junit.Assert.assertNotNull(shortItor4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl18);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl19);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl23);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl26);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl27);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl28);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException();
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException2);
        java.lang.String str4 = nMFException1.toString();
        java.lang.Throwable[] throwableArray5 = nMFException1.getSuppressed();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("100", (java.lang.Throwable) nMFException1);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "esa.mo.nmf.NMFException" + "'", str4.equals(
            "esa.mo.nmf.NMFException"));
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray2 = nMFException1.getSuppressed();
        java.lang.Throwable[] throwableArray3 = nMFException1.getSuppressed();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException5);
        java.lang.String str8 = nMFException5.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str8.equals(
            "esa.mo.nmf.NMFException: 0"));
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        org.ccsds.moims.mo.mal.structures.Time time1 = new org.ccsds.moims.mo.mal.structures.Time((long) (byte) 0);
        java.lang.Long long2 = time1.getShortForm();
        long long3 = time1.getValue();
        java.lang.Integer int4 = time1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList5 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element6 = doubleList5.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = doubleList5.getServiceNumber();
        java.lang.Integer int8 = doubleList5.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = doubleList5.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Union union11 = new org.ccsds.moims.mo.mal.structures.Union(
            (java.lang.Float) 100.0f);
        int int12 = doubleList5.indexOf((java.lang.Object) 100.0f);
        org.ccsds.moims.mo.mal.structures.ShortList shortList13 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray15 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16,
            strArray15);
        int int18 = strList16.size();
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList22 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList22,
            booleanArray21);
        boolean boolean25 = booleanList22.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream26 = booleanList22.stream();
        boolean boolean27 = strList16.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        boolean boolean28 = shortList13.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        java.util.stream.Stream<java.lang.Short> shortStream29 = shortList13.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element30 = shortList13.createElement();
        esa.mo.nmf.NMFException nMFException32 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray33 = nMFException32.getSuppressed();
        int int34 = shortList13.indexOf((java.lang.Object) throwableArray33);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList35 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str36 = doubleList35.toString();
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList39 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList39,
            booleanArray38);
        java.util.ListIterator<java.lang.Boolean> booleanItor42 = booleanList39.listIterator((int) (short) 1);
        boolean boolean43 = doubleList35.containsAll((java.util.Collection<java.lang.Boolean>) booleanList39);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList47,
            byteArray46);
        boolean boolean49 = byteList47.isEmpty();
        int int50 = byteList47.size();
        int int51 = booleanList39.indexOf((java.lang.Object) byteList47);
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList55 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList55,
            booleanArray54);
        java.util.Iterator<java.lang.Boolean> booleanItor57 = booleanList55.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream58 = booleanList55.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor59 = booleanList55.iterator();
        boolean boolean60 = byteList47.removeAll((java.util.Collection<java.lang.Boolean>) booleanList55);
        boolean boolean61 = shortList13.removeAll((java.util.Collection<java.lang.Boolean>) booleanList55);
        boolean boolean62 = booleanList55.isEmpty();
        boolean boolean63 = doubleList5.remove((java.lang.Object) booleanList55);
        java.util.List<java.lang.Double> doubleList66 = doubleList5.subList(0, (int) (byte) 0);
        java.util.ListIterator<java.lang.Double> doubleItor68 = doubleList5.listIterator((int) (byte) 0);
        boolean boolean69 = time1.equals((java.lang.Object) (byte) 0);
        java.lang.String str70 = time1.toString();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487888L + "'", long2.equals(281474993487888L));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 16 + "'", int4.equals(16));
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-5) + "'", int8.equals((-5)));
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shortStream29);
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "[]" + "'", str36.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(booleanItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(booleanItor57);
        org.junit.Assert.assertNotNull(booleanStream58);
        org.junit.Assert.assertNotNull(booleanItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleList66);
        org.junit.Assert.assertNotNull(doubleItor68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "0" + "'", str70.equals("0"));
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray7 = nMFException6.getSuppressed();
        nMFException2.addSuppressed((java.lang.Throwable) nMFException6);
        java.lang.Throwable[] throwableArray9 = nMFException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = nMFException6.getSuppressed();
        esa.mo.nmf.NMFException nMFException11 = new esa.mo.nmf.NMFException("[]", (java.lang.Throwable) nMFException6);
        esa.mo.nmf.NMFException nMFException14 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray15 = nMFException14.getSuppressed();
        java.lang.Throwable[] throwableArray16 = nMFException14.getSuppressed();
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException14);
        nMFException11.addSuppressed((java.lang.Throwable) nMFException14);
        esa.mo.nmf.NMFException nMFException20 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException23 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray24 = nMFException23.getSuppressed();
        java.lang.Throwable[] throwableArray25 = nMFException23.getSuppressed();
        esa.mo.nmf.NMFException nMFException26 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException23);
        java.lang.String str27 = nMFException23.toString();
        nMFException20.addSuppressed((java.lang.Throwable) nMFException23);
        esa.mo.nmf.NMFException nMFException31 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray32 = nMFException31.getSuppressed();
        java.lang.Throwable[] throwableArray33 = nMFException31.getSuppressed();
        esa.mo.nmf.NMFException nMFException35 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray36 = nMFException35.getSuppressed();
        nMFException31.addSuppressed((java.lang.Throwable) nMFException35);
        esa.mo.nmf.NMFException nMFException38 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException35);
        java.lang.Throwable[] throwableArray39 = nMFException35.getSuppressed();
        nMFException23.addSuppressed((java.lang.Throwable) nMFException35);
        org.ccsds.moims.mo.mal.structures.FloatList floatList41 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long42 = floatList41.getShortForm();
        floatList41.trimToSize();
        java.util.Iterator<java.lang.Float> floatItor44 = floatList41.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort45 = floatList41.getAreaNumber();
        esa.mo.nmf.NMFException nMFException47 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException50 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray51 = nMFException50.getSuppressed();
        java.lang.Throwable[] throwableArray52 = nMFException50.getSuppressed();
        esa.mo.nmf.NMFException nMFException53 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException50);
        java.lang.String str54 = nMFException50.toString();
        nMFException47.addSuppressed((java.lang.Throwable) nMFException50);
        boolean boolean56 = floatList41.remove((java.lang.Object) nMFException50);
        nMFException35.addSuppressed((java.lang.Throwable) nMFException50);
        nMFException14.addSuppressed((java.lang.Throwable) nMFException35);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str27.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 281475010265084L + "'", long42.equals(281475010265084L));
        org.junit.Assert.assertNotNull(floatItor44);
        org.junit.Assert.assertNotNull(uShort45);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str54.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        esa.mo.nmf.NMFException nMFException3 = new esa.mo.nmf.NMFException("0");
        esa.mo.nmf.NMFException nMFException4 = new esa.mo.nmf.NMFException("hi!", (java.lang.Throwable) nMFException3);
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0.0", (java.lang.Throwable) nMFException3);
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray9 = nMFException8.getSuppressed();
        java.lang.Throwable[] throwableArray10 = nMFException8.getSuppressed();
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        nMFException8.addSuppressed((java.lang.Throwable) nMFException12);
        esa.mo.nmf.NMFException nMFException15 = new esa.mo.nmf.NMFException("[true]",
            (java.lang.Throwable) nMFException12);
        nMFException5.addSuppressed((java.lang.Throwable) nMFException15);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean17 = booleanList9.contains((java.lang.Object) 3);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList19 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element20 = doubleList19.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = doubleList19.getServiceNumber();
        java.lang.Integer int22 = doubleList19.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = doubleList19.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Union union25 = new org.ccsds.moims.mo.mal.structures.Union(
            (java.lang.Float) 100.0f);
        int int26 = doubleList19.indexOf((java.lang.Object) 100.0f);
        org.ccsds.moims.mo.mal.structures.ShortList shortList27 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray29 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30,
            strArray29);
        int int32 = strList30.size();
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36,
            booleanArray35);
        boolean boolean39 = booleanList36.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream40 = booleanList36.stream();
        boolean boolean41 = strList30.containsAll((java.util.Collection<java.lang.Boolean>) booleanList36);
        boolean boolean42 = shortList27.containsAll((java.util.Collection<java.lang.Boolean>) booleanList36);
        java.util.stream.Stream<java.lang.Short> shortStream43 = shortList27.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element44 = shortList27.createElement();
        esa.mo.nmf.NMFException nMFException46 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray47 = nMFException46.getSuppressed();
        int int48 = shortList27.indexOf((java.lang.Object) throwableArray47);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList49 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str50 = doubleList49.toString();
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList53 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList53,
            booleanArray52);
        java.util.ListIterator<java.lang.Boolean> booleanItor56 = booleanList53.listIterator((int) (short) 1);
        boolean boolean57 = doubleList49.containsAll((java.util.Collection<java.lang.Boolean>) booleanList53);
        java.lang.Byte[] byteArray60 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList61 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList61,
            byteArray60);
        boolean boolean63 = byteList61.isEmpty();
        int int64 = byteList61.size();
        int int65 = booleanList53.indexOf((java.lang.Object) byteList61);
        java.lang.Boolean[] booleanArray68 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList69 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList69,
            booleanArray68);
        java.util.Iterator<java.lang.Boolean> booleanItor71 = booleanList69.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream72 = booleanList69.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor73 = booleanList69.iterator();
        boolean boolean74 = byteList61.removeAll((java.util.Collection<java.lang.Boolean>) booleanList69);
        boolean boolean75 = shortList27.removeAll((java.util.Collection<java.lang.Boolean>) booleanList69);
        boolean boolean76 = booleanList69.isEmpty();
        boolean boolean77 = doubleList19.remove((java.lang.Object) booleanList69);
        boolean boolean79 = booleanList69.add((java.lang.Boolean) false);
        boolean boolean80 = booleanList9.addAll(0, (java.util.Collection<java.lang.Boolean>) booleanList69);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertNotNull(uShort21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-5) + "'", int22.equals((-5)));
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shortStream43);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "[]" + "'", str50.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(booleanItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(booleanItor71);
        org.junit.Assert.assertNotNull(booleanStream72);
        org.junit.Assert.assertNotNull(booleanItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        int int26 = stringList12.size();
        try {
            java.lang.String str29 = stringList12.set((int) (byte) 0,
                "[4294967295, 281475010265084, 100, 281474993487886, 0, 281474993487876, 100, 281474993487890]");
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long2 = duration1.getShortForm();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray3 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList4 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean5 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList4, uRIArray3);
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        java.util.Iterator<java.lang.Boolean> booleanItor11 = booleanList9.iterator();
        boolean boolean12 = uRIList4.retainAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList16 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList16,
            booleanArray15);
        boolean boolean19 = booleanList16.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream20 = booleanList16.stream();
        boolean boolean21 = uRIList4.retainAll((java.util.Collection<java.lang.Boolean>) booleanList16);
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList25 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList25,
            booleanArray24);
        java.util.Iterator<java.lang.Boolean> booleanItor27 = booleanList25.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream28 = booleanList25.stream();
        boolean boolean29 = uRIList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList25);
        boolean boolean30 = duration1.equals((java.lang.Object) boolean29);
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = duration1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList32 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element33 = doubleList32.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort34 = doubleList32.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element35 = doubleList32.createElement();
        boolean boolean36 = duration1.equals((java.lang.Object) element35);
        java.lang.Integer int37 = duration1.getTypeShortForm();
        double double38 = duration1.getValue();
        org.ccsds.moims.mo.mal.structures.LongList longList40 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream41 = longList40.parallelStream();
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList45 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList45,
            booleanArray44);
        java.util.Iterator<java.lang.Boolean> booleanItor47 = booleanList45.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream48 = booleanList45.stream();
        boolean boolean49 = longList40.containsAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet50 = longList40.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = longList40.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort52 = longList40.getServiceNumber();
        boolean boolean53 = duration1.equals((java.lang.Object) longList40);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider54 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl57 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl58 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl59 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl62 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl63 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl64 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF65 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl66 = mCServicesProviderNMF65
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl67 = mCServicesProviderNMF65
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF68 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl69 = mCServicesProviderNMF68
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl70 = mCServicesProviderNMF68
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl71 = mCServicesProviderNMF68
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl72 = mCServicesProviderNMF68
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration73 = new esa.mo.nmf.MCRegistration(cOMServicesProvider54,
            parameterProviderServiceImpl59, aggregationProviderServiceImpl64, alertProviderServiceImpl67,
            actionProviderServiceImpl72);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl74 = mCRegistration73.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl75 = mCRegistration73.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl76 = mCRegistration73.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl77 = mCRegistration73.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl78 = mCRegistration73.aggregationService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl79 = mCRegistration73.aggregationService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl80 = mCRegistration73.actionService;
        boolean boolean81 = longList40.equals((java.lang.Object) actionProviderServiceImpl80);
        try {
            java.lang.Long long83 = longList40.remove((-15));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487875L + "'", long2.equals(281474993487875L));
        org.junit.Assert.assertNotNull(uRIArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(booleanItor27);
        org.junit.Assert.assertNotNull(booleanStream28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(uShort34);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37.equals(3));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 14.0d + "'", double38 == 14.0d);
        org.junit.Assert.assertNotNull(longStream41);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanItor47);
        org.junit.Assert.assertNotNull(booleanStream48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(uOctet50);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertNotNull(uShort52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl57);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl58);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl62);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl63);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl66);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl69);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl70);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl71);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl72);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl74);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl75);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl76);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl77);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl78);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl79);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.String str9 = byteList5.toString();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.parallelStream();
        int int11 = byteList5.size();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray12 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean14 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList13, uRIArray12);
        java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList18 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList18,
            booleanArray17);
        java.util.Iterator<java.lang.Boolean> booleanItor20 = booleanList18.iterator();
        boolean boolean21 = uRIList13.retainAll((java.util.Collection<java.lang.Boolean>) booleanList18);
        booleanList18.clear();
        boolean boolean23 = byteList5.removeAll((java.util.Collection<java.lang.Boolean>) booleanList18);
        byteList5.clear();
        byteList5.trimToSize();
        int int26 = byteList5.size();
        java.lang.String[] strArray30 = new java.lang.String[]{"[-1, -1, 1, 1, 10]", "100", "100"};
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31,
            strArray30);
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36,
            booleanArray35);
        boolean boolean39 = booleanList36.add((java.lang.Boolean) true);
        boolean boolean40 = strList31.removeAll((java.util.Collection<java.lang.Boolean>) booleanList36);
        java.lang.String[] strArray42 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43,
            strArray42);
        int int45 = strList43.size();
        java.lang.Boolean[] booleanArray48 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList49 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList49,
            booleanArray48);
        boolean boolean52 = booleanList49.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream53 = booleanList49.stream();
        boolean boolean54 = strList43.containsAll((java.util.Collection<java.lang.Boolean>) booleanList49);
        int int55 = booleanList36.indexOf((java.lang.Object) strList43);
        java.util.Iterator<java.lang.String> strItor56 = strList43.iterator();
        java.util.stream.Stream<java.lang.String> strStream57 = strList43.parallelStream();
        strList43.clear();
        java.util.ListIterator<java.lang.String> strItor59 = strList43.listIterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl62 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl63 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF64 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl65 = mCServicesProviderNMF64
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl66 = mCServicesProviderNMF64
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl67 = mCServicesProviderNMF64
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl68 = mCServicesProviderNMF64
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF69 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl70 = mCServicesProviderNMF69
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl71 = mCServicesProviderNMF69
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl72 = mCServicesProviderNMF69
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl73 = mCServicesProviderNMF69
            .getAggregationService();
        org.ccsds.moims.mo.mc.aggregation.provider.AggregationSkeleton[] aggregationSkeletonArray74 = new org.ccsds.moims.mo.mc.aggregation.provider.AggregationSkeleton[]{aggregationProviderServiceImpl63,
                                                                                                                                                                           aggregationProviderServiceImpl68,
                                                                                                                                                                           aggregationProviderServiceImpl73};
        org.ccsds.moims.mo.mc.aggregation.provider.AggregationSkeleton[] aggregationSkeletonArray75 = strList43.toArray(
            aggregationSkeletonArray74);
        org.ccsds.moims.mo.mc.aggregation.provider.AggregationSkeleton[] aggregationSkeletonArray76 = byteList5.toArray(
            aggregationSkeletonArray75);
        java.lang.String str77 = byteList5.toString();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str9.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertNotNull(uRIArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanStream53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertNotNull(strStream57);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl62);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl63);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl65);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl66);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl67);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl68);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl70);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl71);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl72);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl73);
        org.junit.Assert.assertNotNull(aggregationSkeletonArray74);
        org.junit.Assert.assertNotNull(aggregationSkeletonArray75);
        org.junit.Assert.assertNotNull(aggregationSkeletonArray76);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "[]" + "'", str77.equals("[]"));
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.util.ListIterator<java.lang.Double> doubleItor1 = doubleList0.listIterator();
        doubleList0.trimToSize();
        doubleList0.trimToSize();
        java.lang.Byte[] byteArray8 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
        boolean boolean12 = byteList9.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj13 = byteList9.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream14 = byteList9.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList16 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int17 = byteList9.indexOf((java.lang.Object) stringList16);
        byte[] byteArray21 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob22 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray21);
        int int23 = blob22.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob24 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean25 = blob22.equals((java.lang.Object) blob24);
        boolean boolean26 = stringList16.remove((java.lang.Object) blob24);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF27 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean28 = stringList16.equals((java.lang.Object) mCServicesProviderNMF27);
        java.util.stream.Stream<java.lang.String> strStream29 = stringList16.parallelStream();
        java.lang.Long[] longArray34 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList35 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList35,
            longArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = longList35.contains(obj37);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger40 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean41 = longList35.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor42 = longList35.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort43 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean44 = longList35.remove((java.lang.Object) uShort43);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList45 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int46 = uShortList45.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor47 = uShortList45.iterator();
        java.lang.Object[] objArray48 = uShortList45.toArray();
        uShortList45.clear();
        uShortList45.clear();
        boolean boolean51 = uShortList45.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor52 = uShortList45.iterator();
        boolean boolean53 = longList35.contains((java.lang.Object) uShortList45);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList54 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort55 = booleanList54.getAreaNumber();
        boolean boolean56 = longList35.retainAll((java.util.Collection<java.lang.Boolean>) booleanList54);
        java.lang.Integer int57 = booleanList54.getTypeShortForm();
        boolean boolean59 = booleanList54.add((java.lang.Boolean) true);
        boolean boolean60 = stringList16.retainAll((java.util.Collection<java.lang.Boolean>) booleanList54);
        booleanList54.ensureCapacity((int) '#');
        int int63 = doubleList0.indexOf((java.lang.Object) booleanList54);
        org.junit.Assert.assertNotNull(doubleItor1);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteStream14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(longItor42);
        org.junit.Assert.assertNotNull(uShort43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-10) + "'", int46.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(uShortItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(uShort55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-2) + "'", int57.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        longList22.trimToSize();
        java.lang.Object[] objArray25 = longList22.toArray();
        org.ccsds.moims.mo.mal.structures.ShortList shortList26 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj27 = shortList26.clone();
        java.util.stream.Stream<java.lang.Short> shortStream28 = shortList26.parallelStream();
        shortList26.trimToSize();
        shortList26.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray48 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList49 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49,
            intArray48);
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList54 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList54,
            booleanArray53);
        java.util.Iterator<java.lang.Boolean> booleanItor56 = booleanList54.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream57 = booleanList54.stream();
        boolean boolean58 = intList49.retainAll((java.util.Collection<java.lang.Boolean>) booleanList54);
        boolean boolean59 = shortList26.containsAll((java.util.Collection<java.lang.Boolean>) booleanList54);
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList62 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList62,
            booleanArray61);
        java.util.ListIterator<java.lang.Boolean> booleanItor65 = booleanList62.listIterator((int) (short) 1);
        boolean boolean66 = shortList26.containsAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        java.util.stream.Stream<java.lang.Boolean> booleanStream67 = booleanList62.stream();
        boolean boolean68 = booleanList62.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList69 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long70 = floatList69.getShortForm();
        java.lang.String[] strArray72 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73,
            strArray72);
        int int75 = strList73.size();
        java.lang.Boolean[] booleanArray78 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList79 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList79,
            booleanArray78);
        boolean boolean82 = booleanList79.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream83 = booleanList79.stream();
        boolean boolean84 = strList73.containsAll((java.util.Collection<java.lang.Boolean>) booleanList79);
        boolean boolean85 = floatList69.containsAll((java.util.Collection<java.lang.Boolean>) booleanList79);
        java.util.Spliterator<java.lang.Float> floatSpliterator86 = floatList69.spliterator();
        esa.mo.nmf.NMFException nMFException88 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray89 = nMFException88.getSuppressed();
        int int90 = floatList69.lastIndexOf((java.lang.Object) throwableArray89);
        org.ccsds.moims.mo.mal.structures.Element element91 = floatList69.createElement();
        int int92 = booleanList62.lastIndexOf((java.lang.Object) element91);
        booleanList62.clear();
        org.ccsds.moims.mo.mal.structures.ULong uLong94 = new org.ccsds.moims.mo.mal.structures.ULong();
        org.ccsds.moims.mo.mal.structures.UShort uShort95 = uLong94.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element96 = uLong94.createElement();
        java.lang.String str97 = uLong94.toString();
        boolean boolean98 = booleanList62.remove((java.lang.Object) str97);
        boolean boolean99 = longList22.retainAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(shortStream28);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(booleanItor56);
        org.junit.Assert.assertNotNull(booleanStream57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(booleanStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 281475010265084L + "'", long70.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(booleanStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(floatSpliterator86);
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(element91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(uShort95);
        org.junit.Assert.assertNotNull(element96);
        org.junit.Assert.assertTrue("'" + str97 + "' != '" + "0" + "'", str97.equals("0"));
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        java.lang.Long[] longArray4 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList5 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList5, longArray4);
        java.lang.Object obj7 = null;
        boolean boolean8 = longList5.contains(obj7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean11 = longList5.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean17 = longList5.containsAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        java.lang.Long long19 = longList5.get(1);
        longList5.trimToSize();
        java.util.ListIterator<java.lang.Long> longItor21 = longList5.listIterator();
        longList5.clear();
        java.util.Iterator<java.lang.Long> longItor23 = longList5.iterator();
        java.lang.Byte[] byteArray28 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29,
            byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj33 = byteList29.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream34 = byteList29.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList36 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int37 = byteList29.indexOf((java.lang.Object) stringList36);
        byte[] byteArray41 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob42 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray41);
        int int43 = blob42.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob44 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean45 = blob42.equals((java.lang.Object) blob44);
        boolean boolean46 = stringList36.remove((java.lang.Object) blob44);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean48 = stringList36.equals((java.lang.Object) mCServicesProviderNMF47);
        java.util.ListIterator<java.lang.String> strItor49 = stringList36.listIterator();
        int int50 = stringList36.size();
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][][] alertHandlerArray51 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][][]{};
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][][] alertHandlerArray52 = stringList36.toArray(
            alertHandlerArray51);
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][][] alertHandlerArray53 = longList5.toArray(
            alertHandlerArray52);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19.equals((-1L)));
        org.junit.Assert.assertNotNull(longItor21);
        org.junit.Assert.assertNotNull(longItor23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(byteStream34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(alertHandlerArray51);
        org.junit.Assert.assertNotNull(alertHandlerArray52);
        org.junit.Assert.assertNotNull(alertHandlerArray53);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList6 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList6,
            booleanArray5);
        java.util.Iterator<java.lang.Boolean> booleanItor8 = booleanList6.iterator();
        boolean boolean9 = uRIList1.retainAll((java.util.Collection<java.lang.Boolean>) booleanList6);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator10 = uRIList1.spliterator();
        java.lang.Byte[] byteArray15 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16,
            byteArray15);
        boolean boolean19 = byteList16.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj20 = byteList16.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream21 = byteList16.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList23 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int24 = byteList16.indexOf((java.lang.Object) stringList23);
        byte[] byteArray28 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob29 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray28);
        int int30 = blob29.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob31 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean32 = blob29.equals((java.lang.Object) blob31);
        boolean boolean33 = stringList23.remove((java.lang.Object) blob31);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF34 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean35 = stringList23.equals((java.lang.Object) mCServicesProviderNMF34);
        boolean boolean36 = uRIList1.equals((java.lang.Object) boolean35);
        org.ccsds.moims.mo.mal.structures.URI uRI37 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray38 = new org.ccsds.moims.mo.mal.structures.URI[]{uRI37};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean40 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList39, uRIArray38);
        int int41 = uRIList39.size();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator42 = uRIList39.spliterator();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator43 = uRIList39.spliterator();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList45 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        boolean boolean47 = integerList45.add((java.lang.Integer) 100);
        integerList45.clear();
        boolean boolean49 = uRIList39.contains((java.lang.Object) integerList45);
        integerList45.trimToSize();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList52 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        integerList52.add(0, (java.lang.Integer) 4);
        org.ccsds.moims.mo.mal.structures.UShort uShort56 = integerList52.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList57 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element58 = booleanList57.createElement();
        java.lang.Long long59 = booleanList57.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort60 = booleanList57.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element61 = booleanList57.createElement();
        boolean boolean62 = integerList52.removeAll((java.util.Collection<java.lang.Boolean>) booleanList57);
        boolean boolean63 = integerList45.containsAll((java.util.Collection<java.lang.Boolean>) booleanList57);
        int int64 = uRIList1.lastIndexOf((java.lang.Object) integerList45);
        try {
            java.util.List<java.lang.Integer> intList67 = integerList45.subList(0, 18);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 18");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanItor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(uRISpliterator10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteStream21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(uRIArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(uRISpliterator42);
        org.junit.Assert.assertNotNull(uRISpliterator43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(uShort56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 281475010265086L + "'", long59.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort60);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl5 = mCServicesProviderNMF0
            .getAggregationService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl5);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.stream.Stream<java.lang.String> strStream25 = stringList12.parallelStream();
        boolean boolean26 = stringList12.isEmpty();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList0.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor4 = uShortList0.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF16
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF19 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF19
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF19
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF19
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCServicesProviderNMF19
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration24 = new esa.mo.nmf.MCRegistration(cOMServicesProvider5,
            parameterProviderServiceImpl10, aggregationProviderServiceImpl15, alertProviderServiceImpl18,
            actionProviderServiceImpl23);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl25 = mCRegistration24.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration24.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider27 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF41
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCServicesProviderNMF41
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration46 = new esa.mo.nmf.MCRegistration(cOMServicesProvider27,
            parameterProviderServiceImpl32, aggregationProviderServiceImpl37, alertProviderServiceImpl40,
            actionProviderServiceImpl45);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl50 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCServicesProviderNMF47
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl60 = mCServicesProviderNMF54
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray61 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl26,
                                                                                                                                                                                   actionProviderServiceImpl45,
                                                                                                                                                                                   actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl60};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray62 = uShortList0
            .toArray(actionInheritanceSkeletonArray61);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort64 = uShortList0.get(16);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 16, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uShortItor4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray61);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray62);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        int int14 = byteList5.size();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF15 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl16 = mCServicesProviderNMF15
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl17 = mCServicesProviderNMF15
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF15
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl19 = mCServicesProviderNMF15
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl20 = mCServicesProviderNMF15
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCServicesProviderNMF15
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl22 = mCServicesProviderNMF15
            .getAggregationService();
        int int23 = byteList5.indexOf((java.lang.Object) aggregationProviderServiceImpl22);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl16);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl19);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl22 = mCRegistration19.aggregationService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl22);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        org.ccsds.moims.mo.mal.structures.Time time1 = new org.ccsds.moims.mo.mal.structures.Time(281475010265084L);
        org.ccsds.moims.mo.mal.structures.FloatList floatList2 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long3 = floatList2.getShortForm();
        java.lang.String[] strArray5 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        int int8 = strList6.size();
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12,
            booleanArray11);
        boolean boolean15 = booleanList12.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream16 = booleanList12.stream();
        boolean boolean17 = strList6.containsAll((java.util.Collection<java.lang.Boolean>) booleanList12);
        boolean boolean18 = floatList2.containsAll((java.util.Collection<java.lang.Boolean>) booleanList12);
        java.util.Spliterator<java.lang.Float> floatSpliterator19 = floatList2.spliterator();
        esa.mo.nmf.NMFException nMFException21 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray22 = nMFException21.getSuppressed();
        int int23 = floatList2.lastIndexOf((java.lang.Object) throwableArray22);
        org.ccsds.moims.mo.mal.structures.LongList longList24 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int25 = floatList2.lastIndexOf((java.lang.Object) longList24);
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = longList24.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = longList24.getServiceNumber();
        boolean boolean28 = time1.equals((java.lang.Object) uShort27);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265084L + "'", long3.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(booleanStream16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatSpliterator19);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl6 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl7 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl8 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl9 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl10 = mCServicesProviderNMF0
            .getActionService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl6);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl7);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl8);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl9);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl10);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        org.ccsds.moims.mo.mal.structures.FloatList floatList1 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long2 = floatList1.getShortForm();
        java.lang.String[] strArray4 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        int int7 = strList5.size();
        java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList11 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList11,
            booleanArray10);
        boolean boolean14 = booleanList11.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream15 = booleanList11.stream();
        boolean boolean16 = strList5.containsAll((java.util.Collection<java.lang.Boolean>) booleanList11);
        boolean boolean17 = floatList1.containsAll((java.util.Collection<java.lang.Boolean>) booleanList11);
        org.ccsds.moims.mo.mal.structures.URI uRI18 = new org.ccsds.moims.mo.mal.structures.URI();
        int int19 = floatList1.lastIndexOf((java.lang.Object) uRI18);
        floatList1.trimToSize();
        esa.mo.nmf.NMFException nMFException23 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray24 = nMFException23.getSuppressed();
        java.lang.Throwable[] throwableArray25 = nMFException23.getSuppressed();
        esa.mo.nmf.NMFException nMFException26 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException23);
        java.lang.String str27 = nMFException23.toString();
        int int28 = floatList1.indexOf((java.lang.Object) nMFException23);
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException("false",
            (java.lang.Throwable) nMFException23);
        esa.mo.nmf.NMFException nMFException31 = new esa.mo.nmf.NMFException("[hi!, , 1.0]");
        nMFException23.addSuppressed((java.lang.Throwable) nMFException31);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265084L + "'", long2.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(booleanStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str27.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        longList22.trimToSize();
        java.lang.Object[] objArray25 = longList22.toArray();
        int int26 = longList22.size();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = longList22.getAreaNumber();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(uShort27);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = longList1.getAreaVersion();
        java.util.Iterator<java.lang.Long> longItor3 = longList1.iterator();
        longList1.ensureCapacity((-15));
        java.util.Iterator<java.lang.Long> longItor6 = longList1.iterator();
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("1");
        esa.mo.nmf.NMFException nMFException11 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray12 = nMFException11.getSuppressed();
        java.lang.Throwable[] throwableArray13 = nMFException11.getSuppressed();
        esa.mo.nmf.NMFException nMFException15 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray16 = nMFException15.getSuppressed();
        nMFException11.addSuppressed((java.lang.Throwable) nMFException15);
        esa.mo.nmf.NMFException nMFException18 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException15);
        java.lang.Throwable[] throwableArray19 = nMFException15.getSuppressed();
        esa.mo.nmf.NMFException[] nMFExceptionArray20 = new esa.mo.nmf.NMFException[]{nMFException8, nMFException15};
        esa.mo.nmf.NMFException[] nMFExceptionArray21 = longList1.toArray(nMFExceptionArray20);
        try {
            java.util.List<java.lang.Long> longList24 = longList1.subList(11, 16);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(longItor3);
        org.junit.Assert.assertNotNull(longItor6);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(nMFExceptionArray20);
        org.junit.Assert.assertNotNull(nMFExceptionArray21);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        boolean boolean27 = stringList12.add("esa.mo.nmf.NMFException: 14.0");
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = stringList12.getServiceNumber();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(uShort28);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        java.lang.Long long2 = booleanList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = booleanList0.createElement();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray8 = nMFException5.getSuppressed();
        boolean boolean9 = booleanList0.equals((java.lang.Object) throwableArray8);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = booleanList0.getAreaNumber();
        boolean boolean12 = booleanList0.add((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265086L + "'", long2.equals(281475010265086L));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCRegistration19.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode27 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration19.setMode(registrationMode27);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider29 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl30 = mCRegistration19.alertService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
        org.junit.Assert.assertTrue("'" + registrationMode27 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode27.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
        org.junit.Assert.assertNull(cOMServicesProvider29);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl30);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        boolean boolean5 = uShortList0.equals((java.lang.Object) 1);
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray9 = nMFException8.getSuppressed();
        java.lang.Throwable[] throwableArray10 = nMFException8.getSuppressed();
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        nMFException8.addSuppressed((java.lang.Throwable) nMFException12);
        java.lang.Throwable[] throwableArray15 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray16 = nMFException12.getSuppressed();
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("[]",
            (java.lang.Throwable) nMFException12);
        int int18 = uShortList0.indexOf((java.lang.Object) nMFException17);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort20 = uShortList0.remove((-18));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.Time time24 = new org.ccsds.moims.mo.mal.structures.Time();
        org.ccsds.moims.mo.mal.structures.Element element25 = time24.createElement();
        boolean boolean26 = longList22.equals((java.lang.Object) time24);
        java.lang.String[] strArray28 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29,
            strArray28);
        boolean boolean32 = strList29.add("hi!");
        java.lang.Object obj33 = null;
        boolean boolean34 = strList29.equals(obj33);
        java.util.ListIterator<java.lang.String> strItor35 = strList29.listIterator();
        int int36 = longList22.indexOf((java.lang.Object) strList29);
        org.ccsds.moims.mo.mal.structures.Element element37 = longList22.createElement();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList38 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int39 = uShortList38.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor40 = uShortList38.iterator();
        java.lang.Object[] objArray41 = uShortList38.toArray();
        uShortList38.clear();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream43 = uShortList38.stream();
        java.lang.String str44 = uShortList38.toString();
        org.ccsds.moims.mo.mal.structures.FloatList floatList45 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long46 = floatList45.getShortForm();
        floatList45.trimToSize();
        java.lang.String str48 = floatList45.toString();
        java.util.Spliterator<java.lang.Float> floatSpliterator49 = floatList45.spliterator();
        java.lang.Byte[] byteArray52 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53,
            byteArray52);
        boolean boolean55 = byteList53.isEmpty();
        int int57 = byteList53.indexOf((java.lang.Object) 'a');
        int int59 = byteList53.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList62 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList62,
            booleanArray61);
        java.util.ListIterator<java.lang.Boolean> booleanItor65 = booleanList62.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream66 = booleanList62.parallelStream();
        boolean boolean68 = booleanList62.add((java.lang.Boolean) false);
        boolean boolean69 = byteList53.retainAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList70 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj71 = uShortList70.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream72 = uShortList70
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor73 = uShortList70.iterator();
        boolean boolean74 = byteList53.equals((java.lang.Object) uShortItor73);
        org.ccsds.moims.mo.mal.structures.ShortList shortList75 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj76 = shortList75.clone();
        boolean boolean77 = byteList53.equals((java.lang.Object) shortList75);
        esa.mo.nmf.NMFException nMFException79 = new esa.mo.nmf.NMFException("-1");
        boolean boolean80 = byteList53.equals((java.lang.Object) nMFException79);
        byteList53.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList82 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element83 = booleanList82.createElement();
        java.lang.Long long84 = booleanList82.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort85 = booleanList82.getAreaNumber();
        java.lang.Integer int86 = booleanList82.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray87 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList82};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray88 = byteList53.toArray(booleanListArray87);
        boolean boolean89 = floatList45.remove((java.lang.Object) booleanListArray87);
        java.util.ArrayList<java.lang.Boolean>[] booleanListArray90 = uShortList38.toArray(
            (java.util.ArrayList<java.lang.Boolean>[]) booleanListArray87);
        java.util.AbstractCollection<java.lang.Boolean>[] booleanCollectionArray91 = longList22.toArray(
            (java.util.AbstractCollection<java.lang.Boolean>[]) booleanListArray90);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet92 = longList22.getAreaVersion();
        java.lang.String str93 = uOctet92.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-10) + "'", int39.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(uShortStream43);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "[]" + "'", str44.equals("[]"));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 281475010265084L + "'", long46.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "[]" + "'", str48.equals("[]"));
        org.junit.Assert.assertNotNull(floatSpliterator49);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanItor65);
        org.junit.Assert.assertNotNull(booleanStream66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(uShortStream72);
        org.junit.Assert.assertNotNull(uShortItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(element83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 281475010265086L + "'", long84.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-2) + "'", int86.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray87);
        org.junit.Assert.assertNotNull(booleanListArray88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(booleanListArray90);
        org.junit.Assert.assertNotNull(booleanCollectionArray91);
        org.junit.Assert.assertNotNull(uOctet92);
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "1" + "'", str93.equals("1"));
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        java.lang.String[] strArray3 = new java.lang.String[]{"[-1, -1, 1, 1, 10]", "100", "100"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        boolean boolean13 = strList4.removeAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.lang.String[] strArray15 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16,
            strArray15);
        int int18 = strList16.size();
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList22 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList22,
            booleanArray21);
        boolean boolean25 = booleanList22.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream26 = booleanList22.stream();
        boolean boolean27 = strList16.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        int int28 = booleanList9.indexOf((java.lang.Object) strList16);
        java.util.Iterator<java.lang.String> strItor29 = strList16.iterator();
        java.util.stream.Stream<java.lang.String> strStream30 = strList16.parallelStream();
        strList16.clear();
        java.util.ListIterator<java.lang.String> strItor32 = strList16.listIterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF37
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl41 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF42 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCServicesProviderNMF42
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl44 = mCServicesProviderNMF42
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl45 = mCServicesProviderNMF42
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl46 = mCServicesProviderNMF42
            .getAggregationService();
        org.ccsds.moims.mo.mc.aggregation.provider.AggregationSkeleton[] aggregationSkeletonArray47 = new org.ccsds.moims.mo.mc.aggregation.provider.AggregationSkeleton[]{aggregationProviderServiceImpl36,
                                                                                                                                                                           aggregationProviderServiceImpl41,
                                                                                                                                                                           aggregationProviderServiceImpl46};
        org.ccsds.moims.mo.mc.aggregation.provider.AggregationSkeleton[] aggregationSkeletonArray48 = strList16.toArray(
            aggregationSkeletonArray47);
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList51 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList51,
            booleanArray50);
        java.util.ListIterator<java.lang.Boolean> booleanItor54 = booleanList51.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream55 = booleanList51.parallelStream();
        boolean boolean57 = booleanList51.add((java.lang.Boolean) false);
        java.util.ListIterator<java.lang.Boolean> booleanItor58 = booleanList51.listIterator();
        java.util.ListIterator<java.lang.Boolean> booleanItor59 = booleanList51.listIterator();
        boolean boolean60 = strList16.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl44);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl45);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl46);
        org.junit.Assert.assertNotNull(aggregationSkeletonArray47);
        org.junit.Assert.assertNotNull(aggregationSkeletonArray48);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertNotNull(booleanStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(booleanItor58);
        org.junit.Assert.assertNotNull(booleanItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException4 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray5 = nMFException4.getSuppressed();
        java.lang.Throwable[] throwableArray6 = nMFException4.getSuppressed();
        esa.mo.nmf.NMFException nMFException7 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException4);
        java.lang.String str8 = nMFException4.toString();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException4);
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = nMFException12.getSuppressed();
        esa.mo.nmf.NMFException nMFException16 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray17 = nMFException16.getSuppressed();
        nMFException12.addSuppressed((java.lang.Throwable) nMFException16);
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException16);
        java.lang.Throwable[] throwableArray20 = nMFException16.getSuppressed();
        nMFException4.addSuppressed((java.lang.Throwable) nMFException16);
        java.lang.Throwable[] throwableArray22 = nMFException16.getSuppressed();
        java.lang.String str23 = nMFException16.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str8.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str23.equals(
            "esa.mo.nmf.NMFException: 0"));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        int int23 = floatList0.size();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = floatList0.getServiceNumber();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(uShort24);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl1 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl2 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(actionProviderServiceImpl1);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl2);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        java.lang.Long long2 = booleanList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = booleanList0.createElement();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray8 = nMFException5.getSuppressed();
        boolean boolean9 = booleanList0.equals((java.lang.Object) throwableArray8);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = booleanList0.getAreaVersion();
        java.lang.Long long11 = booleanList0.getShortForm();
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265086L + "'", long2.equals(281475010265086L));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 281475010265086L + "'", long11.equals(281475010265086L));
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        java.lang.Long[] longArray4 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList5 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList5, longArray4);
        java.lang.Object obj7 = null;
        boolean boolean8 = longList5.contains(obj7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean11 = longList5.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor12 = longList5.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean14 = longList5.remove((java.lang.Object) uShort13);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList15 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int16 = uShortList15.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor17 = uShortList15.iterator();
        java.lang.Object[] objArray18 = uShortList15.toArray();
        uShortList15.clear();
        uShortList15.clear();
        boolean boolean21 = uShortList15.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor22 = uShortList15.iterator();
        boolean boolean23 = longList5.contains((java.lang.Object) uShortList15);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList24 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str25 = doubleList24.toString();
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList28 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList28,
            booleanArray27);
        java.util.ListIterator<java.lang.Boolean> booleanItor31 = booleanList28.listIterator((int) (short) 1);
        boolean boolean32 = doubleList24.containsAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        java.lang.Byte[] byteArray35 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList36 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList36,
            byteArray35);
        boolean boolean38 = byteList36.isEmpty();
        int int39 = byteList36.size();
        int int40 = booleanList28.indexOf((java.lang.Object) byteList36);
        java.lang.Boolean[] booleanArray43 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList44 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList44,
            booleanArray43);
        java.util.Iterator<java.lang.Boolean> booleanItor46 = booleanList44.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream47 = booleanList44.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor48 = booleanList44.iterator();
        boolean boolean49 = byteList36.removeAll((java.util.Collection<java.lang.Boolean>) booleanList44);
        boolean boolean50 = uShortList15.removeAll((java.util.Collection<java.lang.Boolean>) booleanList44);
        java.lang.Object obj51 = uShortList15.clone();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator52 = uShortList15
            .spliterator();
        java.lang.Integer int53 = uShortList15.getTypeShortForm();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl60 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl61 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl62 = mCServicesProviderNMF54
            .getActionService();
        int int63 = uShortList15.indexOf((java.lang.Object) actionProviderServiceImpl62);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(longItor12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-10) + "'", int16.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(uShortItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[]" + "'", str25.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanItor31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertNotNull(booleanStream47);
        org.junit.Assert.assertNotNull(booleanItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(uShortSpliterator52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-10) + "'", int53.equals((-10)));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl60);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl61);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode21 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration19.setMode(registrationMode21);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCRegistration19.aggregationService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertTrue("'" + registrationMode21 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode21.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNull(cOMServicesProvider23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.Time time24 = new org.ccsds.moims.mo.mal.structures.Time();
        org.ccsds.moims.mo.mal.structures.Element element25 = time24.createElement();
        boolean boolean26 = longList22.equals((java.lang.Object) time24);
        java.lang.String[] strArray28 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29,
            strArray28);
        boolean boolean32 = strList29.add("hi!");
        java.lang.Object obj33 = null;
        boolean boolean34 = strList29.equals(obj33);
        java.util.ListIterator<java.lang.String> strItor35 = strList29.listIterator();
        int int36 = longList22.indexOf((java.lang.Object) strList29);
        int int37 = strList29.size();
        try {
            java.util.List<java.lang.String> strList40 = strList29.subList(7, (int) (short) 1);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(7) > toIndex(1)");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        java.lang.Double[] doubleArray3 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList4 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList4,
            doubleArray3);
        java.util.Spliterator<java.lang.Double> doubleSpliterator6 = doubleList4.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor7 = doubleList4.iterator();
        boolean boolean8 = stringList1.equals((java.lang.Object) doubleItor7);
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj10 = shortList9.clone();
        java.lang.String str11 = shortList9.toString();
        java.util.Spliterator<java.lang.Short> shortSpliterator12 = shortList9.spliterator();
        boolean boolean13 = stringList1.remove((java.lang.Object) shortSpliterator12);
        java.lang.Integer int14 = stringList1.getTypeShortForm();
        int int15 = stringList1.size();
        org.ccsds.moims.mo.mal.structures.FloatList floatList16 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long17 = floatList16.getShortForm();
        java.lang.String[] strArray19 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20,
            strArray19);
        int int22 = strList20.size();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        boolean boolean29 = booleanList26.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream30 = booleanList26.stream();
        boolean boolean31 = strList20.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        boolean boolean32 = floatList16.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.util.Spliterator<java.lang.Float> floatSpliterator33 = floatList16.spliterator();
        esa.mo.nmf.NMFException nMFException35 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray36 = nMFException35.getSuppressed();
        int int37 = floatList16.lastIndexOf((java.lang.Object) throwableArray36);
        java.lang.Integer int38 = floatList16.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = floatList16.getServiceNumber();
        boolean boolean40 = stringList1.equals((java.lang.Object) floatList16);
        org.ccsds.moims.mo.mal.structures.StringList stringList42 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        org.ccsds.moims.mo.mal.structures.UShort uShort43 = stringList42.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList45 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long46 = integerList45.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList48 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        org.ccsds.moims.mo.mal.structures.IntegerList integerList50 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long51 = integerList50.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray52 = new org.ccsds.moims.mo.mal.structures.IntegerList[]{integerList45,
                                                                                                                                 integerList48,
                                                                                                                                 integerList50};
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray53 = stringList42.toArray(integerListArray52);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = stringList42.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.ShortList shortList55 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj56 = shortList55.clone();
        java.lang.Long long57 = shortList55.getShortForm();
        int int58 = stringList42.indexOf((java.lang.Object) shortList55);
        java.util.Iterator<java.lang.Short> shortItor59 = shortList55.iterator();
        java.lang.Integer int60 = shortList55.getTypeShortForm();
        java.lang.Long long61 = shortList55.getShortForm();
        boolean boolean62 = floatList16.contains((java.lang.Object) shortList55);
        org.ccsds.moims.mo.mal.structures.UShort uShort63 = shortList55.getAreaNumber();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator6);
        org.junit.Assert.assertNotNull(doubleItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]" + "'", str11.equals("[]"));
        org.junit.Assert.assertNotNull(shortSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-15) + "'", int14.equals((-15)));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 281475010265084L + "'", long17.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatSpliterator33);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-4) + "'", int38.equals((-4)));
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(uShort43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 281475010265077L + "'", long46.equals(281475010265077L));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 281475010265077L + "'", long51.equals(281475010265077L));
        org.junit.Assert.assertNotNull(integerListArray52);
        org.junit.Assert.assertNotNull(integerListArray53);
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 281475010265079L + "'", long57.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(shortItor59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-9) + "'", int60.equals((-9)));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 281475010265079L + "'", long61.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(uShort63);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException2);
        java.lang.String str6 = nMFException5.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "esa.mo.nmf.NMFException: [hi!, hi!]" + "'", str6.equals(
            "esa.mo.nmf.NMFException: [hi!, hi!]"));
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl23 = mCRegistration19.alertService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl23);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList0.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor4 = uShortList0.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF16
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF19 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF19
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF19
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF19
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCServicesProviderNMF19
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration24 = new esa.mo.nmf.MCRegistration(cOMServicesProvider5,
            parameterProviderServiceImpl10, aggregationProviderServiceImpl15, alertProviderServiceImpl18,
            actionProviderServiceImpl23);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl25 = mCRegistration24.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration24.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider27 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF41
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCServicesProviderNMF41
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration46 = new esa.mo.nmf.MCRegistration(cOMServicesProvider27,
            parameterProviderServiceImpl32, aggregationProviderServiceImpl37, alertProviderServiceImpl40,
            actionProviderServiceImpl45);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl50 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCServicesProviderNMF47
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl60 = mCServicesProviderNMF54
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray61 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl26,
                                                                                                                                                                                   actionProviderServiceImpl45,
                                                                                                                                                                                   actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl60};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray62 = uShortList0
            .toArray(actionInheritanceSkeletonArray61);
        uShortList0.ensureCapacity(18);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator65 = uShortList0.spliterator();
        uShortList0.trimToSize();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uShortItor4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray61);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray62);
        org.junit.Assert.assertNotNull(uShortSpliterator65);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = byteList3.removeAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        org.ccsds.moims.mo.mal.structures.Union union16 = new org.ccsds.moims.mo.mal.structures.Union(
            (java.lang.Long) 0L);
        boolean boolean17 = byteList3.equals((java.lang.Object) 0L);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList21,
            byteArray20);
        boolean boolean23 = byteList21.isEmpty();
        java.lang.Boolean[] booleanArray26 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList27 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList27,
            booleanArray26);
        boolean boolean30 = booleanList27.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream31 = booleanList27.stream();
        boolean boolean32 = byteList21.removeAll((java.util.Collection<java.lang.Boolean>) booleanList27);
        booleanList27.trimToSize();
        boolean boolean34 = byteList3.contains((java.lang.Object) booleanList27);
        org.ccsds.moims.mo.mal.structures.FloatList floatList35 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long36 = floatList35.getShortForm();
        java.lang.String[] strArray38 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39,
            strArray38);
        int int41 = strList39.size();
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList45 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList45,
            booleanArray44);
        boolean boolean48 = booleanList45.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream49 = booleanList45.stream();
        boolean boolean50 = strList39.containsAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        boolean boolean51 = floatList35.containsAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        java.util.Spliterator<java.lang.Float> floatSpliterator52 = floatList35.spliterator();
        esa.mo.nmf.NMFException nMFException54 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray55 = nMFException54.getSuppressed();
        int int56 = floatList35.lastIndexOf((java.lang.Object) throwableArray55);
        org.ccsds.moims.mo.mal.structures.LongList longList57 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int58 = floatList35.lastIndexOf((java.lang.Object) longList57);
        org.ccsds.moims.mo.mal.structures.LongList longList60 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream61 = longList60.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort62 = longList60.getServiceNumber();
        int int63 = floatList35.indexOf((java.lang.Object) longList60);
        boolean boolean64 = booleanList27.equals((java.lang.Object) int63);
        java.util.stream.Stream<java.lang.Boolean> booleanStream65 = booleanList27.parallelStream();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 281475010265084L + "'", long36.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanStream49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(floatSpliterator52);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(longStream61);
        org.junit.Assert.assertNotNull(uShort62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(booleanStream65);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray5 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray6 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray7 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("esa.mo.nmf.NMFException: []",
            (java.lang.Throwable) nMFException2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Long long1 = booleanList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList2 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element3 = booleanList2.createElement();
        java.lang.Long long4 = booleanList2.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element5 = booleanList2.createElement();
        esa.mo.nmf.NMFException nMFException7 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray8 = nMFException7.getSuppressed();
        java.lang.Throwable[] throwableArray9 = nMFException7.getSuppressed();
        java.lang.Throwable[] throwableArray10 = nMFException7.getSuppressed();
        boolean boolean11 = booleanList2.equals((java.lang.Object) throwableArray10);
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = booleanList2.getAreaNumber();
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList2.stream();
        int int14 = booleanList0.lastIndexOf((java.lang.Object) booleanStream13);
        java.lang.Integer int15 = booleanList0.getTypeShortForm();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265086L + "'", long1.equals(281475010265086L));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265086L + "'", long4.equals(281475010265086L));
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15.equals((-2)));
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = floatList0.getServiceNumber();
        try {
            java.lang.Float float25 = floatList0.remove((int) (short) 255);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 255, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(uShort23);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider21 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF22 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl23 = mCServicesProviderNMF22
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCServicesProviderNMF22
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCServicesProviderNMF22
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCServicesProviderNMF22
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF27 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCServicesProviderNMF27
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF32 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl34 = mCServicesProviderNMF32
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF35 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCServicesProviderNMF35
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF35
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl38 = mCServicesProviderNMF35
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl39 = mCServicesProviderNMF35
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration40 = new esa.mo.nmf.MCRegistration(cOMServicesProvider21,
            parameterProviderServiceImpl26, aggregationProviderServiceImpl31, alertProviderServiceImpl34,
            actionProviderServiceImpl39);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl41 = mCRegistration40.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode42 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration40.setMode(registrationMode42);
        mCRegistration19.setMode(registrationMode42);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider45 = mCRegistration19.comServices;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl34);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl38);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl39);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl41);
        org.junit.Assert.assertTrue("'" + registrationMode42 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode42.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNull(cOMServicesProvider45);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uShortList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = org.ccsds.moims.mo.mal.structures.UShortList.AREA_SHORT_FORM;
        boolean boolean6 = uShortList0.add(uShort5);
        java.lang.String str7 = uShortList0.toString();
        java.lang.Object obj8 = uShortList0.clone();
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray11 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12,
            strArray11);
        int int14 = strList12.size();
        java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList18 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList18,
            booleanArray17);
        boolean boolean21 = booleanList18.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream22 = booleanList18.stream();
        boolean boolean23 = strList12.containsAll((java.util.Collection<java.lang.Boolean>) booleanList18);
        boolean boolean24 = shortList9.containsAll((java.util.Collection<java.lang.Boolean>) booleanList18);
        boolean boolean26 = booleanList18.contains((java.lang.Object) 3);
        boolean boolean27 = uShortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList18);
        boolean boolean29 = booleanList18.add((java.lang.Boolean) true);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35,
            byteArray34);
        boolean boolean38 = byteList35.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj39 = byteList35.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream40 = byteList35.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList42 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int43 = byteList35.indexOf((java.lang.Object) stringList42);
        byte[] byteArray47 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob48 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray47);
        int int49 = blob48.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob50 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean51 = blob48.equals((java.lang.Object) blob50);
        boolean boolean52 = stringList42.remove((java.lang.Object) blob50);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF53 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean54 = stringList42.equals((java.lang.Object) mCServicesProviderNMF53);
        java.util.stream.Stream<java.lang.String> strStream55 = stringList42.parallelStream();
        java.lang.Long[] longArray60 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList61 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList61,
            longArray60);
        java.lang.Object obj63 = null;
        boolean boolean64 = longList61.contains(obj63);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger66 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean67 = longList61.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor68 = longList61.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean70 = longList61.remove((java.lang.Object) uShort69);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList71 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int72 = uShortList71.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor73 = uShortList71.iterator();
        java.lang.Object[] objArray74 = uShortList71.toArray();
        uShortList71.clear();
        uShortList71.clear();
        boolean boolean77 = uShortList71.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor78 = uShortList71.iterator();
        boolean boolean79 = longList61.contains((java.lang.Object) uShortList71);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList80 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort81 = booleanList80.getAreaNumber();
        boolean boolean82 = longList61.retainAll((java.util.Collection<java.lang.Boolean>) booleanList80);
        java.lang.Integer int83 = booleanList80.getTypeShortForm();
        boolean boolean85 = booleanList80.add((java.lang.Boolean) true);
        boolean boolean86 = stringList42.retainAll((java.util.Collection<java.lang.Boolean>) booleanList80);
        org.ccsds.moims.mo.mal.structures.UShort uShort87 = booleanList80.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet88 = booleanList80.getAreaVersion();
        boolean boolean89 = booleanList18.addAll((java.util.Collection<java.lang.Boolean>) booleanList80);
        java.lang.Integer int90 = booleanList80.getTypeShortForm();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[1]" + "'", str7.equals("[1]"));
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(byteStream40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(longItor68);
        org.junit.Assert.assertNotNull(uShort69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-10) + "'", int72.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(uShortItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(uShort81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-2) + "'", int83.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(uShort87);
        org.junit.Assert.assertNotNull(uOctet88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-2) + "'", int90.equals((-2)));
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = floatList0.createElement();
        try {
            java.lang.Float float24 = floatList0.remove(2);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(element22);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[hi!, hi!]");
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = mCRegistration19.comServices;
        org.ccsds.moims.mo.mal.structures.FloatList floatList26 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long27 = floatList26.getShortForm();
        java.lang.String[] strArray29 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30,
            strArray29);
        int int32 = strList30.size();
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36,
            booleanArray35);
        boolean boolean39 = booleanList36.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream40 = booleanList36.stream();
        boolean boolean41 = strList30.containsAll((java.util.Collection<java.lang.Boolean>) booleanList36);
        boolean boolean42 = floatList26.containsAll((java.util.Collection<java.lang.Boolean>) booleanList36);
        java.util.Spliterator<java.lang.Float> floatSpliterator43 = floatList26.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort44 = floatList26.getAreaNumber();
        java.lang.Object obj45 = null;
        boolean boolean46 = floatList26.equals(obj45);
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList47 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) floatList26);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNull(cOMServicesProvider25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 281475010265084L + "'", long27.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(floatSpliterator43);
        org.junit.Assert.assertNotNull(uShort44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        java.util.stream.Stream<java.lang.Integer> intStream3 = integerList1.stream();
        org.ccsds.moims.mo.mal.structures.Element element4 = integerList1.createElement();
        java.util.Iterator<java.lang.Integer> intItor5 = integerList1.iterator();
        java.lang.Long long6 = integerList1.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = integerList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.ShortList shortList8 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray10 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11,
            strArray10);
        int int13 = strList11.size();
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17,
            booleanArray16);
        boolean boolean20 = booleanList17.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream21 = booleanList17.stream();
        boolean boolean22 = strList11.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        boolean boolean23 = shortList8.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        java.util.stream.Stream<java.lang.Short> shortStream24 = shortList8.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element25 = shortList8.createElement();
        esa.mo.nmf.NMFException nMFException27 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray28 = nMFException27.getSuppressed();
        int int29 = shortList8.indexOf((java.lang.Object) throwableArray28);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList30 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str31 = doubleList30.toString();
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList34 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList34,
            booleanArray33);
        java.util.ListIterator<java.lang.Boolean> booleanItor37 = booleanList34.listIterator((int) (short) 1);
        boolean boolean38 = doubleList30.containsAll((java.util.Collection<java.lang.Boolean>) booleanList34);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42,
            byteArray41);
        boolean boolean44 = byteList42.isEmpty();
        int int45 = byteList42.size();
        int int46 = booleanList34.indexOf((java.lang.Object) byteList42);
        java.lang.Boolean[] booleanArray49 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList50 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList50,
            booleanArray49);
        java.util.Iterator<java.lang.Boolean> booleanItor52 = booleanList50.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream53 = booleanList50.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor54 = booleanList50.iterator();
        boolean boolean55 = byteList42.removeAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        boolean boolean56 = shortList8.removeAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        boolean boolean57 = integerList1.containsAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        try {
            java.util.List<java.lang.Boolean> booleanList60 = booleanList50.subList(100, 0);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(100) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(intStream3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertNotNull(intItor5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265077L + "'", long6.equals(281475010265077L));
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shortStream24);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "[]" + "'", str31.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(booleanItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(booleanItor52);
        org.junit.Assert.assertNotNull(booleanStream53);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        java.lang.Long[] longArray4 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList5 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList5, longArray4);
        java.lang.Object obj7 = null;
        boolean boolean8 = longList5.contains(obj7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean11 = longList5.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean17 = longList5.containsAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        java.lang.Long long19 = longList5.get(1);
        java.util.stream.Stream<java.lang.Long> longStream20 = longList5.stream();
        java.lang.Long long22 = longList5.remove(0);
        java.lang.Object obj23 = longList5.clone();
        org.ccsds.moims.mo.mal.structures.LongList longList25 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet26 = longList25.getAreaVersion();
        java.util.Iterator<java.lang.Long> longItor27 = longList25.iterator();
        longList25.ensureCapacity((-15));
        java.util.Iterator<java.lang.Long> longItor30 = longList25.iterator();
        esa.mo.nmf.NMFException nMFException32 = new esa.mo.nmf.NMFException("1");
        esa.mo.nmf.NMFException nMFException35 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray36 = nMFException35.getSuppressed();
        java.lang.Throwable[] throwableArray37 = nMFException35.getSuppressed();
        esa.mo.nmf.NMFException nMFException39 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray40 = nMFException39.getSuppressed();
        nMFException35.addSuppressed((java.lang.Throwable) nMFException39);
        esa.mo.nmf.NMFException nMFException42 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException39);
        java.lang.Throwable[] throwableArray43 = nMFException39.getSuppressed();
        esa.mo.nmf.NMFException[] nMFExceptionArray44 = new esa.mo.nmf.NMFException[]{nMFException32, nMFException39};
        esa.mo.nmf.NMFException[] nMFExceptionArray45 = longList25.toArray(nMFExceptionArray44);
        int int46 = longList5.indexOf((java.lang.Object) nMFExceptionArray45);
        boolean boolean48 = longList5.add((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19.equals((-1L)));
        org.junit.Assert.assertNotNull(longStream20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10L + "'", long22.equals(10L));
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(uOctet26);
        org.junit.Assert.assertNotNull(longItor27);
        org.junit.Assert.assertNotNull(longItor30);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(nMFExceptionArray44);
        org.junit.Assert.assertNotNull(nMFExceptionArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        java.util.stream.Stream<java.lang.String> strStream26 = stringList12.stream();
        try {
            java.lang.String str29 = stringList12.set((-7), "esa.mo.nmf.NMFException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strStream26);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException2);
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        java.lang.String str7 = nMFException5.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "esa.mo.nmf.NMFException: [hi!, hi!]" + "'", str7.equals(
            "esa.mo.nmf.NMFException: [hi!, hi!]"));
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        java.lang.String[] strArray3 = new java.lang.String[]{"[-1, -1, 1, 1, 10]", "100", "100"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        boolean boolean13 = strList4.removeAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.lang.String[] strArray15 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16,
            strArray15);
        int int18 = strList16.size();
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList22 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList22,
            booleanArray21);
        boolean boolean25 = booleanList22.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream26 = booleanList22.stream();
        boolean boolean27 = strList16.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        int int28 = booleanList9.indexOf((java.lang.Object) strList16);
        java.util.Iterator<java.lang.String> strItor29 = strList16.iterator();
        java.util.stream.Stream<java.lang.String> strStream30 = strList16.parallelStream();
        strList16.clear();
        java.util.ListIterator<java.lang.String> strItor32 = strList16.listIterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF37
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl41 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF42 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCServicesProviderNMF42
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl44 = mCServicesProviderNMF42
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl45 = mCServicesProviderNMF42
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl46 = mCServicesProviderNMF42
            .getAggregationService();
        org.ccsds.moims.mo.mc.aggregation.provider.AggregationSkeleton[] aggregationSkeletonArray47 = new org.ccsds.moims.mo.mc.aggregation.provider.AggregationSkeleton[]{aggregationProviderServiceImpl36,
                                                                                                                                                                           aggregationProviderServiceImpl41,
                                                                                                                                                                           aggregationProviderServiceImpl46};
        org.ccsds.moims.mo.mc.aggregation.provider.AggregationSkeleton[] aggregationSkeletonArray48 = strList16.toArray(
            aggregationSkeletonArray47);
        org.ccsds.moims.mo.mal.structures.Union[][] unionArray49 = null;
        try {
            org.ccsds.moims.mo.mal.structures.Union[][] unionArray50 = strList16.toArray(unionArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl44);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl45);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl46);
        org.junit.Assert.assertNotNull(aggregationSkeletonArray47);
        org.junit.Assert.assertNotNull(aggregationSkeletonArray48);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList22.getServiceNumber();
        boolean boolean25 = longList22.isEmpty();
        java.lang.Object obj26 = longList22.clone();
        try {
            java.lang.Long long28 = longList22.get(3);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int2 = uShortList1.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList1.iterator();
        java.lang.Object[] objArray4 = uShortList1.toArray();
        boolean boolean6 = uShortList1.equals((java.lang.Object) 1);
        java.lang.Integer int7 = uShortList1.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor8 = uShortList1.iterator();
        int int9 = doubleList0.indexOf((java.lang.Object) uShortList1);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList10 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int11 = uShortList10.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor12 = uShortList10.iterator();
        java.lang.Object[] objArray13 = uShortList10.toArray();
        boolean boolean15 = uShortList10.equals((java.lang.Object) 1);
        java.lang.Integer int16 = uShortList10.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor17 = uShortList10.iterator();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList18 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int19 = uShortList18.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor20 = uShortList18.iterator();
        java.lang.Object[] objArray21 = uShortList18.toArray();
        uShortList18.clear();
        uShortList18.clear();
        boolean boolean24 = uShortList18.isEmpty();
        java.lang.Integer int25 = uShortList18.getTypeShortForm();
        boolean boolean26 = uShortList10.contains((java.lang.Object) uShortList18);
        boolean boolean27 = doubleList0.remove((java.lang.Object) uShortList10);
        org.ccsds.moims.mo.mal.structures.ShortList shortList29 = new org.ccsds.moims.mo.mal.structures.ShortList(12);
        java.lang.Long long30 = shortList29.getShortForm();
        java.lang.Byte[] byteArray35 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList36 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList36,
            byteArray35);
        boolean boolean39 = byteList36.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj40 = byteList36.clone();
        java.lang.Boolean[] booleanArray43 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList44 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList44,
            booleanArray43);
        java.util.Iterator<java.lang.Boolean> booleanItor46 = booleanList44.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream47 = booleanList44.stream();
        boolean boolean48 = byteList36.removeAll((java.util.Collection<java.lang.Boolean>) booleanList44);
        java.util.stream.Stream<java.lang.Byte> byteStream49 = byteList36.stream();
        boolean boolean50 = shortList29.remove((java.lang.Object) byteList36);
        int int51 = uShortList10.indexOf((java.lang.Object) boolean50);
        org.ccsds.moims.mo.mal.structures.FloatList floatList52 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long53 = floatList52.getShortForm();
        java.lang.String[] strArray55 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56,
            strArray55);
        int int58 = strList56.size();
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList62 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList62,
            booleanArray61);
        boolean boolean65 = booleanList62.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream66 = booleanList62.stream();
        boolean boolean67 = strList56.containsAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        boolean boolean68 = floatList52.containsAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        java.util.Spliterator<java.lang.Float> floatSpliterator69 = floatList52.spliterator();
        esa.mo.nmf.NMFException nMFException71 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray72 = nMFException71.getSuppressed();
        int int73 = floatList52.lastIndexOf((java.lang.Object) throwableArray72);
        org.ccsds.moims.mo.mal.structures.LongList longList74 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int75 = floatList52.lastIndexOf((java.lang.Object) longList74);
        java.util.Iterator<java.lang.Long> longItor76 = longList74.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort77 = longList74.getServiceNumber();
        boolean boolean78 = uShortList10.add(uShort77);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-10) + "'", int2.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-10) + "'", int7.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-10) + "'", int11.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-10) + "'", int16.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-10) + "'", int19.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-10) + "'", int25.equals((-10)));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 281475010265079L + "'", long30.equals(281475010265079L));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertNotNull(booleanStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteStream49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 281475010265084L + "'", long53.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(booleanStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(floatSpliterator69);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(longItor76);
        org.junit.Assert.assertNotNull(uShort77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl4 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl5 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl6 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl7 = mCServicesProviderNMF0
            .getAggregationService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl4);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl5);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl6);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl7);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uShortList0.getServiceNumber();
        java.lang.Integer int3 = uShortList0.getTypeShortForm();
        java.lang.Object obj4 = uShortList0.clone();
        org.ccsds.moims.mo.mal.structures.ShortList shortList5 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj6 = shortList5.clone();
        java.util.stream.Stream<java.lang.Short> shortStream7 = shortList5.parallelStream();
        shortList5.trimToSize();
        shortList5.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray27 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList28 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28,
            intArray27);
        java.lang.Boolean[] booleanArray32 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList33 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList33,
            booleanArray32);
        java.util.Iterator<java.lang.Boolean> booleanItor35 = booleanList33.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream36 = booleanList33.stream();
        boolean boolean37 = intList28.retainAll((java.util.Collection<java.lang.Boolean>) booleanList33);
        boolean boolean38 = shortList5.containsAll((java.util.Collection<java.lang.Boolean>) booleanList33);
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList41 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList41,
            booleanArray40);
        java.util.ListIterator<java.lang.Boolean> booleanItor44 = booleanList41.listIterator((int) (short) 1);
        boolean boolean45 = shortList5.containsAll((java.util.Collection<java.lang.Boolean>) booleanList41);
        java.util.stream.Stream<java.lang.Boolean> booleanStream46 = booleanList41.stream();
        boolean boolean47 = booleanList41.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList48 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long49 = floatList48.getShortForm();
        java.lang.String[] strArray51 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52,
            strArray51);
        int int54 = strList52.size();
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList58 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList58,
            booleanArray57);
        boolean boolean61 = booleanList58.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream62 = booleanList58.stream();
        boolean boolean63 = strList52.containsAll((java.util.Collection<java.lang.Boolean>) booleanList58);
        boolean boolean64 = floatList48.containsAll((java.util.Collection<java.lang.Boolean>) booleanList58);
        java.util.Spliterator<java.lang.Float> floatSpliterator65 = floatList48.spliterator();
        esa.mo.nmf.NMFException nMFException67 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray68 = nMFException67.getSuppressed();
        int int69 = floatList48.lastIndexOf((java.lang.Object) throwableArray68);
        org.ccsds.moims.mo.mal.structures.Element element70 = floatList48.createElement();
        int int71 = booleanList41.lastIndexOf((java.lang.Object) element70);
        int int72 = uShortList0.lastIndexOf((java.lang.Object) int71);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList74 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj75 = uShortList74.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort76 = uShortList74.getServiceNumber();
        java.lang.Integer int77 = uShortList74.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList78 = new org.ccsds.moims.mo.mal.structures.UShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort79 = uShortList78.getServiceNumber();
        java.lang.Integer int80 = uShortList78.getTypeShortForm();
        int int81 = uShortList74.lastIndexOf((java.lang.Object) uShortList78);
        uShortList74.trimToSize();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray83 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList84 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean85 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList84, uRIArray83);
        java.lang.Boolean[] booleanArray88 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList89 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList89,
            booleanArray88);
        java.util.Iterator<java.lang.Boolean> booleanItor91 = booleanList89.iterator();
        boolean boolean92 = uRIList84.retainAll((java.util.Collection<java.lang.Boolean>) booleanList89);
        org.ccsds.moims.mo.mal.structures.UShort uShort93 = org.ccsds.moims.mo.mal.structures.LongList.AREA_SHORT_FORM;
        boolean boolean94 = uRIList84.remove((java.lang.Object) uShort93);
        org.ccsds.moims.mo.mal.structures.Element element95 = uShort93.createElement();
        org.ccsds.moims.mo.mal.structures.Element element96 = uShort93.createElement();
        boolean boolean97 = uShortList74.add(uShort93);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort98 = uShortList0.set((int) 'a', uShort93);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-10) + "'", int3.equals((-10)));
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(shortStream7);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(booleanItor35);
        org.junit.Assert.assertNotNull(booleanStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(booleanStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 281475010265084L + "'", long49.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(booleanStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(floatSpliterator65);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(uShort76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-10) + "'", int77.equals((-10)));
        org.junit.Assert.assertNotNull(uShort79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-10) + "'", int80.equals((-10)));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(uRIArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(booleanItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(uShort93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(element95);
        org.junit.Assert.assertNotNull(element96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode21 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration19.setMode(registrationMode21);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl24 = mCRegistration19.alertService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = mCRegistration19.comServices;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertTrue("'" + registrationMode21 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode21.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNull(cOMServicesProvider23);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl24);
        org.junit.Assert.assertNull(cOMServicesProvider25);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = nMFException5.getSuppressed();
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException5);
        java.lang.String str9 = nMFException5.toString();
        nMFException2.addSuppressed((java.lang.Throwable) nMFException5);
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = nMFException12.getSuppressed();
        nMFException2.addSuppressed((java.lang.Throwable) nMFException12);
        java.lang.String str16 = nMFException2.toString();
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("100",
            (java.lang.Throwable) nMFException2);
        java.lang.Throwable[] throwableArray18 = nMFException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str9.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "esa.mo.nmf.NMFException: -1" + "'", str16.equals(
            "esa.mo.nmf.NMFException: -1"));
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        boolean boolean5 = uShortList0.equals((java.lang.Object) 1);
        java.lang.Byte[] byteArray10 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList11,
            byteArray10);
        java.util.Iterator<java.lang.Byte> byteItor13 = byteList11.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration15 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long16 = duration15.getShortForm();
        int int17 = byteList11.indexOf((java.lang.Object) long16);
        int int18 = uShortList0.lastIndexOf((java.lang.Object) byteList11);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24,
            byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 10);
        java.lang.String str28 = byteList24.toString();
        java.util.stream.Stream<java.lang.Byte> byteStream29 = byteList24.parallelStream();
        int int30 = byteList24.size();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray31 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean33 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList32, uRIArray31);
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList37 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList37,
            booleanArray36);
        java.util.Iterator<java.lang.Boolean> booleanItor39 = booleanList37.iterator();
        boolean boolean40 = uRIList32.retainAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        booleanList37.clear();
        boolean boolean42 = byteList24.removeAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        java.util.stream.Stream<java.lang.Boolean> booleanStream43 = booleanList37.stream();
        int int44 = uShortList0.lastIndexOf((java.lang.Object) booleanList37);
        java.util.ListIterator<java.lang.Boolean> booleanItor45 = booleanList37.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList47 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet48 = longList47.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = longList47.getAreaNumber();
        java.util.Spliterator<java.lang.Long> longSpliterator50 = longList47.spliterator();
        int int51 = booleanList37.lastIndexOf((java.lang.Object) longList47);
        org.ccsds.moims.mo.mal.structures.URIList uRIList53 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.Element element54 = uRIList53.createElement();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor55 = uRIList53.iterator();
        int int56 = longList47.lastIndexOf((java.lang.Object) uRIList53);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet57 = uRIList53.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList58 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long59 = floatList58.getShortForm();
        java.lang.String[] strArray61 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62,
            strArray61);
        int int64 = strList62.size();
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList68 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList68,
            booleanArray67);
        boolean boolean71 = booleanList68.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream72 = booleanList68.stream();
        boolean boolean73 = strList62.containsAll((java.util.Collection<java.lang.Boolean>) booleanList68);
        boolean boolean74 = floatList58.containsAll((java.util.Collection<java.lang.Boolean>) booleanList68);
        java.util.Spliterator<java.lang.Float> floatSpliterator75 = floatList58.spliterator();
        esa.mo.nmf.NMFException nMFException77 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray78 = nMFException77.getSuppressed();
        int int79 = floatList58.lastIndexOf((java.lang.Object) throwableArray78);
        org.ccsds.moims.mo.mal.structures.LongList longList80 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int81 = floatList58.lastIndexOf((java.lang.Object) longList80);
        org.ccsds.moims.mo.mal.structures.UShort uShort82 = longList80.getServiceNumber();
        boolean boolean83 = uRIList53.remove((java.lang.Object) uShort82);
        java.lang.Long long84 = uRIList53.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element85 = uRIList53.createElement();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor86 = uRIList53.iterator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteItor13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281474993487875L + "'", long16.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str28.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertNotNull(uRIArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(booleanStream43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(booleanItor45);
        org.junit.Assert.assertNotNull(uOctet48);
        org.junit.Assert.assertNotNull(uShort49);
        org.junit.Assert.assertNotNull(longSpliterator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(uRIItor55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(uOctet57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 281475010265084L + "'", long59.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(booleanStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(floatSpliterator75);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(uShort82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 281475010265070L + "'", long84.equals(281475010265070L));
        org.junit.Assert.assertNotNull(element85);
        org.junit.Assert.assertNotNull(uRIItor86);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.parallelStream();
        shortList0.trimToSize();
        shortList0.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray22 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList23 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23,
            intArray22);
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList28 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList28,
            booleanArray27);
        java.util.Iterator<java.lang.Boolean> booleanItor30 = booleanList28.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream31 = booleanList28.stream();
        boolean boolean32 = intList23.retainAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        boolean boolean33 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        java.lang.Object obj34 = booleanList28.clone();
        java.lang.Short[] shortArray37 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList38 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList38,
            shortArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = shortList38.equals(obj40);
        java.util.Iterator<java.lang.Short> shortItor42 = shortList38.iterator();
        java.lang.Long[] longArray47 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList48 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList48,
            longArray47);
        java.lang.Object obj50 = null;
        boolean boolean51 = longList48.contains(obj50);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger53 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean54 = longList48.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList58 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList58,
            booleanArray57);
        boolean boolean60 = longList48.containsAll((java.util.Collection<java.lang.Boolean>) booleanList58);
        java.lang.Boolean[] booleanArray63 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList64 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList64,
            booleanArray63);
        java.util.Iterator<java.lang.Boolean> booleanItor66 = booleanList64.iterator();
        int int67 = longList48.indexOf((java.lang.Object) booleanList64);
        int int68 = shortList38.indexOf((java.lang.Object) booleanList64);
        java.util.stream.Stream<java.lang.Boolean> booleanStream69 = booleanList64.parallelStream();
        boolean boolean70 = booleanList28.containsAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        boolean boolean72 = booleanList28.add((java.lang.Boolean) false);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF73 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl74 = mCServicesProviderNMF73
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl75 = mCServicesProviderNMF73
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl76 = mCServicesProviderNMF73
            .getParameterService();
        boolean boolean77 = booleanList28.contains((java.lang.Object) parameterProviderServiceImpl76);
        try {
            java.util.ListIterator<java.lang.Boolean> booleanItor79 = booleanList28.listIterator((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanItor30);
        org.junit.Assert.assertNotNull(booleanStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shortItor42);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(booleanItor66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(booleanStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl74);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl75);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.Integer int1 = doubleList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList0.getServiceNumber();
        java.lang.Byte[] byteArray5 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList6 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList6, byteArray5);
        boolean boolean8 = byteList6.isEmpty();
        int int10 = byteList6.indexOf((java.lang.Object) 'a');
        int int12 = byteList6.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        java.util.ListIterator<java.lang.Boolean> booleanItor18 = booleanList15.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.parallelStream();
        boolean boolean21 = booleanList15.add((java.lang.Boolean) false);
        boolean boolean22 = byteList6.retainAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList23 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj24 = uShortList23.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream25 = uShortList23
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor26 = uShortList23.iterator();
        boolean boolean27 = byteList6.equals((java.lang.Object) uShortItor26);
        org.ccsds.moims.mo.mal.structures.ShortList shortList28 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj29 = shortList28.clone();
        boolean boolean30 = byteList6.equals((java.lang.Object) shortList28);
        esa.mo.nmf.NMFException nMFException32 = new esa.mo.nmf.NMFException("-1");
        boolean boolean33 = byteList6.equals((java.lang.Object) nMFException32);
        byteList6.trimToSize();
        int int35 = doubleList0.indexOf((java.lang.Object) byteList6);
        java.lang.String str36 = byteList6.toString();
        try {
            byteList6.add(17, (java.lang.Byte) (byte) 0);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 17, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-5) + "'", int1.equals((-5)));
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanItor18);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(uShortStream25);
        org.junit.Assert.assertNotNull(uShortItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "[]" + "'", str36.equals("[]"));
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[hi!, , 1.0]");
        java.lang.String str2 = nMFException1.toString();
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "esa.mo.nmf.NMFException: [hi!, , 1.0]" + "'", str2.equals(
            "esa.mo.nmf.NMFException: [hi!, , 1.0]"));
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[true]");
        java.lang.String str2 = nMFException1.toString();
        java.lang.Throwable[] throwableArray3 = nMFException1.getSuppressed();
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "esa.mo.nmf.NMFException: [true]" + "'", str2.equals(
            "esa.mo.nmf.NMFException: [true]"));
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        org.ccsds.moims.mo.mal.structures.Time time1 = new org.ccsds.moims.mo.mal.structures.Time((long) (byte) -1);
        java.lang.String str2 = time1.toString();
        java.lang.Long long3 = time1.getShortForm();
        long long4 = time1.getValue();
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray6 = new org.ccsds.moims.mo.mal.structures.URI[]{uRI5};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList7 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean8 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList7, uRIArray6);
        int int9 = uRIList7.size();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator10 = uRIList7.spliterator();
        java.lang.Short[] shortArray13 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList14 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList14,
            shortArray13);
        java.lang.Object obj16 = null;
        boolean boolean17 = shortList14.equals(obj16);
        java.util.Iterator<java.lang.Short> shortItor18 = shortList14.iterator();
        java.lang.Object[] objArray19 = shortList14.toArray();
        java.lang.String[] strArray23 = new java.lang.String[]{"[-1, -1, 1, 1, 10]", "100", "100"};
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24,
            strArray23);
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList29 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList29,
            booleanArray28);
        boolean boolean32 = booleanList29.add((java.lang.Boolean) true);
        boolean boolean33 = strList24.removeAll((java.util.Collection<java.lang.Boolean>) booleanList29);
        java.lang.String[] strArray35 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36,
            strArray35);
        int int38 = strList36.size();
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        boolean boolean45 = booleanList42.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream46 = booleanList42.stream();
        boolean boolean47 = strList36.containsAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        int int48 = booleanList29.indexOf((java.lang.Object) strList36);
        boolean boolean49 = booleanList29.isEmpty();
        boolean boolean50 = shortList14.containsAll((java.util.Collection<java.lang.Boolean>) booleanList29);
        boolean boolean51 = uRIList7.retainAll((java.util.Collection<java.lang.Boolean>) booleanList29);
        boolean boolean52 = time1.equals((java.lang.Object) booleanList29);
        org.ccsds.moims.mo.mal.structures.Element element53 = time1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = time1.getServiceNumber();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl57 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl58 = mCServicesProviderNMF55
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl59 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl60 = mCServicesProviderNMF55
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl62 = mCServicesProviderNMF55
            .getAlertService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl63 = mCServicesProviderNMF55
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl64 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl65 = mCServicesProviderNMF55
            .getParameterService();
        boolean boolean66 = time1.equals((java.lang.Object) parameterProviderServiceImpl65);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "-1" + "'", str2.equals("-1"));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487888L + "'", long3.equals(281474993487888L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(uRIArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(uRISpliterator10);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shortItor18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl57);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl58);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl59);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl60);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl62);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl63);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = longList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = longList1.getAreaNumber();
        longList1.clear();
        longList1.clear();
        java.lang.Short[] shortArray8 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList9 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList9,
            shortArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = shortList9.equals(obj11);
        java.util.Iterator<java.lang.Short> shortItor13 = shortList9.iterator();
        java.lang.Long[] longArray18 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList19 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList19,
            longArray18);
        java.lang.Object obj21 = null;
        boolean boolean22 = longList19.contains(obj21);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger24 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean25 = longList19.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList29 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList29,
            booleanArray28);
        boolean boolean31 = longList19.containsAll((java.util.Collection<java.lang.Boolean>) booleanList29);
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList35 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList35,
            booleanArray34);
        java.util.Iterator<java.lang.Boolean> booleanItor37 = booleanList35.iterator();
        int int38 = longList19.indexOf((java.lang.Object) booleanList35);
        int int39 = shortList9.indexOf((java.lang.Object) booleanList35);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList40 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj41 = uShortList40.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream42 = uShortList40
            .parallelStream();
        java.lang.Long[] longArray47 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList48 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList48,
            longArray47);
        java.lang.Object obj50 = null;
        boolean boolean51 = longList48.contains(obj50);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger53 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean54 = longList48.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList58 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList58,
            booleanArray57);
        boolean boolean60 = longList48.containsAll((java.util.Collection<java.lang.Boolean>) booleanList58);
        java.lang.Boolean[] booleanArray63 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList64 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList64,
            booleanArray63);
        java.util.Iterator<java.lang.Boolean> booleanItor66 = booleanList64.iterator();
        int int67 = longList48.indexOf((java.lang.Object) booleanList64);
        boolean boolean68 = uShortList40.retainAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        boolean boolean69 = booleanList35.containsAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        boolean boolean70 = longList1.removeAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        java.util.stream.Stream<java.lang.Long> longStream71 = longList1.parallelStream();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF72 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl73 = mCServicesProviderNMF72
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl74 = mCServicesProviderNMF72
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl75 = mCServicesProviderNMF72
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl76 = mCServicesProviderNMF72
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl77 = mCServicesProviderNMF72
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl78 = mCServicesProviderNMF72
            .getActionService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl79 = mCServicesProviderNMF72
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl80 = mCServicesProviderNMF72
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl81 = mCServicesProviderNMF72
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF82 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl83 = mCServicesProviderNMF82
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl84 = mCServicesProviderNMF82
            .getActionService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl85 = mCServicesProviderNMF82
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl86 = mCServicesProviderNMF82
            .getAggregationService();
        org.ccsds.moims.mo.mc.aggregation.provider.AggregationHandler[] aggregationHandlerArray87 = new org.ccsds.moims.mo.mc.aggregation.provider.AggregationHandler[]{aggregationProviderServiceImpl81,
                                                                                                                                                                        aggregationProviderServiceImpl86};
        org.ccsds.moims.mo.mc.aggregation.provider.AggregationHandler[] aggregationHandlerArray88 = longList1.toArray(
            aggregationHandlerArray87);
        try {
            java.util.List<java.lang.Long> longList91 = longList1.subList((int) (short) 255, 100);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shortItor13);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanItor37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(uShortStream42);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(booleanItor66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(longStream71);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl73);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl74);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl75);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl76);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl77);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl78);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl79);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl80);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl81);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl83);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl84);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl85);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl86);
        org.junit.Assert.assertNotNull(aggregationHandlerArray87);
        org.junit.Assert.assertNotNull(aggregationHandlerArray88);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element1 = stringList0.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList2 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        boolean boolean3 = stringList0.retainAll((java.util.Collection<java.lang.Boolean>) booleanList2);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = org.ccsds.moims.mo.mal.structures.LongList.AREA_SHORT_FORM;
        java.lang.Long long5 = uShort4.getShortForm();
        java.lang.Double[] doubleArray7 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8,
            doubleArray7);
        java.util.Spliterator<java.lang.Double> doubleSpliterator10 = doubleList8.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor11 = doubleList8.iterator();
        boolean boolean12 = uShort4.equals((java.lang.Object) doubleItor11);
        int int13 = stringList0.indexOf((java.lang.Object) doubleItor11);
        java.lang.String str14 = stringList0.toString();
        java.util.Iterator<java.lang.String> strItor15 = stringList0.iterator();
        esa.mo.nmf.NMFException nMFException18 = new esa.mo.nmf.NMFException("[-1, -1, 1, 1, 10]");
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("[1]",
            (java.lang.Throwable) nMFException18);
        int int20 = stringList0.indexOf((java.lang.Object) nMFException18);
        java.lang.Throwable[] throwableArray21 = nMFException18.getSuppressed();
        java.lang.Throwable[] throwableArray22 = nMFException18.getSuppressed();
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281474993487882L + "'", long5.equals(281474993487882L));
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator10);
        org.junit.Assert.assertNotNull(doubleItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]" + "'", str14.equals("[]"));
        org.junit.Assert.assertNotNull(strItor15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCRegistration19.aggregationService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl23 = mCRegistration19.alertService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl23);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        java.lang.Long long2 = booleanList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = booleanList0.createElement();
        org.ccsds.moims.mo.mal.structures.Element element4 = booleanList0.createElement();
        boolean boolean5 = booleanList0.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList6 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long7 = floatList6.getShortForm();
        java.lang.String[] strArray9 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        int int12 = strList10.size();
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList16 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList16,
            booleanArray15);
        boolean boolean19 = booleanList16.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream20 = booleanList16.stream();
        boolean boolean21 = strList10.containsAll((java.util.Collection<java.lang.Boolean>) booleanList16);
        boolean boolean22 = floatList6.containsAll((java.util.Collection<java.lang.Boolean>) booleanList16);
        java.util.Spliterator<java.lang.Float> floatSpliterator23 = floatList6.spliterator();
        esa.mo.nmf.NMFException nMFException25 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray26 = nMFException25.getSuppressed();
        int int27 = floatList6.lastIndexOf((java.lang.Object) throwableArray26);
        org.ccsds.moims.mo.mal.structures.LongList longList28 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int29 = floatList6.lastIndexOf((java.lang.Object) longList28);
        org.ccsds.moims.mo.mal.structures.Time time30 = new org.ccsds.moims.mo.mal.structures.Time();
        org.ccsds.moims.mo.mal.structures.Element element31 = time30.createElement();
        boolean boolean32 = longList28.equals((java.lang.Object) time30);
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = time30.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element34 = time30.createElement();
        int int35 = booleanList0.indexOf((java.lang.Object) element34);
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265086L + "'", long2.equals(281475010265086L));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265084L + "'", long7.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatSpliterator23);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element23 = floatList0.createElement();
        org.ccsds.moims.mo.mal.structures.Identifier identifier24 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = identifier24.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList32 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList32,
            booleanArray31);
        java.util.Iterator<java.lang.Boolean> booleanItor34 = booleanList32.iterator();
        boolean boolean35 = uRIList27.retainAll((java.util.Collection<java.lang.Boolean>) booleanList32);
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList39 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList39,
            booleanArray38);
        boolean boolean42 = booleanList39.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream43 = booleanList39.stream();
        boolean boolean44 = uRIList27.retainAll((java.util.Collection<java.lang.Boolean>) booleanList39);
        uRIList27.ensureCapacity(5);
        boolean boolean47 = identifier24.equals((java.lang.Object) uRIList27);
        int int48 = uRIList27.size();
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList52 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList52,
            booleanArray51);
        boolean boolean55 = booleanList52.add((java.lang.Boolean) true);
        boolean boolean56 = uRIList27.equals((java.lang.Object) booleanList52);
        boolean boolean57 = floatList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        java.util.ListIterator<java.lang.Float> floatItor58 = floatList0.listIterator();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(booleanItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(floatItor58);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uRIList1.getAreaNumber();
        java.lang.Integer int3 = uRIList1.getTypeShortForm();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator4 = uRIList1.spliterator();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator5 = uRIList1.spliterator();
        org.ccsds.moims.mo.mal.structures.StringList stringList7 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = stringList7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList10 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long11 = integerList10.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList13 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        org.ccsds.moims.mo.mal.structures.IntegerList integerList15 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long16 = integerList15.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray17 = new org.ccsds.moims.mo.mal.structures.IntegerList[]{integerList10,
                                                                                                                                 integerList13,
                                                                                                                                 integerList15};
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray18 = stringList7.toArray(integerListArray17);
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = stringList7.getAreaNumber();
        java.lang.Integer[] intArray33 = new java.lang.Integer[]{4, 12, 1, 4, 10, 65535, 5, 0, 5, 0, 14, 13, (-1)};
        java.util.ArrayList<java.lang.Integer> intList34 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList34,
            intArray33);
        org.ccsds.moims.mo.mal.structures.Identifier identifier36 = new org.ccsds.moims.mo.mal.structures.Identifier();
        boolean boolean37 = intList34.contains((java.lang.Object) identifier36);
        java.lang.Integer int38 = identifier36.getTypeShortForm();
        boolean boolean39 = stringList7.equals((java.lang.Object) identifier36);
        int int40 = uRIList1.lastIndexOf((java.lang.Object) identifier36);
        java.lang.String str41 = identifier36.getValue();
        java.lang.String str42 = identifier36.getValue();
        java.lang.String str43 = identifier36.toString();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime45 = new org.ccsds.moims.mo.mal.structures.FineTime(
            281474993487884L);
        java.lang.Integer int46 = fineTime45.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element47 = fineTime45.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = fineTime45.getServiceNumber();
        esa.mo.nmf.NMFException nMFException49 = new esa.mo.nmf.NMFException();
        esa.mo.nmf.NMFException nMFException50 = new esa.mo.nmf.NMFException();
        nMFException49.addSuppressed((java.lang.Throwable) nMFException50);
        esa.mo.nmf.NMFException nMFException53 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException56 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray57 = nMFException56.getSuppressed();
        java.lang.Throwable[] throwableArray58 = nMFException56.getSuppressed();
        esa.mo.nmf.NMFException nMFException59 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException56);
        java.lang.String str60 = nMFException56.toString();
        nMFException53.addSuppressed((java.lang.Throwable) nMFException56);
        esa.mo.nmf.NMFException nMFException63 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray64 = nMFException63.getSuppressed();
        java.lang.Throwable[] throwableArray65 = nMFException63.getSuppressed();
        nMFException53.addSuppressed((java.lang.Throwable) nMFException63);
        java.lang.String str67 = nMFException53.toString();
        nMFException50.addSuppressed((java.lang.Throwable) nMFException53);
        boolean boolean69 = fineTime45.equals((java.lang.Object) nMFException53);
        boolean boolean70 = identifier36.equals((java.lang.Object) boolean69);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertNotNull(uRISpliterator4);
        org.junit.Assert.assertNotNull(uRISpliterator5);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 281475010265077L + "'", long11.equals(281475010265077L));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281475010265077L + "'", long16.equals(281475010265077L));
        org.junit.Assert.assertNotNull(integerListArray17);
        org.junit.Assert.assertNotNull(integerListArray18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 6 + "'", int38.equals(6));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "" + "'", str42.equals(""));
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 17 + "'", int46.equals(17));
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str60.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "esa.mo.nmf.NMFException: -1" + "'", str67.equals(
            "esa.mo.nmf.NMFException: -1"));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = longList22.getServiceNumber();
        java.lang.Long long26 = longList22.getShortForm();
        java.util.Iterator<java.lang.Long> longItor27 = longList22.iterator();
        java.lang.Long[] longArray32 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList33 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList33,
            longArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = longList33.contains(obj35);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger38 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean39 = longList33.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList43 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList43,
            booleanArray42);
        boolean boolean45 = longList33.containsAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        java.lang.Long long47 = longList33.get(1);
        boolean boolean48 = longList22.remove((java.lang.Object) long47);
        org.ccsds.moims.mo.mal.structures.ShortList shortList49 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = shortList49.getServiceNumber();
        java.lang.String[] strArray55 = new java.lang.String[]{"1", "hi!", "", "1"};
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56,
            strArray55);
        java.util.ListIterator<java.lang.String> strItor58 = strList56.listIterator();
        java.lang.String[] strArray60 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61,
            strArray60);
        boolean boolean64 = strList61.add("hi!");
        java.lang.Object obj65 = null;
        boolean boolean66 = strList61.equals(obj65);
        java.util.ListIterator<java.lang.String> strItor67 = strList61.listIterator();
        java.lang.String[] strArray69 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70,
            strArray69);
        boolean boolean73 = strList70.add("hi!");
        java.lang.Object obj74 = null;
        boolean boolean75 = strList70.equals(obj74);
        java.util.ListIterator<java.lang.String> strItor76 = strList70.listIterator();
        java.lang.String[] strArray81 = new java.lang.String[]{"1", "hi!", "", "1"};
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82,
            strArray81);
        java.util.ListIterator<java.lang.String> strItor84 = strList82.listIterator();
        java.util.ListIterator[] listIteratorArray86 = new java.util.ListIterator[4];
        @SuppressWarnings("unchecked")
        java.util.ListIterator<java.lang.String>[] strItorArray87 = (java.util.ListIterator<java.lang.String>[]) listIteratorArray86;
        strItorArray87[0] = strItor58;
        strItorArray87[1] = strItor67;
        strItorArray87[2] = strItor76;
        strItorArray87[3] = strItor84;
        java.util.ListIterator<java.lang.String>[] strItorArray96 = shortList49.toArray(strItorArray87);
        int int97 = longList22.lastIndexOf((java.lang.Object) strItorArray87);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281475010265075L + "'", long26.equals(281475010265075L));
        org.junit.Assert.assertNotNull(longItor27);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47.equals((-1L)));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strItor76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strItor84);
        org.junit.Assert.assertNotNull(listIteratorArray86);
        org.junit.Assert.assertNotNull(strItorArray87);
        org.junit.Assert.assertNotNull(strItorArray96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        org.ccsds.moims.mo.mal.structures.URI uRI17 = new org.ccsds.moims.mo.mal.structures.URI();
        int int18 = floatList0.lastIndexOf((java.lang.Object) uRI17);
        floatList0.trimToSize();
        esa.mo.nmf.NMFException nMFException22 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray23 = nMFException22.getSuppressed();
        java.lang.Throwable[] throwableArray24 = nMFException22.getSuppressed();
        esa.mo.nmf.NMFException nMFException25 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException22);
        java.lang.String str26 = nMFException22.toString();
        int int27 = floatList0.indexOf((java.lang.Object) nMFException22);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet28 = floatList0.getAreaVersion();
        try {
            java.util.List<java.lang.Float> floatList31 = floatList0.subList(0, 18);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 18");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str26.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(uOctet28);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.Element element2 = uRIList1.createElement();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF3 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF3
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF3
            .getAlertService();
        boolean boolean6 = uRIList1.equals((java.lang.Object) mCServicesProviderNMF3);
        java.lang.String str7 = uRIList1.toString();
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[]" + "'", str7.equals("[]"));
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        org.ccsds.moims.mo.mal.structures.ULong uLong0 = new org.ccsds.moims.mo.mal.structures.ULong();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = uLong0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uLong0.getServiceNumber();
        java.lang.Long long3 = uLong0.getShortForm();
        org.ccsds.moims.mo.mal.structures.FloatList floatList4 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long5 = floatList4.getShortForm();
        java.lang.String[] strArray7 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        int int10 = strList8.size();
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14,
            booleanArray13);
        boolean boolean17 = booleanList14.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream18 = booleanList14.stream();
        boolean boolean19 = strList8.containsAll((java.util.Collection<java.lang.Boolean>) booleanList14);
        boolean boolean20 = floatList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList14);
        java.util.ListIterator<java.lang.Float> floatItor21 = floatList4.listIterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet22 = floatList4.getAreaVersion();
        boolean boolean23 = uLong0.equals((java.lang.Object) uOctet22);
        java.lang.Long long24 = uLong0.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element25 = uLong0.createElement();
        java.math.BigInteger bigInteger26 = uLong0.getValue();
        org.ccsds.moims.mo.mal.structures.ULong uLong27 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger26);
        org.ccsds.moims.mo.mal.structures.FloatList floatList28 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long29 = floatList28.getShortForm();
        java.lang.String[] strArray31 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32,
            strArray31);
        int int34 = strList32.size();
        java.lang.Boolean[] booleanArray37 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList38 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList38,
            booleanArray37);
        boolean boolean41 = booleanList38.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream42 = booleanList38.stream();
        boolean boolean43 = strList32.containsAll((java.util.Collection<java.lang.Boolean>) booleanList38);
        boolean boolean44 = floatList28.containsAll((java.util.Collection<java.lang.Boolean>) booleanList38);
        java.util.Spliterator<java.lang.Float> floatSpliterator45 = floatList28.spliterator();
        esa.mo.nmf.NMFException nMFException47 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray48 = nMFException47.getSuppressed();
        int int49 = floatList28.lastIndexOf((java.lang.Object) throwableArray48);
        org.ccsds.moims.mo.mal.structures.LongList longList50 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int51 = floatList28.lastIndexOf((java.lang.Object) longList50);
        org.ccsds.moims.mo.mal.structures.UShort uShort52 = longList50.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = longList50.getServiceNumber();
        boolean boolean54 = uLong27.equals((java.lang.Object) uShort53);
        org.ccsds.moims.mo.mal.structures.OctetList octetList55 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort56 = octetList55.getServiceNumber();
        boolean boolean57 = octetList55.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = octetList55.getServiceNumber();
        java.lang.Long long59 = octetList55.getShortForm();
        octetList55.add(0, (java.lang.Byte) (byte) -1);
        java.lang.Object obj63 = null;
        int int64 = octetList55.indexOf(obj63);
        org.ccsds.moims.mo.mal.structures.UShort uShort65 = octetList55.getServiceNumber();
        boolean boolean66 = uLong27.equals((java.lang.Object) octetList55);
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487886L + "'", long3.equals(281474993487886L));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265084L + "'", long5.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(floatItor21);
        org.junit.Assert.assertNotNull(uOctet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 281474993487886L + "'", long24.equals(281474993487886L));
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(bigInteger26);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 281475010265084L + "'", long29.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatSpliterator45);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uShort52);
        org.junit.Assert.assertNotNull(uShort53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(uShort56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 281475010265081L + "'", long59.equals(281475010265081L));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(uShort65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        java.util.stream.Stream<java.lang.String> strStream26 = stringList12.stream();
        java.lang.Long long27 = stringList12.getShortForm();
        int int28 = stringList12.size();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 281475010265073L + "'", long27.equals(281475010265073L));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList7 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.util.stream.Stream<java.lang.Integer> intStream8 = integerList7.parallelStream();
        java.util.stream.Stream<java.lang.Integer> intStream9 = integerList7.stream();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList16 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList16,
            booleanArray15);
        java.util.Iterator<java.lang.Boolean> booleanItor18 = booleanList16.iterator();
        boolean boolean19 = uRIList11.retainAll((java.util.Collection<java.lang.Boolean>) booleanList16);
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList23 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList23,
            booleanArray22);
        boolean boolean26 = booleanList23.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream27 = booleanList23.stream();
        boolean boolean28 = uRIList11.retainAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        boolean boolean29 = integerList7.removeAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        boolean boolean30 = byteList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        java.util.Iterator<java.lang.Byte> byteItor31 = byteList3.iterator();
        org.ccsds.moims.mo.mal.structures.FloatList floatList32 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long33 = floatList32.getShortForm();
        java.lang.String[] strArray35 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36,
            strArray35);
        int int38 = strList36.size();
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        boolean boolean45 = booleanList42.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream46 = booleanList42.stream();
        boolean boolean47 = strList36.containsAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = floatList32.containsAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        java.util.Spliterator<java.lang.Float> floatSpliterator49 = floatList32.spliterator();
        esa.mo.nmf.NMFException nMFException51 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray52 = nMFException51.getSuppressed();
        int int53 = floatList32.lastIndexOf((java.lang.Object) throwableArray52);
        org.ccsds.moims.mo.mal.structures.LongList longList54 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int55 = floatList32.lastIndexOf((java.lang.Object) longList54);
        java.util.Iterator<java.lang.Long> longItor56 = longList54.iterator();
        boolean boolean57 = byteList3.equals((java.lang.Object) longList54);
        java.util.Spliterator<java.lang.Byte> byteSpliterator58 = byteList3.spliterator();
        java.util.stream.Stream<java.lang.Byte> byteStream59 = byteList3.stream();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanItor18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(booleanStream27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(byteItor31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 281475010265084L + "'", long33.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatSpliterator49);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(longItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteSpliterator58);
        org.junit.Assert.assertNotNull(byteStream59);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        esa.mo.nmf.NMFException nMFException3 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray4 = nMFException3.getSuppressed();
        java.lang.Throwable[] throwableArray5 = nMFException3.getSuppressed();
        esa.mo.nmf.NMFException nMFException7 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray8 = nMFException7.getSuppressed();
        nMFException3.addSuppressed((java.lang.Throwable) nMFException7);
        esa.mo.nmf.NMFException nMFException10 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException7);
        esa.mo.nmf.NMFException nMFException11 = new esa.mo.nmf.NMFException("esa.mo.nmf.NMFException",
            (java.lang.Throwable) nMFException7);
        java.lang.Throwable[] throwableArray12 = nMFException7.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = nMFException5.getSuppressed();
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException5);
        java.lang.String str9 = nMFException5.toString();
        nMFException2.addSuppressed((java.lang.Throwable) nMFException5);
        esa.mo.nmf.NMFException nMFException11 = new esa.mo.nmf.NMFException("[-1, -1, 1, 1, 10]",
            (java.lang.Throwable) nMFException5);
        java.lang.String str12 = nMFException11.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str9.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "esa.mo.nmf.NMFException: [-1, -1, 1, 1, 10]" + "'", str12
            .equals("esa.mo.nmf.NMFException: [-1, -1, 1, 1, 10]"));
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList0.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor4 = uShortList0.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF16
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF19 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF19
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF19
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF19
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCServicesProviderNMF19
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration24 = new esa.mo.nmf.MCRegistration(cOMServicesProvider5,
            parameterProviderServiceImpl10, aggregationProviderServiceImpl15, alertProviderServiceImpl18,
            actionProviderServiceImpl23);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl25 = mCRegistration24.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration24.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider27 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF41
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCServicesProviderNMF41
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration46 = new esa.mo.nmf.MCRegistration(cOMServicesProvider27,
            parameterProviderServiceImpl32, aggregationProviderServiceImpl37, alertProviderServiceImpl40,
            actionProviderServiceImpl45);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl50 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCServicesProviderNMF47
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl60 = mCServicesProviderNMF54
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray61 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl26,
                                                                                                                                                                                   actionProviderServiceImpl45,
                                                                                                                                                                                   actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl60};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray62 = uShortList0
            .toArray(actionInheritanceSkeletonArray61);
        uShortList0.ensureCapacity(18);
        java.lang.Integer int65 = uShortList0.getTypeShortForm();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uShortItor4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray61);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-10) + "'", int65.equals((-10)));
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = floatList0.createElement();
        floatList0.clear();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList24 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element25 = booleanList24.createElement();
        java.lang.Long long26 = booleanList24.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element27 = booleanList24.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = booleanList24.getServiceNumber();
        boolean boolean29 = floatList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList24);
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = booleanList24.getAreaNumber();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281475010265086L + "'", long26.equals(281475010265086L));
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(uShort30);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = longList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList3 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element4 = stringList3.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList5 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        boolean boolean6 = stringList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList5);
        boolean boolean7 = longList1.retainAll((java.util.Collection<java.lang.Boolean>) booleanList5);
        esa.mo.nmf.NMFException nMFException9 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray10 = nMFException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = nMFException9.getSuppressed();
        boolean boolean12 = longList1.contains((java.lang.Object) throwableArray11);
        org.ccsds.moims.mo.mal.structures.Element element13 = longList1.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = longList1.getAreaVersion();
        java.lang.Long long15 = uOctet14.getShortForm();
        java.lang.Integer int16 = uOctet14.getTypeShortForm();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487880L + "'", long15.equals(281474993487880L));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16.equals(8));
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        org.ccsds.moims.mo.mal.structures.Time time1 = new org.ccsds.moims.mo.mal.structures.Time((long) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = time1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = time1.getServiceNumber();
        java.lang.Integer int4 = time1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element5 = time1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = time1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.FloatList floatList7 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long8 = floatList7.getShortForm();
        java.lang.String[] strArray10 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11,
            strArray10);
        int int13 = strList11.size();
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17,
            booleanArray16);
        boolean boolean20 = booleanList17.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream21 = booleanList17.stream();
        boolean boolean22 = strList11.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        boolean boolean23 = floatList7.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        java.util.Spliterator<java.lang.Float> floatSpliterator24 = floatList7.spliterator();
        esa.mo.nmf.NMFException nMFException26 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray27 = nMFException26.getSuppressed();
        int int28 = floatList7.lastIndexOf((java.lang.Object) throwableArray27);
        java.lang.Integer int29 = floatList7.getTypeShortForm();
        java.util.ListIterator<java.lang.Float> floatItor30 = floatList7.listIterator();
        boolean boolean31 = time1.equals((java.lang.Object) floatList7);
        java.lang.String str32 = floatList7.toString();
        org.ccsds.moims.mo.mal.structures.Element element33 = floatList7.createElement();
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 16 + "'", int4.equals(16));
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265084L + "'", long8.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatSpliterator24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-4) + "'", int29.equals((-4)));
        org.junit.Assert.assertNotNull(floatItor30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "[]" + "'", str32.equals("[]"));
        org.junit.Assert.assertNotNull(element33);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList0.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor4 = uShortList0.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF16
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF19 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF19
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF19
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF19
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCServicesProviderNMF19
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration24 = new esa.mo.nmf.MCRegistration(cOMServicesProvider5,
            parameterProviderServiceImpl10, aggregationProviderServiceImpl15, alertProviderServiceImpl18,
            actionProviderServiceImpl23);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl25 = mCRegistration24.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration24.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider27 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF41
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCServicesProviderNMF41
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration46 = new esa.mo.nmf.MCRegistration(cOMServicesProvider27,
            parameterProviderServiceImpl32, aggregationProviderServiceImpl37, alertProviderServiceImpl40,
            actionProviderServiceImpl45);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl50 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCServicesProviderNMF47
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl60 = mCServicesProviderNMF54
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray61 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl26,
                                                                                                                                                                                   actionProviderServiceImpl45,
                                                                                                                                                                                   actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl60};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray62 = uShortList0
            .toArray(actionInheritanceSkeletonArray61);
        uShortList0.ensureCapacity(18);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime66 = new org.ccsds.moims.mo.mal.structures.FineTime(
            281474993487884L);
        org.ccsds.moims.mo.mal.structures.UShort uShort67 = fineTime66.getAreaNumber();
        boolean boolean68 = uShortList0.equals((java.lang.Object) fineTime66);
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = fineTime66.getServiceNumber();
        java.lang.Long long70 = uShort69.getShortForm();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uShortItor4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray61);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray62);
        org.junit.Assert.assertNotNull(uShort67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(uShort69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 281474993487882L + "'", long70.equals(281474993487882L));
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider1 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF2 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl3 = mCServicesProviderNMF2
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF2
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl5 = mCServicesProviderNMF2
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl6 = mCServicesProviderNMF2
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF7 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF7
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF7
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF7
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl11 = mCServicesProviderNMF7
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF12 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl13 = mCServicesProviderNMF12
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl14 = mCServicesProviderNMF12
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF15 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl16 = mCServicesProviderNMF15
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl17 = mCServicesProviderNMF15
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF15
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl19 = mCServicesProviderNMF15
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration20 = new esa.mo.nmf.MCRegistration(cOMServicesProvider1,
            parameterProviderServiceImpl6, aggregationProviderServiceImpl11, alertProviderServiceImpl14,
            actionProviderServiceImpl19);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration20.parameterService;
        java.lang.Byte[] byteArray26 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList27 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList27,
            byteArray26);
        boolean boolean30 = byteList27.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj31 = byteList27.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream32 = byteList27.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList34 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int35 = byteList27.indexOf((java.lang.Object) stringList34);
        byte[] byteArray39 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob40 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray39);
        int int41 = blob40.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob42 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean43 = blob40.equals((java.lang.Object) blob42);
        boolean boolean44 = stringList34.remove((java.lang.Object) blob42);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF45 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean46 = stringList34.equals((java.lang.Object) mCServicesProviderNMF45);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl47 = mCServicesProviderNMF45
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl48 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider49 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF50 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl52 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl53 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl54 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl57 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl58 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl59 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl62 = mCServicesProviderNMF60
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF63 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl64 = mCServicesProviderNMF63
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl65 = mCServicesProviderNMF63
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl66 = mCServicesProviderNMF63
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl67 = mCServicesProviderNMF63
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration68 = new esa.mo.nmf.MCRegistration(cOMServicesProvider49,
            parameterProviderServiceImpl54, aggregationProviderServiceImpl59, alertProviderServiceImpl62,
            actionProviderServiceImpl67);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl69 = mCRegistration68.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl70 = mCRegistration68.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider71 = mCRegistration68.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl72 = mCRegistration68.alertService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider73 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF74 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl75 = mCServicesProviderNMF74
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl76 = mCServicesProviderNMF74
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl77 = mCServicesProviderNMF74
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl78 = mCServicesProviderNMF74
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF79 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl80 = mCServicesProviderNMF79
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl81 = mCServicesProviderNMF79
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl82 = mCServicesProviderNMF79
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl83 = mCServicesProviderNMF79
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF84 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl85 = mCServicesProviderNMF84
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl86 = mCServicesProviderNMF84
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF87 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl88 = mCServicesProviderNMF87
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl89 = mCServicesProviderNMF87
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl90 = mCServicesProviderNMF87
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl91 = mCServicesProviderNMF87
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration92 = new esa.mo.nmf.MCRegistration(cOMServicesProvider73,
            parameterProviderServiceImpl78, aggregationProviderServiceImpl83, alertProviderServiceImpl86,
            actionProviderServiceImpl91);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl93 = mCRegistration92.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl94 = mCRegistration92.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl95 = mCRegistration92.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl96 = mCRegistration92.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl97 = mCRegistration92.actionService;
        esa.mo.nmf.MCRegistration mCRegistration98 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl21, aggregationProviderServiceImpl48, alertProviderServiceImpl72,
            actionProviderServiceImpl97);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl6);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl11);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl13);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl14);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl16);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl19);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(byteStream32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl47);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl48);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl52);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl54);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl57);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl58);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl62);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl64);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl65);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl66);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl67);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl69);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl70);
        org.junit.Assert.assertNull(cOMServicesProvider71);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl72);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl75);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl76);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl77);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl78);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl80);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl81);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl82);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl83);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl85);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl86);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl88);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl89);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl90);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl91);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl93);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl94);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl95);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl96);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl97);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray2 = nMFException1.getSuppressed();
        java.lang.Throwable[] throwableArray3 = nMFException1.getSuppressed();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray7 = nMFException6.getSuppressed();
        java.lang.Throwable[] throwableArray8 = nMFException6.getSuppressed();
        esa.mo.nmf.NMFException nMFException10 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray11 = nMFException10.getSuppressed();
        nMFException6.addSuppressed((java.lang.Throwable) nMFException10);
        esa.mo.nmf.NMFException nMFException13 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException10);
        nMFException1.addSuppressed((java.lang.Throwable) nMFException13);
        java.lang.String str15 = nMFException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str15.equals(
            "esa.mo.nmf.NMFException: 0"));
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        boolean boolean5 = uShortList0.equals((java.lang.Object) 1);
        int int7 = uShortList0.lastIndexOf((java.lang.Object) 0);
        java.lang.Byte[] byteArray10 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList11,
            byteArray10);
        boolean boolean13 = byteList11.isEmpty();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList15 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.util.stream.Stream<java.lang.Integer> intStream16 = integerList15.parallelStream();
        java.util.stream.Stream<java.lang.Integer> intStream17 = integerList15.stream();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray18 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList19 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean20 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList19, uRIArray18);
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList24 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList24,
            booleanArray23);
        java.util.Iterator<java.lang.Boolean> booleanItor26 = booleanList24.iterator();
        boolean boolean27 = uRIList19.retainAll((java.util.Collection<java.lang.Boolean>) booleanList24);
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList31 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList31,
            booleanArray30);
        boolean boolean34 = booleanList31.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream35 = booleanList31.stream();
        boolean boolean36 = uRIList19.retainAll((java.util.Collection<java.lang.Boolean>) booleanList31);
        boolean boolean37 = integerList15.removeAll((java.util.Collection<java.lang.Boolean>) booleanList31);
        boolean boolean38 = byteList11.retainAll((java.util.Collection<java.lang.Boolean>) booleanList31);
        int int39 = uShortList0.lastIndexOf((java.lang.Object) boolean38);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet40 = uShortList0.getAreaVersion();
        java.lang.Object obj41 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream42 = uShortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList43 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element44 = booleanList43.createElement();
        java.lang.Long long45 = booleanList43.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element46 = booleanList43.createElement();
        esa.mo.nmf.NMFException nMFException48 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray49 = nMFException48.getSuppressed();
        java.lang.Throwable[] throwableArray50 = nMFException48.getSuppressed();
        java.lang.Throwable[] throwableArray51 = nMFException48.getSuppressed();
        boolean boolean52 = booleanList43.equals((java.lang.Object) throwableArray51);
        org.ccsds.moims.mo.mal.structures.Element element53 = booleanList43.createElement();
        org.ccsds.moims.mo.mal.structures.Element element54 = booleanList43.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet55 = booleanList43.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element56 = booleanList43.createElement();
        java.lang.Long[] longArray61 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList62 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList62,
            longArray61);
        java.lang.Object obj64 = null;
        boolean boolean65 = longList62.contains(obj64);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger67 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean68 = longList62.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray71 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList72 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList72,
            booleanArray71);
        boolean boolean74 = longList62.containsAll((java.util.Collection<java.lang.Boolean>) booleanList72);
        java.util.stream.Stream<java.lang.Long> longStream75 = longList62.stream();
        boolean boolean77 = longList62.add((java.lang.Long) 1L);
        boolean boolean78 = booleanList43.remove((java.lang.Object) 1L);
        boolean boolean79 = uShortList0.retainAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(uRIArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(booleanStream35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(uOctet40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(uShortStream42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 281475010265086L + "'", long45.equals(281475010265086L));
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(uOctet55);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(longStream75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        stringList12.ensureCapacity((int) (short) -1);
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = stringList12.getServiceNumber();
        stringList12.trimToSize();
        java.lang.Long long30 = stringList12.getShortForm();
        org.ccsds.moims.mo.mal.structures.Identifier identifier31 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet32 = identifier31.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray33 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean35 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList34, uRIArray33);
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList39 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList39,
            booleanArray38);
        java.util.Iterator<java.lang.Boolean> booleanItor41 = booleanList39.iterator();
        boolean boolean42 = uRIList34.retainAll((java.util.Collection<java.lang.Boolean>) booleanList39);
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList46 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList46,
            booleanArray45);
        boolean boolean49 = booleanList46.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream50 = booleanList46.stream();
        boolean boolean51 = uRIList34.retainAll((java.util.Collection<java.lang.Boolean>) booleanList46);
        uRIList34.ensureCapacity(5);
        boolean boolean54 = identifier31.equals((java.lang.Object) uRIList34);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor55 = uRIList34.listIterator();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream56 = uRIList34.stream();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream57 = uRIList34.stream();
        java.lang.Object obj58 = uRIList34.clone();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor59 = uRIList34.listIterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor61 = uRIList34.listIterator(0);
        int int62 = uRIList34.size();
        boolean boolean63 = stringList12.remove((java.lang.Object) int62);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 281475010265073L + "'", long30.equals(281475010265073L));
        org.junit.Assert.assertNotNull(uOctet32);
        org.junit.Assert.assertNotNull(uRIArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(booleanItor41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(booleanStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(uRIItor55);
        org.junit.Assert.assertNotNull(uRIStream56);
        org.junit.Assert.assertNotNull(uRIStream57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(uRIItor59);
        org.junit.Assert.assertNotNull(uRIItor61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        java.util.Spliterator<java.lang.Float> floatSpliterator23 = floatList0.spliterator();
        java.util.ListIterator<java.lang.Float> floatItor24 = floatList0.listIterator();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(floatSpliterator23);
        org.junit.Assert.assertNotNull(floatItor24);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl27 = mCRegistration19.aggregationService;
        org.ccsds.moims.mo.mal.structures.IntegerList integerList29 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        integerList29.add(0, (java.lang.Integer) 4);
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = integerList29.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = integerList29.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList35 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int36 = uShortList35.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor37 = uShortList35.iterator();
        int int38 = integerList29.indexOf((java.lang.Object) uShortList35);
        java.lang.String str39 = uShortList35.toString();
        java.lang.Object obj40 = uShortList35.clone();
        uShortList35.clear();
        org.ccsds.moims.mo.mal.structures.UShort uShort42 = uShortList35.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList44 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        java.lang.Double[] doubleArray46 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList47 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList47,
            doubleArray46);
        java.util.Spliterator<java.lang.Double> doubleSpliterator49 = doubleList47.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor50 = doubleList47.iterator();
        boolean boolean51 = stringList44.equals((java.lang.Object) doubleItor50);
        java.util.Iterator<java.lang.String> strItor52 = stringList44.iterator();
        stringList44.clear();
        java.lang.Short[] shortArray58 = new java.lang.Short[]{(short) 1, (short) -1, (short) 100, (short) 100};
        java.util.ArrayList<java.lang.Short> shortList59 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList59,
            shortArray58);
        java.lang.Double[] doubleArray62 = new java.lang.Double[]{100.0d};
        java.util.ArrayList<java.lang.Double> doubleList63 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList63,
            doubleArray62);
        boolean boolean65 = doubleList63.isEmpty();
        java.lang.Boolean[] booleanArray68 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList69 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList69,
            booleanArray68);
        java.util.Iterator<java.lang.Boolean> booleanItor71 = booleanList69.iterator();
        boolean boolean72 = doubleList63.equals((java.lang.Object) booleanList69);
        boolean boolean73 = shortList59.removeAll((java.util.Collection<java.lang.Boolean>) booleanList69);
        boolean boolean74 = stringList44.equals((java.lang.Object) booleanList69);
        org.ccsds.moims.mo.mal.structures.UShort uShort75 = stringList44.getServiceNumber();
        boolean boolean76 = uShortList35.add(uShort75);
        boolean boolean77 = uShortList35.isEmpty();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator78 = uShortList35
            .spliterator();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList79 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) uShortList35);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl27);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-10) + "'", int36.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[]" + "'", str39.equals("[]"));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(uShort42);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator49);
        org.junit.Assert.assertNotNull(doubleItor50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(booleanItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(uShort75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(uShortSpliterator78);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl2 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl3 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl4 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl6 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF0
            .getParameterService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl2);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl3);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl6);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl21 = mCRegistration19.alertService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl21);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        longList22.trimToSize();
        java.lang.Object obj25 = longList22.clone();
        longList22.ensureCapacity((int) (short) 0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException();
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("100", (java.lang.Throwable) nMFException1);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[14.0]");
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        java.lang.Short[] shortArray19 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20,
            shortArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = shortList20.equals(obj22);
        java.util.Iterator<java.lang.Short> shortItor24 = shortList20.iterator();
        java.lang.Long[] longArray29 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList30 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList30,
            longArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = longList30.contains(obj32);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger35 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean36 = longList30.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray39 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList40 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList40,
            booleanArray39);
        boolean boolean42 = longList30.containsAll((java.util.Collection<java.lang.Boolean>) booleanList40);
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList46 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList46,
            booleanArray45);
        java.util.Iterator<java.lang.Boolean> booleanItor48 = booleanList46.iterator();
        int int49 = longList30.indexOf((java.lang.Object) booleanList46);
        int int50 = shortList20.indexOf((java.lang.Object) booleanList46);
        java.lang.Class<?> wildcardClass51 = booleanList46.getClass();
        boolean boolean52 = booleanList46.isEmpty();
        boolean boolean53 = shortList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList46);
        org.ccsds.moims.mo.mal.structures.Identifier identifier54 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet55 = identifier54.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray56 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList57 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean58 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList57, uRIArray56);
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList62 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList62,
            booleanArray61);
        java.util.Iterator<java.lang.Boolean> booleanItor64 = booleanList62.iterator();
        boolean boolean65 = uRIList57.retainAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        java.lang.Boolean[] booleanArray68 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList69 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList69,
            booleanArray68);
        boolean boolean72 = booleanList69.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream73 = booleanList69.stream();
        boolean boolean74 = uRIList57.retainAll((java.util.Collection<java.lang.Boolean>) booleanList69);
        uRIList57.ensureCapacity(5);
        boolean boolean77 = identifier54.equals((java.lang.Object) uRIList57);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor78 = uRIList57.listIterator();
        boolean boolean79 = booleanList46.equals((java.lang.Object) uRIItor78);
        esa.mo.nmf.NMFException nMFException81 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray82 = nMFException81.getSuppressed();
        java.lang.Throwable[] throwableArray83 = nMFException81.getSuppressed();
        esa.mo.nmf.NMFException nMFException85 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray86 = nMFException85.getSuppressed();
        nMFException81.addSuppressed((java.lang.Throwable) nMFException85);
        int int88 = booleanList46.indexOf((java.lang.Object) nMFException85);
        esa.mo.nmf.NMFException nMFException90 = new esa.mo.nmf.NMFException("0");
        nMFException85.addSuppressed((java.lang.Throwable) nMFException90);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shortItor24);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanItor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(uOctet55);
        org.junit.Assert.assertNotNull(uRIArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(booleanStream73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(uRIItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        int int7 = byteList3.indexOf((java.lang.Object) 'a');
        int int9 = byteList3.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12,
            booleanArray11);
        java.util.ListIterator<java.lang.Boolean> booleanItor15 = booleanList12.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream16 = booleanList12.parallelStream();
        boolean boolean18 = booleanList12.add((java.lang.Boolean) false);
        boolean boolean19 = byteList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList12);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList20 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj21 = uShortList20.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream22 = uShortList20
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor23 = uShortList20.iterator();
        boolean boolean24 = byteList3.equals((java.lang.Object) uShortItor23);
        org.ccsds.moims.mo.mal.structures.ShortList shortList25 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj26 = shortList25.clone();
        boolean boolean27 = byteList3.equals((java.lang.Object) shortList25);
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException("-1");
        boolean boolean30 = byteList3.equals((java.lang.Object) nMFException29);
        java.lang.Throwable[] throwableArray31 = nMFException29.getSuppressed();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanItor15);
        org.junit.Assert.assertNotNull(booleanStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(uShortStream22);
        org.junit.Assert.assertNotNull(uShortItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("18446744073709551615");
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList0 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element1 = booleanList0.createElement();
        java.lang.Long long2 = booleanList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = booleanList0.createElement();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray8 = nMFException5.getSuppressed();
        boolean boolean9 = booleanList0.equals((java.lang.Object) throwableArray8);
        org.ccsds.moims.mo.mal.structures.Element element10 = booleanList0.createElement();
        org.ccsds.moims.mo.mal.structures.Element element11 = booleanList0.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = booleanList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element13 = booleanList0.createElement();
        java.lang.Long[] longArray18 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList19 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList19,
            longArray18);
        java.lang.Object obj21 = null;
        boolean boolean22 = longList19.contains(obj21);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger24 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean25 = longList19.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList29 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList29,
            booleanArray28);
        boolean boolean31 = longList19.containsAll((java.util.Collection<java.lang.Boolean>) booleanList29);
        java.util.stream.Stream<java.lang.Long> longStream32 = longList19.stream();
        boolean boolean34 = longList19.add((java.lang.Long) 1L);
        boolean boolean35 = booleanList0.remove((java.lang.Object) 1L);
        booleanList0.ensureCapacity((-10));
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265086L + "'", long2.equals(281475010265086L));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(longStream32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        org.ccsds.moims.mo.mal.structures.UShortList uShortList21 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int22 = uShortList21.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor23 = uShortList21.iterator();
        java.lang.Object[] objArray24 = uShortList21.toArray();
        boolean boolean26 = uShortList21.equals((java.lang.Object) 1);
        java.lang.Integer int27 = uShortList21.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor28 = uShortList21.iterator();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList29 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) uShortList21);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-10) + "'", int22.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-10) + "'", int27.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor28);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl4 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl5 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl6 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl7 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl4);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl5);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl6);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl7);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        uShortList0.clear();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream5 = uShortList0.stream();
        java.lang.String str6 = uShortList0.toString();
        org.ccsds.moims.mo.mal.structures.FloatList floatList7 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long8 = floatList7.getShortForm();
        floatList7.trimToSize();
        java.lang.String str10 = floatList7.toString();
        java.util.Spliterator<java.lang.Float> floatSpliterator11 = floatList7.spliterator();
        java.lang.Byte[] byteArray14 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15,
            byteArray14);
        boolean boolean17 = byteList15.isEmpty();
        int int19 = byteList15.indexOf((java.lang.Object) 'a');
        int int21 = byteList15.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList24 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList24,
            booleanArray23);
        java.util.ListIterator<java.lang.Boolean> booleanItor27 = booleanList24.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream28 = booleanList24.parallelStream();
        boolean boolean30 = booleanList24.add((java.lang.Boolean) false);
        boolean boolean31 = byteList15.retainAll((java.util.Collection<java.lang.Boolean>) booleanList24);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList32 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj33 = uShortList32.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream34 = uShortList32
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor35 = uShortList32.iterator();
        boolean boolean36 = byteList15.equals((java.lang.Object) uShortItor35);
        org.ccsds.moims.mo.mal.structures.ShortList shortList37 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj38 = shortList37.clone();
        boolean boolean39 = byteList15.equals((java.lang.Object) shortList37);
        esa.mo.nmf.NMFException nMFException41 = new esa.mo.nmf.NMFException("-1");
        boolean boolean42 = byteList15.equals((java.lang.Object) nMFException41);
        byteList15.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList44 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element45 = booleanList44.createElement();
        java.lang.Long long46 = booleanList44.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort47 = booleanList44.getAreaNumber();
        java.lang.Integer int48 = booleanList44.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray49 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList44};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray50 = byteList15.toArray(booleanListArray49);
        boolean boolean51 = floatList7.remove((java.lang.Object) booleanListArray49);
        java.util.ArrayList<java.lang.Boolean>[] booleanListArray52 = uShortList0.toArray(
            (java.util.ArrayList<java.lang.Boolean>[]) booleanListArray49);
        java.lang.Object[] objArray53 = uShortList0.toArray();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(uShortStream5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "[]" + "'", str6.equals("[]"));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265084L + "'", long8.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[]" + "'", str10.equals("[]"));
        org.junit.Assert.assertNotNull(floatSpliterator11);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanItor27);
        org.junit.Assert.assertNotNull(booleanStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(uShortStream34);
        org.junit.Assert.assertNotNull(uShortItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 281475010265086L + "'", long46.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-2) + "'", int48.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray49);
        org.junit.Assert.assertNotNull(booleanListArray50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(booleanListArray52);
        org.junit.Assert.assertNotNull(objArray53);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element17 = shortList0.createElement();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = shortList0.indexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList22 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str23 = doubleList22.toString();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        java.util.ListIterator<java.lang.Boolean> booleanItor29 = booleanList26.listIterator((int) (short) 1);
        boolean boolean30 = doubleList22.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34,
            byteArray33);
        boolean boolean36 = byteList34.isEmpty();
        int int37 = byteList34.size();
        int int38 = booleanList26.indexOf((java.lang.Object) byteList34);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        java.util.Iterator<java.lang.Boolean> booleanItor44 = booleanList42.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream45 = booleanList42.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor46 = booleanList42.iterator();
        boolean boolean47 = byteList34.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = shortList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        try {
            java.lang.Short short50 = shortList0.remove((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "[]" + "'", str23.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanItor44);
        org.junit.Assert.assertNotNull(booleanStream45);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        java.lang.Short[] shortArray19 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList20 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList20,
            shortArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = shortList20.equals(obj22);
        java.util.Iterator<java.lang.Short> shortItor24 = shortList20.iterator();
        java.lang.Long[] longArray29 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList30 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList30,
            longArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = longList30.contains(obj32);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger35 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean36 = longList30.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray39 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList40 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList40,
            booleanArray39);
        boolean boolean42 = longList30.containsAll((java.util.Collection<java.lang.Boolean>) booleanList40);
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList46 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList46,
            booleanArray45);
        java.util.Iterator<java.lang.Boolean> booleanItor48 = booleanList46.iterator();
        int int49 = longList30.indexOf((java.lang.Object) booleanList46);
        int int50 = shortList20.indexOf((java.lang.Object) booleanList46);
        java.lang.Class<?> wildcardClass51 = booleanList46.getClass();
        boolean boolean52 = booleanList46.isEmpty();
        boolean boolean53 = shortList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList46);
        org.ccsds.moims.mo.mal.structures.Identifier identifier54 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet55 = identifier54.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray56 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList57 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean58 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList57, uRIArray56);
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList62 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList62,
            booleanArray61);
        java.util.Iterator<java.lang.Boolean> booleanItor64 = booleanList62.iterator();
        boolean boolean65 = uRIList57.retainAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        java.lang.Boolean[] booleanArray68 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList69 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList69,
            booleanArray68);
        boolean boolean72 = booleanList69.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream73 = booleanList69.stream();
        boolean boolean74 = uRIList57.retainAll((java.util.Collection<java.lang.Boolean>) booleanList69);
        uRIList57.ensureCapacity(5);
        boolean boolean77 = identifier54.equals((java.lang.Object) uRIList57);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor78 = uRIList57.listIterator();
        boolean boolean79 = booleanList46.equals((java.lang.Object) uRIItor78);
        esa.mo.nmf.NMFException nMFException81 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray82 = nMFException81.getSuppressed();
        java.lang.Throwable[] throwableArray83 = nMFException81.getSuppressed();
        esa.mo.nmf.NMFException nMFException85 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray86 = nMFException85.getSuppressed();
        nMFException81.addSuppressed((java.lang.Throwable) nMFException85);
        int int88 = booleanList46.indexOf((java.lang.Object) nMFException85);
        java.lang.Throwable throwable89 = null;
        try {
            nMFException85.addSuppressed(throwable89);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shortItor24);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanItor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(uOctet55);
        org.junit.Assert.assertNotNull(uRIArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(booleanStream73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(uRIItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        int int7 = byteList3.indexOf((java.lang.Object) 'a');
        int int9 = byteList3.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12,
            booleanArray11);
        java.util.ListIterator<java.lang.Boolean> booleanItor15 = booleanList12.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream16 = booleanList12.parallelStream();
        boolean boolean18 = booleanList12.add((java.lang.Boolean) false);
        boolean boolean19 = byteList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList12);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList20 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj21 = uShortList20.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream22 = uShortList20
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor23 = uShortList20.iterator();
        boolean boolean24 = byteList3.equals((java.lang.Object) uShortItor23);
        org.ccsds.moims.mo.mal.structures.ShortList shortList25 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj26 = shortList25.clone();
        boolean boolean27 = byteList3.equals((java.lang.Object) shortList25);
        boolean boolean28 = byteList3.isEmpty();
        java.lang.Object obj29 = byteList3.clone();
        java.lang.Byte[] byteArray34 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35,
            byteArray34);
        boolean boolean38 = byteList35.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj39 = byteList35.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream40 = byteList35.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList42 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int43 = byteList35.indexOf((java.lang.Object) stringList42);
        byte[] byteArray47 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob48 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray47);
        int int49 = blob48.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob50 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean51 = blob48.equals((java.lang.Object) blob50);
        boolean boolean52 = stringList42.remove((java.lang.Object) blob50);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF53 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean54 = stringList42.equals((java.lang.Object) mCServicesProviderNMF53);
        java.util.ListIterator<java.lang.String> strItor55 = stringList42.listIterator();
        java.lang.Long[] longArray60 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList61 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList61,
            longArray60);
        java.lang.Object obj63 = null;
        boolean boolean64 = longList61.contains(obj63);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger66 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean67 = longList61.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray70 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList71 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList71,
            booleanArray70);
        boolean boolean73 = longList61.containsAll((java.util.Collection<java.lang.Boolean>) booleanList71);
        java.lang.Boolean[] booleanArray76 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList77 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList77,
            booleanArray76);
        java.util.Iterator<java.lang.Boolean> booleanItor79 = booleanList77.iterator();
        int int80 = longList61.indexOf((java.lang.Object) booleanList77);
        boolean boolean81 = stringList42.retainAll((java.util.Collection<java.lang.Boolean>) booleanList77);
        boolean boolean82 = byteList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList77);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanItor15);
        org.junit.Assert.assertNotNull(booleanStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(uShortStream22);
        org.junit.Assert.assertNotNull(uShortItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(byteStream40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strItor55);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(booleanItor79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        stringList12.ensureCapacity((int) (short) -1);
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = stringList12.getServiceNumber();
        stringList12.trimToSize();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet30 = stringList12.getAreaVersion();
        java.util.Iterator<java.lang.String> strItor31 = stringList12.iterator();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertNotNull(uOctet30);
        org.junit.Assert.assertNotNull(strItor31);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.parallelStream();
        java.lang.String str3 = shortList0.toString();
        java.lang.Long long4 = shortList0.getShortForm();
        esa.mo.nmf.NMFException nMFException7 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray8 = nMFException7.getSuppressed();
        java.lang.Throwable[] throwableArray9 = nMFException7.getSuppressed();
        java.lang.Throwable[] throwableArray10 = nMFException7.getSuppressed();
        java.lang.Throwable[] throwableArray11 = nMFException7.getSuppressed();
        java.lang.Throwable[] throwableArray12 = nMFException7.getSuppressed();
        esa.mo.nmf.NMFException nMFException13 = new esa.mo.nmf.NMFException("esa.mo.nmf.NMFException: []",
            (java.lang.Throwable) nMFException7);
        java.lang.Throwable[] throwableArray14 = new java.lang.Throwable[]{nMFException13};
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray18 = nMFException17.getSuppressed();
        java.lang.Throwable[] throwableArray19 = nMFException17.getSuppressed();
        java.lang.Throwable[] throwableArray20 = nMFException17.getSuppressed();
        java.lang.Throwable[] throwableArray21 = nMFException17.getSuppressed();
        java.lang.Throwable[] throwableArray22 = nMFException17.getSuppressed();
        esa.mo.nmf.NMFException nMFException23 = new esa.mo.nmf.NMFException("esa.mo.nmf.NMFException: []",
            (java.lang.Throwable) nMFException17);
        java.lang.Throwable[] throwableArray24 = new java.lang.Throwable[]{nMFException23};
        esa.mo.nmf.NMFException nMFException27 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray28 = nMFException27.getSuppressed();
        java.lang.Throwable[] throwableArray29 = nMFException27.getSuppressed();
        java.lang.Throwable[] throwableArray30 = nMFException27.getSuppressed();
        java.lang.Throwable[] throwableArray31 = nMFException27.getSuppressed();
        java.lang.Throwable[] throwableArray32 = nMFException27.getSuppressed();
        esa.mo.nmf.NMFException nMFException33 = new esa.mo.nmf.NMFException("esa.mo.nmf.NMFException: []",
            (java.lang.Throwable) nMFException27);
        java.lang.Throwable[] throwableArray34 = new java.lang.Throwable[]{nMFException33};
        esa.mo.nmf.NMFException nMFException37 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray38 = nMFException37.getSuppressed();
        java.lang.Throwable[] throwableArray39 = nMFException37.getSuppressed();
        java.lang.Throwable[] throwableArray40 = nMFException37.getSuppressed();
        java.lang.Throwable[] throwableArray41 = nMFException37.getSuppressed();
        java.lang.Throwable[] throwableArray42 = nMFException37.getSuppressed();
        esa.mo.nmf.NMFException nMFException43 = new esa.mo.nmf.NMFException("esa.mo.nmf.NMFException: []",
            (java.lang.Throwable) nMFException37);
        java.lang.Throwable[] throwableArray44 = new java.lang.Throwable[]{nMFException43};
        java.lang.Throwable[][] throwableArray45 = new java.lang.Throwable[][]{throwableArray14, throwableArray24,
                                                                               throwableArray34, throwableArray44};
        java.lang.Throwable[][] throwableArray46 = shortList0.toArray(throwableArray45);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[]" + "'", str3.equals("[]"));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265079L + "'", long4.equals(281475010265079L));
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        boolean boolean5 = uShortList0.equals((java.lang.Object) 1);
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray9 = nMFException8.getSuppressed();
        java.lang.Throwable[] throwableArray10 = nMFException8.getSuppressed();
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        nMFException8.addSuppressed((java.lang.Throwable) nMFException12);
        java.lang.Throwable[] throwableArray15 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray16 = nMFException12.getSuppressed();
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("[]",
            (java.lang.Throwable) nMFException12);
        int int18 = uShortList0.indexOf((java.lang.Object) nMFException17);
        java.lang.String str19 = nMFException17.toString();
        esa.mo.nmf.NMFException nMFException21 = new esa.mo.nmf.NMFException("14.0");
        java.lang.Throwable[] throwableArray22 = nMFException21.getSuppressed();
        nMFException17.addSuppressed((java.lang.Throwable) nMFException21);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "esa.mo.nmf.NMFException: []" + "'", str19.equals(
            "esa.mo.nmf.NMFException: []"));
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        boolean boolean5 = uShortList0.equals((java.lang.Object) 1);
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray9 = nMFException8.getSuppressed();
        java.lang.Throwable[] throwableArray10 = nMFException8.getSuppressed();
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        nMFException8.addSuppressed((java.lang.Throwable) nMFException12);
        java.lang.Throwable[] throwableArray15 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray16 = nMFException12.getSuppressed();
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("[]",
            (java.lang.Throwable) nMFException12);
        int int18 = uShortList0.indexOf((java.lang.Object) nMFException17);
        org.ccsds.moims.mo.mal.structures.Element element19 = uShortList0.createElement();
        org.ccsds.moims.mo.mal.structures.ULong uLong21 = new org.ccsds.moims.mo.mal.structures.ULong();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = uLong21.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = uLong21.getServiceNumber();
        java.lang.Long long24 = uLong21.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = uLong21.getServiceNumber();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort26 = uShortList0.set(18, uShort25);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 18, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 281474993487886L + "'", long24.equals(281474993487886L));
        org.junit.Assert.assertNotNull(uShort25);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        int int26 = stringList12.size();
        java.util.stream.Stream<java.lang.String> strStream27 = stringList12.parallelStream();
        java.lang.Long long28 = stringList12.getShortForm();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strStream27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 281475010265073L + "'", long28.equals(281475010265073L));
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.ListIterator<java.lang.Float> floatItor17 = floatList0.listIterator();
        floatList0.add(0, (java.lang.Float) (-1.0f));
        org.ccsds.moims.mo.mal.structures.ShortList shortList21 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj22 = shortList21.clone();
        java.lang.String str23 = shortList21.toString();
        java.util.Spliterator<java.lang.Short> shortSpliterator24 = shortList21.spliterator();
        boolean boolean25 = floatList0.equals((java.lang.Object) shortList21);
        java.lang.Class<?> wildcardClass26 = shortList21.getClass();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList27 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj28 = uShortList27.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream29 = uShortList27
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor30 = uShortList27.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor31 = uShortList27.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider32 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl37 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl40 = mCServicesProviderNMF38
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl41 = mCServicesProviderNMF38
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl42 = mCServicesProviderNMF38
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF43 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl44 = mCServicesProviderNMF43
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl45 = mCServicesProviderNMF43
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF46 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl47 = mCServicesProviderNMF46
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl48 = mCServicesProviderNMF46
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl49 = mCServicesProviderNMF46
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl50 = mCServicesProviderNMF46
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration51 = new esa.mo.nmf.MCRegistration(cOMServicesProvider32,
            parameterProviderServiceImpl37, aggregationProviderServiceImpl42, alertProviderServiceImpl45,
            actionProviderServiceImpl50);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl52 = mCRegistration51.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCRegistration51.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider54 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl57 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl58 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl59 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl62 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl63 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl64 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF65 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl66 = mCServicesProviderNMF65
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl67 = mCServicesProviderNMF65
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF68 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl69 = mCServicesProviderNMF68
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl70 = mCServicesProviderNMF68
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl71 = mCServicesProviderNMF68
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl72 = mCServicesProviderNMF68
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration73 = new esa.mo.nmf.MCRegistration(cOMServicesProvider54,
            parameterProviderServiceImpl59, aggregationProviderServiceImpl64, alertProviderServiceImpl67,
            actionProviderServiceImpl72);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF74 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl75 = mCServicesProviderNMF74
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl76 = mCServicesProviderNMF74
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl77 = mCServicesProviderNMF74
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl78 = mCServicesProviderNMF74
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl79 = mCServicesProviderNMF74
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl80 = mCServicesProviderNMF74
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF81 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl82 = mCServicesProviderNMF81
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl83 = mCServicesProviderNMF81
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl84 = mCServicesProviderNMF81
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl85 = mCServicesProviderNMF81
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl86 = mCServicesProviderNMF81
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl87 = mCServicesProviderNMF81
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray88 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl72,
                                                                                                                                                                                   actionProviderServiceImpl80,
                                                                                                                                                                                   actionProviderServiceImpl87};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray89 = uShortList27
            .toArray(actionInheritanceSkeletonArray88);
        uShortList27.ensureCapacity(18);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime93 = new org.ccsds.moims.mo.mal.structures.FineTime(
            281474993487884L);
        org.ccsds.moims.mo.mal.structures.UShort uShort94 = fineTime93.getAreaNumber();
        boolean boolean95 = uShortList27.equals((java.lang.Object) fineTime93);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet96 = fineTime93.getAreaVersion();
        java.lang.Long long97 = fineTime93.getShortForm();
        boolean boolean98 = shortList21.remove((java.lang.Object) long97);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatItor17);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "[]" + "'", str23.equals("[]"));
        org.junit.Assert.assertNotNull(shortSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(uShortStream29);
        org.junit.Assert.assertNotNull(uShortItor30);
        org.junit.Assert.assertNotNull(uShortItor31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl40);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl41);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl42);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl44);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl47);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl48);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl49);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl50);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl57);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl58);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl62);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl63);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl66);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl69);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl70);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl71);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl72);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl75);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl76);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl77);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl78);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl79);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl80);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl82);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl83);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl84);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl85);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl86);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl87);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray88);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray89);
        org.junit.Assert.assertNotNull(uShort94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(uOctet96);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 281474993487889L + "'", long97.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = longList1.getAreaVersion();
        java.util.Iterator<java.lang.Long> longItor3 = longList1.iterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl6 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl7 = mCServicesProviderNMF4
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl9 = mCServicesProviderNMF4
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF4
            .getParameterService();
        int int11 = longList1.indexOf((java.lang.Object) mCServicesProviderNMF4);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl13 = mCServicesProviderNMF4
            .getParameterService();
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(longItor3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl6);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl7);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl13);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = longList1.getAreaVersion();
        java.util.Iterator<java.lang.Long> longItor3 = longList1.iterator();
        longList1.ensureCapacity((-15));
        java.util.Iterator<java.lang.Long> longItor6 = longList1.iterator();
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("1");
        esa.mo.nmf.NMFException nMFException11 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray12 = nMFException11.getSuppressed();
        java.lang.Throwable[] throwableArray13 = nMFException11.getSuppressed();
        esa.mo.nmf.NMFException nMFException15 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray16 = nMFException15.getSuppressed();
        nMFException11.addSuppressed((java.lang.Throwable) nMFException15);
        esa.mo.nmf.NMFException nMFException18 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException15);
        java.lang.Throwable[] throwableArray19 = nMFException15.getSuppressed();
        esa.mo.nmf.NMFException[] nMFExceptionArray20 = new esa.mo.nmf.NMFException[]{nMFException8, nMFException15};
        esa.mo.nmf.NMFException[] nMFExceptionArray21 = longList1.toArray(nMFExceptionArray20);
        java.lang.Object obj22 = longList1.clone();
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(longItor3);
        org.junit.Assert.assertNotNull(longItor6);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(nMFExceptionArray20);
        org.junit.Assert.assertNotNull(nMFExceptionArray21);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl27 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCRegistration19.parameterService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl27);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        java.lang.Float[] floatArray5 = new java.lang.Float[]{1.0f, 1.0f, 1.0f, 100.0f, 10.0f};
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6,
            floatArray5);
        java.util.stream.Stream<java.lang.Float> floatStream8 = floatList6.stream();
        floatList6.clear();
        org.ccsds.moims.mo.mal.structures.ShortList shortList10 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray12 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13,
            strArray12);
        int int15 = strList13.size();
        java.lang.Boolean[] booleanArray18 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList19 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList19,
            booleanArray18);
        boolean boolean22 = booleanList19.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream23 = booleanList19.stream();
        boolean boolean24 = strList13.containsAll((java.util.Collection<java.lang.Boolean>) booleanList19);
        boolean boolean25 = shortList10.containsAll((java.util.Collection<java.lang.Boolean>) booleanList19);
        java.util.stream.Stream<java.lang.Short> shortStream26 = shortList10.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element27 = shortList10.createElement();
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray30 = nMFException29.getSuppressed();
        int int31 = shortList10.indexOf((java.lang.Object) throwableArray30);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList32 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str33 = doubleList32.toString();
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36,
            booleanArray35);
        java.util.ListIterator<java.lang.Boolean> booleanItor39 = booleanList36.listIterator((int) (short) 1);
        boolean boolean40 = doubleList32.containsAll((java.util.Collection<java.lang.Boolean>) booleanList36);
        java.lang.Byte[] byteArray43 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList44 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList44,
            byteArray43);
        boolean boolean46 = byteList44.isEmpty();
        int int47 = byteList44.size();
        int int48 = booleanList36.indexOf((java.lang.Object) byteList44);
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList52 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList52,
            booleanArray51);
        java.util.Iterator<java.lang.Boolean> booleanItor54 = booleanList52.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream55 = booleanList52.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor56 = booleanList52.iterator();
        boolean boolean57 = byteList44.removeAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        boolean boolean58 = shortList10.removeAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        boolean boolean59 = booleanList52.isEmpty();
        boolean boolean60 = floatList6.retainAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        boolean boolean62 = floatList6.add((java.lang.Float) 1.0f);
        java.util.ListIterator<java.lang.Float> floatItor63 = floatList6.listIterator();
        try {
            floatList6.add(15, (java.lang.Float) 0.0f);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 15, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatStream8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shortStream26);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "[]" + "'", str33.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertNotNull(booleanStream55);
        org.junit.Assert.assertNotNull(booleanItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(floatItor63);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[]");
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        java.util.Spliterator<java.lang.Float> floatSpliterator23 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.Element element24 = floatList0.createElement();
        java.lang.Class<?> wildcardClass25 = floatList0.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(floatSpliterator23);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl25 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCRegistration19.parameterService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray7 = nMFException6.getSuppressed();
        nMFException2.addSuppressed((java.lang.Throwable) nMFException6);
        java.lang.Throwable[] throwableArray9 = nMFException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = nMFException6.getSuppressed();
        esa.mo.nmf.NMFException nMFException11 = new esa.mo.nmf.NMFException("[]", (java.lang.Throwable) nMFException6);
        java.lang.String str12 = nMFException6.toString();
        esa.mo.nmf.NMFException nMFException15 = new esa.mo.nmf.NMFException("0");
        esa.mo.nmf.NMFException nMFException16 = new esa.mo.nmf.NMFException("hi!",
            (java.lang.Throwable) nMFException15);
        nMFException6.addSuppressed((java.lang.Throwable) nMFException15);
        esa.mo.nmf.NMFException nMFException20 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray21 = nMFException20.getSuppressed();
        java.lang.Throwable[] throwableArray22 = nMFException20.getSuppressed();
        esa.mo.nmf.NMFException nMFException24 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray25 = nMFException24.getSuppressed();
        nMFException20.addSuppressed((java.lang.Throwable) nMFException24);
        esa.mo.nmf.NMFException nMFException27 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException24);
        nMFException6.addSuppressed((java.lang.Throwable) nMFException27);
        java.lang.String str29 = nMFException27.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str12.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "esa.mo.nmf.NMFException: " + "'", str29.equals(
            "esa.mo.nmf.NMFException: "));
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.LongList longList25 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream26 = longList25.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = longList25.getServiceNumber();
        int int28 = floatList0.indexOf((java.lang.Object) longList25);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList29 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = doubleList29.getServiceNumber();
        boolean boolean32 = doubleList29.add((java.lang.Double) 1.0d);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet33 = doubleList29.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element34 = doubleList29.createElement();
        java.lang.Byte[] byteArray37 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38,
            byteArray37);
        boolean boolean40 = byteList38.isEmpty();
        int int42 = byteList38.indexOf((java.lang.Object) 'a');
        java.lang.Object[] objArray43 = byteList38.toArray();
        org.ccsds.moims.mo.mal.structures.Time time45 = new org.ccsds.moims.mo.mal.structures.Time((long) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet46 = time45.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort47 = time45.getServiceNumber();
        boolean boolean48 = byteList38.remove((java.lang.Object) uShort47);
        boolean boolean50 = byteList38.add((java.lang.Byte) (byte) -1);
        java.lang.String[] strArray52 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53,
            strArray52);
        boolean boolean56 = strList53.add("hi!");
        java.lang.Object obj57 = null;
        boolean boolean58 = strList53.equals(obj57);
        java.util.ListIterator<java.lang.String> strItor59 = strList53.listIterator();
        java.lang.Object obj60 = null;
        boolean boolean61 = strList53.remove(obj60);
        java.lang.Boolean[] booleanArray63 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList64 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList64,
            booleanArray63);
        java.util.ListIterator<java.lang.Boolean> booleanItor67 = booleanList64.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream68 = booleanList64.parallelStream();
        boolean boolean70 = booleanList64.add((java.lang.Boolean) false);
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator71 = booleanList64.spliterator();
        boolean boolean72 = strList53.retainAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        boolean boolean73 = byteList38.containsAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        boolean boolean74 = doubleList29.retainAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        boolean boolean75 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(longStream26);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(uShort30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(uOctet33);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(uOctet46);
        org.junit.Assert.assertNotNull(uShort47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(booleanItor67);
        org.junit.Assert.assertNotNull(booleanStream68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(booleanSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCRegistration19.aggregationService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.stream.Stream<java.lang.String> strStream25 = stringList12.parallelStream();
        java.lang.Long[] longArray30 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList31 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList31,
            longArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = longList31.contains(obj33);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger36 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean37 = longList31.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor38 = longList31.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean40 = longList31.remove((java.lang.Object) uShort39);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList41 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int42 = uShortList41.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor43 = uShortList41.iterator();
        java.lang.Object[] objArray44 = uShortList41.toArray();
        uShortList41.clear();
        uShortList41.clear();
        boolean boolean47 = uShortList41.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor48 = uShortList41.iterator();
        boolean boolean49 = longList31.contains((java.lang.Object) uShortList41);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList50 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = booleanList50.getAreaNumber();
        boolean boolean52 = longList31.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        java.lang.Integer int53 = booleanList50.getTypeShortForm();
        boolean boolean55 = booleanList50.add((java.lang.Boolean) true);
        boolean boolean56 = stringList12.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = booleanList50.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Identifier identifier59 = new org.ccsds.moims.mo.mal.structures.Identifier(
            "hi!");
        java.lang.Integer int60 = identifier59.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element61 = identifier59.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList62 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element63 = booleanList62.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort64 = booleanList62.getServiceNumber();
        boolean boolean65 = identifier59.equals((java.lang.Object) booleanList62);
        boolean boolean66 = booleanList50.removeAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(longItor38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-10) + "'", int42.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(uShortItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-2) + "'", int53.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(uShort57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 6 + "'", int60.equals(6));
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(uShort64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.String str2 = integerList1.toString();
        boolean boolean4 = integerList1.add((java.lang.Integer) 8);
        boolean boolean5 = integerList1.isEmpty();
        java.lang.String str6 = integerList1.toString();
        java.util.Iterator<java.lang.Integer> intItor7 = integerList1.iterator();
        integerList1.clear();
        java.lang.Long long9 = integerList1.getShortForm();
        integerList1.ensureCapacity((-10));
        org.ccsds.moims.mo.mal.structures.ShortList shortList13 = new org.ccsds.moims.mo.mal.structures.ShortList(
            (int) (short) 0);
        java.lang.String str14 = shortList13.toString();
        org.ccsds.moims.mo.mal.structures.ShortList shortList15 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj16 = shortList15.clone();
        java.util.stream.Stream<java.lang.Short> shortStream17 = shortList15.parallelStream();
        shortList15.trimToSize();
        shortList15.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray37 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList38 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38,
            intArray37);
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList43 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList43,
            booleanArray42);
        java.util.Iterator<java.lang.Boolean> booleanItor45 = booleanList43.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream46 = booleanList43.stream();
        boolean boolean47 = intList38.retainAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        boolean boolean48 = shortList15.containsAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList51 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList51,
            booleanArray50);
        java.util.ListIterator<java.lang.Boolean> booleanItor54 = booleanList51.listIterator((int) (short) 1);
        boolean boolean55 = shortList15.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        boolean boolean56 = shortList13.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList57 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element58 = booleanList57.createElement();
        java.lang.Long long59 = booleanList57.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element60 = booleanList57.createElement();
        esa.mo.nmf.NMFException nMFException62 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray63 = nMFException62.getSuppressed();
        java.lang.Throwable[] throwableArray64 = nMFException62.getSuppressed();
        java.lang.Throwable[] throwableArray65 = nMFException62.getSuppressed();
        boolean boolean66 = booleanList57.equals((java.lang.Object) throwableArray65);
        org.ccsds.moims.mo.mal.structures.Element element67 = booleanList57.createElement();
        org.ccsds.moims.mo.mal.structures.Element element68 = booleanList57.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet69 = booleanList57.getAreaVersion();
        java.util.ListIterator<java.lang.Boolean> booleanItor70 = booleanList57.listIterator();
        boolean boolean71 = booleanList51.containsAll((java.util.Collection<java.lang.Boolean>) booleanList57);
        boolean boolean72 = integerList1.removeAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "[]" + "'", str2.equals("[]"));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "[8]" + "'", str6.equals("[8]"));
        org.junit.Assert.assertNotNull(intItor7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265077L + "'", long9.equals(281475010265077L));
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]" + "'", str14.equals("[]"));
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(shortStream17);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(booleanItor45);
        org.junit.Assert.assertNotNull(booleanStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 281475010265086L + "'", long59.equals(281475010265086L));
        org.junit.Assert.assertNotNull(element60);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(element67);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(uOctet69);
        org.junit.Assert.assertNotNull(booleanItor70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        boolean boolean5 = uShortList0.equals((java.lang.Object) 1);
        java.lang.Byte[] byteArray10 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList11,
            byteArray10);
        java.util.Iterator<java.lang.Byte> byteItor13 = byteList11.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration15 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long16 = duration15.getShortForm();
        int int17 = byteList11.indexOf((java.lang.Object) long16);
        int int18 = uShortList0.lastIndexOf((java.lang.Object) byteList11);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24,
            byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 10);
        java.lang.String str28 = byteList24.toString();
        java.util.stream.Stream<java.lang.Byte> byteStream29 = byteList24.parallelStream();
        int int30 = byteList24.size();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray31 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean33 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList32, uRIArray31);
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList37 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList37,
            booleanArray36);
        java.util.Iterator<java.lang.Boolean> booleanItor39 = booleanList37.iterator();
        boolean boolean40 = uRIList32.retainAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        booleanList37.clear();
        boolean boolean42 = byteList24.removeAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        java.util.stream.Stream<java.lang.Boolean> booleanStream43 = booleanList37.stream();
        int int44 = uShortList0.lastIndexOf((java.lang.Object) booleanList37);
        java.util.ListIterator<java.lang.Boolean> booleanItor45 = booleanList37.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList47 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet48 = longList47.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = longList47.getAreaNumber();
        java.util.Spliterator<java.lang.Long> longSpliterator50 = longList47.spliterator();
        int int51 = booleanList37.lastIndexOf((java.lang.Object) longList47);
        org.ccsds.moims.mo.mal.structures.URIList uRIList53 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.Element element54 = uRIList53.createElement();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor55 = uRIList53.iterator();
        int int56 = longList47.lastIndexOf((java.lang.Object) uRIList53);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet57 = uRIList53.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList58 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long59 = floatList58.getShortForm();
        java.lang.String[] strArray61 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62,
            strArray61);
        int int64 = strList62.size();
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList68 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList68,
            booleanArray67);
        boolean boolean71 = booleanList68.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream72 = booleanList68.stream();
        boolean boolean73 = strList62.containsAll((java.util.Collection<java.lang.Boolean>) booleanList68);
        boolean boolean74 = floatList58.containsAll((java.util.Collection<java.lang.Boolean>) booleanList68);
        java.util.Spliterator<java.lang.Float> floatSpliterator75 = floatList58.spliterator();
        esa.mo.nmf.NMFException nMFException77 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray78 = nMFException77.getSuppressed();
        int int79 = floatList58.lastIndexOf((java.lang.Object) throwableArray78);
        org.ccsds.moims.mo.mal.structures.LongList longList80 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int81 = floatList58.lastIndexOf((java.lang.Object) longList80);
        org.ccsds.moims.mo.mal.structures.UShort uShort82 = longList80.getServiceNumber();
        boolean boolean83 = uRIList53.remove((java.lang.Object) uShort82);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator84 = uRIList53.spliterator();
        org.ccsds.moims.mo.mal.structures.LongList longList86 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream87 = longList86.parallelStream();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList88 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str89 = doubleList88.toString();
        java.lang.Boolean[] booleanArray91 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList92 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList92,
            booleanArray91);
        java.util.ListIterator<java.lang.Boolean> booleanItor95 = booleanList92.listIterator((int) (short) 1);
        boolean boolean96 = doubleList88.containsAll((java.util.Collection<java.lang.Boolean>) booleanList92);
        java.lang.Object obj97 = booleanList92.clone();
        boolean boolean98 = longList86.contains(obj97);
        boolean boolean99 = uRIList53.contains(obj97);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteItor13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281474993487875L + "'", long16.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str28.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertNotNull(uRIArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(booleanStream43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(booleanItor45);
        org.junit.Assert.assertNotNull(uOctet48);
        org.junit.Assert.assertNotNull(uShort49);
        org.junit.Assert.assertNotNull(longSpliterator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(uRIItor55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(uOctet57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 281475010265084L + "'", long59.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(booleanStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(floatSpliterator75);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(uShort82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(uRISpliterator84);
        org.junit.Assert.assertNotNull(longStream87);
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "[]" + "'", str89.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(booleanItor95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray2 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean4 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList3, uRIArray2);
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList8 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList8,
            booleanArray7);
        java.util.Iterator<java.lang.Boolean> booleanItor10 = booleanList8.iterator();
        boolean boolean11 = uRIList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList8);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean18 = booleanList15.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.stream();
        boolean boolean20 = uRIList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        boolean boolean21 = longList1.removeAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = longList1.getAreaNumber();
        java.lang.Integer[] intArray36 = new java.lang.Integer[]{4, 12, 1, 4, 10, 65535, 5, 0, 5, 0, 14, 13, (-1)};
        java.util.ArrayList<java.lang.Integer> intList37 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37,
            intArray36);
        org.ccsds.moims.mo.mal.structures.Identifier identifier39 = new org.ccsds.moims.mo.mal.structures.Identifier();
        boolean boolean40 = intList37.contains((java.lang.Object) identifier39);
        java.lang.Integer int41 = identifier39.getTypeShortForm();
        byte[] byteArray43 = new byte[]{(byte) 10};
        org.ccsds.moims.mo.mal.structures.Blob blob46 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray43, 2,
            (int) ' ');
        boolean boolean47 = identifier39.equals((java.lang.Object) blob46);
        boolean boolean48 = longList1.equals((java.lang.Object) identifier39);
        java.lang.Integer int49 = identifier39.getTypeShortForm();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider50 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF51 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl52 = mCServicesProviderNMF51
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl53 = mCServicesProviderNMF51
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl54 = mCServicesProviderNMF51
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF51
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF56 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl57 = mCServicesProviderNMF56
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl58 = mCServicesProviderNMF56
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl59 = mCServicesProviderNMF56
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl60 = mCServicesProviderNMF56
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF61 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl62 = mCServicesProviderNMF61
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl63 = mCServicesProviderNMF61
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF64 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl65 = mCServicesProviderNMF64
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl66 = mCServicesProviderNMF64
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl67 = mCServicesProviderNMF64
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl68 = mCServicesProviderNMF64
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration69 = new esa.mo.nmf.MCRegistration(cOMServicesProvider50,
            parameterProviderServiceImpl55, aggregationProviderServiceImpl60, alertProviderServiceImpl63,
            actionProviderServiceImpl68);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl70 = mCRegistration69.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode71 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration69.setMode(registrationMode71);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider73 = mCRegistration69.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl74 = mCRegistration69.alertService;
        boolean boolean75 = identifier39.equals((java.lang.Object) mCRegistration69);
        org.junit.Assert.assertNotNull(uRIArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(booleanItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 6 + "'", int41.equals(6));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 6 + "'", int49.equals(6));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl52);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl53);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl54);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl57);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl58);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl59);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl60);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl62);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl63);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl65);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl66);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl67);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl68);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl70);
        org.junit.Assert.assertTrue("'" + registrationMode71 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode71.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNull(cOMServicesProvider73);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element23 = floatList0.createElement();
        org.ccsds.moims.mo.mal.structures.Identifier identifier24 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = identifier24.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList32 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList32,
            booleanArray31);
        java.util.Iterator<java.lang.Boolean> booleanItor34 = booleanList32.iterator();
        boolean boolean35 = uRIList27.retainAll((java.util.Collection<java.lang.Boolean>) booleanList32);
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList39 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList39,
            booleanArray38);
        boolean boolean42 = booleanList39.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream43 = booleanList39.stream();
        boolean boolean44 = uRIList27.retainAll((java.util.Collection<java.lang.Boolean>) booleanList39);
        uRIList27.ensureCapacity(5);
        boolean boolean47 = identifier24.equals((java.lang.Object) uRIList27);
        int int48 = uRIList27.size();
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList52 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList52,
            booleanArray51);
        boolean boolean55 = booleanList52.add((java.lang.Boolean) true);
        boolean boolean56 = uRIList27.equals((java.lang.Object) booleanList52);
        boolean boolean57 = floatList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = floatList0.getAreaVersion();
        java.lang.Byte[] byteArray61 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList62,
            byteArray61);
        boolean boolean64 = byteList62.isEmpty();
        int int66 = byteList62.indexOf((java.lang.Object) 'a');
        int int68 = byteList62.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray70 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList71 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList71,
            booleanArray70);
        java.util.ListIterator<java.lang.Boolean> booleanItor74 = booleanList71.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream75 = booleanList71.parallelStream();
        boolean boolean77 = booleanList71.add((java.lang.Boolean) false);
        boolean boolean78 = byteList62.retainAll((java.util.Collection<java.lang.Boolean>) booleanList71);
        boolean boolean79 = floatList0.remove((java.lang.Object) boolean78);
        java.lang.Byte[] byteArray84 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList85 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList85,
            byteArray84);
        boolean boolean88 = byteList85.add((java.lang.Byte) (byte) 10);
        java.lang.String str89 = byteList85.toString();
        java.lang.String str90 = byteList85.toString();
        byteList85.trimToSize();
        java.util.stream.Stream<java.lang.Byte> byteStream92 = byteList85.stream();
        boolean boolean93 = floatList0.remove((java.lang.Object) byteList85);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(booleanItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(booleanItor74);
        org.junit.Assert.assertNotNull(booleanStream75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str89.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str90.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException7 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray8 = nMFException7.getSuppressed();
        java.lang.Throwable[] throwableArray9 = nMFException7.getSuppressed();
        esa.mo.nmf.NMFException nMFException11 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray12 = nMFException11.getSuppressed();
        nMFException7.addSuppressed((java.lang.Throwable) nMFException11);
        esa.mo.nmf.NMFException nMFException14 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException11);
        nMFException2.addSuppressed((java.lang.Throwable) nMFException14);
        esa.mo.nmf.NMFException nMFException16 = new esa.mo.nmf.NMFException("[10, -1, -1, 10]",
            (java.lang.Throwable) nMFException14);
        java.lang.Throwable[] throwableArray17 = nMFException16.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        java.lang.Integer[] intArray13 = new java.lang.Integer[]{4, 12, 1, 4, 10, 65535, 5, 0, 5, 0, 14, 13, (-1)};
        java.util.ArrayList<java.lang.Integer> intList14 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList14,
            intArray13);
        org.ccsds.moims.mo.mal.structures.Identifier identifier16 = new org.ccsds.moims.mo.mal.structures.Identifier();
        boolean boolean17 = intList14.contains((java.lang.Object) identifier16);
        java.lang.Integer int20 = intList14.set(4, (java.lang.Integer) 1);
        byte[] byteArray24 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob25 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray24);
        int int26 = blob25.getLength();
        int int27 = blob25.getLength();
        int int28 = blob25.getOffset();
        boolean boolean29 = blob25.isURLBased();
        java.lang.Long long30 = blob25.getShortForm();
        int int31 = blob25.getOffset();
        int int32 = intList14.indexOf((java.lang.Object) int31);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList33 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.Integer int34 = doubleList33.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = doubleList33.getServiceNumber();
        java.lang.Byte[] byteArray38 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39,
            byteArray38);
        boolean boolean41 = byteList39.isEmpty();
        int int43 = byteList39.indexOf((java.lang.Object) 'a');
        int int45 = byteList39.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray47 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList48 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList48,
            booleanArray47);
        java.util.ListIterator<java.lang.Boolean> booleanItor51 = booleanList48.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream52 = booleanList48.parallelStream();
        boolean boolean54 = booleanList48.add((java.lang.Boolean) false);
        boolean boolean55 = byteList39.retainAll((java.util.Collection<java.lang.Boolean>) booleanList48);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList56 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj57 = uShortList56.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream58 = uShortList56
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor59 = uShortList56.iterator();
        boolean boolean60 = byteList39.equals((java.lang.Object) uShortItor59);
        org.ccsds.moims.mo.mal.structures.ShortList shortList61 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj62 = shortList61.clone();
        boolean boolean63 = byteList39.equals((java.lang.Object) shortList61);
        esa.mo.nmf.NMFException nMFException65 = new esa.mo.nmf.NMFException("-1");
        boolean boolean66 = byteList39.equals((java.lang.Object) nMFException65);
        byteList39.trimToSize();
        int int68 = doubleList33.indexOf((java.lang.Object) byteList39);
        java.util.Spliterator<java.lang.Double> doubleSpliterator69 = doubleList33.spliterator();
        java.util.ListIterator<java.lang.Double> doubleItor70 = doubleList33.listIterator();
        int int71 = intList14.lastIndexOf((java.lang.Object) doubleList33);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20.equals(10));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 281474993487873L + "'", long30.equals(281474993487873L));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 7 + "'", int32 == 7);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-5) + "'", int34.equals((-5)));
        org.junit.Assert.assertNotNull(uShort35);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(booleanItor51);
        org.junit.Assert.assertNotNull(booleanStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(uShortStream58);
        org.junit.Assert.assertNotNull(uShortItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(doubleSpliterator69);
        org.junit.Assert.assertNotNull(doubleItor70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode21 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration19.setMode(registrationMode21);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl24 = mCRegistration19.alertService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF26 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl27 = mCServicesProviderNMF26
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl28 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCServicesProviderNMF26
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF31 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl34 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF36 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl37 = mCServicesProviderNMF36
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl38 = mCServicesProviderNMF36
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF39 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl40 = mCServicesProviderNMF39
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl41 = mCServicesProviderNMF39
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl42 = mCServicesProviderNMF39
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl43 = mCServicesProviderNMF39
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration44 = new esa.mo.nmf.MCRegistration(cOMServicesProvider25,
            parameterProviderServiceImpl30, aggregationProviderServiceImpl35, alertProviderServiceImpl38,
            actionProviderServiceImpl43);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl45 = mCRegistration44.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode46 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration44.setMode(registrationMode46);
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl48 = mCRegistration44.aggregationService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider49 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF50 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl52 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl53 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl54 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl57 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl58 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl59 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl62 = mCServicesProviderNMF60
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF63 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl64 = mCServicesProviderNMF63
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl65 = mCServicesProviderNMF63
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl66 = mCServicesProviderNMF63
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl67 = mCServicesProviderNMF63
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration68 = new esa.mo.nmf.MCRegistration(cOMServicesProvider49,
            parameterProviderServiceImpl54, aggregationProviderServiceImpl59, alertProviderServiceImpl62,
            actionProviderServiceImpl67);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider69 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF70 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl71 = mCServicesProviderNMF70
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl72 = mCServicesProviderNMF70
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl73 = mCServicesProviderNMF70
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl74 = mCServicesProviderNMF70
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF75 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl76 = mCServicesProviderNMF75
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl77 = mCServicesProviderNMF75
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl78 = mCServicesProviderNMF75
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl79 = mCServicesProviderNMF75
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF80 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl81 = mCServicesProviderNMF80
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl82 = mCServicesProviderNMF80
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF83 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl84 = mCServicesProviderNMF83
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl85 = mCServicesProviderNMF83
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl86 = mCServicesProviderNMF83
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl87 = mCServicesProviderNMF83
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration88 = new esa.mo.nmf.MCRegistration(cOMServicesProvider69,
            parameterProviderServiceImpl74, aggregationProviderServiceImpl79, alertProviderServiceImpl82,
            actionProviderServiceImpl87);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl89 = mCRegistration88.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode90 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration88.setMode(registrationMode90);
        mCRegistration68.setMode(registrationMode90);
        mCRegistration44.setMode(registrationMode90);
        mCRegistration19.setMode(registrationMode90);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl95 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl96 = mCRegistration19.aggregationService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertTrue("'" + registrationMode21 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode21.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNull(cOMServicesProvider23);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl27);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl37);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl38);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl40);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl41);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl42);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl43);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl45);
        org.junit.Assert.assertTrue("'" + registrationMode46 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode46.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl48);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl52);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl54);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl57);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl58);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl62);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl64);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl65);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl66);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl71);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl72);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl73);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl74);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl76);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl77);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl78);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl79);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl81);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl82);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl84);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl85);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl86);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl87);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl89);
        org.junit.Assert.assertTrue("'" + registrationMode90 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode90.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(actionProviderServiceImpl95);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl96);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        esa.mo.nmf.NMFException nMFException3 = new esa.mo.nmf.NMFException("0");
        esa.mo.nmf.NMFException nMFException4 = new esa.mo.nmf.NMFException("hi!", (java.lang.Throwable) nMFException3);
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0.0", (java.lang.Throwable) nMFException3);
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        java.lang.String str7 = nMFException5.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "esa.mo.nmf.NMFException: 0.0" + "'", str7.equals(
            "esa.mo.nmf.NMFException: 0.0"));
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCRegistration19.aggregationService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider26 = mCRegistration19.comServices;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
        org.junit.Assert.assertNull(cOMServicesProvider26);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element1 = doubleList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList0.getServiceNumber();
        doubleList0.ensureCapacity(3);
        doubleList0.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = doubleList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = doubleList0.getServiceNumber();
        java.util.Spliterator<java.lang.Double> doubleSpliterator8 = doubleList0.spliterator();
        org.ccsds.moims.mo.mal.structures.Element element9 = doubleList0.createElement();
        java.lang.Object obj10 = doubleList0.clone();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl14 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl16 = mCServicesProviderNMF11
            .getActionService();
        boolean boolean17 = doubleList0.equals((java.lang.Object) mCServicesProviderNMF11);
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(doubleSpliterator8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.Element element1 = octetList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = octetList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = octetList0.getServiceNumber();
        java.lang.Long long6 = octetList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.ShortList shortList7 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj8 = shortList7.clone();
        java.util.stream.Stream<java.lang.Short> shortStream9 = shortList7.parallelStream();
        shortList7.trimToSize();
        shortList7.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray29 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList30 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList30,
            intArray29);
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList35 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList35,
            booleanArray34);
        java.util.Iterator<java.lang.Boolean> booleanItor37 = booleanList35.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream38 = booleanList35.stream();
        boolean boolean39 = intList30.retainAll((java.util.Collection<java.lang.Boolean>) booleanList35);
        boolean boolean40 = shortList7.containsAll((java.util.Collection<java.lang.Boolean>) booleanList35);
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList43 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList43,
            booleanArray42);
        java.util.ListIterator<java.lang.Boolean> booleanItor46 = booleanList43.listIterator((int) (short) 1);
        boolean boolean47 = shortList7.containsAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        java.util.stream.Stream<java.lang.Boolean> booleanStream48 = booleanList43.stream();
        boolean boolean49 = booleanList43.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList50 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long51 = floatList50.getShortForm();
        java.lang.String[] strArray53 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54,
            strArray53);
        int int56 = strList54.size();
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList60 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList60,
            booleanArray59);
        boolean boolean63 = booleanList60.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream64 = booleanList60.stream();
        boolean boolean65 = strList54.containsAll((java.util.Collection<java.lang.Boolean>) booleanList60);
        boolean boolean66 = floatList50.containsAll((java.util.Collection<java.lang.Boolean>) booleanList60);
        java.util.Spliterator<java.lang.Float> floatSpliterator67 = floatList50.spliterator();
        esa.mo.nmf.NMFException nMFException69 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray70 = nMFException69.getSuppressed();
        int int71 = floatList50.lastIndexOf((java.lang.Object) throwableArray70);
        org.ccsds.moims.mo.mal.structures.Element element72 = floatList50.createElement();
        int int73 = booleanList43.lastIndexOf((java.lang.Object) element72);
        booleanList43.clear();
        boolean boolean75 = octetList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList76 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element77 = booleanList76.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = booleanList76.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element79 = booleanList76.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort80 = booleanList76.getAreaNumber();
        boolean boolean81 = booleanList43.removeAll((java.util.Collection<java.lang.Boolean>) booleanList76);
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265081L + "'", long6.equals(281475010265081L));
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(shortStream9);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanItor37);
        org.junit.Assert.assertNotNull(booleanStream38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(booleanStream48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 281475010265084L + "'", long51.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(floatSpliterator67);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(element72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(element77);
        org.junit.Assert.assertNotNull(uShort78);
        org.junit.Assert.assertNotNull(element79);
        org.junit.Assert.assertNotNull(uShort80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList7 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.util.stream.Stream<java.lang.Integer> intStream8 = integerList7.parallelStream();
        java.util.stream.Stream<java.lang.Integer> intStream9 = integerList7.stream();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList16 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList16,
            booleanArray15);
        java.util.Iterator<java.lang.Boolean> booleanItor18 = booleanList16.iterator();
        boolean boolean19 = uRIList11.retainAll((java.util.Collection<java.lang.Boolean>) booleanList16);
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList23 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList23,
            booleanArray22);
        boolean boolean26 = booleanList23.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream27 = booleanList23.stream();
        boolean boolean28 = uRIList11.retainAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        boolean boolean29 = integerList7.removeAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        boolean boolean30 = byteList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        java.util.Iterator<java.lang.Byte> byteItor31 = byteList3.iterator();
        org.ccsds.moims.mo.mal.structures.FloatList floatList32 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long33 = floatList32.getShortForm();
        java.lang.String[] strArray35 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36,
            strArray35);
        int int38 = strList36.size();
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        boolean boolean45 = booleanList42.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream46 = booleanList42.stream();
        boolean boolean47 = strList36.containsAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = floatList32.containsAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        java.util.Spliterator<java.lang.Float> floatSpliterator49 = floatList32.spliterator();
        esa.mo.nmf.NMFException nMFException51 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray52 = nMFException51.getSuppressed();
        int int53 = floatList32.lastIndexOf((java.lang.Object) throwableArray52);
        org.ccsds.moims.mo.mal.structures.LongList longList54 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int55 = floatList32.lastIndexOf((java.lang.Object) longList54);
        java.util.Iterator<java.lang.Long> longItor56 = longList54.iterator();
        boolean boolean57 = byteList3.equals((java.lang.Object) longList54);
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = longList54.getAreaNumber();
        java.lang.String str59 = longList54.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanItor18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(booleanStream27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(byteItor31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 281475010265084L + "'", long33.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatSpliterator49);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(longItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "[]" + "'", str59.equals("[]"));
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[1.0, 0.0, 10.0]");
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        int int7 = byteList3.indexOf((java.lang.Object) 'a');
        int int9 = byteList3.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12,
            booleanArray11);
        java.util.ListIterator<java.lang.Boolean> booleanItor15 = booleanList12.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream16 = booleanList12.parallelStream();
        boolean boolean18 = booleanList12.add((java.lang.Boolean) false);
        boolean boolean19 = byteList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList12);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList20 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj21 = uShortList20.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream22 = uShortList20
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor23 = uShortList20.iterator();
        boolean boolean24 = byteList3.equals((java.lang.Object) uShortItor23);
        org.ccsds.moims.mo.mal.structures.ShortList shortList25 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj26 = shortList25.clone();
        boolean boolean27 = byteList3.equals((java.lang.Object) shortList25);
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException("-1");
        boolean boolean30 = byteList3.equals((java.lang.Object) nMFException29);
        java.lang.Long[] longArray35 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList36 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList36,
            longArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = longList36.contains(obj38);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger41 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean42 = longList36.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList46 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList46,
            booleanArray45);
        boolean boolean48 = longList36.containsAll((java.util.Collection<java.lang.Boolean>) booleanList46);
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList52 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList52,
            booleanArray51);
        java.util.Iterator<java.lang.Boolean> booleanItor54 = booleanList52.iterator();
        int int55 = longList36.indexOf((java.lang.Object) booleanList52);
        longList36.trimToSize();
        org.ccsds.moims.mo.mal.structures.Identifier identifier57 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = identifier57.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray59 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList60 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean61 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList60, uRIArray59);
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList65 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList65,
            booleanArray64);
        java.util.Iterator<java.lang.Boolean> booleanItor67 = booleanList65.iterator();
        boolean boolean68 = uRIList60.retainAll((java.util.Collection<java.lang.Boolean>) booleanList65);
        java.lang.Boolean[] booleanArray71 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList72 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList72,
            booleanArray71);
        boolean boolean75 = booleanList72.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream76 = booleanList72.stream();
        boolean boolean77 = uRIList60.retainAll((java.util.Collection<java.lang.Boolean>) booleanList72);
        uRIList60.ensureCapacity(5);
        boolean boolean80 = identifier57.equals((java.lang.Object) uRIList60);
        boolean boolean81 = uRIList60.isEmpty();
        boolean boolean82 = longList36.equals((java.lang.Object) uRIList60);
        int int83 = byteList3.lastIndexOf((java.lang.Object) boolean82);
        java.util.Iterator<java.lang.Byte> byteItor84 = byteList3.iterator();
        try {
            java.lang.Byte byte86 = byteList3.get(6);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanItor15);
        org.junit.Assert.assertNotNull(booleanStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(uShortStream22);
        org.junit.Assert.assertNotNull(uShortItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertNotNull(uRIArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(booleanItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(booleanStream76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(byteItor84);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList6 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList6,
            booleanArray5);
        java.util.Iterator<java.lang.Boolean> booleanItor8 = booleanList6.iterator();
        boolean boolean9 = uRIList1.retainAll((java.util.Collection<java.lang.Boolean>) booleanList6);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator10 = uRIList1.spliterator();
        java.lang.Byte[] byteArray15 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16,
            byteArray15);
        boolean boolean19 = byteList16.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj20 = byteList16.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream21 = byteList16.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList23 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int24 = byteList16.indexOf((java.lang.Object) stringList23);
        byte[] byteArray28 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob29 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray28);
        int int30 = blob29.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob31 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean32 = blob29.equals((java.lang.Object) blob31);
        boolean boolean33 = stringList23.remove((java.lang.Object) blob31);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF34 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean35 = stringList23.equals((java.lang.Object) mCServicesProviderNMF34);
        boolean boolean36 = uRIList1.equals((java.lang.Object) boolean35);
        org.ccsds.moims.mo.mal.structures.URI uRI37 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray38 = new org.ccsds.moims.mo.mal.structures.URI[]{uRI37};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList39 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean40 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList39, uRIArray38);
        int int41 = uRIList39.size();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator42 = uRIList39.spliterator();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator43 = uRIList39.spliterator();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList45 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        boolean boolean47 = integerList45.add((java.lang.Integer) 100);
        integerList45.clear();
        boolean boolean49 = uRIList39.contains((java.lang.Object) integerList45);
        integerList45.trimToSize();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList52 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        integerList52.add(0, (java.lang.Integer) 4);
        org.ccsds.moims.mo.mal.structures.UShort uShort56 = integerList52.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList57 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element58 = booleanList57.createElement();
        java.lang.Long long59 = booleanList57.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort60 = booleanList57.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element61 = booleanList57.createElement();
        boolean boolean62 = integerList52.removeAll((java.util.Collection<java.lang.Boolean>) booleanList57);
        boolean boolean63 = integerList45.containsAll((java.util.Collection<java.lang.Boolean>) booleanList57);
        int int64 = uRIList1.lastIndexOf((java.lang.Object) integerList45);
        try {
            java.util.ListIterator<java.lang.Integer> intItor66 = integerList45.listIterator(65535);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 65535");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanItor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(uRISpliterator10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteStream21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(uRIArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(uRISpliterator42);
        org.junit.Assert.assertNotNull(uRISpliterator43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(uShort56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 281475010265086L + "'", long59.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort60);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.LongList longList25 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream26 = longList25.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = longList25.getServiceNumber();
        int int28 = floatList0.indexOf((java.lang.Object) longList25);
        try {
            java.lang.Float float30 = floatList0.remove(65535);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 65535, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(longStream26);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode25 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration19.setMode(registrationMode25);
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl27 = mCRegistration19.aggregationService;
        org.ccsds.moims.mo.mal.structures.OctetList octetList28 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort29 = octetList28.getServiceNumber();
        java.lang.Long[] longArray34 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList35 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList35,
            longArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = longList35.contains(obj37);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger40 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean41 = longList35.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList45 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList45,
            booleanArray44);
        boolean boolean47 = longList35.containsAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList51 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList51,
            booleanArray50);
        java.util.Iterator<java.lang.Boolean> booleanItor53 = booleanList51.iterator();
        int int54 = longList35.indexOf((java.lang.Object) booleanList51);
        java.lang.Object[] objArray55 = longList35.toArray();
        java.util.ListIterator<java.lang.Long> longItor56 = longList35.listIterator();
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList60 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList60,
            booleanArray59);
        java.util.Iterator<java.lang.Boolean> booleanItor62 = booleanList60.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream63 = booleanList60.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor64 = booleanList60.iterator();
        int int65 = longList35.indexOf((java.lang.Object) booleanList60);
        boolean boolean66 = octetList28.containsAll((java.util.Collection<java.lang.Boolean>) booleanList60);
        java.util.Spliterator<java.lang.Byte> byteSpliterator67 = octetList28.spliterator();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList68 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) octetList28);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertTrue("'" + registrationMode25 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode25.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl27);
        org.junit.Assert.assertNotNull(uShort29);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanItor53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(longItor56);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(booleanItor62);
        org.junit.Assert.assertNotNull(booleanStream63);
        org.junit.Assert.assertNotNull(booleanItor64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteSpliterator67);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.parallelStream();
        shortList0.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = org.ccsds.moims.mo.mal.structures.LongList.AREA_SHORT_FORM;
        java.lang.Long long5 = uShort4.getShortForm();
        boolean boolean6 = shortList0.remove((java.lang.Object) long5);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12,
            byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj16 = byteList12.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream17 = byteList12.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList19 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int20 = byteList12.indexOf((java.lang.Object) stringList19);
        byte[] byteArray24 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob25 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray24);
        int int26 = blob25.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob27 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean28 = blob25.equals((java.lang.Object) blob27);
        boolean boolean29 = stringList19.remove((java.lang.Object) blob27);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF30 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean31 = stringList19.equals((java.lang.Object) mCServicesProviderNMF30);
        java.util.ListIterator<java.lang.String> strItor32 = stringList19.listIterator();
        int int33 = stringList19.size();
        java.util.stream.Stream<java.lang.String> strStream34 = stringList19.parallelStream();
        boolean boolean35 = shortList0.remove((java.lang.Object) stringList19);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281474993487882L + "'", long5.equals(281474993487882L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(byteStream17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException();
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("[8]", (java.lang.Throwable) nMFException1);
        esa.mo.nmf.NMFException nMFException4 = new esa.mo.nmf.NMFException("[8]");
        nMFException2.addSuppressed((java.lang.Throwable) nMFException4);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = identifier0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray2 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean4 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList3, uRIArray2);
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList8 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList8,
            booleanArray7);
        java.util.Iterator<java.lang.Boolean> booleanItor10 = booleanList8.iterator();
        boolean boolean11 = uRIList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList8);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean18 = booleanList15.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.stream();
        boolean boolean20 = uRIList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        uRIList3.ensureCapacity(5);
        boolean boolean23 = identifier0.equals((java.lang.Object) uRIList3);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor24 = uRIList3.listIterator();
        java.lang.String str25 = uRIList3.toString();
        org.ccsds.moims.mo.mal.structures.Union union27 = new org.ccsds.moims.mo.mal.structures.Union(
            (java.lang.Double) 100.0d);
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = union27.getAreaNumber();
        boolean boolean29 = uRIList3.equals((java.lang.Object) union27);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream30 = uRIList3.parallelStream();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider31 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF32 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl34 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl40 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl41 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF42 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCServicesProviderNMF42
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF42
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF45 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl46 = mCServicesProviderNMF45
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl47 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl48 = mCServicesProviderNMF45
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl49 = mCServicesProviderNMF45
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration50 = new esa.mo.nmf.MCRegistration(cOMServicesProvider31,
            parameterProviderServiceImpl36, aggregationProviderServiceImpl41, alertProviderServiceImpl44,
            actionProviderServiceImpl49);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl51 = mCRegistration50.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl52 = mCRegistration50.aggregationService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCRegistration50.actionService;
        boolean boolean54 = uRIList3.remove((java.lang.Object) mCRegistration50);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl55 = mCRegistration50.actionService;
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uRIArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(booleanItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(uRIItor24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[]" + "'", str25.equals("[]"));
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(uRIStream30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl40);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl46);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl47);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl48);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl49);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl51);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl55);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("false");
        esa.mo.nmf.NMFException nMFException3 = new esa.mo.nmf.NMFException("[true, false]",
            (java.lang.Throwable) nMFException2);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        java.util.ListIterator<java.lang.Float> floatItor23 = floatList0.listIterator();
        try {
            floatList0.add(6, (java.lang.Float) 1.0f);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(floatItor23);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider21 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF22 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl23 = mCServicesProviderNMF22
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCServicesProviderNMF22
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCServicesProviderNMF22
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCServicesProviderNMF22
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF27 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCServicesProviderNMF27
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF32 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl34 = mCServicesProviderNMF32
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF35 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCServicesProviderNMF35
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF35
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl38 = mCServicesProviderNMF35
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl39 = mCServicesProviderNMF35
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration40 = new esa.mo.nmf.MCRegistration(cOMServicesProvider21,
            parameterProviderServiceImpl26, aggregationProviderServiceImpl31, alertProviderServiceImpl34,
            actionProviderServiceImpl39);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl41 = mCRegistration40.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode42 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration40.setMode(registrationMode42);
        mCRegistration19.setMode(registrationMode42);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider46 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl50 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF52 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl53 = mCServicesProviderNMF52
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl54 = mCServicesProviderNMF52
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl55 = mCServicesProviderNMF52
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF52
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF57 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF57
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF57
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl62 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl63 = mCServicesProviderNMF60
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl64 = mCServicesProviderNMF60
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration65 = new esa.mo.nmf.MCRegistration(cOMServicesProvider46,
            parameterProviderServiceImpl51, aggregationProviderServiceImpl56, alertProviderServiceImpl59,
            actionProviderServiceImpl64);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl66 = mCRegistration65.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl67 = mCRegistration65.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl68 = mCRegistration65.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl69 = mCRegistration65.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl70 = mCRegistration65.actionService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode71 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration65.setMode(registrationMode71);
        mCRegistration19.setMode(registrationMode71);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl34);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl38);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl39);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl41);
        org.junit.Assert.assertTrue("'" + registrationMode42 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode42.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl53);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl54);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl62);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl63);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl66);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl68);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl69);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl70);
        org.junit.Assert.assertTrue("'" + registrationMode71 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode71.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        java.lang.Long[] longArray4 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList5 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList5, longArray4);
        java.lang.Object obj7 = null;
        boolean boolean8 = longList5.contains(obj7);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger10 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean11 = longList5.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean17 = longList5.containsAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList21 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList21,
            booleanArray20);
        java.util.Iterator<java.lang.Boolean> booleanItor23 = booleanList21.iterator();
        int int24 = longList5.indexOf((java.lang.Object) booleanList21);
        longList5.trimToSize();
        java.lang.Object[] objArray26 = longList5.toArray();
        java.lang.String str27 = longList5.toString();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList28 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element29 = doubleList28.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = doubleList28.getServiceNumber();
        java.lang.Integer int31 = doubleList28.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = doubleList28.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Union union34 = new org.ccsds.moims.mo.mal.structures.Union(
            (java.lang.Float) 100.0f);
        int int35 = doubleList28.indexOf((java.lang.Object) 100.0f);
        org.ccsds.moims.mo.mal.structures.ShortList shortList36 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray38 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39,
            strArray38);
        int int41 = strList39.size();
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList45 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList45,
            booleanArray44);
        boolean boolean48 = booleanList45.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream49 = booleanList45.stream();
        boolean boolean50 = strList39.containsAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        boolean boolean51 = shortList36.containsAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        java.util.stream.Stream<java.lang.Short> shortStream52 = shortList36.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element53 = shortList36.createElement();
        esa.mo.nmf.NMFException nMFException55 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray56 = nMFException55.getSuppressed();
        int int57 = shortList36.indexOf((java.lang.Object) throwableArray56);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList58 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str59 = doubleList58.toString();
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList62 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList62,
            booleanArray61);
        java.util.ListIterator<java.lang.Boolean> booleanItor65 = booleanList62.listIterator((int) (short) 1);
        boolean boolean66 = doubleList58.containsAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        java.lang.Byte[] byteArray69 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList70 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList70,
            byteArray69);
        boolean boolean72 = byteList70.isEmpty();
        int int73 = byteList70.size();
        int int74 = booleanList62.indexOf((java.lang.Object) byteList70);
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList78 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList78,
            booleanArray77);
        java.util.Iterator<java.lang.Boolean> booleanItor80 = booleanList78.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream81 = booleanList78.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor82 = booleanList78.iterator();
        boolean boolean83 = byteList70.removeAll((java.util.Collection<java.lang.Boolean>) booleanList78);
        boolean boolean84 = shortList36.removeAll((java.util.Collection<java.lang.Boolean>) booleanList78);
        boolean boolean85 = booleanList78.isEmpty();
        boolean boolean86 = doubleList28.remove((java.lang.Object) booleanList78);
        boolean boolean87 = longList5.retainAll((java.util.Collection<java.lang.Boolean>) booleanList78);
        java.util.function.UnaryOperator<java.lang.Long> longUnaryOperator88 = null;
        try {
            longList5.replaceAll(longUnaryOperator88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanItor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[10, -1, -1, 10]" + "'", str27.equals(
            "[10, -1, -1, 10]"));
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(uShort30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-5) + "'", int31.equals((-5)));
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanStream49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shortStream52);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "[]" + "'", str59.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(booleanItor80);
        org.junit.Assert.assertNotNull(booleanStream81);
        org.junit.Assert.assertNotNull(booleanItor82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        boolean boolean22 = floatList0.isEmpty();
        java.util.ListIterator<java.lang.Float> floatItor23 = floatList0.listIterator();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatItor23);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.Time time24 = new org.ccsds.moims.mo.mal.structures.Time();
        org.ccsds.moims.mo.mal.structures.Element element25 = time24.createElement();
        boolean boolean26 = longList22.equals((java.lang.Object) time24);
        java.lang.String[] strArray28 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29,
            strArray28);
        boolean boolean32 = strList29.add("hi!");
        java.lang.Object obj33 = null;
        boolean boolean34 = strList29.equals(obj33);
        java.util.ListIterator<java.lang.String> strItor35 = strList29.listIterator();
        int int36 = longList22.indexOf((java.lang.Object) strList29);
        org.ccsds.moims.mo.mal.structures.Element element37 = longList22.createElement();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList38 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int39 = uShortList38.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor40 = uShortList38.iterator();
        java.lang.Object[] objArray41 = uShortList38.toArray();
        uShortList38.clear();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream43 = uShortList38.stream();
        java.lang.String str44 = uShortList38.toString();
        org.ccsds.moims.mo.mal.structures.FloatList floatList45 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long46 = floatList45.getShortForm();
        floatList45.trimToSize();
        java.lang.String str48 = floatList45.toString();
        java.util.Spliterator<java.lang.Float> floatSpliterator49 = floatList45.spliterator();
        java.lang.Byte[] byteArray52 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53,
            byteArray52);
        boolean boolean55 = byteList53.isEmpty();
        int int57 = byteList53.indexOf((java.lang.Object) 'a');
        int int59 = byteList53.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList62 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList62,
            booleanArray61);
        java.util.ListIterator<java.lang.Boolean> booleanItor65 = booleanList62.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream66 = booleanList62.parallelStream();
        boolean boolean68 = booleanList62.add((java.lang.Boolean) false);
        boolean boolean69 = byteList53.retainAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList70 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj71 = uShortList70.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream72 = uShortList70
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor73 = uShortList70.iterator();
        boolean boolean74 = byteList53.equals((java.lang.Object) uShortItor73);
        org.ccsds.moims.mo.mal.structures.ShortList shortList75 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj76 = shortList75.clone();
        boolean boolean77 = byteList53.equals((java.lang.Object) shortList75);
        esa.mo.nmf.NMFException nMFException79 = new esa.mo.nmf.NMFException("-1");
        boolean boolean80 = byteList53.equals((java.lang.Object) nMFException79);
        byteList53.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList82 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element83 = booleanList82.createElement();
        java.lang.Long long84 = booleanList82.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort85 = booleanList82.getAreaNumber();
        java.lang.Integer int86 = booleanList82.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray87 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList82};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray88 = byteList53.toArray(booleanListArray87);
        boolean boolean89 = floatList45.remove((java.lang.Object) booleanListArray87);
        java.util.ArrayList<java.lang.Boolean>[] booleanListArray90 = uShortList38.toArray(
            (java.util.ArrayList<java.lang.Boolean>[]) booleanListArray87);
        java.util.AbstractCollection<java.lang.Boolean>[] booleanCollectionArray91 = longList22.toArray(
            (java.util.AbstractCollection<java.lang.Boolean>[]) booleanListArray90);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet92 = longList22.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet93 = uOctet92.getAreaVersion();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-10) + "'", int39.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(uShortStream43);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "[]" + "'", str44.equals("[]"));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 281475010265084L + "'", long46.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "[]" + "'", str48.equals("[]"));
        org.junit.Assert.assertNotNull(floatSpliterator49);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanItor65);
        org.junit.Assert.assertNotNull(booleanStream66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(uShortStream72);
        org.junit.Assert.assertNotNull(uShortItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(element83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 281475010265086L + "'", long84.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-2) + "'", int86.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray87);
        org.junit.Assert.assertNotNull(booleanListArray88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(booleanListArray90);
        org.junit.Assert.assertNotNull(booleanCollectionArray91);
        org.junit.Assert.assertNotNull(uOctet92);
        org.junit.Assert.assertNotNull(uOctet93);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCRegistration19.alertService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF24 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCServicesProviderNMF24
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl26 = mCServicesProviderNMF24
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl27 = mCServicesProviderNMF24
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCServicesProviderNMF24
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF29 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCServicesProviderNMF29
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl32 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF34 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF34
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl36 = mCServicesProviderNMF34
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF37
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl41 = mCServicesProviderNMF37
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration42 = new esa.mo.nmf.MCRegistration(cOMServicesProvider23,
            parameterProviderServiceImpl28, aggregationProviderServiceImpl33, alertProviderServiceImpl36,
            actionProviderServiceImpl41);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCRegistration42.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode44 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration42.setMode(registrationMode44);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider46 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl50 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF52 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl53 = mCServicesProviderNMF52
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl54 = mCServicesProviderNMF52
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl55 = mCServicesProviderNMF52
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF52
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF57 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF57
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF57
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl62 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl63 = mCServicesProviderNMF60
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl64 = mCServicesProviderNMF60
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration65 = new esa.mo.nmf.MCRegistration(cOMServicesProvider46,
            parameterProviderServiceImpl51, aggregationProviderServiceImpl56, alertProviderServiceImpl59,
            actionProviderServiceImpl64);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl66 = mCRegistration65.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl67 = mCRegistration65.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl68 = mCRegistration65.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl69 = mCRegistration65.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl70 = mCRegistration65.actionService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode71 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration65.setMode(registrationMode71);
        mCRegistration42.setMode(registrationMode71);
        mCRegistration19.setMode(registrationMode71);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl26);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl27);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertTrue("'" + registrationMode44 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode44.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl53);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl54);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl62);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl63);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl66);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl68);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl69);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl70);
        org.junit.Assert.assertTrue("'" + registrationMode71 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode71.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("1.0");
        java.lang.String str2 = nMFException1.toString();
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "esa.mo.nmf.NMFException: 1.0" + "'", str2.equals(
            "esa.mo.nmf.NMFException: 1.0"));
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        java.lang.Long[] longArray30 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList31 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList31,
            longArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = longList31.contains(obj33);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger36 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean37 = longList31.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList41 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList41,
            booleanArray40);
        boolean boolean43 = longList31.containsAll((java.util.Collection<java.lang.Boolean>) booleanList41);
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList47 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList47,
            booleanArray46);
        java.util.Iterator<java.lang.Boolean> booleanItor49 = booleanList47.iterator();
        int int50 = longList31.indexOf((java.lang.Object) booleanList47);
        boolean boolean51 = stringList12.retainAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        java.lang.Integer int52 = stringList12.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element53 = stringList12.createElement();
        stringList12.clear();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanItor49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-15) + "'", int52.equals((-15)));
        org.junit.Assert.assertNotNull(element53);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("[10, -1, -1, 10]");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList2 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.Integer int3 = doubleList2.getTypeShortForm();
        boolean boolean4 = uRI1.equals((java.lang.Object) doubleList2);
        java.lang.Long long5 = doubleList2.getShortForm();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList6 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element7 = doubleList6.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = doubleList6.getServiceNumber();
        doubleList6.ensureCapacity(3);
        doubleList6.trimToSize();
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean18 = booleanList15.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.stream();
        java.lang.Double[] doubleArray21 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList22 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList22,
            doubleArray21);
        java.util.Spliterator<java.lang.Double> doubleSpliterator24 = doubleList22.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor25 = doubleList22.iterator();
        boolean boolean26 = booleanList15.contains((java.lang.Object) doubleItor25);
        boolean boolean27 = doubleList6.removeAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        boolean boolean28 = doubleList2.removeAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        boolean boolean30 = doubleList2.add((java.lang.Double) 1.0d);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider31 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF32 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl34 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl40 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl41 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF42 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCServicesProviderNMF42
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF42
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF45 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl46 = mCServicesProviderNMF45
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl47 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl48 = mCServicesProviderNMF45
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl49 = mCServicesProviderNMF45
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration50 = new esa.mo.nmf.MCRegistration(cOMServicesProvider31,
            parameterProviderServiceImpl36, aggregationProviderServiceImpl41, alertProviderServiceImpl44,
            actionProviderServiceImpl49);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCRegistration50.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode52 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration50.setMode(registrationMode52);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider54 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl57 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl58 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl59 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl62 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl63 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl64 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF65 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl66 = mCServicesProviderNMF65
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl67 = mCServicesProviderNMF65
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF68 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl69 = mCServicesProviderNMF68
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl70 = mCServicesProviderNMF68
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl71 = mCServicesProviderNMF68
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl72 = mCServicesProviderNMF68
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration73 = new esa.mo.nmf.MCRegistration(cOMServicesProvider54,
            parameterProviderServiceImpl59, aggregationProviderServiceImpl64, alertProviderServiceImpl67,
            actionProviderServiceImpl72);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl74 = mCRegistration73.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl75 = mCRegistration73.aggregationService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode76 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration73.setMode(registrationMode76);
        mCRegistration50.setMode(registrationMode76);
        boolean boolean79 = doubleList2.contains((java.lang.Object) mCRegistration50);
        java.lang.Object obj80 = doubleList2.clone();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-5) + "'", int3.equals((-5)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265083L + "'", long5.equals(281475010265083L));
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator24);
        org.junit.Assert.assertNotNull(doubleItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl40);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl46);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl47);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl48);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl49);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertTrue("'" + registrationMode52 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode52.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl57);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl58);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl62);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl63);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl66);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl69);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl70);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl71);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl72);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl74);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl75);
        org.junit.Assert.assertTrue("'" + registrationMode76 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode76.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        stringList12.clear();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList26 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = booleanList26.getAreaNumber();
        boolean boolean28 = stringList12.remove((java.lang.Object) booleanList26);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        esa.mo.nmf.NMFException nMFException3 = new esa.mo.nmf.NMFException("hi!", (java.lang.Throwable) nMFException2);
        java.lang.String str4 = nMFException3.toString();
        java.lang.Throwable[] throwableArray5 = nMFException3.getSuppressed();
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "esa.mo.nmf.NMFException: hi!" + "'", str4.equals(
            "esa.mo.nmf.NMFException: hi!"));
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("[-1.0]");
        esa.mo.nmf.NMFException nMFException3 = new esa.mo.nmf.NMFException("[hi!, [1]]",
            (java.lang.Throwable) nMFException2);
        java.lang.String str4 = nMFException2.toString();
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "esa.mo.nmf.NMFException: [-1.0]" + "'", str4.equals(
            "esa.mo.nmf.NMFException: [-1.0]"));
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        java.util.stream.Stream<java.lang.Float> floatStream23 = floatList0.stream();
        org.ccsds.moims.mo.mal.structures.ShortList shortList24 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj25 = shortList24.clone();
        java.util.stream.Stream<java.lang.Short> shortStream26 = shortList24.parallelStream();
        shortList24.trimToSize();
        shortList24.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray46 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList47 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47,
            intArray46);
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList52 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList52,
            booleanArray51);
        java.util.Iterator<java.lang.Boolean> booleanItor54 = booleanList52.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream55 = booleanList52.stream();
        boolean boolean56 = intList47.retainAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        boolean boolean57 = shortList24.containsAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = shortList24.getAreaVersion();
        java.lang.Long long59 = shortList24.getShortForm();
        java.lang.Object[] objArray60 = shortList24.toArray();
        java.util.stream.Stream<java.lang.Short> shortStream61 = shortList24.parallelStream();
        boolean boolean62 = floatList0.contains((java.lang.Object) shortList24);
        floatList0.trimToSize();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(floatStream23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(shortStream26);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertNotNull(booleanStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 281475010265079L + "'", long59.equals(281475010265079L));
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(shortStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = longList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = longList22.getServiceNumber();
        java.lang.Byte[] byteArray31 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32,
            byteArray31);
        boolean boolean35 = byteList32.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj36 = byteList32.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream37 = byteList32.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList39 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int40 = byteList32.indexOf((java.lang.Object) stringList39);
        byte[] byteArray44 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob45 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray44);
        int int46 = blob45.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob47 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean48 = blob45.equals((java.lang.Object) blob47);
        boolean boolean49 = stringList39.remove((java.lang.Object) blob47);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF50 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean51 = stringList39.equals((java.lang.Object) mCServicesProviderNMF50);
        java.util.ListIterator<java.lang.String> strItor52 = stringList39.listIterator();
        int int53 = stringList39.size();
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][][] alertHandlerArray54 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][][]{};
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][][] alertHandlerArray55 = stringList39.toArray(
            alertHandlerArray54);
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][][] alertHandlerArray56 = longList22.toArray(
            alertHandlerArray55);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(byteStream37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(alertHandlerArray54);
        org.junit.Assert.assertNotNull(alertHandlerArray55);
        org.junit.Assert.assertNotNull(alertHandlerArray56);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = longList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList3 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element4 = stringList3.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList5 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        boolean boolean6 = stringList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList5);
        boolean boolean7 = longList1.retainAll((java.util.Collection<java.lang.Boolean>) booleanList5);
        esa.mo.nmf.NMFException nMFException9 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray10 = nMFException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = nMFException9.getSuppressed();
        boolean boolean12 = longList1.contains((java.lang.Object) throwableArray11);
        org.ccsds.moims.mo.mal.structures.Element element13 = longList1.createElement();
        java.util.ListIterator<java.lang.Long> longItor14 = longList1.listIterator();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList15 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = booleanList15.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = booleanList15.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = booleanList15.getServiceNumber();
        boolean boolean19 = longList1.retainAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = booleanList15.getAreaVersion();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(longItor14);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(uOctet20);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = nMFException5.getSuppressed();
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException5);
        java.lang.String str9 = nMFException5.toString();
        nMFException2.addSuppressed((java.lang.Throwable) nMFException5);
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = nMFException12.getSuppressed();
        nMFException2.addSuppressed((java.lang.Throwable) nMFException12);
        java.lang.String str16 = nMFException2.toString();
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("100",
            (java.lang.Throwable) nMFException2);
        java.lang.String str18 = nMFException2.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str9.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "esa.mo.nmf.NMFException: -1" + "'", str16.equals(
            "esa.mo.nmf.NMFException: -1"));
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "esa.mo.nmf.NMFException: -1" + "'", str18.equals(
            "esa.mo.nmf.NMFException: -1"));
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList0.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor4 = uShortList0.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF16
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF19 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF19
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF19
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF19
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCServicesProviderNMF19
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration24 = new esa.mo.nmf.MCRegistration(cOMServicesProvider5,
            parameterProviderServiceImpl10, aggregationProviderServiceImpl15, alertProviderServiceImpl18,
            actionProviderServiceImpl23);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl25 = mCRegistration24.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration24.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider27 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF41
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCServicesProviderNMF41
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration46 = new esa.mo.nmf.MCRegistration(cOMServicesProvider27,
            parameterProviderServiceImpl32, aggregationProviderServiceImpl37, alertProviderServiceImpl40,
            actionProviderServiceImpl45);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl50 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCServicesProviderNMF47
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl60 = mCServicesProviderNMF54
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray61 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl26,
                                                                                                                                                                                   actionProviderServiceImpl45,
                                                                                                                                                                                   actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl60};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray62 = uShortList0
            .toArray(actionInheritanceSkeletonArray61);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList63 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj64 = uShortList63.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream65 = uShortList63
            .parallelStream();
        int int66 = uShortList0.lastIndexOf((java.lang.Object) uShortStream65);
        org.ccsds.moims.mo.mal.structures.UShort uShort67 = uShortList0.getServiceNumber();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uShortItor4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray61);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(uShortStream65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(uShort67);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl6 = mCServicesProviderNMF0
            .getAggregationService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl6);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        uShortList0.clear();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uShortList0.getAreaVersion();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor7 = uShortList0.listIterator(0);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream8 = uShortList0.stream();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = uShortList0.getAreaVersion();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream10 = uShortList0.stream();
        java.lang.Integer int11 = uShortList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.FloatList floatList13 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long14 = floatList13.getShortForm();
        java.lang.String[] strArray16 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17,
            strArray16);
        int int19 = strList17.size();
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList23 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList23,
            booleanArray22);
        boolean boolean26 = booleanList23.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream27 = booleanList23.stream();
        boolean boolean28 = strList17.containsAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        boolean boolean29 = floatList13.containsAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        java.util.Spliterator<java.lang.Float> floatSpliterator30 = floatList13.spliterator();
        esa.mo.nmf.NMFException nMFException32 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray33 = nMFException32.getSuppressed();
        int int34 = floatList13.lastIndexOf((java.lang.Object) throwableArray33);
        java.lang.Integer int35 = floatList13.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort36 = floatList13.getServiceNumber();
        try {
            uShortList0.add(10, uShort36);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(uShortItor7);
        org.junit.Assert.assertNotNull(uShortStream8);
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertNotNull(uShortStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-10) + "'", int11.equals((-10)));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 281475010265084L + "'", long14.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(booleanStream27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(floatSpliterator30);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-4) + "'", int35.equals((-4)));
        org.junit.Assert.assertNotNull(uShort36);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl4 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long2 = integerList1.getShortForm();
        java.util.stream.Stream<java.lang.Integer> intStream3 = integerList1.parallelStream();
        java.util.Iterator<java.lang.Integer> intItor4 = integerList1.iterator();
        integerList1.clear();
        org.ccsds.moims.mo.mal.structures.ShortList shortList6 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = shortList6.getAreaNumber();
        java.util.Spliterator<java.lang.Short> shortSpliterator8 = shortList6.spliterator();
        org.ccsds.moims.mo.mal.structures.LongList longList10 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream11 = longList10.parallelStream();
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        java.util.Iterator<java.lang.Boolean> booleanItor17 = booleanList15.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream18 = booleanList15.stream();
        boolean boolean19 = longList10.containsAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = longList10.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = longList10.getAreaNumber();
        boolean boolean22 = shortList6.contains((java.lang.Object) longList10);
        org.ccsds.moims.mo.mal.structures.ShortList shortList23 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj24 = shortList23.clone();
        java.util.stream.Stream<java.lang.Short> shortStream25 = shortList23.parallelStream();
        shortList23.trimToSize();
        shortList23.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray45 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList46 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46,
            intArray45);
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList51 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList51,
            booleanArray50);
        java.util.Iterator<java.lang.Boolean> booleanItor53 = booleanList51.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream54 = booleanList51.stream();
        boolean boolean55 = intList46.retainAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        boolean boolean56 = shortList23.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        java.lang.Boolean[] booleanArray58 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList59 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList59,
            booleanArray58);
        java.util.ListIterator<java.lang.Boolean> booleanItor62 = booleanList59.listIterator((int) (short) 1);
        boolean boolean63 = shortList23.containsAll((java.util.Collection<java.lang.Boolean>) booleanList59);
        java.util.stream.Stream<java.lang.Boolean> booleanStream64 = booleanList59.stream();
        boolean boolean65 = booleanList59.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList66 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long67 = floatList66.getShortForm();
        java.lang.String[] strArray69 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70,
            strArray69);
        int int72 = strList70.size();
        java.lang.Boolean[] booleanArray75 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList76 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList76,
            booleanArray75);
        boolean boolean79 = booleanList76.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream80 = booleanList76.stream();
        boolean boolean81 = strList70.containsAll((java.util.Collection<java.lang.Boolean>) booleanList76);
        boolean boolean82 = floatList66.containsAll((java.util.Collection<java.lang.Boolean>) booleanList76);
        java.util.Spliterator<java.lang.Float> floatSpliterator83 = floatList66.spliterator();
        esa.mo.nmf.NMFException nMFException85 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray86 = nMFException85.getSuppressed();
        int int87 = floatList66.lastIndexOf((java.lang.Object) throwableArray86);
        org.ccsds.moims.mo.mal.structures.Element element88 = floatList66.createElement();
        int int89 = booleanList59.lastIndexOf((java.lang.Object) element88);
        boolean boolean90 = shortList6.containsAll((java.util.Collection<java.lang.Boolean>) booleanList59);
        int int91 = integerList1.indexOf((java.lang.Object) boolean90);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265077L + "'", long2.equals(281475010265077L));
        org.junit.Assert.assertNotNull(intStream3);
        org.junit.Assert.assertNotNull(intItor4);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(shortSpliterator8);
        org.junit.Assert.assertNotNull(longStream11);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanItor17);
        org.junit.Assert.assertNotNull(booleanStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(uOctet20);
        org.junit.Assert.assertNotNull(uShort21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(shortStream25);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanItor53);
        org.junit.Assert.assertNotNull(booleanStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(booleanItor62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(booleanStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 281475010265084L + "'", long67.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(booleanStream80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(floatSpliterator83);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(element88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.parallelStream();
        shortList0.trimToSize();
        shortList0.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray22 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList23 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23,
            intArray22);
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList28 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList28,
            booleanArray27);
        java.util.Iterator<java.lang.Boolean> booleanItor30 = booleanList28.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream31 = booleanList28.stream();
        boolean boolean32 = intList23.retainAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        boolean boolean33 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36,
            booleanArray35);
        java.util.ListIterator<java.lang.Boolean> booleanItor39 = booleanList36.listIterator((int) (short) 1);
        boolean boolean40 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList36);
        org.ccsds.moims.mo.mal.structures.FloatList floatList41 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long42 = floatList41.getShortForm();
        java.lang.String[] strArray44 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45,
            strArray44);
        int int47 = strList45.size();
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList51 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList51,
            booleanArray50);
        boolean boolean54 = booleanList51.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream55 = booleanList51.stream();
        boolean boolean56 = strList45.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        boolean boolean57 = floatList41.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        java.util.Spliterator<java.lang.Float> floatSpliterator58 = floatList41.spliterator();
        esa.mo.nmf.NMFException nMFException60 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray61 = nMFException60.getSuppressed();
        int int62 = floatList41.lastIndexOf((java.lang.Object) throwableArray61);
        org.ccsds.moims.mo.mal.structures.LongList longList63 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int64 = floatList41.lastIndexOf((java.lang.Object) longList63);
        org.ccsds.moims.mo.mal.structures.Time time65 = new org.ccsds.moims.mo.mal.structures.Time();
        org.ccsds.moims.mo.mal.structures.Element element66 = time65.createElement();
        boolean boolean67 = longList63.equals((java.lang.Object) time65);
        boolean boolean68 = shortList0.remove((java.lang.Object) time65);
        org.ccsds.moims.mo.mal.structures.Element element69 = shortList0.createElement();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanItor30);
        org.junit.Assert.assertNotNull(booleanStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 281475010265084L + "'", long42.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(booleanStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(floatSpliterator58);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(element66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(element69);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.parallelStream();
        shortList0.trimToSize();
        shortList0.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray22 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList23 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23,
            intArray22);
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList28 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList28,
            booleanArray27);
        java.util.Iterator<java.lang.Boolean> booleanItor30 = booleanList28.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream31 = booleanList28.stream();
        boolean boolean32 = intList23.retainAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        boolean boolean33 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36,
            booleanArray35);
        java.util.ListIterator<java.lang.Boolean> booleanItor39 = booleanList36.listIterator((int) (short) 1);
        boolean boolean40 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList36);
        org.ccsds.moims.mo.mal.structures.FloatList floatList41 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long42 = floatList41.getShortForm();
        java.lang.String[] strArray44 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45,
            strArray44);
        int int47 = strList45.size();
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList51 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList51,
            booleanArray50);
        boolean boolean54 = booleanList51.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream55 = booleanList51.stream();
        boolean boolean56 = strList45.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        boolean boolean57 = floatList41.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        java.util.Spliterator<java.lang.Float> floatSpliterator58 = floatList41.spliterator();
        esa.mo.nmf.NMFException nMFException60 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray61 = nMFException60.getSuppressed();
        int int62 = floatList41.lastIndexOf((java.lang.Object) throwableArray61);
        org.ccsds.moims.mo.mal.structures.LongList longList63 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int64 = floatList41.lastIndexOf((java.lang.Object) longList63);
        org.ccsds.moims.mo.mal.structures.Time time65 = new org.ccsds.moims.mo.mal.structures.Time();
        org.ccsds.moims.mo.mal.structures.Element element66 = time65.createElement();
        boolean boolean67 = longList63.equals((java.lang.Object) time65);
        boolean boolean68 = shortList0.remove((java.lang.Object) time65);
        java.util.ListIterator<java.lang.Short> shortItor69 = shortList0.listIterator();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanItor30);
        org.junit.Assert.assertNotNull(booleanStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 281475010265084L + "'", long42.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(booleanStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(floatSpliterator58);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(element66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(shortItor69);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList(14);
        java.lang.Integer int2 = uRIList1.getTypeShortForm();
        java.lang.Long long3 = uRIList1.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uRIList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRIList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = uRIList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.FloatList floatList7 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long8 = floatList7.getShortForm();
        java.lang.String[] strArray10 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11,
            strArray10);
        int int13 = strList11.size();
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17,
            booleanArray16);
        boolean boolean20 = booleanList17.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream21 = booleanList17.stream();
        boolean boolean22 = strList11.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        boolean boolean23 = floatList7.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        org.ccsds.moims.mo.mal.structures.URI uRI24 = new org.ccsds.moims.mo.mal.structures.URI();
        int int25 = floatList7.lastIndexOf((java.lang.Object) uRI24);
        floatList7.trimToSize();
        floatList7.add((int) (short) 0, (java.lang.Float) (-1.0f));
        boolean boolean30 = uRIList1.contains((java.lang.Object) (-1.0f));
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = uRIList1.getAreaNumber();
        uRIList1.ensureCapacity((-13));
        org.ccsds.moims.mo.mal.structures.URI uRI36 = new org.ccsds.moims.mo.mal.structures.URI("100.0");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet37 = uRI36.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort38 = uRI36.getAreaNumber();
        java.lang.String str39 = uRI36.getValue();
        java.lang.Byte[] byteArray44 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList45 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList45,
            byteArray44);
        boolean boolean48 = byteList45.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj49 = byteList45.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream50 = byteList45.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList52 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int53 = byteList45.indexOf((java.lang.Object) stringList52);
        byte[] byteArray57 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob58 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray57);
        int int59 = blob58.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob60 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean61 = blob58.equals((java.lang.Object) blob60);
        boolean boolean62 = stringList52.remove((java.lang.Object) blob60);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF63 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean64 = stringList52.equals((java.lang.Object) mCServicesProviderNMF63);
        java.util.stream.Stream<java.lang.String> strStream65 = stringList52.parallelStream();
        java.lang.Long[] longArray70 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList71 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList71,
            longArray70);
        java.lang.Object obj73 = null;
        boolean boolean74 = longList71.contains(obj73);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger76 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean77 = longList71.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor78 = longList71.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort79 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean80 = longList71.remove((java.lang.Object) uShort79);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList81 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int82 = uShortList81.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor83 = uShortList81.iterator();
        java.lang.Object[] objArray84 = uShortList81.toArray();
        uShortList81.clear();
        uShortList81.clear();
        boolean boolean87 = uShortList81.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor88 = uShortList81.iterator();
        boolean boolean89 = longList71.contains((java.lang.Object) uShortList81);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList90 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort91 = booleanList90.getAreaNumber();
        boolean boolean92 = longList71.retainAll((java.util.Collection<java.lang.Boolean>) booleanList90);
        java.lang.Integer int93 = booleanList90.getTypeShortForm();
        boolean boolean95 = booleanList90.add((java.lang.Boolean) true);
        boolean boolean96 = stringList52.retainAll((java.util.Collection<java.lang.Boolean>) booleanList90);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet97 = booleanList90.getAreaVersion();
        boolean boolean98 = uRI36.equals((java.lang.Object) uOctet97);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI99 = uRIList1.set((-15), uRI36);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -15");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281475010265070L + "'", long3.equals(281475010265070L));
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265084L + "'", long8.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(uOctet37);
        org.junit.Assert.assertNotNull(uShort38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "100.0" + "'", str39.equals("100.0"));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(byteStream50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strStream65);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(longItor78);
        org.junit.Assert.assertNotNull(uShort79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-10) + "'", int82.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor83);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(uShortItor88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(uShort91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-2) + "'", int93.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(uOctet97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList0.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor4 = uShortList0.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF16
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF19 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF19
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF19
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF19
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCServicesProviderNMF19
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration24 = new esa.mo.nmf.MCRegistration(cOMServicesProvider5,
            parameterProviderServiceImpl10, aggregationProviderServiceImpl15, alertProviderServiceImpl18,
            actionProviderServiceImpl23);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl25 = mCRegistration24.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration24.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider27 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF41
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCServicesProviderNMF41
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration46 = new esa.mo.nmf.MCRegistration(cOMServicesProvider27,
            parameterProviderServiceImpl32, aggregationProviderServiceImpl37, alertProviderServiceImpl40,
            actionProviderServiceImpl45);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl50 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCServicesProviderNMF47
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl60 = mCServicesProviderNMF54
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray61 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl26,
                                                                                                                                                                                   actionProviderServiceImpl45,
                                                                                                                                                                                   actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl60};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray62 = uShortList0
            .toArray(actionInheritanceSkeletonArray61);
        uShortList0.ensureCapacity(18);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator65 = uShortList0.spliterator();
        uShortList0.ensureCapacity((int) (byte) 100);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uShortItor4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray61);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray62);
        org.junit.Assert.assertNotNull(uShortSpliterator65);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element1 = stringList0.createElement();
        boolean boolean2 = stringList0.isEmpty();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider3 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl6 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl7 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF9 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF9
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl11 = mCServicesProviderNMF9
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl12 = mCServicesProviderNMF9
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF9
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl16 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF17 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl18 = mCServicesProviderNMF17
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl19 = mCServicesProviderNMF17
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl20 = mCServicesProviderNMF17
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCServicesProviderNMF17
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration22 = new esa.mo.nmf.MCRegistration(cOMServicesProvider3,
            parameterProviderServiceImpl8, aggregationProviderServiceImpl13, alertProviderServiceImpl16,
            actionProviderServiceImpl21);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl23 = mCRegistration22.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration22.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCRegistration22.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration22.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl27 = mCRegistration22.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl28 = mCRegistration22.alertService;
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[] alertHandlerArray29 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[]{alertProviderServiceImpl28};
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider30 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF31 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl34 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF36 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl37 = mCServicesProviderNMF36
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl38 = mCServicesProviderNMF36
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF36
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl40 = mCServicesProviderNMF36
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl43 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF44 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl45 = mCServicesProviderNMF44
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl46 = mCServicesProviderNMF44
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl47 = mCServicesProviderNMF44
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl48 = mCServicesProviderNMF44
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration49 = new esa.mo.nmf.MCRegistration(cOMServicesProvider30,
            parameterProviderServiceImpl35, aggregationProviderServiceImpl40, alertProviderServiceImpl43,
            actionProviderServiceImpl48);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl50 = mCRegistration49.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl51 = mCRegistration49.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl52 = mCRegistration49.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCRegistration49.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl54 = mCRegistration49.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl55 = mCRegistration49.alertService;
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[] alertHandlerArray56 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[]{alertProviderServiceImpl55};
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider57 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF58 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl59 = mCServicesProviderNMF58
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl60 = mCServicesProviderNMF58
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl61 = mCServicesProviderNMF58
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl62 = mCServicesProviderNMF58
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF63 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl64 = mCServicesProviderNMF63
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl65 = mCServicesProviderNMF63
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl66 = mCServicesProviderNMF63
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl67 = mCServicesProviderNMF63
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF68 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl69 = mCServicesProviderNMF68
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl70 = mCServicesProviderNMF68
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF71 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl72 = mCServicesProviderNMF71
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl73 = mCServicesProviderNMF71
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl74 = mCServicesProviderNMF71
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl75 = mCServicesProviderNMF71
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration76 = new esa.mo.nmf.MCRegistration(cOMServicesProvider57,
            parameterProviderServiceImpl62, aggregationProviderServiceImpl67, alertProviderServiceImpl70,
            actionProviderServiceImpl75);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl77 = mCRegistration76.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl78 = mCRegistration76.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl79 = mCRegistration76.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl80 = mCRegistration76.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl81 = mCRegistration76.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl82 = mCRegistration76.alertService;
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[] alertHandlerArray83 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[]{alertProviderServiceImpl82};
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][] alertHandlerArray84 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][]{alertHandlerArray29,
                                                                                                                                              alertHandlerArray56,
                                                                                                                                              alertHandlerArray83};
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][] alertHandlerArray85 = stringList0.toArray(
            alertHandlerArray84);
        java.lang.Integer int86 = stringList0.getTypeShortForm();
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl6);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl7);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl11);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl16);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl18);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl19);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl27);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl28);
        org.junit.Assert.assertNotNull(alertHandlerArray29);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl34);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl37);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl43);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl45);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl46);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl47);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl48);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl50);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl51);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl54);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl55);
        org.junit.Assert.assertNotNull(alertHandlerArray56);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl59);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl60);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl61);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl62);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl64);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl65);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl66);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl69);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl70);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl72);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl73);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl74);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl75);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl77);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl78);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl79);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl80);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl81);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl82);
        org.junit.Assert.assertNotNull(alertHandlerArray83);
        org.junit.Assert.assertNotNull(alertHandlerArray84);
        org.junit.Assert.assertNotNull(alertHandlerArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-15) + "'", int86.equals((-15)));
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
        java.util.Spliterator<java.lang.String> strSpliterator1 = stringList0.spliterator();
        stringList0.trimToSize();
        java.lang.Integer int3 = stringList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList4 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int5 = uShortList4.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor6 = uShortList4.iterator();
        java.lang.Object[] objArray7 = uShortList4.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = uShortList4.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = org.ccsds.moims.mo.mal.structures.UShortList.AREA_SHORT_FORM;
        boolean boolean10 = uShortList4.add(uShort9);
        java.lang.String str11 = uShortList4.toString();
        java.lang.Object obj12 = uShortList4.clone();
        org.ccsds.moims.mo.mal.structures.ShortList shortList13 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray15 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16,
            strArray15);
        int int18 = strList16.size();
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList22 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList22,
            booleanArray21);
        boolean boolean25 = booleanList22.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream26 = booleanList22.stream();
        boolean boolean27 = strList16.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        boolean boolean28 = shortList13.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        boolean boolean30 = booleanList22.contains((java.lang.Object) 3);
        boolean boolean31 = uShortList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        boolean boolean33 = booleanList22.add((java.lang.Boolean) true);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39,
            byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj43 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream44 = byteList39.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList46 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int47 = byteList39.indexOf((java.lang.Object) stringList46);
        byte[] byteArray51 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob52 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray51);
        int int53 = blob52.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob54 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean55 = blob52.equals((java.lang.Object) blob54);
        boolean boolean56 = stringList46.remove((java.lang.Object) blob54);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF57 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean58 = stringList46.equals((java.lang.Object) mCServicesProviderNMF57);
        java.util.stream.Stream<java.lang.String> strStream59 = stringList46.parallelStream();
        java.lang.Long[] longArray64 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList65 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList65,
            longArray64);
        java.lang.Object obj67 = null;
        boolean boolean68 = longList65.contains(obj67);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger70 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean71 = longList65.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor72 = longList65.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort73 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean74 = longList65.remove((java.lang.Object) uShort73);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList75 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int76 = uShortList75.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor77 = uShortList75.iterator();
        java.lang.Object[] objArray78 = uShortList75.toArray();
        uShortList75.clear();
        uShortList75.clear();
        boolean boolean81 = uShortList75.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor82 = uShortList75.iterator();
        boolean boolean83 = longList65.contains((java.lang.Object) uShortList75);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList84 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort85 = booleanList84.getAreaNumber();
        boolean boolean86 = longList65.retainAll((java.util.Collection<java.lang.Boolean>) booleanList84);
        java.lang.Integer int87 = booleanList84.getTypeShortForm();
        boolean boolean89 = booleanList84.add((java.lang.Boolean) true);
        boolean boolean90 = stringList46.retainAll((java.util.Collection<java.lang.Boolean>) booleanList84);
        org.ccsds.moims.mo.mal.structures.UShort uShort91 = booleanList84.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet92 = booleanList84.getAreaVersion();
        boolean boolean93 = booleanList22.addAll((java.util.Collection<java.lang.Boolean>) booleanList84);
        booleanList22.ensureCapacity(0);
        boolean boolean96 = stringList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        booleanList22.trimToSize();
        org.junit.Assert.assertNotNull(strSpliterator1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-15) + "'", int3.equals((-15)));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-10) + "'", int5.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[1]" + "'", str11.equals("[1]"));
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(byteStream44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(longItor72);
        org.junit.Assert.assertNotNull(uShort73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-10) + "'", int76.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(uShortItor82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(uShort85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-2) + "'", int87.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(uShort91);
        org.junit.Assert.assertNotNull(uOctet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        org.ccsds.moims.mo.mal.structures.ULong uLong0 = new org.ccsds.moims.mo.mal.structures.ULong();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = uLong0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uLong0.getServiceNumber();
        java.lang.Long long3 = uLong0.getShortForm();
        org.ccsds.moims.mo.mal.structures.FloatList floatList4 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long5 = floatList4.getShortForm();
        java.lang.String[] strArray7 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        int int10 = strList8.size();
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14,
            booleanArray13);
        boolean boolean17 = booleanList14.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream18 = booleanList14.stream();
        boolean boolean19 = strList8.containsAll((java.util.Collection<java.lang.Boolean>) booleanList14);
        boolean boolean20 = floatList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList14);
        java.util.ListIterator<java.lang.Float> floatItor21 = floatList4.listIterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet22 = floatList4.getAreaVersion();
        boolean boolean23 = uLong0.equals((java.lang.Object) uOctet22);
        java.lang.Long long24 = uLong0.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element25 = uLong0.createElement();
        java.math.BigInteger bigInteger26 = uLong0.getValue();
        org.ccsds.moims.mo.mal.structures.ULong uLong27 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger26);
        org.ccsds.moims.mo.mal.structures.FloatList floatList28 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long29 = floatList28.getShortForm();
        java.lang.String[] strArray31 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32,
            strArray31);
        int int34 = strList32.size();
        java.lang.Boolean[] booleanArray37 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList38 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList38,
            booleanArray37);
        boolean boolean41 = booleanList38.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream42 = booleanList38.stream();
        boolean boolean43 = strList32.containsAll((java.util.Collection<java.lang.Boolean>) booleanList38);
        boolean boolean44 = floatList28.containsAll((java.util.Collection<java.lang.Boolean>) booleanList38);
        java.util.Spliterator<java.lang.Float> floatSpliterator45 = floatList28.spliterator();
        esa.mo.nmf.NMFException nMFException47 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray48 = nMFException47.getSuppressed();
        int int49 = floatList28.lastIndexOf((java.lang.Object) throwableArray48);
        org.ccsds.moims.mo.mal.structures.LongList longList50 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int51 = floatList28.lastIndexOf((java.lang.Object) longList50);
        org.ccsds.moims.mo.mal.structures.UShort uShort52 = longList50.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = longList50.getServiceNumber();
        boolean boolean54 = uLong27.equals((java.lang.Object) uShort53);
        java.lang.Integer int55 = uLong27.getTypeShortForm();
        java.math.BigInteger bigInteger56 = uLong27.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = uLong27.getAreaNumber();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487886L + "'", long3.equals(281474993487886L));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265084L + "'", long5.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(floatItor21);
        org.junit.Assert.assertNotNull(uOctet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 281474993487886L + "'", long24.equals(281474993487886L));
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(bigInteger26);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 281475010265084L + "'", long29.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatSpliterator45);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uShort52);
        org.junit.Assert.assertNotNull(uShort53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 14 + "'", int55.equals(14));
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(uShort57);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        int int26 = stringList12.size();
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][][] alertHandlerArray27 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][][]{};
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][][] alertHandlerArray28 = stringList12.toArray(
            alertHandlerArray27);
        org.ccsds.moims.mo.mal.structures.UShort uShort29 = stringList12.getAreaNumber();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(alertHandlerArray27);
        org.junit.Assert.assertNotNull(alertHandlerArray28);
        org.junit.Assert.assertNotNull(uShort29);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element1 = doubleList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element3 = doubleList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList0.getServiceNumber();
        doubleList0.ensureCapacity(9);
        doubleList0.ensureCapacity((int) '#');
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider9 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF10 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl11 = mCServicesProviderNMF10
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl12 = mCServicesProviderNMF10
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF10
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl14 = mCServicesProviderNMF10
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF15 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl16 = mCServicesProviderNMF15
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl17 = mCServicesProviderNMF15
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl18 = mCServicesProviderNMF15
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl19 = mCServicesProviderNMF15
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF20 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCServicesProviderNMF20
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF20
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl24 = mCServicesProviderNMF23
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCServicesProviderNMF23
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl26 = mCServicesProviderNMF23
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl27 = mCServicesProviderNMF23
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration28 = new esa.mo.nmf.MCRegistration(cOMServicesProvider9,
            parameterProviderServiceImpl14, aggregationProviderServiceImpl19, alertProviderServiceImpl22,
            actionProviderServiceImpl27);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCRegistration28.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl30 = mCRegistration28.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider31 = mCRegistration28.comServices;
        int int32 = doubleList0.indexOf((java.lang.Object) cOMServicesProvider31);
        org.ccsds.moims.mo.mal.structures.ShortList shortList33 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj34 = shortList33.clone();
        java.util.stream.Stream<java.lang.Short> shortStream35 = shortList33.parallelStream();
        shortList33.trimToSize();
        shortList33.ensureCapacity((int) ' ');
        java.lang.Object[] objArray39 = shortList33.toArray();
        java.lang.Long long40 = shortList33.getShortForm();
        boolean boolean41 = shortList33.isEmpty();
        org.ccsds.moims.mo.mal.structures.LongList longList43 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort44 = longList43.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList45 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element46 = stringList45.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList47 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        boolean boolean48 = stringList45.retainAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        boolean boolean49 = longList43.retainAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        int int50 = shortList33.lastIndexOf((java.lang.Object) booleanList47);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList54 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList54,
            byteArray53);
        boolean boolean56 = byteList54.isEmpty();
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList60 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList60,
            booleanArray59);
        boolean boolean63 = booleanList60.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream64 = booleanList60.stream();
        boolean boolean65 = byteList54.removeAll((java.util.Collection<java.lang.Boolean>) booleanList60);
        java.lang.Float[] floatArray70 = new java.lang.Float[]{10.0f, 0.0f, (-1.0f), (-1.0f)};
        java.util.ArrayList<java.lang.Float> floatList71 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList71,
            floatArray70);
        java.util.ListIterator<java.lang.Float> floatItor73 = floatList71.listIterator();
        boolean boolean74 = byteList54.contains((java.lang.Object) floatList71);
        java.util.Spliterator<java.lang.Byte> byteSpliterator75 = byteList54.spliterator();
        int int77 = byteList54.lastIndexOf((java.lang.Object) 1L);
        boolean boolean78 = byteList54.isEmpty();
        java.util.Spliterator<java.lang.Byte> byteSpliterator79 = byteList54.spliterator();
        int int80 = shortList33.indexOf((java.lang.Object) byteSpliterator79);
        boolean boolean81 = doubleList0.contains((java.lang.Object) shortList33);
        int int82 = doubleList0.size();
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl11);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl14);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl16);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl17);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl18);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl19);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl24);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl26);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl27);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl30);
        org.junit.Assert.assertNull(cOMServicesProvider31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(shortStream35);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 281475010265079L + "'", long40.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(uShort44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(floatItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(byteSpliterator75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(byteSpliterator79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl27 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl28 = mCRegistration19.aggregationService;
        org.ccsds.moims.mo.mal.structures.ShortList shortList29 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = shortList29.getAreaNumber();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList31 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) shortList29);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl27);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl28);
        org.junit.Assert.assertNotNull(uShort30);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!", ""};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.stream();
        java.util.ListIterator<java.lang.String> strItor6 = strList3.listIterator();
        java.lang.Byte[] byteArray11 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12,
            byteArray11);
        boolean boolean15 = byteList12.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj16 = byteList12.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream17 = byteList12.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList19 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int20 = byteList12.indexOf((java.lang.Object) stringList19);
        byte[] byteArray24 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob25 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray24);
        int int26 = blob25.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob27 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean28 = blob25.equals((java.lang.Object) blob27);
        boolean boolean29 = stringList19.remove((java.lang.Object) blob27);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF30 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean31 = stringList19.equals((java.lang.Object) mCServicesProviderNMF30);
        java.util.ListIterator<java.lang.String> strItor32 = stringList19.listIterator();
        boolean boolean34 = stringList19.add("esa.mo.nmf.NMFException: 14.0");
        java.lang.Long long35 = stringList19.getShortForm();
        boolean boolean36 = strList3.equals((java.lang.Object) long35);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(byteStream17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281475010265073L + "'", long35.equals(281475010265073L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
        java.util.Spliterator<java.lang.String> strSpliterator1 = stringList0.spliterator();
        stringList0.trimToSize();
        java.lang.Integer int3 = stringList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList4 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int5 = uShortList4.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor6 = uShortList4.iterator();
        java.lang.Object[] objArray7 = uShortList4.toArray();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = uShortList4.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = org.ccsds.moims.mo.mal.structures.UShortList.AREA_SHORT_FORM;
        boolean boolean10 = uShortList4.add(uShort9);
        java.lang.String str11 = uShortList4.toString();
        java.lang.Object obj12 = uShortList4.clone();
        org.ccsds.moims.mo.mal.structures.ShortList shortList13 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray15 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16,
            strArray15);
        int int18 = strList16.size();
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList22 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList22,
            booleanArray21);
        boolean boolean25 = booleanList22.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream26 = booleanList22.stream();
        boolean boolean27 = strList16.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        boolean boolean28 = shortList13.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        boolean boolean30 = booleanList22.contains((java.lang.Object) 3);
        boolean boolean31 = uShortList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        boolean boolean33 = booleanList22.add((java.lang.Boolean) true);
        java.lang.Byte[] byteArray38 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList39,
            byteArray38);
        boolean boolean42 = byteList39.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj43 = byteList39.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream44 = byteList39.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList46 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int47 = byteList39.indexOf((java.lang.Object) stringList46);
        byte[] byteArray51 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob52 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray51);
        int int53 = blob52.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob54 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean55 = blob52.equals((java.lang.Object) blob54);
        boolean boolean56 = stringList46.remove((java.lang.Object) blob54);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF57 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean58 = stringList46.equals((java.lang.Object) mCServicesProviderNMF57);
        java.util.stream.Stream<java.lang.String> strStream59 = stringList46.parallelStream();
        java.lang.Long[] longArray64 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList65 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList65,
            longArray64);
        java.lang.Object obj67 = null;
        boolean boolean68 = longList65.contains(obj67);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger70 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean71 = longList65.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor72 = longList65.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort73 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean74 = longList65.remove((java.lang.Object) uShort73);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList75 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int76 = uShortList75.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor77 = uShortList75.iterator();
        java.lang.Object[] objArray78 = uShortList75.toArray();
        uShortList75.clear();
        uShortList75.clear();
        boolean boolean81 = uShortList75.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor82 = uShortList75.iterator();
        boolean boolean83 = longList65.contains((java.lang.Object) uShortList75);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList84 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort85 = booleanList84.getAreaNumber();
        boolean boolean86 = longList65.retainAll((java.util.Collection<java.lang.Boolean>) booleanList84);
        java.lang.Integer int87 = booleanList84.getTypeShortForm();
        boolean boolean89 = booleanList84.add((java.lang.Boolean) true);
        boolean boolean90 = stringList46.retainAll((java.util.Collection<java.lang.Boolean>) booleanList84);
        org.ccsds.moims.mo.mal.structures.UShort uShort91 = booleanList84.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet92 = booleanList84.getAreaVersion();
        boolean boolean93 = booleanList22.addAll((java.util.Collection<java.lang.Boolean>) booleanList84);
        booleanList22.ensureCapacity(0);
        boolean boolean96 = stringList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList22);
        try {
            java.util.ListIterator<java.lang.Boolean> booleanItor98 = booleanList22.listIterator(100);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strSpliterator1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-15) + "'", int3.equals((-15)));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-10) + "'", int5.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[1]" + "'", str11.equals("[1]"));
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(byteStream44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(longItor72);
        org.junit.Assert.assertNotNull(uShort73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-10) + "'", int76.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(uShortItor82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(uShort85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-2) + "'", int87.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(uShort91);
        org.junit.Assert.assertNotNull(uOctet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl26 = mCRegistration19.alertService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNull(cOMServicesProvider25);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl26);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException4 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray5 = nMFException4.getSuppressed();
        java.lang.Throwable[] throwableArray6 = nMFException4.getSuppressed();
        esa.mo.nmf.NMFException nMFException7 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException4);
        java.lang.String str8 = nMFException4.toString();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException4);
        java.lang.Throwable[] throwableArray10 = nMFException4.getSuppressed();
        java.lang.Throwable[] throwableArray11 = nMFException4.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str8.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode21 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration19.setMode(registrationMode21);
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl23 = mCRegistration19.aggregationService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider24 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF25 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCServicesProviderNMF25
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl27 = mCServicesProviderNMF25
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl28 = mCServicesProviderNMF25
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF25
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF30 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl31 = mCServicesProviderNMF30
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl32 = mCServicesProviderNMF30
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF30
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl34 = mCServicesProviderNMF30
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF35 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCServicesProviderNMF35
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl37 = mCServicesProviderNMF35
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl40 = mCServicesProviderNMF38
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl41 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl42 = mCServicesProviderNMF38
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration43 = new esa.mo.nmf.MCRegistration(cOMServicesProvider24,
            parameterProviderServiceImpl29, aggregationProviderServiceImpl34, alertProviderServiceImpl37,
            actionProviderServiceImpl42);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider44 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF45 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl46 = mCServicesProviderNMF45
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl47 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl48 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl49 = mCServicesProviderNMF45
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF50 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl52 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl53 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl54 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF55
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF58 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl59 = mCServicesProviderNMF58
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl60 = mCServicesProviderNMF58
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl61 = mCServicesProviderNMF58
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl62 = mCServicesProviderNMF58
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration63 = new esa.mo.nmf.MCRegistration(cOMServicesProvider44,
            parameterProviderServiceImpl49, aggregationProviderServiceImpl54, alertProviderServiceImpl57,
            actionProviderServiceImpl62);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl64 = mCRegistration63.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode65 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration63.setMode(registrationMode65);
        mCRegistration43.setMode(registrationMode65);
        mCRegistration19.setMode(registrationMode65);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl69 = mCRegistration19.parameterService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertTrue("'" + registrationMode21 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode21.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl23);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl27);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl28);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl31);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl34);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl40);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl41);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl42);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl46);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl47);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl48);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl49);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl52);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl53);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl54);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl59);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl60);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl61);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl62);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl64);
        org.junit.Assert.assertTrue("'" + registrationMode65 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode65.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl69);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element17 = shortList0.createElement();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = shortList0.indexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList22 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str23 = doubleList22.toString();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        java.util.ListIterator<java.lang.Boolean> booleanItor29 = booleanList26.listIterator((int) (short) 1);
        boolean boolean30 = doubleList22.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34,
            byteArray33);
        boolean boolean36 = byteList34.isEmpty();
        int int37 = byteList34.size();
        int int38 = booleanList26.indexOf((java.lang.Object) byteList34);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        java.util.Iterator<java.lang.Boolean> booleanItor44 = booleanList42.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream45 = booleanList42.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor46 = booleanList42.iterator();
        boolean boolean47 = byteList34.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = shortList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        org.ccsds.moims.mo.mal.structures.Element element49 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList50 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int51 = booleanList50.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element52 = booleanList50.createElement();
        boolean boolean53 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        org.ccsds.moims.mo.mal.structures.OctetList octetList54 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort55 = octetList54.getServiceNumber();
        boolean boolean56 = octetList54.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = octetList54.getServiceNumber();
        java.lang.Long long58 = octetList54.getShortForm();
        boolean boolean59 = shortList0.contains((java.lang.Object) octetList54);
        java.util.stream.Stream<java.lang.Short> shortStream60 = shortList0.stream();
        java.lang.Object obj61 = shortList0.clone();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "[]" + "'", str23.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanItor44);
        org.junit.Assert.assertNotNull(booleanStream45);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51.equals((-2)));
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(uShort55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(uShort57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 281475010265081L + "'", long58.equals(281475010265081L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shortStream60);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        int int7 = byteList3.indexOf((java.lang.Object) 'a');
        int int9 = byteList3.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList12 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList12,
            booleanArray11);
        java.util.ListIterator<java.lang.Boolean> booleanItor15 = booleanList12.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream16 = booleanList12.parallelStream();
        boolean boolean18 = booleanList12.add((java.lang.Boolean) false);
        boolean boolean19 = byteList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList12);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList20 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj21 = uShortList20.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream22 = uShortList20
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor23 = uShortList20.iterator();
        boolean boolean24 = byteList3.equals((java.lang.Object) uShortItor23);
        org.ccsds.moims.mo.mal.structures.ShortList shortList25 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj26 = shortList25.clone();
        boolean boolean27 = byteList3.equals((java.lang.Object) shortList25);
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException("-1");
        boolean boolean30 = byteList3.equals((java.lang.Object) nMFException29);
        byteList3.trimToSize();
        java.util.stream.Stream<java.lang.Byte> byteStream32 = byteList3.stream();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanItor15);
        org.junit.Assert.assertNotNull(booleanStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(uShortStream22);
        org.junit.Assert.assertNotNull(uShortItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteStream32);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.Element element2 = uRIList1.createElement();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF3 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF3
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF3
            .getAlertService();
        boolean boolean6 = uRIList1.equals((java.lang.Object) mCServicesProviderNMF3);
        java.lang.Double[] doubleArray10 = new java.lang.Double[]{1.0d, 0.0d, 10.0d};
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11,
            doubleArray10);
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList16 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList16,
            booleanArray15);
        boolean boolean19 = booleanList16.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream20 = booleanList16.stream();
        int int21 = doubleList11.lastIndexOf((java.lang.Object) booleanStream20);
        int int23 = doubleList11.lastIndexOf((java.lang.Object) 10.0d);
        java.util.Iterator<java.lang.Double> doubleItor24 = doubleList11.iterator();
        doubleList11.ensureCapacity(7);
        java.util.stream.Stream<java.lang.Double> doubleStream27 = doubleList11.stream();
        int int28 = uRIList1.lastIndexOf((java.lang.Object) doubleStream27);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanStream20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(doubleItor24);
        org.junit.Assert.assertNotNull(doubleStream27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        java.lang.Double[] doubleArray3 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList4 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList4,
            doubleArray3);
        java.util.Spliterator<java.lang.Double> doubleSpliterator6 = doubleList4.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor7 = doubleList4.iterator();
        boolean boolean8 = stringList1.equals((java.lang.Object) doubleItor7);
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj10 = shortList9.clone();
        java.lang.String str11 = shortList9.toString();
        java.util.Spliterator<java.lang.Short> shortSpliterator12 = shortList9.spliterator();
        boolean boolean13 = stringList1.remove((java.lang.Object) shortSpliterator12);
        org.ccsds.moims.mo.mal.structures.OctetList octetList14 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.Element element15 = octetList14.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = octetList14.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = octetList14.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = octetList14.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = octetList14.getServiceNumber();
        java.lang.Long long20 = octetList14.getShortForm();
        org.ccsds.moims.mo.mal.structures.ShortList shortList21 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj22 = shortList21.clone();
        java.util.stream.Stream<java.lang.Short> shortStream23 = shortList21.parallelStream();
        shortList21.trimToSize();
        shortList21.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray43 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList44 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44,
            intArray43);
        java.lang.Boolean[] booleanArray48 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList49 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList49,
            booleanArray48);
        java.util.Iterator<java.lang.Boolean> booleanItor51 = booleanList49.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream52 = booleanList49.stream();
        boolean boolean53 = intList44.retainAll((java.util.Collection<java.lang.Boolean>) booleanList49);
        boolean boolean54 = shortList21.containsAll((java.util.Collection<java.lang.Boolean>) booleanList49);
        java.lang.Boolean[] booleanArray56 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList57 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList57,
            booleanArray56);
        java.util.ListIterator<java.lang.Boolean> booleanItor60 = booleanList57.listIterator((int) (short) 1);
        boolean boolean61 = shortList21.containsAll((java.util.Collection<java.lang.Boolean>) booleanList57);
        java.util.stream.Stream<java.lang.Boolean> booleanStream62 = booleanList57.stream();
        boolean boolean63 = booleanList57.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList64 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long65 = floatList64.getShortForm();
        java.lang.String[] strArray67 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68,
            strArray67);
        int int70 = strList68.size();
        java.lang.Boolean[] booleanArray73 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList74 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList74,
            booleanArray73);
        boolean boolean77 = booleanList74.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream78 = booleanList74.stream();
        boolean boolean79 = strList68.containsAll((java.util.Collection<java.lang.Boolean>) booleanList74);
        boolean boolean80 = floatList64.containsAll((java.util.Collection<java.lang.Boolean>) booleanList74);
        java.util.Spliterator<java.lang.Float> floatSpliterator81 = floatList64.spliterator();
        esa.mo.nmf.NMFException nMFException83 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray84 = nMFException83.getSuppressed();
        int int85 = floatList64.lastIndexOf((java.lang.Object) throwableArray84);
        org.ccsds.moims.mo.mal.structures.Element element86 = floatList64.createElement();
        int int87 = booleanList57.lastIndexOf((java.lang.Object) element86);
        booleanList57.clear();
        boolean boolean89 = octetList14.removeAll((java.util.Collection<java.lang.Boolean>) booleanList57);
        boolean boolean90 = stringList1.contains((java.lang.Object) booleanList57);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator6);
        org.junit.Assert.assertNotNull(doubleItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]" + "'", str11.equals("[]"));
        org.junit.Assert.assertNotNull(shortSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 281475010265081L + "'", long20.equals(281475010265081L));
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(shortStream23);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(booleanItor51);
        org.junit.Assert.assertNotNull(booleanStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(booleanItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(booleanStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 281475010265084L + "'", long65.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(booleanStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(floatSpliterator81);
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(element86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.util.stream.Stream<java.lang.Double> doubleStream1 = doubleList0.stream();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = doubleList0.getAreaVersion();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider3 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl6 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl7 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF9 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF9
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl11 = mCServicesProviderNMF9
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl12 = mCServicesProviderNMF9
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF9
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl16 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF17 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl18 = mCServicesProviderNMF17
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl19 = mCServicesProviderNMF17
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl20 = mCServicesProviderNMF17
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCServicesProviderNMF17
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration22 = new esa.mo.nmf.MCRegistration(cOMServicesProvider3,
            parameterProviderServiceImpl8, aggregationProviderServiceImpl13, alertProviderServiceImpl16,
            actionProviderServiceImpl21);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration22.actionService;
        boolean boolean24 = doubleList0.equals((java.lang.Object) mCRegistration22);
        org.junit.Assert.assertNotNull(doubleStream1);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl6);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl7);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl11);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl16);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl18);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl19);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        int int26 = stringList12.size();
        org.ccsds.moims.mo.mal.structures.FloatList floatList27 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long28 = floatList27.getShortForm();
        floatList27.trimToSize();
        java.lang.String str30 = floatList27.toString();
        java.lang.Integer int31 = floatList27.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = floatList27.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = floatList27.getServiceNumber();
        boolean boolean34 = stringList12.remove((java.lang.Object) uShort33);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 281475010265084L + "'", long28.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "[]" + "'", str30.equals("[]"));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-4) + "'", int31.equals((-4)));
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        boolean boolean5 = uShortList0.equals((java.lang.Object) 1);
        java.lang.Byte[] byteArray10 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList11,
            byteArray10);
        java.util.Iterator<java.lang.Byte> byteItor13 = byteList11.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration15 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long16 = duration15.getShortForm();
        int int17 = byteList11.indexOf((java.lang.Object) long16);
        int int18 = uShortList0.lastIndexOf((java.lang.Object) byteList11);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24,
            byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 10);
        java.lang.String str28 = byteList24.toString();
        java.util.stream.Stream<java.lang.Byte> byteStream29 = byteList24.parallelStream();
        int int30 = byteList24.size();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray31 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean33 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList32, uRIArray31);
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList37 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList37,
            booleanArray36);
        java.util.Iterator<java.lang.Boolean> booleanItor39 = booleanList37.iterator();
        boolean boolean40 = uRIList32.retainAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        booleanList37.clear();
        boolean boolean42 = byteList24.removeAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        java.util.stream.Stream<java.lang.Boolean> booleanStream43 = booleanList37.stream();
        int int44 = uShortList0.lastIndexOf((java.lang.Object) booleanList37);
        java.util.ListIterator<java.lang.Boolean> booleanItor45 = booleanList37.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList47 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet48 = longList47.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = longList47.getAreaNumber();
        java.util.Spliterator<java.lang.Long> longSpliterator50 = longList47.spliterator();
        int int51 = booleanList37.lastIndexOf((java.lang.Object) longList47);
        org.ccsds.moims.mo.mal.structures.URIList uRIList53 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.Element element54 = uRIList53.createElement();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor55 = uRIList53.iterator();
        int int56 = longList47.lastIndexOf((java.lang.Object) uRIList53);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet57 = uRIList53.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList58 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long59 = floatList58.getShortForm();
        java.lang.String[] strArray61 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62,
            strArray61);
        int int64 = strList62.size();
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList68 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList68,
            booleanArray67);
        boolean boolean71 = booleanList68.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream72 = booleanList68.stream();
        boolean boolean73 = strList62.containsAll((java.util.Collection<java.lang.Boolean>) booleanList68);
        boolean boolean74 = floatList58.containsAll((java.util.Collection<java.lang.Boolean>) booleanList68);
        java.util.Spliterator<java.lang.Float> floatSpliterator75 = floatList58.spliterator();
        esa.mo.nmf.NMFException nMFException77 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray78 = nMFException77.getSuppressed();
        int int79 = floatList58.lastIndexOf((java.lang.Object) throwableArray78);
        org.ccsds.moims.mo.mal.structures.LongList longList80 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int81 = floatList58.lastIndexOf((java.lang.Object) longList80);
        org.ccsds.moims.mo.mal.structures.UShort uShort82 = longList80.getServiceNumber();
        boolean boolean83 = uRIList53.remove((java.lang.Object) uShort82);
        java.lang.Long long84 = uRIList53.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element85 = uRIList53.createElement();
        java.lang.Long long86 = uRIList53.getShortForm();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteItor13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281474993487875L + "'", long16.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str28.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertNotNull(uRIArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(booleanStream43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(booleanItor45);
        org.junit.Assert.assertNotNull(uOctet48);
        org.junit.Assert.assertNotNull(uShort49);
        org.junit.Assert.assertNotNull(longSpliterator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(uRIItor55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(uOctet57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 281475010265084L + "'", long59.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(booleanStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(floatSpliterator75);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(uShort82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 281475010265070L + "'", long84.equals(281475010265070L));
        org.junit.Assert.assertNotNull(element85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 281475010265070L + "'", long86.equals(281475010265070L));
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = identifier0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray2 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean4 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList3, uRIArray2);
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList8 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList8,
            booleanArray7);
        java.util.Iterator<java.lang.Boolean> booleanItor10 = booleanList8.iterator();
        boolean boolean11 = uRIList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList8);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean18 = booleanList15.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.stream();
        boolean boolean20 = uRIList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        uRIList3.ensureCapacity(5);
        boolean boolean23 = identifier0.equals((java.lang.Object) uRIList3);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor24 = uRIList3.listIterator();
        java.lang.String str25 = uRIList3.toString();
        org.ccsds.moims.mo.mal.structures.Union union27 = new org.ccsds.moims.mo.mal.structures.Union(
            (java.lang.Double) 100.0d);
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = union27.getAreaNumber();
        boolean boolean29 = uRIList3.equals((java.lang.Object) union27);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList30 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element31 = doubleList30.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = doubleList30.getServiceNumber();
        java.lang.Integer int33 = doubleList30.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort34 = doubleList30.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Union union36 = new org.ccsds.moims.mo.mal.structures.Union(
            (java.lang.Float) 100.0f);
        int int37 = doubleList30.indexOf((java.lang.Object) 100.0f);
        org.ccsds.moims.mo.mal.structures.ShortList shortList38 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray40 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41,
            strArray40);
        int int43 = strList41.size();
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList47 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList47,
            booleanArray46);
        boolean boolean50 = booleanList47.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream51 = booleanList47.stream();
        boolean boolean52 = strList41.containsAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        boolean boolean53 = shortList38.containsAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        java.util.stream.Stream<java.lang.Short> shortStream54 = shortList38.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element55 = shortList38.createElement();
        esa.mo.nmf.NMFException nMFException57 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray58 = nMFException57.getSuppressed();
        int int59 = shortList38.indexOf((java.lang.Object) throwableArray58);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList60 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str61 = doubleList60.toString();
        java.lang.Boolean[] booleanArray63 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList64 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList64,
            booleanArray63);
        java.util.ListIterator<java.lang.Boolean> booleanItor67 = booleanList64.listIterator((int) (short) 1);
        boolean boolean68 = doubleList60.containsAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        java.lang.Byte[] byteArray71 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList72 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList72,
            byteArray71);
        boolean boolean74 = byteList72.isEmpty();
        int int75 = byteList72.size();
        int int76 = booleanList64.indexOf((java.lang.Object) byteList72);
        java.lang.Boolean[] booleanArray79 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList80 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList80,
            booleanArray79);
        java.util.Iterator<java.lang.Boolean> booleanItor82 = booleanList80.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream83 = booleanList80.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor84 = booleanList80.iterator();
        boolean boolean85 = byteList72.removeAll((java.util.Collection<java.lang.Boolean>) booleanList80);
        boolean boolean86 = shortList38.removeAll((java.util.Collection<java.lang.Boolean>) booleanList80);
        boolean boolean87 = booleanList80.isEmpty();
        boolean boolean88 = doubleList30.remove((java.lang.Object) booleanList80);
        boolean boolean90 = booleanList80.add((java.lang.Boolean) false);
        boolean boolean91 = uRIList3.contains((java.lang.Object) booleanList80);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream92 = uRIList3.parallelStream();
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uRIArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(booleanItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(uRIItor24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "[]" + "'", str25.equals("[]"));
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-5) + "'", int33.equals((-5)));
        org.junit.Assert.assertNotNull(uShort34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(booleanStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shortStream54);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "[]" + "'", str61.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(booleanItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(booleanItor82);
        org.junit.Assert.assertNotNull(booleanStream83);
        org.junit.Assert.assertNotNull(booleanItor84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(uRIStream92);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl2 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl3 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl4 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl6 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl7 = mCServicesProviderNMF0
            .getActionService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl2);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl3);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl6);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl7);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl5 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl6 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl7 = mCServicesProviderNMF0
            .getAggregationService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl6);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl7);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long2 = duration1.getShortForm();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray3 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList4 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean5 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList4, uRIArray3);
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        java.util.Iterator<java.lang.Boolean> booleanItor11 = booleanList9.iterator();
        boolean boolean12 = uRIList4.retainAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList16 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList16,
            booleanArray15);
        boolean boolean19 = booleanList16.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream20 = booleanList16.stream();
        boolean boolean21 = uRIList4.retainAll((java.util.Collection<java.lang.Boolean>) booleanList16);
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList25 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList25,
            booleanArray24);
        java.util.Iterator<java.lang.Boolean> booleanItor27 = booleanList25.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream28 = booleanList25.stream();
        boolean boolean29 = uRIList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList25);
        boolean boolean30 = duration1.equals((java.lang.Object) boolean29);
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = duration1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList32 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element33 = doubleList32.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort34 = doubleList32.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element35 = doubleList32.createElement();
        boolean boolean36 = duration1.equals((java.lang.Object) element35);
        java.lang.Integer int37 = duration1.getTypeShortForm();
        double double38 = duration1.getValue();
        org.ccsds.moims.mo.mal.structures.LongList longList40 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream41 = longList40.parallelStream();
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList45 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList45,
            booleanArray44);
        java.util.Iterator<java.lang.Boolean> booleanItor47 = booleanList45.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream48 = booleanList45.stream();
        boolean boolean49 = longList40.containsAll((java.util.Collection<java.lang.Boolean>) booleanList45);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet50 = longList40.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = longList40.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort52 = longList40.getServiceNumber();
        boolean boolean53 = duration1.equals((java.lang.Object) longList40);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider54 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl57 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl58 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl59 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl62 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl63 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl64 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF65 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl66 = mCServicesProviderNMF65
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl67 = mCServicesProviderNMF65
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF68 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl69 = mCServicesProviderNMF68
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl70 = mCServicesProviderNMF68
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl71 = mCServicesProviderNMF68
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl72 = mCServicesProviderNMF68
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration73 = new esa.mo.nmf.MCRegistration(cOMServicesProvider54,
            parameterProviderServiceImpl59, aggregationProviderServiceImpl64, alertProviderServiceImpl67,
            actionProviderServiceImpl72);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl74 = mCRegistration73.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl75 = mCRegistration73.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl76 = mCRegistration73.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl77 = mCRegistration73.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl78 = mCRegistration73.aggregationService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl79 = mCRegistration73.aggregationService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl80 = mCRegistration73.actionService;
        boolean boolean81 = longList40.equals((java.lang.Object) actionProviderServiceImpl80);
        java.lang.Class<?> wildcardClass82 = actionProviderServiceImpl80.getClass();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281474993487875L + "'", long2.equals(281474993487875L));
        org.junit.Assert.assertNotNull(uRIArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(booleanItor27);
        org.junit.Assert.assertNotNull(booleanStream28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(uShort34);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37.equals(3));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 14.0d + "'", double38 == 14.0d);
        org.junit.Assert.assertNotNull(longStream41);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanItor47);
        org.junit.Assert.assertNotNull(booleanStream48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(uOctet50);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertNotNull(uShort52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl57);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl58);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl62);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl63);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl66);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl69);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl70);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl71);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl72);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl74);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl75);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl76);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl77);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl78);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl79);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream2 = longList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = longList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.FloatList floatList4 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long5 = floatList4.getShortForm();
        java.lang.String[] strArray7 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        int int10 = strList8.size();
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14,
            booleanArray13);
        boolean boolean17 = booleanList14.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream18 = booleanList14.stream();
        boolean boolean19 = strList8.containsAll((java.util.Collection<java.lang.Boolean>) booleanList14);
        boolean boolean20 = floatList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList14);
        java.util.Spliterator<java.lang.Float> floatSpliterator21 = floatList4.spliterator();
        esa.mo.nmf.NMFException nMFException23 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray24 = nMFException23.getSuppressed();
        int int25 = floatList4.lastIndexOf((java.lang.Object) throwableArray24);
        org.ccsds.moims.mo.mal.structures.Element element26 = floatList4.createElement();
        int int27 = longList1.indexOf((java.lang.Object) floatList4);
        boolean boolean28 = floatList4.isEmpty();
        org.junit.Assert.assertNotNull(longStream2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265084L + "'", long5.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(floatSpliterator21);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        java.lang.Double[] doubleArray3 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList4 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList4,
            doubleArray3);
        java.util.Spliterator<java.lang.Double> doubleSpliterator6 = doubleList4.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor7 = doubleList4.iterator();
        boolean boolean8 = stringList1.equals((java.lang.Object) doubleItor7);
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj10 = shortList9.clone();
        java.lang.String str11 = shortList9.toString();
        java.util.Spliterator<java.lang.Short> shortSpliterator12 = shortList9.spliterator();
        boolean boolean13 = stringList1.remove((java.lang.Object) shortSpliterator12);
        java.lang.Integer int14 = stringList1.getTypeShortForm();
        int int15 = stringList1.size();
        org.ccsds.moims.mo.mal.structures.FloatList floatList16 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long17 = floatList16.getShortForm();
        java.lang.String[] strArray19 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20,
            strArray19);
        int int22 = strList20.size();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        boolean boolean29 = booleanList26.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream30 = booleanList26.stream();
        boolean boolean31 = strList20.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        boolean boolean32 = floatList16.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.util.Spliterator<java.lang.Float> floatSpliterator33 = floatList16.spliterator();
        esa.mo.nmf.NMFException nMFException35 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray36 = nMFException35.getSuppressed();
        int int37 = floatList16.lastIndexOf((java.lang.Object) throwableArray36);
        java.lang.Integer int38 = floatList16.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = floatList16.getServiceNumber();
        boolean boolean40 = stringList1.equals((java.lang.Object) floatList16);
        org.ccsds.moims.mo.mal.structures.StringList stringList42 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        org.ccsds.moims.mo.mal.structures.UShort uShort43 = stringList42.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList45 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long46 = integerList45.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList48 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        org.ccsds.moims.mo.mal.structures.IntegerList integerList50 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long51 = integerList50.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray52 = new org.ccsds.moims.mo.mal.structures.IntegerList[]{integerList45,
                                                                                                                                 integerList48,
                                                                                                                                 integerList50};
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray53 = stringList42.toArray(integerListArray52);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = stringList42.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.ShortList shortList55 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj56 = shortList55.clone();
        java.lang.Long long57 = shortList55.getShortForm();
        int int58 = stringList42.indexOf((java.lang.Object) shortList55);
        java.util.Iterator<java.lang.Short> shortItor59 = shortList55.iterator();
        java.lang.Integer int60 = shortList55.getTypeShortForm();
        java.lang.Long long61 = shortList55.getShortForm();
        boolean boolean62 = floatList16.contains((java.lang.Object) shortList55);
        java.util.ListIterator<java.lang.Short> shortItor63 = shortList55.listIterator();
        try {
            java.lang.Short short65 = shortList55.get((int) (byte) 1);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator6);
        org.junit.Assert.assertNotNull(doubleItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]" + "'", str11.equals("[]"));
        org.junit.Assert.assertNotNull(shortSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-15) + "'", int14.equals((-15)));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 281475010265084L + "'", long17.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatSpliterator33);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-4) + "'", int38.equals((-4)));
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(uShort43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 281475010265077L + "'", long46.equals(281475010265077L));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 281475010265077L + "'", long51.equals(281475010265077L));
        org.junit.Assert.assertNotNull(integerListArray52);
        org.junit.Assert.assertNotNull(integerListArray53);
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 281475010265079L + "'", long57.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(shortItor59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-9) + "'", int60.equals((-9)));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 281475010265079L + "'", long61.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(shortItor63);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray2 = nMFException1.getSuppressed();
        java.lang.Throwable[] throwableArray3 = nMFException1.getSuppressed();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray7 = nMFException6.getSuppressed();
        java.lang.Throwable[] throwableArray8 = nMFException6.getSuppressed();
        esa.mo.nmf.NMFException nMFException10 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray11 = nMFException10.getSuppressed();
        nMFException6.addSuppressed((java.lang.Throwable) nMFException10);
        esa.mo.nmf.NMFException nMFException13 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException10);
        nMFException1.addSuppressed((java.lang.Throwable) nMFException13);
        java.lang.Throwable[] throwableArray15 = nMFException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList6 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList6,
            booleanArray5);
        java.util.Iterator<java.lang.Boolean> booleanItor8 = booleanList6.iterator();
        boolean boolean9 = uRIList1.retainAll((java.util.Collection<java.lang.Boolean>) booleanList6);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = org.ccsds.moims.mo.mal.structures.LongList.AREA_SHORT_FORM;
        boolean boolean11 = uRIList1.remove((java.lang.Object) uShort10);
        java.lang.Object obj12 = uRIList1.clone();
        boolean boolean14 = uRIList1.contains((java.lang.Object) 281475010265081L);
        java.lang.Object obj15 = uRIList1.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream16 = uRIList1.parallelStream();
        java.lang.Byte[] byteArray21 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22,
            byteArray21);
        boolean boolean25 = byteList22.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj26 = byteList22.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream27 = byteList22.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList29 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int30 = byteList22.indexOf((java.lang.Object) stringList29);
        byte[] byteArray34 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob35 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray34);
        int int36 = blob35.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob37 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean38 = blob35.equals((java.lang.Object) blob37);
        boolean boolean39 = stringList29.remove((java.lang.Object) blob37);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF40 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean41 = stringList29.equals((java.lang.Object) mCServicesProviderNMF40);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet42 = stringList29.getAreaVersion();
        boolean boolean44 = stringList29.add("[0.0]");
        int int45 = uRIList1.indexOf((java.lang.Object) boolean44);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanItor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(uRIStream16);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(byteStream27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(uOctet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl24 = mCRegistration19.alertService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = mCRegistration19.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider26 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF27 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCServicesProviderNMF27
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl31 = mCServicesProviderNMF27
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF32 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl34 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl39 = mCServicesProviderNMF37
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF40 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl41 = mCServicesProviderNMF40
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl42 = mCServicesProviderNMF40
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl43 = mCServicesProviderNMF40
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl44 = mCServicesProviderNMF40
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration45 = new esa.mo.nmf.MCRegistration(cOMServicesProvider26,
            parameterProviderServiceImpl31, aggregationProviderServiceImpl36, alertProviderServiceImpl39,
            actionProviderServiceImpl44);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl46 = mCRegistration45.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl47 = mCRegistration45.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider48 = mCRegistration45.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider49 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF50 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl52 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl53 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl54 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl57 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl58 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl59 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl62 = mCServicesProviderNMF60
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF63 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl64 = mCServicesProviderNMF63
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl65 = mCServicesProviderNMF63
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl66 = mCServicesProviderNMF63
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl67 = mCServicesProviderNMF63
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration68 = new esa.mo.nmf.MCRegistration(cOMServicesProvider49,
            parameterProviderServiceImpl54, aggregationProviderServiceImpl59, alertProviderServiceImpl62,
            actionProviderServiceImpl67);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl69 = mCRegistration68.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl70 = mCRegistration68.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl71 = mCRegistration68.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl72 = mCRegistration68.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl73 = mCRegistration68.actionService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode74 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration68.setMode(registrationMode74);
        mCRegistration45.setMode(registrationMode74);
        mCRegistration19.setMode(registrationMode74);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl78 = mCRegistration19.actionService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNull(cOMServicesProvider23);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl24);
        org.junit.Assert.assertNull(cOMServicesProvider25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl39);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl41);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl42);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl43);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl46);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl47);
        org.junit.Assert.assertNull(cOMServicesProvider48);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl52);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl54);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl57);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl58);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl62);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl64);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl65);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl66);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl69);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl70);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl71);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl72);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl73);
        org.junit.Assert.assertTrue("'" + registrationMode74 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode74.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(actionProviderServiceImpl78);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[-5, -5, 9]");
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (short) 10);
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean7 = byteList5.isEmpty();
        int int9 = byteList5.indexOf((java.lang.Object) 'a');
        int int11 = byteList5.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14,
            booleanArray13);
        java.util.ListIterator<java.lang.Boolean> booleanItor17 = booleanList14.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream18 = booleanList14.parallelStream();
        boolean boolean20 = booleanList14.add((java.lang.Boolean) false);
        boolean boolean21 = byteList5.retainAll((java.util.Collection<java.lang.Boolean>) booleanList14);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList22 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj23 = uShortList22.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream24 = uShortList22
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor25 = uShortList22.iterator();
        boolean boolean26 = byteList5.equals((java.lang.Object) uShortItor25);
        org.ccsds.moims.mo.mal.structures.ShortList shortList27 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj28 = shortList27.clone();
        boolean boolean29 = byteList5.equals((java.lang.Object) shortList27);
        esa.mo.nmf.NMFException nMFException31 = new esa.mo.nmf.NMFException("-1");
        boolean boolean32 = byteList5.equals((java.lang.Object) nMFException31);
        boolean boolean33 = uInteger1.equals((java.lang.Object) byteList5);
        java.lang.Long[] longArray38 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList39 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList39,
            longArray38);
        java.lang.Object obj41 = null;
        boolean boolean42 = longList39.contains(obj41);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger44 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean45 = longList39.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray48 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList49 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList49,
            booleanArray48);
        boolean boolean51 = longList39.containsAll((java.util.Collection<java.lang.Boolean>) booleanList49);
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList55 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList55,
            booleanArray54);
        java.util.Iterator<java.lang.Boolean> booleanItor57 = booleanList55.iterator();
        int int58 = longList39.indexOf((java.lang.Object) booleanList55);
        boolean boolean59 = byteList5.contains((java.lang.Object) int58);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(booleanItor17);
        org.junit.Assert.assertNotNull(booleanStream18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(uShortStream24);
        org.junit.Assert.assertNotNull(uShortItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(booleanItor57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        java.util.stream.Stream<java.lang.String> strStream26 = stringList12.stream();
        boolean boolean27 = stringList12.isEmpty();
        try {
            java.lang.String str29 = stringList12.remove((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.DoubleList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = org.ccsds.moims.mo.mal.structures.LongList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = org.ccsds.moims.mo.mal.structures.UShort.ATTRIBUTE_AREA_NUMBER;
        org.ccsds.moims.mo.mal.structures.StringList stringList4 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = stringList4.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = org.ccsds.moims.mo.mal.structures.ShortList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uShort6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = org.ccsds.moims.mo.mal.structures.UShort.ATTRIBUTE_AREA_NUMBER;
        org.ccsds.moims.mo.mal.structures.StringList stringList10 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = stringList10.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = new org.ccsds.moims.mo.mal.structures.UShort((int) 'a');
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray14 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList15 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean16 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList15, uRIArray14);
        java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList20 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList20,
            booleanArray19);
        java.util.Iterator<java.lang.Boolean> booleanItor22 = booleanList20.iterator();
        boolean boolean23 = uRIList15.retainAll((java.util.Collection<java.lang.Boolean>) booleanList20);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = org.ccsds.moims.mo.mal.structures.LongList.AREA_SHORT_FORM;
        boolean boolean25 = uRIList15.remove((java.lang.Object) uShort24);
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = org.ccsds.moims.mo.mal.structures.LongList.AREA_SHORT_FORM;
        java.lang.Long long27 = uShort26.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = org.ccsds.moims.mo.mal.structures.LongList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort29 = org.ccsds.moims.mo.mal.structures.UShort.ATTRIBUTE_AREA_NUMBER;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray30 = new org.ccsds.moims.mo.mal.structures.UShort[]{uShort0,
                                                                                                                  uShort1,
                                                                                                                  uShort2,
                                                                                                                  uShort5,
                                                                                                                  uShort6,
                                                                                                                  uShort8,
                                                                                                                  uShort11,
                                                                                                                  uShort13,
                                                                                                                  uShort24,
                                                                                                                  uShort26,
                                                                                                                  uShort28,
                                                                                                                  uShort29};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList31 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean32 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList31, uShortArray30);
        java.lang.String[] strArray34 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35,
            strArray34);
        int int37 = strList35.size();
        java.lang.Double[] doubleArray41 = new java.lang.Double[]{1.0d, 0.0d, 10.0d};
        java.util.ArrayList<java.lang.Double> doubleList42 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList42,
            doubleArray41);
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList47 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList47,
            booleanArray46);
        boolean boolean50 = booleanList47.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream51 = booleanList47.stream();
        int int52 = doubleList42.lastIndexOf((java.lang.Object) booleanStream51);
        int int53 = strList35.lastIndexOf((java.lang.Object) doubleList42);
        boolean boolean54 = uShortList31.remove((java.lang.Object) doubleList42);
        uShortList31.clear();
        esa.mo.nmf.NMFException nMFException57 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray58 = nMFException57.getSuppressed();
        java.lang.Throwable[] throwableArray59 = nMFException57.getSuppressed();
        int int60 = uShortList31.lastIndexOf((java.lang.Object) throwableArray59);
        uShortList31.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort uShort64 = new org.ccsds.moims.mo.mal.structures.UShort(
            (int) (byte) 100);
        java.lang.Long long65 = uShort64.getShortForm();
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort66 = uShortList31.set((-5), uShort64);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort0);
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(uRIArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 281474993487882L + "'", long27.equals(281474993487882L));
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertNotNull(uShort29);
        org.junit.Assert.assertNotNull(uShortArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(booleanStream51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 281474993487882L + "'", long65.equals(281474993487882L));
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCRegistration19.alertService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode21 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration19.setMode(registrationMode21);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl24 = mCRegistration19.alertService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF26 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl27 = mCServicesProviderNMF26
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl28 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCServicesProviderNMF26
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF31 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl34 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF36 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl37 = mCServicesProviderNMF36
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl38 = mCServicesProviderNMF36
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF39 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl40 = mCServicesProviderNMF39
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl41 = mCServicesProviderNMF39
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl42 = mCServicesProviderNMF39
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl43 = mCServicesProviderNMF39
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration44 = new esa.mo.nmf.MCRegistration(cOMServicesProvider25,
            parameterProviderServiceImpl30, aggregationProviderServiceImpl35, alertProviderServiceImpl38,
            actionProviderServiceImpl43);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl45 = mCRegistration44.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode46 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration44.setMode(registrationMode46);
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl48 = mCRegistration44.aggregationService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider49 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF50 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl52 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl53 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl54 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl57 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl58 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl59 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl62 = mCServicesProviderNMF60
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF63 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl64 = mCServicesProviderNMF63
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl65 = mCServicesProviderNMF63
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl66 = mCServicesProviderNMF63
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl67 = mCServicesProviderNMF63
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration68 = new esa.mo.nmf.MCRegistration(cOMServicesProvider49,
            parameterProviderServiceImpl54, aggregationProviderServiceImpl59, alertProviderServiceImpl62,
            actionProviderServiceImpl67);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider69 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF70 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl71 = mCServicesProviderNMF70
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl72 = mCServicesProviderNMF70
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl73 = mCServicesProviderNMF70
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl74 = mCServicesProviderNMF70
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF75 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl76 = mCServicesProviderNMF75
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl77 = mCServicesProviderNMF75
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl78 = mCServicesProviderNMF75
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl79 = mCServicesProviderNMF75
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF80 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl81 = mCServicesProviderNMF80
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl82 = mCServicesProviderNMF80
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF83 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl84 = mCServicesProviderNMF83
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl85 = mCServicesProviderNMF83
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl86 = mCServicesProviderNMF83
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl87 = mCServicesProviderNMF83
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration88 = new esa.mo.nmf.MCRegistration(cOMServicesProvider69,
            parameterProviderServiceImpl74, aggregationProviderServiceImpl79, alertProviderServiceImpl82,
            actionProviderServiceImpl87);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl89 = mCRegistration88.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode90 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration88.setMode(registrationMode90);
        mCRegistration68.setMode(registrationMode90);
        mCRegistration44.setMode(registrationMode90);
        mCRegistration19.setMode(registrationMode90);
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl95 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl96 = mCRegistration19.actionService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertTrue("'" + registrationMode21 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode21.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNull(cOMServicesProvider23);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl27);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl37);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl38);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl40);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl41);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl42);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl43);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl45);
        org.junit.Assert.assertTrue("'" + registrationMode46 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode46.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl48);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl52);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl54);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl57);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl58);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl62);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl64);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl65);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl66);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl71);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl72);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl73);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl74);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl76);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl77);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl78);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl79);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl81);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl82);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl84);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl85);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl86);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl87);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl89);
        org.junit.Assert.assertTrue("'" + registrationMode90 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode90.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(alertProviderServiceImpl95);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl96);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        boolean boolean5 = uShortList0.equals((java.lang.Object) 1);
        java.lang.Byte[] byteArray10 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList11,
            byteArray10);
        java.util.Iterator<java.lang.Byte> byteItor13 = byteList11.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration15 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long16 = duration15.getShortForm();
        int int17 = byteList11.indexOf((java.lang.Object) long16);
        int int18 = uShortList0.lastIndexOf((java.lang.Object) byteList11);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24,
            byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 10);
        java.lang.String str28 = byteList24.toString();
        java.util.stream.Stream<java.lang.Byte> byteStream29 = byteList24.parallelStream();
        int int30 = byteList24.size();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray31 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean33 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList32, uRIArray31);
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList37 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList37,
            booleanArray36);
        java.util.Iterator<java.lang.Boolean> booleanItor39 = booleanList37.iterator();
        boolean boolean40 = uRIList32.retainAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        booleanList37.clear();
        boolean boolean42 = byteList24.removeAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        java.util.stream.Stream<java.lang.Boolean> booleanStream43 = booleanList37.stream();
        int int44 = uShortList0.lastIndexOf((java.lang.Object) booleanList37);
        java.util.ListIterator<java.lang.Boolean> booleanItor45 = booleanList37.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList47 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet48 = longList47.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = longList47.getAreaNumber();
        java.util.Spliterator<java.lang.Long> longSpliterator50 = longList47.spliterator();
        int int51 = booleanList37.lastIndexOf((java.lang.Object) longList47);
        org.ccsds.moims.mo.mal.structures.URIList uRIList53 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.Element element54 = uRIList53.createElement();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor55 = uRIList53.iterator();
        int int56 = longList47.lastIndexOf((java.lang.Object) uRIList53);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor57 = uRIList53.iterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF58 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl59 = mCServicesProviderNMF58
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl60 = mCServicesProviderNMF58
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl61 = mCServicesProviderNMF58
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl62 = mCServicesProviderNMF58
            .getParameterService();
        boolean boolean63 = uRIList53.remove((java.lang.Object) parameterProviderServiceImpl62);
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI65 = uRIList53.get((-11));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -11");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteItor13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281474993487875L + "'", long16.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str28.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertNotNull(uRIArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(booleanStream43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(booleanItor45);
        org.junit.Assert.assertNotNull(uOctet48);
        org.junit.Assert.assertNotNull(uShort49);
        org.junit.Assert.assertNotNull(longSpliterator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(uRIItor55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(uRIItor57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl59);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl60);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl61);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl24 = mCRegistration19.alertService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration19.actionService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNull(cOMServicesProvider23);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl24);
        org.junit.Assert.assertNull(cOMServicesProvider25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.Element element24 = floatList0.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = floatList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = floatList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList28 = new org.ccsds.moims.mo.mal.structures.UShortList(9);
        org.ccsds.moims.mo.mal.structures.FloatList floatList29 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long30 = floatList29.getShortForm();
        java.lang.String[] strArray32 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33,
            strArray32);
        int int35 = strList33.size();
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList39 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList39,
            booleanArray38);
        boolean boolean42 = booleanList39.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream43 = booleanList39.stream();
        boolean boolean44 = strList33.containsAll((java.util.Collection<java.lang.Boolean>) booleanList39);
        boolean boolean45 = floatList29.containsAll((java.util.Collection<java.lang.Boolean>) booleanList39);
        boolean boolean46 = uShortList28.retainAll((java.util.Collection<java.lang.Boolean>) booleanList39);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList47 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int48 = uShortList47.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor49 = uShortList47.iterator();
        java.lang.Object[] objArray50 = uShortList47.toArray();
        uShortList47.clear();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet52 = uShortList47.getAreaVersion();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor54 = uShortList47.listIterator(0);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream55 = uShortList47.stream();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet56 = uShortList47.getAreaVersion();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream57 = uShortList47.stream();
        int int58 = booleanList39.indexOf((java.lang.Object) uShortStream57);
        boolean boolean59 = floatList0.retainAll((java.util.Collection<java.lang.Boolean>) booleanList39);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 281475010265084L + "'", long30.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-10) + "'", int48.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(uOctet52);
        org.junit.Assert.assertNotNull(uShortItor54);
        org.junit.Assert.assertNotNull(uShortStream55);
        org.junit.Assert.assertNotNull(uOctet56);
        org.junit.Assert.assertNotNull(uShortStream57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl23 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime1 = new org.ccsds.moims.mo.mal.structures.FineTime(
            281474993487884L);
        java.lang.Integer int2 = fineTime1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element3 = fineTime1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = fineTime1.getServiceNumber();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException();
        nMFException5.addSuppressed((java.lang.Throwable) nMFException6);
        esa.mo.nmf.NMFException nMFException9 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = nMFException12.getSuppressed();
        esa.mo.nmf.NMFException nMFException15 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException12);
        java.lang.String str16 = nMFException12.toString();
        nMFException9.addSuppressed((java.lang.Throwable) nMFException12);
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        java.lang.Throwable[] throwableArray21 = nMFException19.getSuppressed();
        nMFException9.addSuppressed((java.lang.Throwable) nMFException19);
        java.lang.String str23 = nMFException9.toString();
        nMFException6.addSuppressed((java.lang.Throwable) nMFException9);
        boolean boolean25 = fineTime1.equals((java.lang.Object) nMFException9);
        java.lang.Integer int26 = fineTime1.getTypeShortForm();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 17 + "'", int2.equals(17));
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str16.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "esa.mo.nmf.NMFException: -1" + "'", str23.equals(
            "esa.mo.nmf.NMFException: -1"));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 17 + "'", int26.equals(17));
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl24 = mCRegistration19.alertService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl26 = mCRegistration19.aggregationService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl24);
        org.junit.Assert.assertNull(cOMServicesProvider25);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl26);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        boolean boolean5 = uShortList0.equals((java.lang.Object) 1);
        java.lang.Byte[] byteArray10 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList11,
            byteArray10);
        java.util.Iterator<java.lang.Byte> byteItor13 = byteList11.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration15 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long16 = duration15.getShortForm();
        int int17 = byteList11.indexOf((java.lang.Object) long16);
        int int18 = uShortList0.lastIndexOf((java.lang.Object) byteList11);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList24,
            byteArray23);
        boolean boolean27 = byteList24.add((java.lang.Byte) (byte) 10);
        java.lang.String str28 = byteList24.toString();
        java.util.stream.Stream<java.lang.Byte> byteStream29 = byteList24.parallelStream();
        int int30 = byteList24.size();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray31 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList32 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean33 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList32, uRIArray31);
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList37 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList37,
            booleanArray36);
        java.util.Iterator<java.lang.Boolean> booleanItor39 = booleanList37.iterator();
        boolean boolean40 = uRIList32.retainAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        booleanList37.clear();
        boolean boolean42 = byteList24.removeAll((java.util.Collection<java.lang.Boolean>) booleanList37);
        java.util.stream.Stream<java.lang.Boolean> booleanStream43 = booleanList37.stream();
        int int44 = uShortList0.lastIndexOf((java.lang.Object) booleanList37);
        java.util.ListIterator<java.lang.Boolean> booleanItor45 = booleanList37.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList47 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet48 = longList47.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = longList47.getAreaNumber();
        java.util.Spliterator<java.lang.Long> longSpliterator50 = longList47.spliterator();
        int int51 = booleanList37.lastIndexOf((java.lang.Object) longList47);
        org.ccsds.moims.mo.mal.structures.URIList uRIList53 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.Element element54 = uRIList53.createElement();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor55 = uRIList53.iterator();
        int int56 = longList47.lastIndexOf((java.lang.Object) uRIList53);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor57 = uRIList53.iterator();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF58 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl59 = mCServicesProviderNMF58
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl60 = mCServicesProviderNMF58
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl61 = mCServicesProviderNMF58
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl62 = mCServicesProviderNMF58
            .getParameterService();
        boolean boolean63 = uRIList53.remove((java.lang.Object) parameterProviderServiceImpl62);
        org.ccsds.moims.mo.mal.structures.UShort uShort64 = uRIList53.getAreaNumber();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteItor13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281474993487875L + "'", long16.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str28.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertNotNull(uRIArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(booleanStream43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(booleanItor45);
        org.junit.Assert.assertNotNull(uOctet48);
        org.junit.Assert.assertNotNull(uShort49);
        org.junit.Assert.assertNotNull(longSpliterator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(uRIItor55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(uRIItor57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl59);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl60);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl61);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(uShort64);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        java.lang.Short[] shortArray2 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList3,
            shortArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = shortList3.equals(obj5);
        java.util.Iterator<java.lang.Short> shortItor7 = shortList3.iterator();
        java.lang.Object[] objArray8 = shortList3.toArray();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime10 = new org.ccsds.moims.mo.mal.structures.FineTime(
            281474993487884L);
        java.lang.Integer int11 = fineTime10.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element12 = fineTime10.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = fineTime10.getServiceNumber();
        esa.mo.nmf.NMFException nMFException14 = new esa.mo.nmf.NMFException();
        esa.mo.nmf.NMFException nMFException15 = new esa.mo.nmf.NMFException();
        nMFException14.addSuppressed((java.lang.Throwable) nMFException15);
        esa.mo.nmf.NMFException nMFException18 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException21 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray22 = nMFException21.getSuppressed();
        java.lang.Throwable[] throwableArray23 = nMFException21.getSuppressed();
        esa.mo.nmf.NMFException nMFException24 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException21);
        java.lang.String str25 = nMFException21.toString();
        nMFException18.addSuppressed((java.lang.Throwable) nMFException21);
        esa.mo.nmf.NMFException nMFException28 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray29 = nMFException28.getSuppressed();
        java.lang.Throwable[] throwableArray30 = nMFException28.getSuppressed();
        nMFException18.addSuppressed((java.lang.Throwable) nMFException28);
        java.lang.String str32 = nMFException18.toString();
        nMFException15.addSuppressed((java.lang.Throwable) nMFException18);
        boolean boolean34 = fineTime10.equals((java.lang.Object) nMFException18);
        boolean boolean35 = shortList3.contains((java.lang.Object) fineTime10);
        java.lang.String str36 = fineTime10.toString();
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortItor7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 17 + "'", int11.equals(17));
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str25.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "esa.mo.nmf.NMFException: -1" + "'", str32.equals(
            "esa.mo.nmf.NMFException: -1"));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "281474993487884" + "'", str36.equals("281474993487884"));
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl27 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider28 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl29 = mCRegistration19.actionService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl27);
        org.junit.Assert.assertNull(cOMServicesProvider28);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl29);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.parallelStream();
        shortList0.trimToSize();
        shortList0.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray22 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList23 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23,
            intArray22);
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList28 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList28,
            booleanArray27);
        java.util.Iterator<java.lang.Boolean> booleanItor30 = booleanList28.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream31 = booleanList28.stream();
        boolean boolean32 = intList23.retainAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        boolean boolean33 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = shortList0.getAreaVersion();
        java.lang.Long long35 = shortList0.getShortForm();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF36 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl37 = mCServicesProviderNMF36
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl38 = mCServicesProviderNMF36
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl39 = mCServicesProviderNMF36
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl40 = mCServicesProviderNMF36
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl41 = mCServicesProviderNMF36
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF36
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF36
            .getAggregationService();
        boolean boolean44 = shortList0.remove((java.lang.Object) mCServicesProviderNMF36);
        org.ccsds.moims.mo.mal.structures.Element element45 = shortList0.createElement();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanItor30);
        org.junit.Assert.assertNotNull(booleanStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(uOctet34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281475010265079L + "'", long35.equals(281475010265079L));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl37);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl38);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl39);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl40);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(element45);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        java.util.Spliterator<java.lang.Float> floatSpliterator23 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.Element element24 = floatList0.createElement();
        floatList0.clear();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = floatList0.getAreaNumber();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(floatSpliterator23);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(uShort26);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uShortList0.getServiceNumber();
        java.lang.Integer int3 = uShortList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = uShortList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UInteger uInteger6 = new org.ccsds.moims.mo.mal.structures.UInteger(1L);
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uInteger6.getAreaNumber();
        java.lang.Long long8 = uShort7.getShortForm();
        int int9 = uShort7.getValue();
        int int10 = uShortList0.indexOf((java.lang.Object) uShort7);
        org.ccsds.moims.mo.mal.structures.StringList stringList11 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element12 = stringList11.createElement();
        boolean boolean13 = stringList11.isEmpty();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider14 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF15 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl16 = mCServicesProviderNMF15
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl17 = mCServicesProviderNMF15
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl18 = mCServicesProviderNMF15
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl19 = mCServicesProviderNMF15
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF20 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCServicesProviderNMF20
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl22 = mCServicesProviderNMF20
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl23 = mCServicesProviderNMF20
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCServicesProviderNMF20
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF25 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCServicesProviderNMF25
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl27 = mCServicesProviderNMF25
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl31 = mCServicesProviderNMF28
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl32 = mCServicesProviderNMF28
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration33 = new esa.mo.nmf.MCRegistration(cOMServicesProvider14,
            parameterProviderServiceImpl19, aggregationProviderServiceImpl24, alertProviderServiceImpl27,
            actionProviderServiceImpl32);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCRegistration33.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl35 = mCRegistration33.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCRegistration33.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl37 = mCRegistration33.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl38 = mCRegistration33.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl39 = mCRegistration33.alertService;
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[] alertHandlerArray40 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[]{alertProviderServiceImpl39};
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider41 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF42 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCServicesProviderNMF42
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl44 = mCServicesProviderNMF42
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl45 = mCServicesProviderNMF42
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl46 = mCServicesProviderNMF42
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl50 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl51 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF52 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl53 = mCServicesProviderNMF52
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl54 = mCServicesProviderNMF52
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl57 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl58 = mCServicesProviderNMF55
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl59 = mCServicesProviderNMF55
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration60 = new esa.mo.nmf.MCRegistration(cOMServicesProvider41,
            parameterProviderServiceImpl46, aggregationProviderServiceImpl51, alertProviderServiceImpl54,
            actionProviderServiceImpl59);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCRegistration60.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl62 = mCRegistration60.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl63 = mCRegistration60.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl64 = mCRegistration60.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl65 = mCRegistration60.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl66 = mCRegistration60.alertService;
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[] alertHandlerArray67 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[]{alertProviderServiceImpl66};
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider68 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF69 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl70 = mCServicesProviderNMF69
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl71 = mCServicesProviderNMF69
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl72 = mCServicesProviderNMF69
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl73 = mCServicesProviderNMF69
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF74 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl75 = mCServicesProviderNMF74
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl76 = mCServicesProviderNMF74
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl77 = mCServicesProviderNMF74
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl78 = mCServicesProviderNMF74
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF79 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl80 = mCServicesProviderNMF79
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl81 = mCServicesProviderNMF79
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF82 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl83 = mCServicesProviderNMF82
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl84 = mCServicesProviderNMF82
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl85 = mCServicesProviderNMF82
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl86 = mCServicesProviderNMF82
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration87 = new esa.mo.nmf.MCRegistration(cOMServicesProvider68,
            parameterProviderServiceImpl73, aggregationProviderServiceImpl78, alertProviderServiceImpl81,
            actionProviderServiceImpl86);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl88 = mCRegistration87.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl89 = mCRegistration87.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl90 = mCRegistration87.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl91 = mCRegistration87.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl92 = mCRegistration87.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl93 = mCRegistration87.alertService;
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[] alertHandlerArray94 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[]{alertProviderServiceImpl93};
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][] alertHandlerArray95 = new org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][]{alertHandlerArray40,
                                                                                                                                              alertHandlerArray67,
                                                                                                                                              alertHandlerArray94};
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][] alertHandlerArray96 = stringList11.toArray(
            alertHandlerArray95);
        org.ccsds.moims.mo.mc.alert.provider.AlertHandler[][] alertHandlerArray97 = uShortList0.toArray(
            alertHandlerArray96);
        org.ccsds.moims.mo.mal.MALDecoder mALDecoder98 = null;
        try {
            org.ccsds.moims.mo.mal.structures.Element element99 = uShortList0.decode(mALDecoder98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-10) + "'", int3.equals((-10)));
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281474993487882L + "'", long8.equals(281474993487882L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl16);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl17);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl19);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl22);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl27);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl31);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl35);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl37);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl38);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertHandlerArray40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl44);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl46);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl50);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl51);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl53);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl54);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl57);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl58);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl62);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl63);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl64);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl65);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl66);
        org.junit.Assert.assertNotNull(alertHandlerArray67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl70);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl71);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl72);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl73);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl75);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl76);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl77);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl78);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl80);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl81);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl83);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl84);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl85);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl86);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl88);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl89);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl90);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl91);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl92);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl93);
        org.junit.Assert.assertNotNull(alertHandlerArray94);
        org.junit.Assert.assertNotNull(alertHandlerArray95);
        org.junit.Assert.assertNotNull(alertHandlerArray96);
        org.junit.Assert.assertNotNull(alertHandlerArray97);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        int int26 = stringList12.size();
        java.lang.Object obj27 = stringList12.clone();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        java.util.Iterator<java.lang.Byte> byteItor7 = byteList5.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration9 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long10 = duration9.getShortForm();
        int int11 = byteList5.indexOf((java.lang.Object) long10);
        org.ccsds.moims.mo.mal.structures.ShortList shortList12 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj13 = shortList12.clone();
        java.lang.String str14 = shortList12.toString();
        java.util.Spliterator<java.lang.Short> shortSpliterator15 = shortList12.spliterator();
        boolean boolean16 = byteList5.contains((java.lang.Object) shortList12);
        java.util.ListIterator<java.lang.Byte> byteItor17 = byteList5.listIterator();
        java.lang.Object obj18 = byteList5.clone();
        java.util.ListIterator<java.lang.Byte> byteItor19 = byteList5.listIterator();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList20 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element21 = doubleList20.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = doubleList20.getServiceNumber();
        doubleList20.ensureCapacity(3);
        doubleList20.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = doubleList20.getServiceNumber();
        boolean boolean27 = byteList5.equals((java.lang.Object) doubleList20);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList28 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int29 = uShortList28.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor30 = uShortList28.iterator();
        java.lang.Object[] objArray31 = uShortList28.toArray();
        uShortList28.clear();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream33 = uShortList28.stream();
        java.lang.String str34 = uShortList28.toString();
        org.ccsds.moims.mo.mal.structures.FloatList floatList35 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long36 = floatList35.getShortForm();
        floatList35.trimToSize();
        java.lang.String str38 = floatList35.toString();
        java.util.Spliterator<java.lang.Float> floatSpliterator39 = floatList35.spliterator();
        java.lang.Byte[] byteArray42 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList43 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList43,
            byteArray42);
        boolean boolean45 = byteList43.isEmpty();
        int int47 = byteList43.indexOf((java.lang.Object) 'a');
        int int49 = byteList43.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList52 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList52,
            booleanArray51);
        java.util.ListIterator<java.lang.Boolean> booleanItor55 = booleanList52.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream56 = booleanList52.parallelStream();
        boolean boolean58 = booleanList52.add((java.lang.Boolean) false);
        boolean boolean59 = byteList43.retainAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList60 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj61 = uShortList60.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream62 = uShortList60
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor63 = uShortList60.iterator();
        boolean boolean64 = byteList43.equals((java.lang.Object) uShortItor63);
        org.ccsds.moims.mo.mal.structures.ShortList shortList65 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj66 = shortList65.clone();
        boolean boolean67 = byteList43.equals((java.lang.Object) shortList65);
        esa.mo.nmf.NMFException nMFException69 = new esa.mo.nmf.NMFException("-1");
        boolean boolean70 = byteList43.equals((java.lang.Object) nMFException69);
        byteList43.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList72 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element73 = booleanList72.createElement();
        java.lang.Long long74 = booleanList72.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort75 = booleanList72.getAreaNumber();
        java.lang.Integer int76 = booleanList72.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray77 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList72};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray78 = byteList43.toArray(booleanListArray77);
        boolean boolean79 = floatList35.remove((java.lang.Object) booleanListArray77);
        java.util.ArrayList<java.lang.Boolean>[] booleanListArray80 = uShortList28.toArray(
            (java.util.ArrayList<java.lang.Boolean>[]) booleanListArray77);
        try {
            org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray81 = byteList5.toArray(booleanListArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(byteItor7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281474993487875L + "'", long10.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]" + "'", str14.equals("[]"));
        org.junit.Assert.assertNotNull(shortSpliterator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteItor17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(byteItor19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-10) + "'", int29.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(uShortStream33);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[]" + "'", str34.equals("[]"));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 281475010265084L + "'", long36.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "[]" + "'", str38.equals("[]"));
        org.junit.Assert.assertNotNull(floatSpliterator39);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanItor55);
        org.junit.Assert.assertNotNull(booleanStream56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(uShortStream62);
        org.junit.Assert.assertNotNull(uShortItor63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 281475010265086L + "'", long74.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-2) + "'", int76.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray77);
        org.junit.Assert.assertNotNull(booleanListArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(booleanListArray80);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[true]");
        java.lang.String str2 = nMFException1.toString();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray7 = nMFException6.getSuppressed();
        java.lang.Throwable[] throwableArray8 = nMFException6.getSuppressed();
        esa.mo.nmf.NMFException nMFException10 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray11 = nMFException10.getSuppressed();
        nMFException6.addSuppressed((java.lang.Throwable) nMFException10);
        esa.mo.nmf.NMFException nMFException13 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException10);
        esa.mo.nmf.NMFException nMFException14 = new esa.mo.nmf.NMFException("[true, false, true]",
            (java.lang.Throwable) nMFException13);
        nMFException1.addSuppressed((java.lang.Throwable) nMFException13);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "esa.mo.nmf.NMFException: [true]" + "'", str2.equals(
            "esa.mo.nmf.NMFException: [true]"));
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl6 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF0
            .getParameterService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl6);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element1 = doubleList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList0.getServiceNumber();
        java.lang.Integer int3 = doubleList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Union union6 = new org.ccsds.moims.mo.mal.structures.Union(
            (java.lang.Float) 100.0f);
        int int7 = doubleList0.indexOf((java.lang.Object) 100.0f);
        org.ccsds.moims.mo.mal.structures.ShortList shortList8 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray10 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11,
            strArray10);
        int int13 = strList11.size();
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17,
            booleanArray16);
        boolean boolean20 = booleanList17.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream21 = booleanList17.stream();
        boolean boolean22 = strList11.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        boolean boolean23 = shortList8.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        java.util.stream.Stream<java.lang.Short> shortStream24 = shortList8.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element25 = shortList8.createElement();
        esa.mo.nmf.NMFException nMFException27 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray28 = nMFException27.getSuppressed();
        int int29 = shortList8.indexOf((java.lang.Object) throwableArray28);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList30 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str31 = doubleList30.toString();
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList34 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList34,
            booleanArray33);
        java.util.ListIterator<java.lang.Boolean> booleanItor37 = booleanList34.listIterator((int) (short) 1);
        boolean boolean38 = doubleList30.containsAll((java.util.Collection<java.lang.Boolean>) booleanList34);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42,
            byteArray41);
        boolean boolean44 = byteList42.isEmpty();
        int int45 = byteList42.size();
        int int46 = booleanList34.indexOf((java.lang.Object) byteList42);
        java.lang.Boolean[] booleanArray49 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList50 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList50,
            booleanArray49);
        java.util.Iterator<java.lang.Boolean> booleanItor52 = booleanList50.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream53 = booleanList50.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor54 = booleanList50.iterator();
        boolean boolean55 = byteList42.removeAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        boolean boolean56 = shortList8.removeAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        boolean boolean57 = booleanList50.isEmpty();
        boolean boolean58 = doubleList0.remove((java.lang.Object) booleanList50);
        doubleList0.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort uShort60 = doubleList0.getServiceNumber();
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-5) + "'", int3.equals((-5)));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shortStream24);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "[]" + "'", str31.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(booleanItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(booleanItor52);
        org.junit.Assert.assertNotNull(booleanStream53);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(uShort60);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl27 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider28 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCRegistration19.parameterService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl27);
        org.junit.Assert.assertNull(cOMServicesProvider28);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("100.0");
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uRI1.getAreaVersion();
        java.lang.Integer int3 = uRI1.getTypeShortForm();
        java.lang.String str4 = uRI1.getValue();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException();
        nMFException5.addSuppressed((java.lang.Throwable) nMFException6);
        java.lang.String str8 = nMFException5.toString();
        java.lang.Throwable[] throwableArray9 = nMFException5.getSuppressed();
        boolean boolean10 = uRI1.equals((java.lang.Object) nMFException5);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 18 + "'", int3.equals(18));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "100.0" + "'", str4.equals("100.0"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "esa.mo.nmf.NMFException" + "'", str8.equals(
            "esa.mo.nmf.NMFException"));
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCRegistration19.aggregationService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = mCRegistration19.comServices;
        org.ccsds.moims.mo.mal.structures.IntegerList integerList25 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            0);
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = integerList25.getAreaNumber();
        integerList25.ensureCapacity((int) (short) 0);
        integerList25.clear();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList30 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) integerList25);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNull(cOMServicesProvider23);
        org.junit.Assert.assertNotNull(uShort26);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.util.stream.Stream<java.lang.Double> doubleStream1 = doubleList0.stream();
        java.lang.Integer int2 = doubleList0.getTypeShortForm();
        doubleList0.clear();
        java.lang.Byte[] byteArray8 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
        boolean boolean12 = byteList9.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj13 = byteList9.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream14 = byteList9.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList16 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int17 = byteList9.indexOf((java.lang.Object) stringList16);
        byte[] byteArray21 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob22 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray21);
        int int23 = blob22.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob24 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean25 = blob22.equals((java.lang.Object) blob24);
        boolean boolean26 = stringList16.remove((java.lang.Object) blob24);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF27 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean28 = stringList16.equals((java.lang.Object) mCServicesProviderNMF27);
        java.util.ListIterator<java.lang.String> strItor29 = stringList16.listIterator();
        stringList16.ensureCapacity((int) (short) -1);
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = stringList16.getServiceNumber();
        stringList16.trimToSize();
        java.lang.Long long34 = stringList16.getShortForm();
        boolean boolean35 = doubleList0.equals((java.lang.Object) long34);
        org.junit.Assert.assertNotNull(doubleStream1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-5) + "'", int2.equals((-5)));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteStream14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 281475010265073L + "'", long34.equals(281475010265073L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[10, 100, -1]");
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream2 = longList1.parallelStream();
        java.util.stream.Stream<java.lang.Long> longStream3 = longList1.parallelStream();
        java.util.stream.Stream<java.lang.Long> longStream4 = longList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.Union union6 = new org.ccsds.moims.mo.mal.structures.Union(
            "[1.0, 0.0, 10.0]");
        java.lang.String str7 = union6.getStringValue();
        boolean boolean8 = longList1.remove((java.lang.Object) union6);
        org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long10 = floatList9.getShortForm();
        java.lang.String[] strArray12 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13,
            strArray12);
        int int15 = strList13.size();
        java.lang.Boolean[] booleanArray18 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList19 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList19,
            booleanArray18);
        boolean boolean22 = booleanList19.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream23 = booleanList19.stream();
        boolean boolean24 = strList13.containsAll((java.util.Collection<java.lang.Boolean>) booleanList19);
        boolean boolean25 = floatList9.containsAll((java.util.Collection<java.lang.Boolean>) booleanList19);
        java.util.Spliterator<java.lang.Float> floatSpliterator26 = floatList9.spliterator();
        esa.mo.nmf.NMFException nMFException28 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray29 = nMFException28.getSuppressed();
        int int30 = floatList9.lastIndexOf((java.lang.Object) throwableArray29);
        org.ccsds.moims.mo.mal.structures.LongList longList31 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int32 = floatList9.lastIndexOf((java.lang.Object) longList31);
        org.ccsds.moims.mo.mal.structures.Element element33 = longList31.createElement();
        boolean boolean35 = longList31.add((java.lang.Long) 281475010265084L);
        int int36 = longList1.lastIndexOf((java.lang.Object) longList31);
        org.junit.Assert.assertNotNull(longStream2);
        org.junit.Assert.assertNotNull(longStream3);
        org.junit.Assert.assertNotNull(longStream4);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[1.0, 0.0, 10.0]" + "'", str7.equals("[1.0, 0.0, 10.0]"));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281475010265084L + "'", long10.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatSpliterator26);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray7 = nMFException6.getSuppressed();
        nMFException2.addSuppressed((java.lang.Throwable) nMFException6);
        java.lang.Throwable[] throwableArray9 = nMFException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = nMFException6.getSuppressed();
        esa.mo.nmf.NMFException nMFException11 = new esa.mo.nmf.NMFException("[]", (java.lang.Throwable) nMFException6);
        esa.mo.nmf.NMFException nMFException14 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray15 = nMFException14.getSuppressed();
        java.lang.Throwable[] throwableArray16 = nMFException14.getSuppressed();
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException14);
        nMFException11.addSuppressed((java.lang.Throwable) nMFException14);
        java.lang.Throwable[] throwableArray19 = nMFException11.getSuppressed();
        java.lang.String str20 = nMFException11.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "esa.mo.nmf.NMFException: []" + "'", str20.equals(
            "esa.mo.nmf.NMFException: []"));
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        org.ccsds.moims.mo.mal.structures.URI uRI0 = new org.ccsds.moims.mo.mal.structures.URI();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray1 = new org.ccsds.moims.mo.mal.structures.URI[]{uRI0};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean3 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList2, uRIArray1);
        int int4 = uRIList2.size();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray5 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList6 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean7 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList6, uRIArray5);
        java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList11 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList11,
            booleanArray10);
        java.util.Iterator<java.lang.Boolean> booleanItor13 = booleanList11.iterator();
        boolean boolean14 = uRIList6.retainAll((java.util.Collection<java.lang.Boolean>) booleanList11);
        org.ccsds.moims.mo.mal.structures.URI uRI15 = null;
        boolean boolean16 = uRIList6.add(uRI15);
        boolean boolean17 = uRIList2.remove((java.lang.Object) uRI15);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList18 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element19 = doubleList18.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = doubleList18.getServiceNumber();
        doubleList18.ensureCapacity(3);
        java.lang.String[] strArray26 = new java.lang.String[]{"[-1, -1, 1, 1, 10]", "100", "100"};
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27,
            strArray26);
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList32 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList32,
            booleanArray31);
        boolean boolean35 = booleanList32.add((java.lang.Boolean) true);
        boolean boolean36 = strList27.removeAll((java.util.Collection<java.lang.Boolean>) booleanList32);
        java.util.stream.Stream<java.lang.String> strStream37 = strList27.parallelStream();
        boolean boolean38 = doubleList18.contains((java.lang.Object) strList27);
        java.util.ListIterator<java.lang.Double> doubleItor39 = doubleList18.listIterator();
        boolean boolean40 = uRIList2.equals((java.lang.Object) doubleList18);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList41 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UShort uShort42 = doubleList41.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream43 = doubleList41.stream();
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList46 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList46,
            booleanArray45);
        java.util.ListIterator<java.lang.Boolean> booleanItor49 = booleanList46.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream50 = booleanList46.parallelStream();
        boolean boolean52 = booleanList46.add((java.lang.Boolean) false);
        java.util.ListIterator<java.lang.Boolean> booleanItor54 = booleanList46.listIterator(0);
        java.lang.Object obj55 = booleanList46.clone();
        boolean boolean57 = booleanList46.add((java.lang.Boolean) false);
        boolean boolean58 = doubleList41.containsAll((java.util.Collection<java.lang.Boolean>) booleanList46);
        boolean boolean59 = uRIList2.removeAll((java.util.Collection<java.lang.Boolean>) booleanList46);
        int int60 = uRIList2.size();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF61 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl62 = mCServicesProviderNMF61
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl63 = mCServicesProviderNMF61
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl64 = mCServicesProviderNMF61
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl65 = mCServicesProviderNMF61
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl66 = mCServicesProviderNMF61
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl67 = mCServicesProviderNMF61
            .getParameterService();
        int int68 = uRIList2.indexOf((java.lang.Object) mCServicesProviderNMF61);
        org.junit.Assert.assertNotNull(uRIArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(uRIArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanItor13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(uShort42);
        org.junit.Assert.assertNotNull(doubleStream43);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanItor49);
        org.junit.Assert.assertNotNull(booleanStream50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl62);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl63);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl65);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl66);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        java.util.stream.Stream<java.lang.String> strStream26 = stringList12.stream();
        java.lang.Object[] objArray27 = stringList12.toArray();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        java.lang.Throwable throwable1 = null;
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("", throwable1);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        org.ccsds.moims.mo.mal.structures.FloatList floatList25 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long26 = floatList25.getShortForm();
        java.lang.String[] strArray28 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29,
            strArray28);
        int int31 = strList29.size();
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList35 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList35,
            booleanArray34);
        boolean boolean38 = booleanList35.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream39 = booleanList35.stream();
        boolean boolean40 = strList29.containsAll((java.util.Collection<java.lang.Boolean>) booleanList35);
        boolean boolean41 = floatList25.containsAll((java.util.Collection<java.lang.Boolean>) booleanList35);
        java.util.ListIterator<java.lang.Float> floatItor42 = floatList25.listIterator();
        floatList25.add(0, (java.lang.Float) (-1.0f));
        org.ccsds.moims.mo.mal.structures.LongList longList47 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream48 = longList47.parallelStream();
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList52 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList52,
            booleanArray51);
        java.util.Iterator<java.lang.Boolean> booleanItor54 = booleanList52.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream55 = booleanList52.stream();
        boolean boolean56 = longList47.containsAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        boolean boolean57 = floatList25.retainAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        java.lang.Integer int58 = floatList25.getTypeShortForm();
        boolean boolean60 = floatList25.add((java.lang.Float) 10.0f);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList62 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        integerList62.add(0, (java.lang.Integer) 4);
        org.ccsds.moims.mo.mal.structures.UShort uShort66 = integerList62.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet67 = integerList62.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList68 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int69 = uShortList68.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor70 = uShortList68.iterator();
        int int71 = integerList62.indexOf((java.lang.Object) uShortList68);
        java.lang.String str72 = uShortList68.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort73 = uShortList68.getServiceNumber();
        boolean boolean74 = floatList25.remove((java.lang.Object) uShortList68);
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList75 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) uShortList68);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281475010265084L + "'", long26.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(floatItor42);
        org.junit.Assert.assertNotNull(longStream48);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertNotNull(booleanStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-4) + "'", int58.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(uShort66);
        org.junit.Assert.assertNotNull(uOctet67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-10) + "'", int69.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "[]" + "'", str72.equals("[]"));
        org.junit.Assert.assertNotNull(uShort73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.util.stream.Stream<java.lang.Integer> intStream2 = integerList1.parallelStream();
        java.util.stream.Stream<java.lang.Integer> intStream3 = integerList1.stream();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray4 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList5 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean6 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList5, uRIArray4);
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        java.util.Iterator<java.lang.Boolean> booleanItor12 = booleanList10.iterator();
        boolean boolean13 = uRIList5.retainAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17,
            booleanArray16);
        boolean boolean20 = booleanList17.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream21 = booleanList17.stream();
        boolean boolean22 = uRIList5.retainAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        boolean boolean23 = integerList1.removeAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        org.ccsds.moims.mo.mal.structures.Element element24 = integerList1.createElement();
        integerList1.ensureCapacity(0);
        java.lang.Object obj27 = integerList1.clone();
        org.ccsds.moims.mo.mal.structures.ShortList shortList28 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj29 = shortList28.clone();
        java.util.stream.Stream<java.lang.Short> shortStream30 = shortList28.parallelStream();
        shortList28.trimToSize();
        shortList28.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray50 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList51 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51,
            intArray50);
        java.lang.Boolean[] booleanArray55 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList56 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList56,
            booleanArray55);
        java.util.Iterator<java.lang.Boolean> booleanItor58 = booleanList56.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream59 = booleanList56.stream();
        boolean boolean60 = intList51.retainAll((java.util.Collection<java.lang.Boolean>) booleanList56);
        boolean boolean61 = shortList28.containsAll((java.util.Collection<java.lang.Boolean>) booleanList56);
        java.lang.Boolean[] booleanArray63 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList64 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList64,
            booleanArray63);
        java.util.ListIterator<java.lang.Boolean> booleanItor67 = booleanList64.listIterator((int) (short) 1);
        boolean boolean68 = shortList28.containsAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        java.util.stream.Stream<java.lang.Boolean> booleanStream69 = booleanList64.stream();
        boolean boolean70 = booleanList64.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList71 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long72 = floatList71.getShortForm();
        java.lang.String[] strArray74 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75,
            strArray74);
        int int77 = strList75.size();
        java.lang.Boolean[] booleanArray80 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList81 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList81,
            booleanArray80);
        boolean boolean84 = booleanList81.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream85 = booleanList81.stream();
        boolean boolean86 = strList75.containsAll((java.util.Collection<java.lang.Boolean>) booleanList81);
        boolean boolean87 = floatList71.containsAll((java.util.Collection<java.lang.Boolean>) booleanList81);
        java.util.Spliterator<java.lang.Float> floatSpliterator88 = floatList71.spliterator();
        esa.mo.nmf.NMFException nMFException90 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray91 = nMFException90.getSuppressed();
        int int92 = floatList71.lastIndexOf((java.lang.Object) throwableArray91);
        org.ccsds.moims.mo.mal.structures.Element element93 = floatList71.createElement();
        int int94 = booleanList64.lastIndexOf((java.lang.Object) element93);
        booleanList64.clear();
        boolean boolean96 = integerList1.retainAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(intStream3);
        org.junit.Assert.assertNotNull(uRIArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanItor12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(shortStream30);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(booleanItor58);
        org.junit.Assert.assertNotNull(booleanStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(booleanItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(booleanStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 281475010265084L + "'", long72.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(booleanStream85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(floatSpliterator88);
        org.junit.Assert.assertNotNull(throwableArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(element93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = identifier0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray2 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList3 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean4 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList3, uRIArray2);
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList8 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList8,
            booleanArray7);
        java.util.Iterator<java.lang.Boolean> booleanItor10 = booleanList8.iterator();
        boolean boolean11 = uRIList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList8);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean18 = booleanList15.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.stream();
        boolean boolean20 = uRIList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        uRIList3.ensureCapacity(5);
        boolean boolean23 = identifier0.equals((java.lang.Object) uRIList3);
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor24 = uRIList3.listIterator();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream25 = uRIList3.stream();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList27 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        integerList27.add(0, (java.lang.Integer) 4);
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = integerList27.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet32 = integerList27.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList33 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int34 = uShortList33.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor35 = uShortList33.iterator();
        int int36 = integerList27.indexOf((java.lang.Object) uShortList33);
        uShortList33.trimToSize();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream38 = uShortList33.stream();
        java.lang.Byte[] byteArray41 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42,
            byteArray41);
        boolean boolean44 = byteList42.isEmpty();
        int int46 = byteList42.indexOf((java.lang.Object) 'a');
        int int48 = byteList42.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList51 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList51,
            booleanArray50);
        java.util.ListIterator<java.lang.Boolean> booleanItor54 = booleanList51.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream55 = booleanList51.parallelStream();
        boolean boolean57 = booleanList51.add((java.lang.Boolean) false);
        boolean boolean58 = byteList42.retainAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList59 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj60 = uShortList59.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream61 = uShortList59
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor62 = uShortList59.iterator();
        boolean boolean63 = byteList42.equals((java.lang.Object) uShortItor62);
        org.ccsds.moims.mo.mal.structures.ShortList shortList64 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj65 = shortList64.clone();
        boolean boolean66 = byteList42.equals((java.lang.Object) shortList64);
        esa.mo.nmf.NMFException nMFException68 = new esa.mo.nmf.NMFException("-1");
        boolean boolean69 = byteList42.equals((java.lang.Object) nMFException68);
        byteList42.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList71 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element72 = booleanList71.createElement();
        java.lang.Long long73 = booleanList71.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort74 = booleanList71.getAreaNumber();
        java.lang.Integer int75 = booleanList71.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray76 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList71};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray77 = byteList42.toArray(booleanListArray76);
        java.util.AbstractList<java.lang.Boolean>[] booleanListArray78 = uShortList33.toArray(
            (java.util.AbstractList<java.lang.Boolean>[]) booleanListArray76);
        boolean boolean79 = uRIList3.remove((java.lang.Object) uShortList33);
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(uRIArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(booleanItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(uRIItor24);
        org.junit.Assert.assertNotNull(uRIStream25);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(uOctet32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-10) + "'", int34.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(uShortStream38);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertNotNull(booleanStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(uShortStream61);
        org.junit.Assert.assertNotNull(uShortItor62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(element72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 281475010265086L + "'", long73.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-2) + "'", int75.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray76);
        org.junit.Assert.assertNotNull(booleanListArray77);
        org.junit.Assert.assertNotNull(booleanListArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[100, 1, 1, 100]");
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList22.getServiceNumber();
        boolean boolean25 = longList22.isEmpty();
        java.lang.Object obj26 = longList22.clone();
        org.ccsds.moims.mo.mal.structures.Element element27 = longList22.createElement();
        try {
            java.lang.Long long30 = longList22.set((int) (byte) 100, (java.lang.Long) 281474993487883L);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(element27);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uShortList0.getServiceNumber();
        java.lang.Integer int3 = uShortList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList4 = new org.ccsds.moims.mo.mal.structures.UShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uShortList4.getServiceNumber();
        java.lang.Integer int6 = uShortList4.getTypeShortForm();
        int int7 = uShortList0.lastIndexOf((java.lang.Object) uShortList4);
        uShortList0.trimToSize();
        java.lang.Object[] objArray9 = uShortList0.toArray();
        boolean boolean10 = uShortList0.isEmpty();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList11 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element12 = booleanList11.createElement();
        java.lang.Long long13 = booleanList11.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element14 = booleanList11.createElement();
        esa.mo.nmf.NMFException nMFException16 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray17 = nMFException16.getSuppressed();
        java.lang.Throwable[] throwableArray18 = nMFException16.getSuppressed();
        java.lang.Throwable[] throwableArray19 = nMFException16.getSuppressed();
        boolean boolean20 = booleanList11.equals((java.lang.Object) throwableArray19);
        org.ccsds.moims.mo.mal.structures.Element element21 = booleanList11.createElement();
        org.ccsds.moims.mo.mal.structures.Element element22 = booleanList11.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = booleanList11.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element24 = booleanList11.createElement();
        boolean boolean25 = uShortList0.retainAll((java.util.Collection<java.lang.Boolean>) booleanList11);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList26 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element27 = doubleList26.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = doubleList26.getServiceNumber();
        doubleList26.ensureCapacity(3);
        java.util.Spliterator<java.lang.Double> doubleSpliterator31 = doubleList26.spliterator();
        int int32 = uShortList0.lastIndexOf((java.lang.Object) doubleSpliterator31);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-10) + "'", int3.equals((-10)));
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-10) + "'", int6.equals((-10)));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 281475010265086L + "'", long13.equals(281475010265086L));
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertNotNull(doubleSpliterator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element23 = floatList0.createElement();
        java.util.Iterator<java.lang.Float> floatItor24 = floatList0.iterator();
        try {
            java.util.ListIterator<java.lang.Float> floatItor26 = floatList0.listIterator((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(floatItor24);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.parallelStream();
        shortList0.trimToSize();
        shortList0.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray22 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList23 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23,
            intArray22);
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList28 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList28,
            booleanArray27);
        java.util.Iterator<java.lang.Boolean> booleanItor30 = booleanList28.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream31 = booleanList28.stream();
        boolean boolean32 = intList23.retainAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        boolean boolean33 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36,
            booleanArray35);
        java.util.ListIterator<java.lang.Boolean> booleanItor39 = booleanList36.listIterator((int) (short) 1);
        boolean boolean40 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList36);
        org.ccsds.moims.mo.mal.structures.FloatList floatList41 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long42 = floatList41.getShortForm();
        java.lang.String[] strArray44 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45,
            strArray44);
        int int47 = strList45.size();
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList51 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList51,
            booleanArray50);
        boolean boolean54 = booleanList51.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream55 = booleanList51.stream();
        boolean boolean56 = strList45.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        boolean boolean57 = floatList41.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        java.util.Spliterator<java.lang.Float> floatSpliterator58 = floatList41.spliterator();
        esa.mo.nmf.NMFException nMFException60 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray61 = nMFException60.getSuppressed();
        int int62 = floatList41.lastIndexOf((java.lang.Object) throwableArray61);
        org.ccsds.moims.mo.mal.structures.LongList longList63 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int64 = floatList41.lastIndexOf((java.lang.Object) longList63);
        org.ccsds.moims.mo.mal.structures.Time time65 = new org.ccsds.moims.mo.mal.structures.Time();
        org.ccsds.moims.mo.mal.structures.Element element66 = time65.createElement();
        boolean boolean67 = longList63.equals((java.lang.Object) time65);
        boolean boolean68 = shortList0.remove((java.lang.Object) time65);
        java.lang.Object obj69 = shortList0.clone();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanItor30);
        org.junit.Assert.assertNotNull(booleanStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 281475010265084L + "'", long42.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(booleanStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(floatSpliterator58);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(element66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCRegistration19.aggregationService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = mCRegistration19.comServices;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNull(cOMServicesProvider25);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.LongList longList25 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream26 = longList25.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = longList25.getServiceNumber();
        int int28 = floatList0.indexOf((java.lang.Object) longList25);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet29 = longList25.getAreaVersion();
        java.util.stream.Stream<java.lang.Long> longStream30 = longList25.parallelStream();
        try {
            longList25.add(9, (java.lang.Long) 281474993487888L);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(longStream26);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(uOctet29);
        org.junit.Assert.assertNotNull(longStream30);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = shortList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = shortList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList5 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int6 = uShortList5.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor7 = uShortList5.iterator();
        java.lang.Object[] objArray8 = uShortList5.toArray();
        boolean boolean10 = uShortList5.equals((java.lang.Object) 1);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16,
            byteArray15);
        java.util.Iterator<java.lang.Byte> byteItor18 = byteList16.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration20 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long21 = duration20.getShortForm();
        int int22 = byteList16.indexOf((java.lang.Object) long21);
        int int23 = uShortList5.lastIndexOf((java.lang.Object) byteList16);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29,
            byteArray28);
        boolean boolean32 = byteList29.add((java.lang.Byte) (byte) 10);
        java.lang.String str33 = byteList29.toString();
        java.util.stream.Stream<java.lang.Byte> byteStream34 = byteList29.parallelStream();
        int int35 = byteList29.size();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray36 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList37 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean38 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList37, uRIArray36);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        java.util.Iterator<java.lang.Boolean> booleanItor44 = booleanList42.iterator();
        boolean boolean45 = uRIList37.retainAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        booleanList42.clear();
        boolean boolean47 = byteList29.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        java.util.stream.Stream<java.lang.Boolean> booleanStream48 = booleanList42.stream();
        int int49 = uShortList5.lastIndexOf((java.lang.Object) booleanList42);
        java.util.ListIterator<java.lang.Boolean> booleanItor50 = booleanList42.listIterator();
        org.ccsds.moims.mo.mal.structures.LongList longList52 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet53 = longList52.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = longList52.getAreaNumber();
        java.util.Spliterator<java.lang.Long> longSpliterator55 = longList52.spliterator();
        int int56 = booleanList42.lastIndexOf((java.lang.Object) longList52);
        org.ccsds.moims.mo.mal.structures.URIList uRIList58 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.Element element59 = uRIList58.createElement();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor60 = uRIList58.iterator();
        int int61 = longList52.lastIndexOf((java.lang.Object) uRIList58);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet62 = uRIList58.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList63 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long64 = floatList63.getShortForm();
        java.lang.String[] strArray66 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67,
            strArray66);
        int int69 = strList67.size();
        java.lang.Boolean[] booleanArray72 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList73 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList73,
            booleanArray72);
        boolean boolean76 = booleanList73.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream77 = booleanList73.stream();
        boolean boolean78 = strList67.containsAll((java.util.Collection<java.lang.Boolean>) booleanList73);
        boolean boolean79 = floatList63.containsAll((java.util.Collection<java.lang.Boolean>) booleanList73);
        java.util.Spliterator<java.lang.Float> floatSpliterator80 = floatList63.spliterator();
        esa.mo.nmf.NMFException nMFException82 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray83 = nMFException82.getSuppressed();
        int int84 = floatList63.lastIndexOf((java.lang.Object) throwableArray83);
        org.ccsds.moims.mo.mal.structures.LongList longList85 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int86 = floatList63.lastIndexOf((java.lang.Object) longList85);
        org.ccsds.moims.mo.mal.structures.UShort uShort87 = longList85.getServiceNumber();
        boolean boolean88 = uRIList58.remove((java.lang.Object) uShort87);
        boolean boolean89 = shortList0.remove((java.lang.Object) uShort87);
        org.ccsds.moims.mo.mal.structures.Element element90 = uShort87.createElement();
        int int91 = uShort87.getValue();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-10) + "'", int6.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteItor18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 281474993487875L + "'", long21.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "[-1, -1, 1, 1, 10]" + "'", str33.equals(
            "[-1, -1, 1, 1, 10]"));
        org.junit.Assert.assertNotNull(byteStream34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertNotNull(uRIArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(booleanStream48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(booleanItor50);
        org.junit.Assert.assertNotNull(uOctet53);
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertNotNull(longSpliterator55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertNotNull(uRIItor60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(uOctet62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 281475010265084L + "'", long64.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(booleanStream77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(floatSpliterator80);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(uShort87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(element90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl23 = mCRegistration19.aggregationService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl23);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl6 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl7 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl8 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl9 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF0
            .getAggregationService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl6);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl7);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl8);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("[hi!, , 1.0]");
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray9 = nMFException8.getSuppressed();
        java.lang.Throwable[] throwableArray10 = nMFException8.getSuppressed();
        esa.mo.nmf.NMFException nMFException11 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException8);
        java.lang.String str12 = nMFException8.toString();
        nMFException5.addSuppressed((java.lang.Throwable) nMFException8);
        esa.mo.nmf.NMFException nMFException15 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray16 = nMFException15.getSuppressed();
        java.lang.Throwable[] throwableArray17 = nMFException15.getSuppressed();
        nMFException5.addSuppressed((java.lang.Throwable) nMFException15);
        java.lang.String str19 = nMFException5.toString();
        esa.mo.nmf.NMFException nMFException20 = new esa.mo.nmf.NMFException("100",
            (java.lang.Throwable) nMFException5);
        nMFException2.addSuppressed((java.lang.Throwable) nMFException20);
        esa.mo.nmf.NMFException nMFException22 = new esa.mo.nmf.NMFException("esa.mo.nmf.NMFException: 14.0",
            (java.lang.Throwable) nMFException20);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str12.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "esa.mo.nmf.NMFException: -1" + "'", str19.equals(
            "esa.mo.nmf.NMFException: -1"));
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        org.ccsds.moims.mo.mal.structures.Element element25 = stringList12.createElement();
        java.lang.Object[] objArray26 = stringList12.toArray();
        stringList12.clear();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList29 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long30 = integerList29.getShortForm();
        java.util.stream.Stream<java.lang.Integer> intStream31 = integerList29.parallelStream();
        int int32 = integerList29.size();
        int int33 = integerList29.size();
        java.util.Iterator<java.lang.Integer> intItor34 = integerList29.iterator();
        boolean boolean35 = stringList12.contains((java.lang.Object) integerList29);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 281475010265077L + "'", long30.equals(281475010265077L));
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(intItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = floatList0.createElement();
        try {
            java.lang.Float float25 = floatList0.set((-13), (java.lang.Float) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -13");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(element22);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger(1L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uInteger1.getAreaVersion();
        java.lang.Long long3 = uInteger1.getShortForm();
        java.lang.String str4 = uInteger1.toString();
        long long5 = uInteger1.getValue();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList6 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int7 = uShortList6.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor8 = uShortList6.iterator();
        java.lang.Object[] objArray9 = uShortList6.toArray();
        boolean boolean11 = uShortList6.equals((java.lang.Object) 1);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17,
            byteArray16);
        java.util.Iterator<java.lang.Byte> byteItor19 = byteList17.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration21 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long22 = duration21.getShortForm();
        int int23 = byteList17.indexOf((java.lang.Object) long22);
        int int24 = uShortList6.lastIndexOf((java.lang.Object) byteList17);
        java.lang.Object[] objArray25 = byteList17.toArray();
        java.util.stream.Stream<java.lang.Byte> byteStream26 = byteList17.parallelStream();
        java.lang.Object obj27 = byteList17.clone();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider28 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF29 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCServicesProviderNMF29
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl32 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF29
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF34 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF34
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF34
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF34
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl38 = mCServicesProviderNMF34
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF39 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl40 = mCServicesProviderNMF39
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl41 = mCServicesProviderNMF39
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF42 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCServicesProviderNMF42
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl44 = mCServicesProviderNMF42
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl45 = mCServicesProviderNMF42
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl46 = mCServicesProviderNMF42
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration47 = new esa.mo.nmf.MCRegistration(cOMServicesProvider28,
            parameterProviderServiceImpl33, aggregationProviderServiceImpl38, alertProviderServiceImpl41,
            actionProviderServiceImpl46);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCRegistration47.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl49 = mCRegistration47.actionService;
        int int50 = byteList17.indexOf((java.lang.Object) actionProviderServiceImpl49);
        boolean boolean51 = uInteger1.equals((java.lang.Object) int50);
        java.lang.Long long52 = uInteger1.getShortForm();
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487884L + "'", long3.equals(281474993487884L));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "1" + "'", str4.equals("1"));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-10) + "'", int7.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteItor19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281474993487875L + "'", long22.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(byteStream26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl38);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl40);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl44);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl45);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl46);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 281474993487884L + "'", long52.equals(281474993487884L));
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element1 = stringList0.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList2 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        boolean boolean3 = stringList0.retainAll((java.util.Collection<java.lang.Boolean>) booleanList2);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = org.ccsds.moims.mo.mal.structures.LongList.AREA_SHORT_FORM;
        java.lang.Long long5 = uShort4.getShortForm();
        java.lang.Double[] doubleArray7 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8,
            doubleArray7);
        java.util.Spliterator<java.lang.Double> doubleSpliterator10 = doubleList8.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor11 = doubleList8.iterator();
        boolean boolean12 = uShort4.equals((java.lang.Object) doubleItor11);
        int int13 = stringList0.indexOf((java.lang.Object) doubleItor11);
        java.lang.String str14 = stringList0.toString();
        java.util.Iterator<java.lang.String> strItor15 = stringList0.iterator();
        esa.mo.nmf.NMFException nMFException18 = new esa.mo.nmf.NMFException("[-1, -1, 1, 1, 10]");
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("[1]",
            (java.lang.Throwable) nMFException18);
        int int20 = stringList0.indexOf((java.lang.Object) nMFException18);
        java.lang.String str21 = stringList0.toString();
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281474993487882L + "'", long5.equals(281474993487882L));
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator10);
        org.junit.Assert.assertNotNull(doubleItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]" + "'", str14.equals("[]"));
        org.junit.Assert.assertNotNull(strItor15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[]" + "'", str21.equals("[]"));
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("281474993487883");
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.stream.Stream<java.lang.String> strStream25 = stringList12.parallelStream();
        java.lang.Long[] longArray30 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList31 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList31,
            longArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = longList31.contains(obj33);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger36 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean37 = longList31.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor38 = longList31.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean40 = longList31.remove((java.lang.Object) uShort39);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList41 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int42 = uShortList41.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor43 = uShortList41.iterator();
        java.lang.Object[] objArray44 = uShortList41.toArray();
        uShortList41.clear();
        uShortList41.clear();
        boolean boolean47 = uShortList41.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor48 = uShortList41.iterator();
        boolean boolean49 = longList31.contains((java.lang.Object) uShortList41);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList50 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = booleanList50.getAreaNumber();
        boolean boolean52 = longList31.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        java.lang.Integer int53 = booleanList50.getTypeShortForm();
        boolean boolean55 = booleanList50.add((java.lang.Boolean) true);
        boolean boolean56 = stringList12.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = booleanList50.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element58 = booleanList50.createElement();
        java.lang.String str59 = booleanList50.toString();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(longItor38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-10) + "'", int42.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(uShortItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-2) + "'", int53.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(uShort57);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "[true]" + "'", str59.equals("[true]"));
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        java.util.Iterator<java.lang.Long> longItor24 = longList22.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = longList22.getServiceNumber();
        java.lang.Object[] objArray26 = longList22.toArray();
        longList22.clear();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(longItor24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(objArray26);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.util.ListIterator<java.lang.Float> floatItor22 = floatList0.listIterator();
        floatList0.ensureCapacity(65535);
        java.util.Spliterator<java.lang.Float> floatSpliterator25 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.URI uRI27 = new org.ccsds.moims.mo.mal.structures.URI("[false, true]");
        java.lang.String str28 = uRI27.toString();
        java.lang.String str29 = uRI27.getValue();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList31 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long32 = integerList31.getShortForm();
        java.util.stream.Stream<java.lang.Integer> intStream33 = integerList31.parallelStream();
        int int34 = integerList31.size();
        integerList31.ensureCapacity(2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet37 = integerList31.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Duration duration39 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger41 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        org.ccsds.moims.mo.mal.structures.Element element42 = uInteger41.createElement();
        boolean boolean43 = duration39.equals((java.lang.Object) uInteger41);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet44 = duration39.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet45 = duration39.getAreaVersion();
        int int46 = integerList31.lastIndexOf((java.lang.Object) uOctet45);
        boolean boolean47 = uRI27.equals((java.lang.Object) int46);
        boolean boolean48 = floatList0.equals((java.lang.Object) uRI27);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(floatItor22);
        org.junit.Assert.assertNotNull(floatSpliterator25);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[false, true]" + "'", str28.equals("[false, true]"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "[false, true]" + "'", str29.equals("[false, true]"));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 281475010265077L + "'", long32.equals(281475010265077L));
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(uOctet37);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(uOctet44);
        org.junit.Assert.assertNotNull(uOctet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl27 = mCRegistration19.aggregationService;
        org.ccsds.moims.mo.mal.structures.LongList longList29 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 100);
        longList29.clear();
        boolean boolean31 = longList29.isEmpty();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList33 = new org.ccsds.moims.mo.mal.structures.BooleanList(
            12);
        boolean boolean34 = longList29.removeAll((java.util.Collection<java.lang.Boolean>) booleanList33);
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList35 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) longList29);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCRegistration19.alertService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF24 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCServicesProviderNMF24
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl26 = mCServicesProviderNMF24
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl27 = mCServicesProviderNMF24
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCServicesProviderNMF24
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF29 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCServicesProviderNMF29
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl32 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF34 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF34
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl36 = mCServicesProviderNMF34
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF37
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl41 = mCServicesProviderNMF37
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration42 = new esa.mo.nmf.MCRegistration(cOMServicesProvider23,
            parameterProviderServiceImpl28, aggregationProviderServiceImpl33, alertProviderServiceImpl36,
            actionProviderServiceImpl41);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCRegistration42.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl44 = mCRegistration42.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl45 = mCRegistration42.parameterService;
        org.ccsds.moims.mo.mal.structures.UShortList uShortList46 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj47 = uShortList46.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = uShortList46.getServiceNumber();
        java.lang.Integer int49 = uShortList46.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList50 = new org.ccsds.moims.mo.mal.structures.UShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = uShortList50.getServiceNumber();
        java.lang.Integer int52 = uShortList50.getTypeShortForm();
        int int53 = uShortList46.lastIndexOf((java.lang.Object) uShortList50);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet54 = uShortList46.getAreaVersion();
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode55 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        int int56 = uShortList46.lastIndexOf((java.lang.Object) registrationMode55);
        mCRegistration42.setMode(registrationMode55);
        mCRegistration19.setMode(registrationMode55);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList59 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj60 = uShortList59.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream61 = uShortList59
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor62 = uShortList59.iterator();
        org.ccsds.moims.mo.mal.structures.FloatList floatList63 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long64 = floatList63.getShortForm();
        java.lang.String[] strArray66 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67,
            strArray66);
        int int69 = strList67.size();
        java.lang.Boolean[] booleanArray72 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList73 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList73,
            booleanArray72);
        boolean boolean76 = booleanList73.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream77 = booleanList73.stream();
        boolean boolean78 = strList67.containsAll((java.util.Collection<java.lang.Boolean>) booleanList73);
        boolean boolean79 = floatList63.containsAll((java.util.Collection<java.lang.Boolean>) booleanList73);
        java.util.Spliterator<java.lang.Float> floatSpliterator80 = floatList63.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort81 = floatList63.getAreaNumber();
        java.lang.Object obj82 = null;
        boolean boolean83 = floatList63.equals(obj82);
        int int84 = uShortList59.indexOf(obj82);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream85 = uShortList59
            .parallelStream();
        uShortList59.clear();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList87 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) uShortList59);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl26);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl27);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl44);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-10) + "'", int49.equals((-10)));
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-10) + "'", int52.equals((-10)));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(uOctet54);
        org.junit.Assert.assertTrue("'" + registrationMode55 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode55.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(uShortStream61);
        org.junit.Assert.assertNotNull(uShortItor62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 281475010265084L + "'", long64.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(booleanStream77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(floatSpliterator80);
        org.junit.Assert.assertNotNull(uShort81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(uShortStream85);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList7 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.util.stream.Stream<java.lang.Integer> intStream8 = integerList7.parallelStream();
        java.util.stream.Stream<java.lang.Integer> intStream9 = integerList7.stream();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList16 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList16,
            booleanArray15);
        java.util.Iterator<java.lang.Boolean> booleanItor18 = booleanList16.iterator();
        boolean boolean19 = uRIList11.retainAll((java.util.Collection<java.lang.Boolean>) booleanList16);
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList23 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList23,
            booleanArray22);
        boolean boolean26 = booleanList23.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream27 = booleanList23.stream();
        boolean boolean28 = uRIList11.retainAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        boolean boolean29 = integerList7.removeAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        boolean boolean30 = byteList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        java.util.Iterator<java.lang.Byte> byteItor31 = byteList3.iterator();
        org.ccsds.moims.mo.mal.structures.FloatList floatList32 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long33 = floatList32.getShortForm();
        java.lang.String[] strArray35 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36,
            strArray35);
        int int38 = strList36.size();
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        boolean boolean45 = booleanList42.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream46 = booleanList42.stream();
        boolean boolean47 = strList36.containsAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = floatList32.containsAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        java.util.Spliterator<java.lang.Float> floatSpliterator49 = floatList32.spliterator();
        esa.mo.nmf.NMFException nMFException51 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray52 = nMFException51.getSuppressed();
        int int53 = floatList32.lastIndexOf((java.lang.Object) throwableArray52);
        org.ccsds.moims.mo.mal.structures.LongList longList54 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int55 = floatList32.lastIndexOf((java.lang.Object) longList54);
        java.util.Iterator<java.lang.Long> longItor56 = longList54.iterator();
        boolean boolean57 = byteList3.equals((java.lang.Object) longList54);
        java.util.Spliterator<java.lang.Byte> byteSpliterator58 = byteList3.spliterator();
        boolean boolean59 = byteList3.isEmpty();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanItor18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(booleanStream27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(byteItor31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 281475010265084L + "'", long33.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatSpliterator49);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(longItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        java.lang.String[] strArray1 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        java.lang.String str7 = strList2.set(0, "[false, true]");
        int int8 = strList2.size();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList10 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        boolean boolean12 = integerList10.add((java.lang.Integer) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = integerList10.getServiceNumber();
        java.lang.Byte[] byteArray18 = new java.lang.Byte[]{(byte) 0, (byte) 0, (byte) -1, (byte) 0};
        java.util.ArrayList<java.lang.Byte> byteList19 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList19,
            byteArray18);
        java.util.Iterator<java.lang.Byte> byteItor21 = byteList19.iterator();
        org.ccsds.moims.mo.mal.structures.Duration duration23 = new org.ccsds.moims.mo.mal.structures.Duration(
            (double) 14);
        java.lang.Long long24 = duration23.getShortForm();
        int int25 = byteList19.indexOf((java.lang.Object) long24);
        org.ccsds.moims.mo.mal.structures.ShortList shortList26 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj27 = shortList26.clone();
        java.lang.String str28 = shortList26.toString();
        java.util.Spliterator<java.lang.Short> shortSpliterator29 = shortList26.spliterator();
        boolean boolean30 = byteList19.contains((java.lang.Object) shortList26);
        java.util.ListIterator<java.lang.Byte> byteItor31 = byteList19.listIterator();
        java.lang.Object obj32 = byteList19.clone();
        boolean boolean33 = integerList10.contains((java.lang.Object) byteList19);
        org.ccsds.moims.mo.mal.structures.ShortList shortList34 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj35 = shortList34.clone();
        java.util.stream.Stream<java.lang.Short> shortStream36 = shortList34.parallelStream();
        shortList34.trimToSize();
        shortList34.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray56 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList57 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57,
            intArray56);
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList62 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList62,
            booleanArray61);
        java.util.Iterator<java.lang.Boolean> booleanItor64 = booleanList62.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream65 = booleanList62.stream();
        boolean boolean66 = intList57.retainAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        boolean boolean67 = shortList34.containsAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        java.lang.Boolean[] booleanArray69 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList70 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList70,
            booleanArray69);
        java.util.ListIterator<java.lang.Boolean> booleanItor73 = booleanList70.listIterator((int) (short) 1);
        boolean boolean74 = shortList34.containsAll((java.util.Collection<java.lang.Boolean>) booleanList70);
        java.util.stream.Stream<java.lang.Boolean> booleanStream75 = booleanList70.stream();
        java.lang.String str76 = booleanList70.toString();
        boolean boolean77 = integerList10.removeAll((java.util.Collection<java.lang.Boolean>) booleanList70);
        boolean boolean78 = strList2.remove((java.lang.Object) boolean77);
        java.util.ListIterator<java.lang.String> strItor79 = strList2.listIterator();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList80 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element81 = booleanList80.createElement();
        java.lang.Long long82 = booleanList80.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element83 = booleanList80.createElement();
        esa.mo.nmf.NMFException nMFException85 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray86 = nMFException85.getSuppressed();
        java.lang.Throwable[] throwableArray87 = nMFException85.getSuppressed();
        java.lang.Throwable[] throwableArray88 = nMFException85.getSuppressed();
        boolean boolean89 = booleanList80.equals((java.lang.Object) throwableArray88);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet90 = booleanList80.getAreaVersion();
        boolean boolean91 = strList2.containsAll((java.util.Collection<java.lang.Boolean>) booleanList80);
        try {
            java.util.ListIterator<java.lang.String> strItor93 = strList2.listIterator((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!" + "'", str7.equals("hi!"));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteItor21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 281474993487875L + "'", long24.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]" + "'", str28.equals("[]"));
        org.junit.Assert.assertNotNull(shortSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteItor31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(shortStream36);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanItor64);
        org.junit.Assert.assertNotNull(booleanStream65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(booleanItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(booleanStream75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "[true]" + "'", str76.equals("[true]"));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strItor79);
        org.junit.Assert.assertNotNull(element81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 281475010265086L + "'", long82.equals(281475010265086L));
        org.junit.Assert.assertNotNull(element83);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(uOctet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        java.lang.Throwable throwable1 = null;
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("[, ]", throwable1);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        java.lang.Short[] shortArray2 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList3,
            shortArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = shortList3.equals(obj5);
        java.util.Iterator<java.lang.Short> shortItor7 = shortList3.iterator();
        java.lang.Long[] longArray12 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList13 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList13,
            longArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = longList13.contains(obj15);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger18 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean19 = longList13.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList23 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList23,
            booleanArray22);
        boolean boolean25 = longList13.containsAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList29 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList29,
            booleanArray28);
        java.util.Iterator<java.lang.Boolean> booleanItor31 = booleanList29.iterator();
        int int32 = longList13.indexOf((java.lang.Object) booleanList29);
        int int33 = shortList3.indexOf((java.lang.Object) booleanList29);
        int int34 = shortList3.size();
        org.ccsds.moims.mo.mal.structures.LongList longList36 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        java.util.stream.Stream<java.lang.Long> longStream37 = longList36.parallelStream();
        java.lang.Object[] objArray38 = longList36.toArray();
        int int39 = shortList3.indexOf((java.lang.Object) longList36);
        boolean boolean41 = shortList3.add((java.lang.Short) (short) 10);
        int int42 = shortList3.size();
        org.ccsds.moims.mo.mal.structures.LongList longList44 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet45 = longList44.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = longList44.getAreaNumber();
        longList44.clear();
        java.util.Iterator<java.lang.Long> longItor48 = longList44.iterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet49 = longList44.getAreaVersion();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF50 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl52 = mCServicesProviderNMF50
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl53 = mCServicesProviderNMF50
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl54 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl55 = mCServicesProviderNMF50
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF50
            .getAlertService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl58 = mCServicesProviderNMF50
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl59 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl60 = mCServicesProviderNMF50
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF61 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl62 = mCServicesProviderNMF61
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl63 = mCServicesProviderNMF61
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl64 = mCServicesProviderNMF61
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl65 = mCServicesProviderNMF61
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl66 = mCServicesProviderNMF61
            .getParameterService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl67 = mCServicesProviderNMF61
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF68 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl69 = mCServicesProviderNMF68
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl70 = mCServicesProviderNMF68
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl71 = mCServicesProviderNMF68
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl72 = mCServicesProviderNMF68
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl73 = mCServicesProviderNMF68
            .getParameterService();
        org.ccsds.moims.mo.mc.parameter.provider.ParameterInheritanceSkeleton[] parameterInheritanceSkeletonArray74 = new org.ccsds.moims.mo.mc.parameter.provider.ParameterInheritanceSkeleton[]{parameterProviderServiceImpl60,
                                                                                                                                                                                                  parameterProviderServiceImpl67,
                                                                                                                                                                                                  parameterProviderServiceImpl73};
        org.ccsds.moims.mo.mc.parameter.provider.ParameterInheritanceSkeleton[] parameterInheritanceSkeletonArray75 = longList44
            .toArray(parameterInheritanceSkeletonArray74);
        try {
            org.ccsds.moims.mo.mc.parameter.provider.ParameterInheritanceSkeleton[] parameterInheritanceSkeletonArray76 = shortList3
                .toArray(parameterInheritanceSkeletonArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortItor7);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanItor31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(longStream37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertNotNull(uOctet45);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertNotNull(longItor48);
        org.junit.Assert.assertNotNull(uOctet49);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl52);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl54);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl55);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl58);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl60);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl62);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl63);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl64);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl65);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl66);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl69);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl70);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl71);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl72);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl73);
        org.junit.Assert.assertNotNull(parameterInheritanceSkeletonArray74);
        org.junit.Assert.assertNotNull(parameterInheritanceSkeletonArray75);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList0.getServiceNumber();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider3 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl6 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl7 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF9 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF9
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl11 = mCServicesProviderNMF9
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl12 = mCServicesProviderNMF9
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF9
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl16 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF17 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl18 = mCServicesProviderNMF17
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl19 = mCServicesProviderNMF17
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl20 = mCServicesProviderNMF17
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCServicesProviderNMF17
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration22 = new esa.mo.nmf.MCRegistration(cOMServicesProvider3,
            parameterProviderServiceImpl8, aggregationProviderServiceImpl13, alertProviderServiceImpl16,
            actionProviderServiceImpl21);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl23 = mCRegistration22.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration22.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCRegistration22.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration22.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl27 = mCRegistration22.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCRegistration22.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCRegistration22.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCRegistration22.parameterService;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF31 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl34 = mCServicesProviderNMF31
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl36 = mCServicesProviderNMF31
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl37 = mCServicesProviderNMF31
            .getParameterService();
        org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[] parameterSkeletonArray38 = new org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[]{parameterProviderServiceImpl30,
                                                                                                                                                                 parameterProviderServiceImpl37};
        org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[] parameterSkeletonArray39 = shortList0.toArray(
            parameterSkeletonArray38);
        org.ccsds.moims.mo.mal.structures.UShort uShort40 = shortList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = shortList0.getAreaVersion();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl6);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl7);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl11);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl16);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl18);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl19);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl27);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl34);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterSkeletonArray38);
        org.junit.Assert.assertNotNull(parameterSkeletonArray39);
        org.junit.Assert.assertNotNull(uShort40);
        org.junit.Assert.assertNotNull(uOctet41);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        boolean boolean5 = uShortList0.equals((java.lang.Object) 1);
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray9 = nMFException8.getSuppressed();
        java.lang.Throwable[] throwableArray10 = nMFException8.getSuppressed();
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        nMFException8.addSuppressed((java.lang.Throwable) nMFException12);
        java.lang.Throwable[] throwableArray15 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray16 = nMFException12.getSuppressed();
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("[]",
            (java.lang.Throwable) nMFException12);
        int int18 = uShortList0.indexOf((java.lang.Object) nMFException17);
        org.ccsds.moims.mo.mal.structures.Element element19 = uShortList0.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = uShortList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = new org.ccsds.moims.mo.mal.structures.UShort(12);
        try {
            org.ccsds.moims.mo.mal.structures.UShort uShort24 = uShortList0.set((int) (byte) 10, uShort23);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(uOctet20);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl23 = mCRegistration19.aggregationService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl23);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = shortList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList0.getServiceNumber();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider3 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF4 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl6 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl7 = mCServicesProviderNMF4
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF4
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF9 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF9
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl11 = mCServicesProviderNMF9
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl12 = mCServicesProviderNMF9
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF9
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl16 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF17 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl18 = mCServicesProviderNMF17
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl19 = mCServicesProviderNMF17
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl20 = mCServicesProviderNMF17
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCServicesProviderNMF17
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration22 = new esa.mo.nmf.MCRegistration(cOMServicesProvider3,
            parameterProviderServiceImpl8, aggregationProviderServiceImpl13, alertProviderServiceImpl16,
            actionProviderServiceImpl21);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl23 = mCRegistration22.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration22.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCRegistration22.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration22.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl27 = mCRegistration22.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCRegistration22.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCRegistration22.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCRegistration22.parameterService;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF31 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF31
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl34 = mCServicesProviderNMF31
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl36 = mCServicesProviderNMF31
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl37 = mCServicesProviderNMF31
            .getParameterService();
        org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[] parameterSkeletonArray38 = new org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[]{parameterProviderServiceImpl30,
                                                                                                                                                                 parameterProviderServiceImpl37};
        org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[] parameterSkeletonArray39 = shortList0.toArray(
            parameterSkeletonArray38);
        java.util.Iterator<java.lang.Short> shortItor40 = shortList0.iterator();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl6);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl7);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl11);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl16);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl18);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl19);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl27);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl34);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterSkeletonArray38);
        org.junit.Assert.assertNotNull(parameterSkeletonArray39);
        org.junit.Assert.assertNotNull(shortItor40);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = floatList0.createElement();
        boolean boolean23 = floatList0.isEmpty();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException2);
        java.lang.String str6 = nMFException2.toString();
        java.lang.String str7 = nMFException2.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str6.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str7.equals(
            "esa.mo.nmf.NMFException: 0"));
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl5 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl6 = mCServicesProviderNMF0
            .getParameterService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl6);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = octetList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = octetList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Identifier identifier5 = new org.ccsds.moims.mo.mal.structures.Identifier(
            "hi!");
        java.lang.Integer int6 = identifier5.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element7 = identifier5.createElement();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList8 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = doubleList8.getServiceNumber();
        java.util.stream.Stream<java.lang.Double> doubleStream10 = doubleList8.stream();
        boolean boolean11 = identifier5.equals((java.lang.Object) doubleList8);
        java.lang.Byte[] byteArray16 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList17 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList17,
            byteArray16);
        boolean boolean20 = byteList17.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj21 = byteList17.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream22 = byteList17.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList24 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int25 = byteList17.indexOf((java.lang.Object) stringList24);
        byte[] byteArray29 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob30 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray29);
        int int31 = blob30.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob32 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean33 = blob30.equals((java.lang.Object) blob32);
        boolean boolean34 = stringList24.remove((java.lang.Object) blob32);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF35 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean36 = stringList24.equals((java.lang.Object) mCServicesProviderNMF35);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl37 = mCServicesProviderNMF35
            .getParameterService();
        boolean boolean38 = identifier5.equals((java.lang.Object) parameterProviderServiceImpl37);
        java.lang.String str39 = identifier5.getValue();
        boolean boolean40 = octetList0.equals((java.lang.Object) identifier5);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = octetList0.getAreaVersion();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 6 + "'", int6.equals(6));
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(doubleStream10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteStream22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "hi!" + "'", str39.equals("hi!"));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(uOctet41);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl5 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl6 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl5);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl6);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        java.lang.String[] strArray1 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean5 = strList2.add("hi!");
        org.ccsds.moims.mo.mal.structures.FloatList floatList6 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long7 = floatList6.getShortForm();
        java.lang.String[] strArray9 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        int int12 = strList10.size();
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList16 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList16,
            booleanArray15);
        boolean boolean19 = booleanList16.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream20 = booleanList16.stream();
        boolean boolean21 = strList10.containsAll((java.util.Collection<java.lang.Boolean>) booleanList16);
        boolean boolean22 = floatList6.containsAll((java.util.Collection<java.lang.Boolean>) booleanList16);
        org.ccsds.moims.mo.mal.structures.URI uRI23 = new org.ccsds.moims.mo.mal.structures.URI();
        int int24 = floatList6.lastIndexOf((java.lang.Object) uRI23);
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = uRI23.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet26 = uRI23.getAreaVersion();
        boolean boolean27 = strList2.equals((java.lang.Object) uOctet26);
        java.util.ListIterator<java.lang.String> strItor28 = strList2.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider29 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF30 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl31 = mCServicesProviderNMF30
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl32 = mCServicesProviderNMF30
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF30
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF30
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF35 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCServicesProviderNMF35
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF35
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl38 = mCServicesProviderNMF35
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF35
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF40 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl41 = mCServicesProviderNMF40
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl42 = mCServicesProviderNMF40
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF43 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl44 = mCServicesProviderNMF43
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl45 = mCServicesProviderNMF43
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl46 = mCServicesProviderNMF43
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl47 = mCServicesProviderNMF43
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration48 = new esa.mo.nmf.MCRegistration(cOMServicesProvider29,
            parameterProviderServiceImpl34, aggregationProviderServiceImpl39, alertProviderServiceImpl42,
            actionProviderServiceImpl47);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl49 = mCRegistration48.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl50 = mCRegistration48.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider51 = mCRegistration48.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider52 = mCRegistration48.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl53 = mCRegistration48.alertService;
        esa.mo.nmf.MCRegistration[] mCRegistrationArray54 = new esa.mo.nmf.MCRegistration[]{mCRegistration48};
        try {
            esa.mo.nmf.MCRegistration[] mCRegistrationArray55 = strList2.toArray(mCRegistrationArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265084L + "'", long7.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(uOctet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl31);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl41);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl42);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl44);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl45);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl46);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl47);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl49);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl50);
        org.junit.Assert.assertNull(cOMServicesProvider51);
        org.junit.Assert.assertNull(cOMServicesProvider52);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl53);
        org.junit.Assert.assertNotNull(mCRegistrationArray54);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("esa.mo.nmf.NMFException: 0.0");
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl5 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl6 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl7 = mCServicesProviderNMF0
            .getActionService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl5);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl6);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl7);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.Element element1 = octetList0.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = octetList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = octetList0.getServiceNumber();
        java.lang.Long long6 = octetList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.ShortList shortList7 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj8 = shortList7.clone();
        java.util.stream.Stream<java.lang.Short> shortStream9 = shortList7.parallelStream();
        shortList7.trimToSize();
        shortList7.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray29 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList30 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList30,
            intArray29);
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList35 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList35,
            booleanArray34);
        java.util.Iterator<java.lang.Boolean> booleanItor37 = booleanList35.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream38 = booleanList35.stream();
        boolean boolean39 = intList30.retainAll((java.util.Collection<java.lang.Boolean>) booleanList35);
        boolean boolean40 = shortList7.containsAll((java.util.Collection<java.lang.Boolean>) booleanList35);
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList43 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList43,
            booleanArray42);
        java.util.ListIterator<java.lang.Boolean> booleanItor46 = booleanList43.listIterator((int) (short) 1);
        boolean boolean47 = shortList7.containsAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        java.util.stream.Stream<java.lang.Boolean> booleanStream48 = booleanList43.stream();
        boolean boolean49 = booleanList43.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList50 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long51 = floatList50.getShortForm();
        java.lang.String[] strArray53 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54,
            strArray53);
        int int56 = strList54.size();
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList60 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList60,
            booleanArray59);
        boolean boolean63 = booleanList60.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream64 = booleanList60.stream();
        boolean boolean65 = strList54.containsAll((java.util.Collection<java.lang.Boolean>) booleanList60);
        boolean boolean66 = floatList50.containsAll((java.util.Collection<java.lang.Boolean>) booleanList60);
        java.util.Spliterator<java.lang.Float> floatSpliterator67 = floatList50.spliterator();
        esa.mo.nmf.NMFException nMFException69 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray70 = nMFException69.getSuppressed();
        int int71 = floatList50.lastIndexOf((java.lang.Object) throwableArray70);
        org.ccsds.moims.mo.mal.structures.Element element72 = floatList50.createElement();
        int int73 = booleanList43.lastIndexOf((java.lang.Object) element72);
        booleanList43.clear();
        boolean boolean75 = octetList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList43);
        java.util.stream.Stream<java.lang.Boolean> booleanStream76 = booleanList43.parallelStream();
        booleanList43.clear();
        org.junit.Assert.assertNotNull(element1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265081L + "'", long6.equals(281475010265081L));
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(shortStream9);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanItor37);
        org.junit.Assert.assertNotNull(booleanStream38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(booleanStream48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 281475010265084L + "'", long51.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(floatSpliterator67);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(element72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(booleanStream76);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray2 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        int int5 = strList3.size();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9,
            booleanArray8);
        boolean boolean12 = booleanList9.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream13 = booleanList9.stream();
        boolean boolean14 = strList3.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        boolean boolean15 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList9);
        java.util.stream.Stream<java.lang.Short> shortStream16 = shortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element17 = shortList0.createElement();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = shortList0.indexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList22 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str23 = doubleList22.toString();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        java.util.ListIterator<java.lang.Boolean> booleanItor29 = booleanList26.listIterator((int) (short) 1);
        boolean boolean30 = doubleList22.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList34 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList34,
            byteArray33);
        boolean boolean36 = byteList34.isEmpty();
        int int37 = byteList34.size();
        int int38 = booleanList26.indexOf((java.lang.Object) byteList34);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        java.util.Iterator<java.lang.Boolean> booleanItor44 = booleanList42.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream45 = booleanList42.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor46 = booleanList42.iterator();
        boolean boolean47 = byteList34.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = shortList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        org.ccsds.moims.mo.mal.structures.Element element49 = shortList0.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList50 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int51 = booleanList50.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element52 = booleanList50.createElement();
        boolean boolean53 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        org.ccsds.moims.mo.mal.structures.OctetList octetList54 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort55 = octetList54.getServiceNumber();
        boolean boolean56 = octetList54.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = octetList54.getServiceNumber();
        java.lang.Long long58 = octetList54.getShortForm();
        boolean boolean59 = shortList0.contains((java.lang.Object) octetList54);
        org.ccsds.moims.mo.mal.structures.Duration duration60 = new org.ccsds.moims.mo.mal.structures.Duration();
        java.lang.Long long61 = duration60.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element62 = duration60.createElement();
        int int63 = octetList54.indexOf((java.lang.Object) duration60);
        java.lang.Integer int64 = duration60.getTypeShortForm();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(booleanStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortStream16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "[]" + "'", str23.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanItor44);
        org.junit.Assert.assertNotNull(booleanStream45);
        org.junit.Assert.assertNotNull(booleanItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51.equals((-2)));
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(uShort55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(uShort57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 281475010265081L + "'", long58.equals(281475010265081L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 281474993487875L + "'", long61.equals(281474993487875L));
        org.junit.Assert.assertNotNull(element62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64.equals(3));
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        java.lang.Double[] doubleArray3 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList4 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList4,
            doubleArray3);
        java.util.Spliterator<java.lang.Double> doubleSpliterator6 = doubleList4.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor7 = doubleList4.iterator();
        boolean boolean8 = stringList1.equals((java.lang.Object) doubleItor7);
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj10 = shortList9.clone();
        java.lang.String str11 = shortList9.toString();
        java.util.Spliterator<java.lang.Short> shortSpliterator12 = shortList9.spliterator();
        boolean boolean13 = stringList1.remove((java.lang.Object) shortSpliterator12);
        java.lang.Integer int14 = stringList1.getTypeShortForm();
        int int15 = stringList1.size();
        org.ccsds.moims.mo.mal.structures.FloatList floatList16 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long17 = floatList16.getShortForm();
        java.lang.String[] strArray19 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20,
            strArray19);
        int int22 = strList20.size();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        boolean boolean29 = booleanList26.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream30 = booleanList26.stream();
        boolean boolean31 = strList20.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        boolean boolean32 = floatList16.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.util.Spliterator<java.lang.Float> floatSpliterator33 = floatList16.spliterator();
        esa.mo.nmf.NMFException nMFException35 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray36 = nMFException35.getSuppressed();
        int int37 = floatList16.lastIndexOf((java.lang.Object) throwableArray36);
        java.lang.Integer int38 = floatList16.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = floatList16.getServiceNumber();
        boolean boolean40 = stringList1.equals((java.lang.Object) floatList16);
        org.ccsds.moims.mo.mal.structures.StringList stringList42 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        org.ccsds.moims.mo.mal.structures.UShort uShort43 = stringList42.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList45 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long46 = integerList45.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList48 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        org.ccsds.moims.mo.mal.structures.IntegerList integerList50 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long51 = integerList50.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray52 = new org.ccsds.moims.mo.mal.structures.IntegerList[]{integerList45,
                                                                                                                                 integerList48,
                                                                                                                                 integerList50};
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray53 = stringList42.toArray(integerListArray52);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = stringList42.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.ShortList shortList55 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj56 = shortList55.clone();
        java.lang.Long long57 = shortList55.getShortForm();
        int int58 = stringList42.indexOf((java.lang.Object) shortList55);
        java.util.Iterator<java.lang.Short> shortItor59 = shortList55.iterator();
        java.lang.Integer int60 = shortList55.getTypeShortForm();
        java.lang.Long long61 = shortList55.getShortForm();
        boolean boolean62 = floatList16.contains((java.lang.Object) shortList55);
        try {
            java.lang.Float float64 = floatList16.get((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator6);
        org.junit.Assert.assertNotNull(doubleItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]" + "'", str11.equals("[]"));
        org.junit.Assert.assertNotNull(shortSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-15) + "'", int14.equals((-15)));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 281475010265084L + "'", long17.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatSpliterator33);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-4) + "'", int38.equals((-4)));
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(uShort43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 281475010265077L + "'", long46.equals(281475010265077L));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 281475010265077L + "'", long51.equals(281475010265077L));
        org.junit.Assert.assertNotNull(integerListArray52);
        org.junit.Assert.assertNotNull(integerListArray53);
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 281475010265079L + "'", long57.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(shortItor59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-9) + "'", int60.equals((-9)));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 281475010265079L + "'", long61.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.stream.Stream<java.lang.String> strStream25 = stringList12.parallelStream();
        java.lang.Long[] longArray30 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList31 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList31,
            longArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = longList31.contains(obj33);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger36 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean37 = longList31.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor38 = longList31.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean40 = longList31.remove((java.lang.Object) uShort39);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList41 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int42 = uShortList41.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor43 = uShortList41.iterator();
        java.lang.Object[] objArray44 = uShortList41.toArray();
        uShortList41.clear();
        uShortList41.clear();
        boolean boolean47 = uShortList41.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor48 = uShortList41.iterator();
        boolean boolean49 = longList31.contains((java.lang.Object) uShortList41);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList50 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = booleanList50.getAreaNumber();
        boolean boolean52 = longList31.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        java.lang.Integer int53 = booleanList50.getTypeShortForm();
        boolean boolean55 = booleanList50.add((java.lang.Boolean) true);
        boolean boolean56 = stringList12.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = booleanList50.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = booleanList50.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort59 = uOctet58.getAreaNumber();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(longItor38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-10) + "'", int42.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(uShortItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-2) + "'", int53.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(uShort57);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertNotNull(uShort59);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = longList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList3 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element4 = stringList3.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList5 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        boolean boolean6 = stringList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList5);
        boolean boolean7 = longList1.retainAll((java.util.Collection<java.lang.Boolean>) booleanList5);
        esa.mo.nmf.NMFException nMFException9 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray10 = nMFException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = nMFException9.getSuppressed();
        boolean boolean12 = longList1.contains((java.lang.Object) throwableArray11);
        org.ccsds.moims.mo.mal.structures.Element element13 = longList1.createElement();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime14 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.Long long15 = fineTime14.getShortForm();
        java.lang.String str16 = fineTime14.toString();
        java.lang.Integer int17 = fineTime14.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = fineTime14.getServiceNumber();
        boolean boolean19 = longList1.equals((java.lang.Object) fineTime14);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487889L + "'", long15.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "0" + "'", str16.equals("0"));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 17 + "'", int17.equals(17));
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        uShortList0.clear();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream5 = uShortList0.stream();
        java.lang.String str6 = uShortList0.toString();
        org.ccsds.moims.mo.mal.structures.FloatList floatList7 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long8 = floatList7.getShortForm();
        floatList7.trimToSize();
        java.lang.String str10 = floatList7.toString();
        java.util.Spliterator<java.lang.Float> floatSpliterator11 = floatList7.spliterator();
        java.lang.Byte[] byteArray14 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15,
            byteArray14);
        boolean boolean17 = byteList15.isEmpty();
        int int19 = byteList15.indexOf((java.lang.Object) 'a');
        int int21 = byteList15.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList24 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList24,
            booleanArray23);
        java.util.ListIterator<java.lang.Boolean> booleanItor27 = booleanList24.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream28 = booleanList24.parallelStream();
        boolean boolean30 = booleanList24.add((java.lang.Boolean) false);
        boolean boolean31 = byteList15.retainAll((java.util.Collection<java.lang.Boolean>) booleanList24);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList32 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj33 = uShortList32.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream34 = uShortList32
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor35 = uShortList32.iterator();
        boolean boolean36 = byteList15.equals((java.lang.Object) uShortItor35);
        org.ccsds.moims.mo.mal.structures.ShortList shortList37 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj38 = shortList37.clone();
        boolean boolean39 = byteList15.equals((java.lang.Object) shortList37);
        esa.mo.nmf.NMFException nMFException41 = new esa.mo.nmf.NMFException("-1");
        boolean boolean42 = byteList15.equals((java.lang.Object) nMFException41);
        byteList15.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList44 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element45 = booleanList44.createElement();
        java.lang.Long long46 = booleanList44.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort47 = booleanList44.getAreaNumber();
        java.lang.Integer int48 = booleanList44.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray49 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList44};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray50 = byteList15.toArray(booleanListArray49);
        boolean boolean51 = floatList7.remove((java.lang.Object) booleanListArray49);
        java.util.ArrayList<java.lang.Boolean>[] booleanListArray52 = uShortList0.toArray(
            (java.util.ArrayList<java.lang.Boolean>[]) booleanListArray49);
        uShortList0.clear();
        java.lang.Class<?> wildcardClass54 = uShortList0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(uShortStream5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "[]" + "'", str6.equals("[]"));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265084L + "'", long8.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[]" + "'", str10.equals("[]"));
        org.junit.Assert.assertNotNull(floatSpliterator11);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanItor27);
        org.junit.Assert.assertNotNull(booleanStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(uShortStream34);
        org.junit.Assert.assertNotNull(uShortItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 281475010265086L + "'", long46.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-2) + "'", int48.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray49);
        org.junit.Assert.assertNotNull(booleanListArray50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(booleanListArray52);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode23 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration19.setMode(registrationMode23);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertTrue("'" + registrationMode23 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode23.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = longList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList3 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element4 = stringList3.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList5 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        boolean boolean6 = stringList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList5);
        boolean boolean7 = longList1.retainAll((java.util.Collection<java.lang.Boolean>) booleanList5);
        esa.mo.nmf.NMFException nMFException9 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray10 = nMFException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = nMFException9.getSuppressed();
        boolean boolean12 = longList1.contains((java.lang.Object) throwableArray11);
        org.ccsds.moims.mo.mal.structures.Element element13 = longList1.createElement();
        java.util.ListIterator<java.lang.Long> longItor14 = longList1.listIterator();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList15 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = booleanList15.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = booleanList15.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = booleanList15.getServiceNumber();
        boolean boolean19 = longList1.retainAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        booleanList15.trimToSize();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(longItor14);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl2 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl4 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl4);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[true]");
        java.lang.String str2 = nMFException1.toString();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList4 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int5 = uShortList4.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor6 = uShortList4.iterator();
        java.lang.Object[] objArray7 = uShortList4.toArray();
        boolean boolean9 = uShortList4.equals((java.lang.Object) 1);
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = nMFException12.getSuppressed();
        esa.mo.nmf.NMFException nMFException16 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray17 = nMFException16.getSuppressed();
        nMFException12.addSuppressed((java.lang.Throwable) nMFException16);
        java.lang.Throwable[] throwableArray19 = nMFException16.getSuppressed();
        java.lang.Throwable[] throwableArray20 = nMFException16.getSuppressed();
        esa.mo.nmf.NMFException nMFException21 = new esa.mo.nmf.NMFException("[]",
            (java.lang.Throwable) nMFException16);
        int int22 = uShortList4.indexOf((java.lang.Object) nMFException21);
        esa.mo.nmf.NMFException nMFException23 = new esa.mo.nmf.NMFException("false",
            (java.lang.Throwable) nMFException21);
        java.lang.Throwable[] throwableArray24 = nMFException23.getSuppressed();
        java.lang.Throwable[] throwableArray25 = nMFException23.getSuppressed();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException23);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "esa.mo.nmf.NMFException: [true]" + "'", str2.equals(
            "esa.mo.nmf.NMFException: [true]"));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-10) + "'", int5.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[10]");
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException2);
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = nMFException5.getSuppressed();
        java.lang.String str8 = nMFException5.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "esa.mo.nmf.NMFException: [hi!, hi!]" + "'", str8.equals(
            "esa.mo.nmf.NMFException: [hi!, hi!]"));
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = longList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList26 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element27 = stringList26.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = stringList26.getServiceNumber();
        java.lang.Integer int29 = stringList26.getTypeShortForm();
        stringList26.ensureCapacity(13);
        int int32 = longList22.lastIndexOf((java.lang.Object) stringList26);
        boolean boolean33 = longList22.isEmpty();
        java.lang.Long long34 = longList22.getShortForm();
        org.ccsds.moims.mo.mal.structures.StringList stringList36 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = stringList36.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList39 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long40 = integerList39.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList42 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        org.ccsds.moims.mo.mal.structures.IntegerList integerList44 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long45 = integerList44.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray46 = new org.ccsds.moims.mo.mal.structures.IntegerList[]{integerList39,
                                                                                                                                 integerList42,
                                                                                                                                 integerList44};
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray47 = stringList36.toArray(integerListArray46);
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = stringList36.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.ShortList shortList49 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj50 = shortList49.clone();
        java.lang.Long long51 = shortList49.getShortForm();
        int int52 = stringList36.indexOf((java.lang.Object) shortList49);
        java.util.Iterator<java.lang.Short> shortItor53 = shortList49.iterator();
        boolean boolean54 = longList22.remove((java.lang.Object) shortItor53);
        java.lang.Long long55 = longList22.getShortForm();
        java.lang.Object[] objArray56 = longList22.toArray();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-15) + "'", int29.equals((-15)));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 281475010265075L + "'", long34.equals(281475010265075L));
        org.junit.Assert.assertNotNull(uShort37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 281475010265077L + "'", long40.equals(281475010265077L));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 281475010265077L + "'", long45.equals(281475010265077L));
        org.junit.Assert.assertNotNull(integerListArray46);
        org.junit.Assert.assertNotNull(integerListArray47);
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 281475010265079L + "'", long51.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 281475010265075L + "'", long55.equals(281475010265075L));
        org.junit.Assert.assertNotNull(objArray56);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        org.ccsds.moims.mo.mal.structures.URI uRI17 = new org.ccsds.moims.mo.mal.structures.URI();
        int int18 = floatList0.lastIndexOf((java.lang.Object) uRI17);
        floatList0.trimToSize();
        esa.mo.nmf.NMFException nMFException22 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray23 = nMFException22.getSuppressed();
        java.lang.Throwable[] throwableArray24 = nMFException22.getSuppressed();
        esa.mo.nmf.NMFException nMFException25 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException22);
        java.lang.String str26 = nMFException22.toString();
        int int27 = floatList0.indexOf((java.lang.Object) nMFException22);
        java.util.stream.Stream<java.lang.Float> floatStream28 = floatList0.parallelStream();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str26.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(floatStream28);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        java.lang.String[] strArray1 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean5 = strList2.add("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = strList2.equals(obj6);
        java.util.ListIterator<java.lang.String> strItor8 = strList2.listIterator();
        java.lang.Object obj9 = null;
        boolean boolean10 = strList2.remove(obj9);
        java.util.ListIterator<java.lang.String> strItor11 = strList2.listIterator();
        esa.mo.nmf.NMFException nMFException14 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray15 = nMFException14.getSuppressed();
        java.lang.Throwable[] throwableArray16 = nMFException14.getSuppressed();
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException14);
        int int18 = strList2.lastIndexOf((java.lang.Object) nMFException14);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strItor8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        java.lang.Double[] doubleArray3 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList4 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList4,
            doubleArray3);
        java.util.Spliterator<java.lang.Double> doubleSpliterator6 = doubleList4.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor7 = doubleList4.iterator();
        boolean boolean8 = stringList1.equals((java.lang.Object) doubleItor7);
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj10 = shortList9.clone();
        java.lang.String str11 = shortList9.toString();
        java.util.Spliterator<java.lang.Short> shortSpliterator12 = shortList9.spliterator();
        boolean boolean13 = stringList1.remove((java.lang.Object) shortSpliterator12);
        java.lang.Integer int14 = stringList1.getTypeShortForm();
        int int15 = stringList1.size();
        org.ccsds.moims.mo.mal.structures.FloatList floatList16 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long17 = floatList16.getShortForm();
        java.lang.String[] strArray19 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20,
            strArray19);
        int int22 = strList20.size();
        java.lang.Boolean[] booleanArray25 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList26 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList26,
            booleanArray25);
        boolean boolean29 = booleanList26.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream30 = booleanList26.stream();
        boolean boolean31 = strList20.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        boolean boolean32 = floatList16.containsAll((java.util.Collection<java.lang.Boolean>) booleanList26);
        java.util.Spliterator<java.lang.Float> floatSpliterator33 = floatList16.spliterator();
        esa.mo.nmf.NMFException nMFException35 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray36 = nMFException35.getSuppressed();
        int int37 = floatList16.lastIndexOf((java.lang.Object) throwableArray36);
        java.lang.Integer int38 = floatList16.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = floatList16.getServiceNumber();
        boolean boolean40 = stringList1.equals((java.lang.Object) floatList16);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = stringList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet42 = uOctet41.getAreaVersion();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator6);
        org.junit.Assert.assertNotNull(doubleItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]" + "'", str11.equals("[]"));
        org.junit.Assert.assertNotNull(shortSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-15) + "'", int14.equals((-15)));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 281475010265084L + "'", long17.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatSpliterator33);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-4) + "'", int38.equals((-4)));
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertNotNull(uOctet42);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = longList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList26 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element27 = stringList26.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = stringList26.getServiceNumber();
        java.lang.Integer int29 = stringList26.getTypeShortForm();
        stringList26.ensureCapacity(13);
        int int32 = longList22.lastIndexOf((java.lang.Object) stringList26);
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = stringList26.getServiceNumber();
        boolean boolean34 = stringList26.isEmpty();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-15) + "'", int29.equals((-15)));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.parallelStream();
        shortList0.trimToSize();
        shortList0.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray22 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList23 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23,
            intArray22);
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList28 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList28,
            booleanArray27);
        java.util.Iterator<java.lang.Boolean> booleanItor30 = booleanList28.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream31 = booleanList28.stream();
        boolean boolean32 = intList23.retainAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        boolean boolean33 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList28);
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36,
            booleanArray35);
        java.util.ListIterator<java.lang.Boolean> booleanItor39 = booleanList36.listIterator((int) (short) 1);
        boolean boolean40 = shortList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList36);
        org.ccsds.moims.mo.mal.structures.FloatList floatList41 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long42 = floatList41.getShortForm();
        java.lang.String[] strArray44 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45,
            strArray44);
        int int47 = strList45.size();
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList51 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList51,
            booleanArray50);
        boolean boolean54 = booleanList51.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream55 = booleanList51.stream();
        boolean boolean56 = strList45.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        boolean boolean57 = floatList41.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        java.util.Spliterator<java.lang.Float> floatSpliterator58 = floatList41.spliterator();
        esa.mo.nmf.NMFException nMFException60 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray61 = nMFException60.getSuppressed();
        int int62 = floatList41.lastIndexOf((java.lang.Object) throwableArray61);
        org.ccsds.moims.mo.mal.structures.LongList longList63 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int64 = floatList41.lastIndexOf((java.lang.Object) longList63);
        org.ccsds.moims.mo.mal.structures.Time time65 = new org.ccsds.moims.mo.mal.structures.Time();
        org.ccsds.moims.mo.mal.structures.Element element66 = time65.createElement();
        boolean boolean67 = longList63.equals((java.lang.Object) time65);
        boolean boolean68 = shortList0.remove((java.lang.Object) time65);
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = shortList0.getServiceNumber();
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(booleanItor30);
        org.junit.Assert.assertNotNull(booleanStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(booleanItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 281475010265084L + "'", long42.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(booleanStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(floatSpliterator58);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(element66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(uShort69);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl5 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl6 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl7 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl9 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl5);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl6);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl9);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        java.lang.Byte[] byteArray2 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList3 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList3, byteArray2);
        boolean boolean5 = byteList3.isEmpty();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList7 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.util.stream.Stream<java.lang.Integer> intStream8 = integerList7.parallelStream();
        java.util.stream.Stream<java.lang.Integer> intStream9 = integerList7.stream();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean12 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList16 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList16,
            booleanArray15);
        java.util.Iterator<java.lang.Boolean> booleanItor18 = booleanList16.iterator();
        boolean boolean19 = uRIList11.retainAll((java.util.Collection<java.lang.Boolean>) booleanList16);
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList23 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList23,
            booleanArray22);
        boolean boolean26 = booleanList23.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream27 = booleanList23.stream();
        boolean boolean28 = uRIList11.retainAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        boolean boolean29 = integerList7.removeAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        boolean boolean30 = byteList3.retainAll((java.util.Collection<java.lang.Boolean>) booleanList23);
        java.util.Iterator<java.lang.Byte> byteItor31 = byteList3.iterator();
        org.ccsds.moims.mo.mal.structures.FloatList floatList32 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long33 = floatList32.getShortForm();
        java.lang.String[] strArray35 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36,
            strArray35);
        int int38 = strList36.size();
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList42 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList42,
            booleanArray41);
        boolean boolean45 = booleanList42.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream46 = booleanList42.stream();
        boolean boolean47 = strList36.containsAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        boolean boolean48 = floatList32.containsAll((java.util.Collection<java.lang.Boolean>) booleanList42);
        java.util.Spliterator<java.lang.Float> floatSpliterator49 = floatList32.spliterator();
        esa.mo.nmf.NMFException nMFException51 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray52 = nMFException51.getSuppressed();
        int int53 = floatList32.lastIndexOf((java.lang.Object) throwableArray52);
        org.ccsds.moims.mo.mal.structures.LongList longList54 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int55 = floatList32.lastIndexOf((java.lang.Object) longList54);
        java.util.Iterator<java.lang.Long> longItor56 = longList54.iterator();
        boolean boolean57 = byteList3.equals((java.lang.Object) longList54);
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = longList54.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet59 = longList54.getAreaVersion();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertNotNull(uRIArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanItor18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(booleanStream27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(byteItor31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 281475010265084L + "'", long33.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(floatSpliterator49);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(longItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertNotNull(uOctet59);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        longList22.trimToSize();
        java.lang.Object[] objArray25 = longList22.toArray();
        java.lang.Long long26 = longList22.getShortForm();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281475010265075L + "'", long26.equals(281475010265075L));
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.Element element24 = floatList0.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = floatList0.getAreaVersion();
        boolean boolean26 = floatList0.isEmpty();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long2 = integerList1.getShortForm();
        java.util.stream.Stream<java.lang.Integer> intStream3 = integerList1.parallelStream();
        int int4 = integerList1.size();
        integerList1.ensureCapacity(2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = integerList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList9 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) (short) 1);
        int int10 = integerList1.indexOf((java.lang.Object) integerList9);
        java.util.stream.Stream<java.lang.Integer> intStream11 = integerList1.stream();
        esa.mo.nmf.NMFException nMFException15 = new esa.mo.nmf.NMFException("0");
        esa.mo.nmf.NMFException nMFException16 = new esa.mo.nmf.NMFException("hi!",
            (java.lang.Throwable) nMFException15);
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("0.0",
            (java.lang.Throwable) nMFException15);
        java.lang.Throwable[] throwableArray18 = nMFException17.getSuppressed();
        boolean boolean19 = integerList1.remove((java.lang.Object) nMFException17);
        java.lang.Integer int20 = integerList1.getTypeShortForm();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265077L + "'", long2.equals(281475010265077L));
        org.junit.Assert.assertNotNull(intStream3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-11) + "'", int20.equals((-11)));
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode21 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration19.setMode(registrationMode21);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF24 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCServicesProviderNMF24
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl26 = mCServicesProviderNMF24
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl27 = mCServicesProviderNMF24
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCServicesProviderNMF24
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF29 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl30 = mCServicesProviderNMF29
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl32 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl33 = mCServicesProviderNMF29
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF34 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF34
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl36 = mCServicesProviderNMF34
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF37
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl41 = mCServicesProviderNMF37
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration42 = new esa.mo.nmf.MCRegistration(cOMServicesProvider23,
            parameterProviderServiceImpl28, aggregationProviderServiceImpl33, alertProviderServiceImpl36,
            actionProviderServiceImpl41);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCRegistration42.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl44 = mCRegistration42.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl45 = mCRegistration42.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl46 = mCRegistration42.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl47 = mCRegistration42.actionService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode48 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration42.setMode(registrationMode48);
        mCRegistration19.setMode(registrationMode48);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider52 = mCRegistration19.comServices;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertTrue("'" + registrationMode21 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode21.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl26);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl27);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl32);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl33);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl44);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl45);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl46);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl47);
        org.junit.Assert.assertTrue("'" + registrationMode48 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode48.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNull(cOMServicesProvider52);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("1.0");
        java.lang.Throwable[] throwableArray2 = nMFException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("10.0");
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        esa.mo.nmf.NMFException nMFException0 = new esa.mo.nmf.NMFException();
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException();
        nMFException0.addSuppressed((java.lang.Throwable) nMFException1);
        java.lang.String str3 = nMFException0.toString();
        java.lang.Throwable[] throwableArray4 = nMFException0.getSuppressed();
        java.lang.String str5 = nMFException0.toString();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "esa.mo.nmf.NMFException" + "'", str3.equals(
            "esa.mo.nmf.NMFException"));
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "esa.mo.nmf.NMFException" + "'", str5.equals(
            "esa.mo.nmf.NMFException"));
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uRIList1.getAreaNumber();
        java.lang.Integer int3 = uRIList1.getTypeShortForm();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator4 = uRIList1.spliterator();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator5 = uRIList1.spliterator();
        org.ccsds.moims.mo.mal.structures.StringList stringList7 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = stringList7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList10 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long11 = integerList10.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList13 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        org.ccsds.moims.mo.mal.structures.IntegerList integerList15 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long16 = integerList15.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray17 = new org.ccsds.moims.mo.mal.structures.IntegerList[]{integerList10,
                                                                                                                                 integerList13,
                                                                                                                                 integerList15};
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray18 = stringList7.toArray(integerListArray17);
        org.ccsds.moims.mo.mal.structures.UShort uShort19 = stringList7.getAreaNumber();
        java.lang.Integer[] intArray33 = new java.lang.Integer[]{4, 12, 1, 4, 10, 65535, 5, 0, 5, 0, 14, 13, (-1)};
        java.util.ArrayList<java.lang.Integer> intList34 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList34,
            intArray33);
        org.ccsds.moims.mo.mal.structures.Identifier identifier36 = new org.ccsds.moims.mo.mal.structures.Identifier();
        boolean boolean37 = intList34.contains((java.lang.Object) identifier36);
        java.lang.Integer int38 = identifier36.getTypeShortForm();
        boolean boolean39 = stringList7.equals((java.lang.Object) identifier36);
        int int40 = uRIList1.lastIndexOf((java.lang.Object) identifier36);
        java.lang.String str41 = identifier36.getValue();
        java.lang.Integer int42 = identifier36.getTypeShortForm();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF43 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl44 = mCServicesProviderNMF43
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl45 = mCServicesProviderNMF43
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl46 = mCServicesProviderNMF43
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl47 = mCServicesProviderNMF43
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl48 = mCServicesProviderNMF43
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl49 = mCServicesProviderNMF43
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl50 = mCServicesProviderNMF43
            .getAggregationService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl51 = mCServicesProviderNMF43
            .getActionService();
        boolean boolean52 = identifier36.equals((java.lang.Object) mCServicesProviderNMF43);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertNotNull(uRISpliterator4);
        org.junit.Assert.assertNotNull(uRISpliterator5);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 281475010265077L + "'", long11.equals(281475010265077L));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281475010265077L + "'", long16.equals(281475010265077L));
        org.junit.Assert.assertNotNull(integerListArray17);
        org.junit.Assert.assertNotNull(integerListArray18);
        org.junit.Assert.assertNotNull(uShort19);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 6 + "'", int38.equals(6));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 6 + "'", int42.equals(6));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl44);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl45);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl46);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl47);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl48);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl49);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl50);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl23 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl24 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl26 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl27 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl28 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl29 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl30 = mCRegistration19.actionService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl23);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl24);
        org.junit.Assert.assertNull(cOMServicesProvider25);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl26);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl27);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl28);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl29);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl30);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test451");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = floatList0.getAreaNumber();
        java.lang.Object obj19 = null;
        boolean boolean20 = floatList0.equals(obj19);
        org.ccsds.moims.mo.mal.structures.Element element21 = floatList0.createElement();
        java.lang.String str22 = floatList0.toString();
        org.ccsds.moims.mo.mal.structures.FloatList floatList23 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long24 = floatList23.getShortForm();
        java.lang.String[] strArray26 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27,
            strArray26);
        int int29 = strList27.size();
        java.lang.Boolean[] booleanArray32 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList33 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList33,
            booleanArray32);
        boolean boolean36 = booleanList33.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream37 = booleanList33.stream();
        boolean boolean38 = strList27.containsAll((java.util.Collection<java.lang.Boolean>) booleanList33);
        boolean boolean39 = floatList23.containsAll((java.util.Collection<java.lang.Boolean>) booleanList33);
        java.util.Spliterator<java.lang.Float> floatSpliterator40 = floatList23.spliterator();
        esa.mo.nmf.NMFException nMFException42 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray43 = nMFException42.getSuppressed();
        int int44 = floatList23.lastIndexOf((java.lang.Object) throwableArray43);
        boolean boolean45 = floatList23.isEmpty();
        org.ccsds.moims.mo.mal.structures.Element element46 = floatList23.createElement();
        boolean boolean47 = floatList0.contains((java.lang.Object) element46);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[]" + "'", str22.equals("[]"));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 281475010265084L + "'", long24.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(booleanStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(floatSpliterator40);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test452");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("[-1, -1, 1, 1, 10, 100]");
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test453");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream2 = uShortList0.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor3 = uShortList0.iterator();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor4 = uShortList0.listIterator();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider5 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl10 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl13 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF11
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF16 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl17 = mCServicesProviderNMF16
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl18 = mCServicesProviderNMF16
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF19 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCServicesProviderNMF19
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCServicesProviderNMF19
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCServicesProviderNMF19
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCServicesProviderNMF19
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration24 = new esa.mo.nmf.MCRegistration(cOMServicesProvider5,
            parameterProviderServiceImpl10, aggregationProviderServiceImpl15, alertProviderServiceImpl18,
            actionProviderServiceImpl23);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl25 = mCRegistration24.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration24.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider27 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF28 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl29 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF28
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF28
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF33 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl34 = mCServicesProviderNMF33
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF33
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF38 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl39 = mCServicesProviderNMF38
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl40 = mCServicesProviderNMF38
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF41 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl42 = mCServicesProviderNMF41
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl43 = mCServicesProviderNMF41
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF41
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCServicesProviderNMF41
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration46 = new esa.mo.nmf.MCRegistration(cOMServicesProvider27,
            parameterProviderServiceImpl32, aggregationProviderServiceImpl37, alertProviderServiceImpl40,
            actionProviderServiceImpl45);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF47 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl49 = mCServicesProviderNMF47
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl50 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCServicesProviderNMF47
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl52 = mCServicesProviderNMF47
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl53 = mCServicesProviderNMF47
            .getActionService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl56 = mCServicesProviderNMF54
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl57 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl59 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl60 = mCServicesProviderNMF54
            .getActionService();
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray61 = new org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[]{actionProviderServiceImpl26,
                                                                                                                                                                                   actionProviderServiceImpl45,
                                                                                                                                                                                   actionProviderServiceImpl53,
                                                                                                                                                                                   actionProviderServiceImpl60};
        org.ccsds.moims.mo.mc.action.provider.ActionInheritanceSkeleton[] actionInheritanceSkeletonArray62 = uShortList0
            .toArray(actionInheritanceSkeletonArray61);
        uShortList0.ensureCapacity(18);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime66 = new org.ccsds.moims.mo.mal.structures.FineTime(
            281474993487884L);
        org.ccsds.moims.mo.mal.structures.UShort uShort67 = fineTime66.getAreaNumber();
        boolean boolean68 = uShortList0.equals((java.lang.Object) fineTime66);
        org.ccsds.moims.mo.mal.structures.FineTime fineTime69 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.Long long70 = fineTime69.getShortForm();
        java.lang.String str71 = fineTime69.toString();
        java.lang.Integer int72 = fineTime69.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort73 = fineTime69.getServiceNumber();
        boolean boolean74 = uShortList0.add(uShort73);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShortStream2);
        org.junit.Assert.assertNotNull(uShortItor3);
        org.junit.Assert.assertNotNull(uShortItor4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl17);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl25);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl39);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl42);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl49);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl50);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl52);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl56);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl57);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl59);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray61);
        org.junit.Assert.assertNotNull(actionInheritanceSkeletonArray62);
        org.junit.Assert.assertNotNull(uShort67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 281474993487889L + "'", long70.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "0" + "'", str71.equals("0"));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 17 + "'", int72.equals(17));
        org.junit.Assert.assertNotNull(uShort73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test454");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI(
            "esa.mo.nmf.NMFException");
        java.lang.Integer int2 = uRI1.getTypeShortForm();
        java.lang.Byte[] byteArray5 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList6 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList6, byteArray5);
        boolean boolean8 = byteList6.isEmpty();
        int int10 = byteList6.indexOf((java.lang.Object) 'a');
        int int12 = byteList6.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        java.util.ListIterator<java.lang.Boolean> booleanItor18 = booleanList15.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.parallelStream();
        boolean boolean21 = booleanList15.add((java.lang.Boolean) false);
        boolean boolean22 = byteList6.retainAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList23 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj24 = uShortList23.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream25 = uShortList23
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor26 = uShortList23.iterator();
        boolean boolean27 = byteList6.equals((java.lang.Object) uShortItor26);
        org.ccsds.moims.mo.mal.structures.ShortList shortList28 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj29 = shortList28.clone();
        boolean boolean30 = byteList6.equals((java.lang.Object) shortList28);
        esa.mo.nmf.NMFException nMFException32 = new esa.mo.nmf.NMFException("-1");
        boolean boolean33 = byteList6.equals((java.lang.Object) nMFException32);
        byteList6.trimToSize();
        org.ccsds.moims.mo.mal.structures.ShortList shortList35 = new org.ccsds.moims.mo.mal.structures.ShortList();
        org.ccsds.moims.mo.mal.structures.UShort uShort36 = shortList35.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = shortList35.getServiceNumber();
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider38 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF39 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl40 = mCServicesProviderNMF39
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl41 = mCServicesProviderNMF39
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl42 = mCServicesProviderNMF39
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCServicesProviderNMF39
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF44 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl45 = mCServicesProviderNMF44
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl46 = mCServicesProviderNMF44
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl47 = mCServicesProviderNMF44
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl48 = mCServicesProviderNMF44
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF49 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl50 = mCServicesProviderNMF49
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl51 = mCServicesProviderNMF49
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF52 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl53 = mCServicesProviderNMF52
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl54 = mCServicesProviderNMF52
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl55 = mCServicesProviderNMF52
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl56 = mCServicesProviderNMF52
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration57 = new esa.mo.nmf.MCRegistration(cOMServicesProvider38,
            parameterProviderServiceImpl43, aggregationProviderServiceImpl48, alertProviderServiceImpl51,
            actionProviderServiceImpl56);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCRegistration57.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl59 = mCRegistration57.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl60 = mCRegistration57.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl61 = mCRegistration57.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl62 = mCRegistration57.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl63 = mCRegistration57.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl64 = mCRegistration57.parameterService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl65 = mCRegistration57.parameterService;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF66 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl67 = mCServicesProviderNMF66
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl68 = mCServicesProviderNMF66
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl69 = mCServicesProviderNMF66
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl70 = mCServicesProviderNMF66
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl71 = mCServicesProviderNMF66
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl72 = mCServicesProviderNMF66
            .getParameterService();
        org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[] parameterSkeletonArray73 = new org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[]{parameterProviderServiceImpl65,
                                                                                                                                                                 parameterProviderServiceImpl72};
        org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[] parameterSkeletonArray74 = shortList35.toArray(
            parameterSkeletonArray73);
        org.ccsds.moims.mo.mc.parameter.provider.ParameterSkeleton[] parameterSkeletonArray75 = byteList6.toArray(
            parameterSkeletonArray73);
        boolean boolean76 = uRI1.equals((java.lang.Object) parameterSkeletonArray73);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 18 + "'", int2.equals(18));
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanItor18);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(uShortStream25);
        org.junit.Assert.assertNotNull(uShortItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(uShort36);
        org.junit.Assert.assertNotNull(uShort37);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl40);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl41);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl42);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl45);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl46);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl47);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl48);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl50);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl51);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl53);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl54);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl55);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl56);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl61);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl62);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl63);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl65);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl67);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl68);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl69);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl70);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl71);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl72);
        org.junit.Assert.assertNotNull(parameterSkeletonArray73);
        org.junit.Assert.assertNotNull(parameterSkeletonArray74);
        org.junit.Assert.assertNotNull(parameterSkeletonArray75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test455");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = longList22.getServiceNumber();
        java.lang.Long long26 = longList22.getShortForm();
        java.util.Spliterator<java.lang.Long> longSpliterator27 = longList22.spliterator();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281475010265075L + "'", long26.equals(281475010265075L));
        org.junit.Assert.assertNotNull(longSpliterator27);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test456");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.parallelStream();
        shortList0.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = org.ccsds.moims.mo.mal.structures.LongList.AREA_SHORT_FORM;
        java.lang.Long long5 = uShort4.getShortForm();
        boolean boolean6 = shortList0.remove((java.lang.Object) long5);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = shortList0.getAreaVersion();
        shortList0.ensureCapacity((-4));
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF10 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl11 = mCServicesProviderNMF10
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl12 = mCServicesProviderNMF10
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF10
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl14 = mCServicesProviderNMF10
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl15 = mCServicesProviderNMF10
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl16 = mCServicesProviderNMF10
            .getActionService();
        boolean boolean17 = shortList0.equals((java.lang.Object) actionProviderServiceImpl16);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281474993487882L + "'", long5.equals(281474993487882L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl11);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl14);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl15);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test457");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = nMFException5.getSuppressed();
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException5);
        java.lang.String str9 = nMFException5.toString();
        nMFException2.addSuppressed((java.lang.Throwable) nMFException5);
        esa.mo.nmf.NMFException nMFException13 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray14 = nMFException13.getSuppressed();
        java.lang.Throwable[] throwableArray15 = nMFException13.getSuppressed();
        esa.mo.nmf.NMFException nMFException17 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray18 = nMFException17.getSuppressed();
        nMFException13.addSuppressed((java.lang.Throwable) nMFException17);
        esa.mo.nmf.NMFException nMFException20 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException17);
        java.lang.Throwable[] throwableArray21 = nMFException17.getSuppressed();
        nMFException5.addSuppressed((java.lang.Throwable) nMFException17);
        esa.mo.nmf.NMFException nMFException23 = new esa.mo.nmf.NMFException("[0]",
            (java.lang.Throwable) nMFException5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str9.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test458");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray2 = nMFException1.getSuppressed();
        java.lang.Throwable[] throwableArray3 = nMFException1.getSuppressed();
        esa.mo.nmf.NMFException nMFException5 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray6 = nMFException5.getSuppressed();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException5);
        java.lang.String str8 = nMFException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str8.equals(
            "esa.mo.nmf.NMFException: 0"));
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test459");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj1 = uShortList0.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uShortList0.getServiceNumber();
        java.lang.Integer int3 = uShortList0.getTypeShortForm();
        java.lang.Object obj4 = uShortList0.clone();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uShortList0.getServiceNumber();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream6 = uShortList0.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList7 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj8 = uShortList7.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream9 = uShortList7.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor10 = uShortList7.iterator();
        org.ccsds.moims.mo.mal.structures.FloatList floatList11 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long12 = floatList11.getShortForm();
        java.lang.String[] strArray14 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15,
            strArray14);
        int int17 = strList15.size();
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList21 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList21,
            booleanArray20);
        boolean boolean24 = booleanList21.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream25 = booleanList21.stream();
        boolean boolean26 = strList15.containsAll((java.util.Collection<java.lang.Boolean>) booleanList21);
        boolean boolean27 = floatList11.containsAll((java.util.Collection<java.lang.Boolean>) booleanList21);
        java.util.Spliterator<java.lang.Float> floatSpliterator28 = floatList11.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort29 = floatList11.getAreaNumber();
        java.lang.Object obj30 = null;
        boolean boolean31 = floatList11.equals(obj30);
        int int32 = uShortList7.indexOf(obj30);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream33 = uShortList7.parallelStream();
        org.ccsds.moims.mo.mal.structures.FloatList floatList34 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long35 = floatList34.getShortForm();
        floatList34.trimToSize();
        java.lang.String str37 = floatList34.toString();
        java.util.Spliterator<java.lang.Float> floatSpliterator38 = floatList34.spliterator();
        java.lang.Byte[] byteArray41 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList42,
            byteArray41);
        boolean boolean44 = byteList42.isEmpty();
        int int46 = byteList42.indexOf((java.lang.Object) 'a');
        int int48 = byteList42.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList51 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList51,
            booleanArray50);
        java.util.ListIterator<java.lang.Boolean> booleanItor54 = booleanList51.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream55 = booleanList51.parallelStream();
        boolean boolean57 = booleanList51.add((java.lang.Boolean) false);
        boolean boolean58 = byteList42.retainAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList59 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj60 = uShortList59.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream61 = uShortList59
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor62 = uShortList59.iterator();
        boolean boolean63 = byteList42.equals((java.lang.Object) uShortItor62);
        org.ccsds.moims.mo.mal.structures.ShortList shortList64 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj65 = shortList64.clone();
        boolean boolean66 = byteList42.equals((java.lang.Object) shortList64);
        esa.mo.nmf.NMFException nMFException68 = new esa.mo.nmf.NMFException("-1");
        boolean boolean69 = byteList42.equals((java.lang.Object) nMFException68);
        byteList42.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList71 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element72 = booleanList71.createElement();
        java.lang.Long long73 = booleanList71.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort74 = booleanList71.getAreaNumber();
        java.lang.Integer int75 = booleanList71.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray76 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList71};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray77 = byteList42.toArray(booleanListArray76);
        boolean boolean78 = floatList34.remove((java.lang.Object) booleanListArray76);
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray79 = uShortList7.toArray(booleanListArray76);
        java.util.ArrayList<java.lang.Boolean>[] booleanListArray80 = uShortList0.toArray(
            (java.util.ArrayList<java.lang.Boolean>[]) booleanListArray79);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-10) + "'", int3.equals((-10)));
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uShortStream6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(uShortStream9);
        org.junit.Assert.assertNotNull(uShortItor10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281475010265084L + "'", long12.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanStream25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(floatSpliterator28);
        org.junit.Assert.assertNotNull(uShort29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(uShortStream33);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281475010265084L + "'", long35.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[]" + "'", str37.equals("[]"));
        org.junit.Assert.assertNotNull(floatSpliterator38);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanItor54);
        org.junit.Assert.assertNotNull(booleanStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(uShortStream61);
        org.junit.Assert.assertNotNull(uShortItor62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(element72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 281475010265086L + "'", long73.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-2) + "'", int75.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray76);
        org.junit.Assert.assertNotNull(booleanListArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(booleanListArray79);
        org.junit.Assert.assertNotNull(booleanListArray80);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test460");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.stream.Stream<java.lang.String> strStream25 = stringList12.parallelStream();
        java.lang.Long[] longArray30 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList31 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList31,
            longArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = longList31.contains(obj33);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger36 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean37 = longList31.contains((java.lang.Object) (byte) 100);
        java.util.Iterator<java.lang.Long> longItor38 = longList31.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
        boolean boolean40 = longList31.remove((java.lang.Object) uShort39);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList41 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int42 = uShortList41.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor43 = uShortList41.iterator();
        java.lang.Object[] objArray44 = uShortList41.toArray();
        uShortList41.clear();
        uShortList41.clear();
        boolean boolean47 = uShortList41.isEmpty();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor48 = uShortList41.iterator();
        boolean boolean49 = longList31.contains((java.lang.Object) uShortList41);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList50 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.UShort uShort51 = booleanList50.getAreaNumber();
        boolean boolean52 = longList31.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        java.lang.Integer int53 = booleanList50.getTypeShortForm();
        boolean boolean55 = booleanList50.add((java.lang.Boolean) true);
        boolean boolean56 = stringList12.retainAll((java.util.Collection<java.lang.Boolean>) booleanList50);
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = booleanList50.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element58 = booleanList50.createElement();
        java.util.stream.Stream<java.lang.Boolean> booleanStream59 = booleanList50.stream();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(longItor38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-10) + "'", int42.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(uShortItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(uShort51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-2) + "'", int53.equals((-2)));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(uShort57);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(booleanStream59);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test461");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl23 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl24 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl26 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl27 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl28 = mCRegistration19.alertService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl29 = mCRegistration19.actionService;
        org.ccsds.moims.mo.mal.structures.FloatList floatList30 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long31 = floatList30.getShortForm();
        java.lang.String[] strArray33 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34,
            strArray33);
        int int36 = strList34.size();
        java.lang.Boolean[] booleanArray39 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList40 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList40,
            booleanArray39);
        boolean boolean43 = booleanList40.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream44 = booleanList40.stream();
        boolean boolean45 = strList34.containsAll((java.util.Collection<java.lang.Boolean>) booleanList40);
        boolean boolean46 = floatList30.containsAll((java.util.Collection<java.lang.Boolean>) booleanList40);
        java.util.ListIterator<java.lang.Float> floatItor47 = floatList30.listIterator();
        floatList30.add(0, (java.lang.Float) (-1.0f));
        org.ccsds.moims.mo.mal.structures.ShortList shortList51 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj52 = shortList51.clone();
        java.lang.String str53 = shortList51.toString();
        java.util.Spliterator<java.lang.Short> shortSpliterator54 = shortList51.spliterator();
        boolean boolean55 = floatList30.equals((java.lang.Object) shortList51);
        boolean boolean57 = shortList51.add((java.lang.Short) (short) 255);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList59 = new org.ccsds.moims.mo.mal.structures.UShortList(9);
        org.ccsds.moims.mo.mal.structures.FloatList floatList60 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long61 = floatList60.getShortForm();
        java.lang.String[] strArray63 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64,
            strArray63);
        int int66 = strList64.size();
        java.lang.Boolean[] booleanArray69 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList70 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList70,
            booleanArray69);
        boolean boolean73 = booleanList70.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream74 = booleanList70.stream();
        boolean boolean75 = strList64.containsAll((java.util.Collection<java.lang.Boolean>) booleanList70);
        boolean boolean76 = floatList60.containsAll((java.util.Collection<java.lang.Boolean>) booleanList70);
        boolean boolean77 = uShortList59.retainAll((java.util.Collection<java.lang.Boolean>) booleanList70);
        boolean boolean78 = shortList51.removeAll((java.util.Collection<java.lang.Boolean>) booleanList70);
        java.lang.Integer int79 = shortList51.getTypeShortForm();
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList80 = mCRegistration19.registerConversions(
                (org.ccsds.moims.mo.mal.structures.ElementList) shortList51);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversion object didn't match any type of Conversion.");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl23);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl24);
        org.junit.Assert.assertNull(cOMServicesProvider25);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl26);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl27);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl28);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 281475010265084L + "'", long31.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatItor47);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "[]" + "'", str53.equals("[]"));
        org.junit.Assert.assertNotNull(shortSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 281475010265084L + "'", long61.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(booleanStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-9) + "'", int79.equals((-9)));
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test462");
        org.ccsds.moims.mo.mal.structures.ULong uLong0 = new org.ccsds.moims.mo.mal.structures.ULong();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = uLong0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uLong0.getServiceNumber();
        java.lang.Long long3 = uLong0.getShortForm();
        org.ccsds.moims.mo.mal.structures.FloatList floatList4 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long5 = floatList4.getShortForm();
        java.lang.String[] strArray7 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        int int10 = strList8.size();
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14,
            booleanArray13);
        boolean boolean17 = booleanList14.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream18 = booleanList14.stream();
        boolean boolean19 = strList8.containsAll((java.util.Collection<java.lang.Boolean>) booleanList14);
        boolean boolean20 = floatList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList14);
        java.util.ListIterator<java.lang.Float> floatItor21 = floatList4.listIterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet22 = floatList4.getAreaVersion();
        boolean boolean23 = uLong0.equals((java.lang.Object) uOctet22);
        java.lang.Long long24 = uLong0.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element25 = uLong0.createElement();
        java.math.BigInteger bigInteger26 = uLong0.getValue();
        org.ccsds.moims.mo.mal.structures.ULong uLong27 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger26);
        org.ccsds.moims.mo.mal.structures.FloatList floatList28 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long29 = floatList28.getShortForm();
        java.lang.String[] strArray31 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32,
            strArray31);
        int int34 = strList32.size();
        java.lang.Boolean[] booleanArray37 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList38 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList38,
            booleanArray37);
        boolean boolean41 = booleanList38.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream42 = booleanList38.stream();
        boolean boolean43 = strList32.containsAll((java.util.Collection<java.lang.Boolean>) booleanList38);
        boolean boolean44 = floatList28.containsAll((java.util.Collection<java.lang.Boolean>) booleanList38);
        java.util.Spliterator<java.lang.Float> floatSpliterator45 = floatList28.spliterator();
        esa.mo.nmf.NMFException nMFException47 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray48 = nMFException47.getSuppressed();
        int int49 = floatList28.lastIndexOf((java.lang.Object) throwableArray48);
        org.ccsds.moims.mo.mal.structures.LongList longList50 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int51 = floatList28.lastIndexOf((java.lang.Object) longList50);
        org.ccsds.moims.mo.mal.structures.UShort uShort52 = longList50.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = longList50.getServiceNumber();
        boolean boolean54 = uLong27.equals((java.lang.Object) uShort53);
        java.lang.Integer int55 = uLong27.getTypeShortForm();
        java.math.BigInteger bigInteger56 = uLong27.getValue();
        org.ccsds.moims.mo.mal.structures.Element element57 = uLong27.createElement();
        java.lang.Integer int58 = uLong27.getTypeShortForm();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487886L + "'", long3.equals(281474993487886L));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265084L + "'", long5.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(floatItor21);
        org.junit.Assert.assertNotNull(uOctet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 281474993487886L + "'", long24.equals(281474993487886L));
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(bigInteger26);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 281475010265084L + "'", long29.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatSpliterator45);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(uShort52);
        org.junit.Assert.assertNotNull(uShort53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 14 + "'", int55.equals(14));
        org.junit.Assert.assertNotNull(bigInteger56);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 14 + "'", int58.equals(14));
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test463");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = longList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = longList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList26 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.Element element27 = stringList26.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = stringList26.getServiceNumber();
        java.lang.Integer int29 = stringList26.getTypeShortForm();
        stringList26.ensureCapacity(13);
        int int32 = longList22.lastIndexOf((java.lang.Object) stringList26);
        boolean boolean33 = longList22.isEmpty();
        java.lang.Long long34 = longList22.getShortForm();
        org.ccsds.moims.mo.mal.structures.StringList stringList36 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = stringList36.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList39 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long40 = integerList39.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList42 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        org.ccsds.moims.mo.mal.structures.IntegerList integerList44 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long45 = integerList44.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray46 = new org.ccsds.moims.mo.mal.structures.IntegerList[]{integerList39,
                                                                                                                                 integerList42,
                                                                                                                                 integerList44};
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray47 = stringList36.toArray(integerListArray46);
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = stringList36.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.ShortList shortList49 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj50 = shortList49.clone();
        java.lang.Long long51 = shortList49.getShortForm();
        int int52 = stringList36.indexOf((java.lang.Object) shortList49);
        java.util.Iterator<java.lang.Short> shortItor53 = shortList49.iterator();
        boolean boolean54 = longList22.remove((java.lang.Object) shortItor53);
        java.lang.Long long55 = longList22.getShortForm();
        boolean boolean57 = longList22.add((java.lang.Long) 0L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-15) + "'", int29.equals((-15)));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 281475010265075L + "'", long34.equals(281475010265075L));
        org.junit.Assert.assertNotNull(uShort37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 281475010265077L + "'", long40.equals(281475010265077L));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 281475010265077L + "'", long45.equals(281475010265077L));
        org.junit.Assert.assertNotNull(integerListArray46);
        org.junit.Assert.assertNotNull(integerListArray47);
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 281475010265079L + "'", long51.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 281475010265075L + "'", long55.equals(281475010265075L));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test464");
        org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (short) 10);
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean7 = byteList5.isEmpty();
        int int9 = byteList5.indexOf((java.lang.Object) 'a');
        int int11 = byteList5.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList14 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList14,
            booleanArray13);
        java.util.ListIterator<java.lang.Boolean> booleanItor17 = booleanList14.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream18 = booleanList14.parallelStream();
        boolean boolean20 = booleanList14.add((java.lang.Boolean) false);
        boolean boolean21 = byteList5.retainAll((java.util.Collection<java.lang.Boolean>) booleanList14);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList22 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj23 = uShortList22.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream24 = uShortList22
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor25 = uShortList22.iterator();
        boolean boolean26 = byteList5.equals((java.lang.Object) uShortItor25);
        org.ccsds.moims.mo.mal.structures.ShortList shortList27 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj28 = shortList27.clone();
        boolean boolean29 = byteList5.equals((java.lang.Object) shortList27);
        esa.mo.nmf.NMFException nMFException31 = new esa.mo.nmf.NMFException("-1");
        boolean boolean32 = byteList5.equals((java.lang.Object) nMFException31);
        boolean boolean33 = uInteger1.equals((java.lang.Object) byteList5);
        java.lang.String str34 = uInteger1.toString();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(booleanItor17);
        org.junit.Assert.assertNotNull(booleanStream18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(uShortStream24);
        org.junit.Assert.assertNotNull(uShortItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "10" + "'", str34.equals("10"));
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test465");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray7 = nMFException6.getSuppressed();
        nMFException2.addSuppressed((java.lang.Throwable) nMFException6);
        esa.mo.nmf.NMFException nMFException9 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException6);
        java.lang.String str10 = nMFException9.toString();
        java.lang.Throwable[] throwableArray11 = nMFException9.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "esa.mo.nmf.NMFException: " + "'", str10.equals(
            "esa.mo.nmf.NMFException: "));
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test466");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl6 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl7 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl8 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl9 = mCServicesProviderNMF0
            .getParameterService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl6);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl7);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl8);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl9);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test467");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        java.lang.Integer[] intArray25 = new java.lang.Integer[]{(-5), (-5)};
        java.util.ArrayList<java.lang.Integer> intList26 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26,
            intArray25);
        java.util.Spliterator<java.lang.Integer> intSpliterator28 = intList26.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort29 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean30 = intList26.remove((java.lang.Object) uShort29);
        boolean boolean31 = intList26.isEmpty();
        java.lang.Object obj32 = intList26.clone();
        boolean boolean33 = floatList0.contains((java.lang.Object) intList26);
        java.lang.Long long34 = floatList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = floatList0.getServiceNumber();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intSpliterator28);
        org.junit.Assert.assertNotNull(uShort29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 281475010265084L + "'", long34.equals(281475010265084L));
        org.junit.Assert.assertNotNull(uShort35);
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test468");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl24 = mCRegistration19.alertService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCRegistration19.parameterService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNull(cOMServicesProvider23);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl24);
        org.junit.Assert.assertNull(cOMServicesProvider25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test469");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException4 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray5 = nMFException4.getSuppressed();
        java.lang.Throwable[] throwableArray6 = nMFException4.getSuppressed();
        esa.mo.nmf.NMFException nMFException7 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException4);
        java.lang.String str8 = nMFException4.toString();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException4);
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = nMFException12.getSuppressed();
        esa.mo.nmf.NMFException nMFException16 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray17 = nMFException16.getSuppressed();
        nMFException12.addSuppressed((java.lang.Throwable) nMFException16);
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException16);
        java.lang.Throwable[] throwableArray20 = nMFException16.getSuppressed();
        nMFException4.addSuppressed((java.lang.Throwable) nMFException16);
        org.ccsds.moims.mo.mal.structures.FloatList floatList22 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long23 = floatList22.getShortForm();
        floatList22.trimToSize();
        java.util.Iterator<java.lang.Float> floatItor25 = floatList22.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = floatList22.getAreaNumber();
        esa.mo.nmf.NMFException nMFException28 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException31 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray32 = nMFException31.getSuppressed();
        java.lang.Throwable[] throwableArray33 = nMFException31.getSuppressed();
        esa.mo.nmf.NMFException nMFException34 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException31);
        java.lang.String str35 = nMFException31.toString();
        nMFException28.addSuppressed((java.lang.Throwable) nMFException31);
        boolean boolean37 = floatList22.remove((java.lang.Object) nMFException31);
        nMFException16.addSuppressed((java.lang.Throwable) nMFException31);
        esa.mo.nmf.NMFException nMFException41 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray42 = nMFException41.getSuppressed();
        java.lang.Throwable[] throwableArray43 = nMFException41.getSuppressed();
        esa.mo.nmf.NMFException nMFException45 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray46 = nMFException45.getSuppressed();
        nMFException41.addSuppressed((java.lang.Throwable) nMFException45);
        java.lang.Throwable[] throwableArray48 = nMFException45.getSuppressed();
        java.lang.Throwable[] throwableArray49 = nMFException45.getSuppressed();
        esa.mo.nmf.NMFException nMFException50 = new esa.mo.nmf.NMFException("[]",
            (java.lang.Throwable) nMFException45);
        esa.mo.nmf.NMFException nMFException53 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray54 = nMFException53.getSuppressed();
        java.lang.Throwable[] throwableArray55 = nMFException53.getSuppressed();
        esa.mo.nmf.NMFException nMFException56 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException53);
        nMFException50.addSuppressed((java.lang.Throwable) nMFException53);
        java.lang.String str58 = nMFException53.toString();
        nMFException16.addSuppressed((java.lang.Throwable) nMFException53);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str8.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 281475010265084L + "'", long23.equals(281475010265084L));
        org.junit.Assert.assertNotNull(floatItor25);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str35.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str58.equals(
            "esa.mo.nmf.NMFException: 0"));
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test470");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCServicesProviderNMF23
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl26 = mCServicesProviderNMF23
            .getAlertService();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl26);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test471");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        java.lang.Integer[] intArray25 = new java.lang.Integer[]{(-5), (-5)};
        java.util.ArrayList<java.lang.Integer> intList26 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26,
            intArray25);
        java.util.Spliterator<java.lang.Integer> intSpliterator28 = intList26.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort29 = org.ccsds.moims.mo.mal.structures.ShortList.SERVICE_SHORT_FORM;
        boolean boolean30 = intList26.remove((java.lang.Object) uShort29);
        boolean boolean31 = intList26.isEmpty();
        java.lang.Object obj32 = intList26.clone();
        boolean boolean33 = floatList0.contains((java.lang.Object) intList26);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList34 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element35 = booleanList34.createElement();
        java.lang.Long long36 = booleanList34.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element37 = booleanList34.createElement();
        boolean boolean38 = intList26.containsAll((java.util.Collection<java.lang.Boolean>) booleanList34);
        try {
            java.lang.Integer int40 = intList26.get((int) (short) 10);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intSpliterator28);
        org.junit.Assert.assertNotNull(uShort29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 281475010265086L + "'", long36.equals(281475010265086L));
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test472");
        org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList(12);
        java.lang.Long[] longArray6 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList7 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList7, longArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = longList7.contains(obj9);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger12 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean13 = longList7.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17,
            booleanArray16);
        boolean boolean19 = longList7.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList23 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList23,
            booleanArray22);
        java.util.Iterator<java.lang.Boolean> booleanItor25 = booleanList23.iterator();
        int int26 = longList7.indexOf((java.lang.Object) booleanList23);
        longList7.trimToSize();
        java.lang.Object[] objArray28 = longList7.toArray();
        java.lang.String str29 = longList7.toString();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList30 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element31 = doubleList30.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = doubleList30.getServiceNumber();
        java.lang.Integer int33 = doubleList30.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort34 = doubleList30.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Union union36 = new org.ccsds.moims.mo.mal.structures.Union(
            (java.lang.Float) 100.0f);
        int int37 = doubleList30.indexOf((java.lang.Object) 100.0f);
        org.ccsds.moims.mo.mal.structures.ShortList shortList38 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray40 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41,
            strArray40);
        int int43 = strList41.size();
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList47 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList47,
            booleanArray46);
        boolean boolean50 = booleanList47.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream51 = booleanList47.stream();
        boolean boolean52 = strList41.containsAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        boolean boolean53 = shortList38.containsAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        java.util.stream.Stream<java.lang.Short> shortStream54 = shortList38.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element55 = shortList38.createElement();
        esa.mo.nmf.NMFException nMFException57 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray58 = nMFException57.getSuppressed();
        int int59 = shortList38.indexOf((java.lang.Object) throwableArray58);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList60 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str61 = doubleList60.toString();
        java.lang.Boolean[] booleanArray63 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList64 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList64,
            booleanArray63);
        java.util.ListIterator<java.lang.Boolean> booleanItor67 = booleanList64.listIterator((int) (short) 1);
        boolean boolean68 = doubleList60.containsAll((java.util.Collection<java.lang.Boolean>) booleanList64);
        java.lang.Byte[] byteArray71 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList72 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList72,
            byteArray71);
        boolean boolean74 = byteList72.isEmpty();
        int int75 = byteList72.size();
        int int76 = booleanList64.indexOf((java.lang.Object) byteList72);
        java.lang.Boolean[] booleanArray79 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList80 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList80,
            booleanArray79);
        java.util.Iterator<java.lang.Boolean> booleanItor82 = booleanList80.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream83 = booleanList80.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor84 = booleanList80.iterator();
        boolean boolean85 = byteList72.removeAll((java.util.Collection<java.lang.Boolean>) booleanList80);
        boolean boolean86 = shortList38.removeAll((java.util.Collection<java.lang.Boolean>) booleanList80);
        boolean boolean87 = booleanList80.isEmpty();
        boolean boolean88 = doubleList30.remove((java.lang.Object) booleanList80);
        boolean boolean89 = longList7.retainAll((java.util.Collection<java.lang.Boolean>) booleanList80);
        boolean boolean90 = shortList1.remove((java.lang.Object) longList7);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanItor25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "[10, -1, -1, 10]" + "'", str29.equals(
            "[10, -1, -1, 10]"));
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-5) + "'", int33.equals((-5)));
        org.junit.Assert.assertNotNull(uShort34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(booleanStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shortStream54);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "[]" + "'", str61.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(booleanItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(booleanItor82);
        org.junit.Assert.assertNotNull(booleanStream83);
        org.junit.Assert.assertNotNull(booleanItor84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test473");
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray3 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = nMFException2.getSuppressed();
        java.lang.Throwable[] throwableArray5 = nMFException2.getSuppressed();
        esa.mo.nmf.NMFException nMFException6 = new esa.mo.nmf.NMFException("[100, 0]",
            (java.lang.Throwable) nMFException2);
        esa.mo.nmf.NMFException nMFException8 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException11 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray12 = nMFException11.getSuppressed();
        java.lang.Throwable[] throwableArray13 = nMFException11.getSuppressed();
        esa.mo.nmf.NMFException nMFException14 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException11);
        java.lang.String str15 = nMFException11.toString();
        nMFException8.addSuppressed((java.lang.Throwable) nMFException11);
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        java.lang.Throwable[] throwableArray21 = nMFException19.getSuppressed();
        esa.mo.nmf.NMFException nMFException23 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray24 = nMFException23.getSuppressed();
        nMFException19.addSuppressed((java.lang.Throwable) nMFException23);
        esa.mo.nmf.NMFException nMFException26 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException23);
        java.lang.Throwable[] throwableArray27 = nMFException23.getSuppressed();
        nMFException11.addSuppressed((java.lang.Throwable) nMFException23);
        java.lang.Throwable[] throwableArray29 = nMFException23.getSuppressed();
        nMFException6.addSuppressed((java.lang.Throwable) nMFException23);
        java.lang.String str31 = nMFException23.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str15.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str31.equals(
            "esa.mo.nmf.NMFException: 0"));
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test474");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = mCRegistration19.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider24 = mCRegistration19.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider25 = mCRegistration19.comServices;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNull(cOMServicesProvider23);
        org.junit.Assert.assertNull(cOMServicesProvider24);
        org.junit.Assert.assertNull(cOMServicesProvider25);
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test475");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        java.lang.Double[] doubleArray3 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList4 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList4,
            doubleArray3);
        java.util.Spliterator<java.lang.Double> doubleSpliterator6 = doubleList4.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor7 = doubleList4.iterator();
        boolean boolean8 = stringList1.equals((java.lang.Object) doubleItor7);
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj10 = shortList9.clone();
        java.lang.String str11 = shortList9.toString();
        java.util.Spliterator<java.lang.Short> shortSpliterator12 = shortList9.spliterator();
        boolean boolean13 = stringList1.remove((java.lang.Object) shortSpliterator12);
        java.lang.Integer int14 = stringList1.getTypeShortForm();
        int int15 = stringList1.size();
        org.ccsds.moims.mo.mal.structures.OctetList octetList16 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = octetList16.getAreaNumber();
        boolean boolean18 = stringList1.contains((java.lang.Object) uShort17);
        org.ccsds.moims.mo.mal.structures.ShortList shortList19 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj20 = shortList19.clone();
        java.util.stream.Stream<java.lang.Short> shortStream21 = shortList19.parallelStream();
        shortList19.trimToSize();
        shortList19.ensureCapacity((int) ' ');
        java.lang.Integer[] intArray41 = new java.lang.Integer[]{18, 0, 18, 65535, (-1), 3, (-1), (-1), 13, 0, 3, (-5),
                                                                 12, 0, 100, 14};
        java.util.ArrayList<java.lang.Integer> intList42 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42,
            intArray41);
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList47 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList47,
            booleanArray46);
        java.util.Iterator<java.lang.Boolean> booleanItor49 = booleanList47.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream50 = booleanList47.stream();
        boolean boolean51 = intList42.retainAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        boolean boolean52 = shortList19.containsAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        java.lang.Object obj53 = booleanList47.clone();
        java.lang.Short[] shortArray56 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList57 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList57,
            shortArray56);
        java.lang.Object obj59 = null;
        boolean boolean60 = shortList57.equals(obj59);
        java.util.Iterator<java.lang.Short> shortItor61 = shortList57.iterator();
        java.lang.Long[] longArray66 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList67 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList67,
            longArray66);
        java.lang.Object obj69 = null;
        boolean boolean70 = longList67.contains(obj69);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger72 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean73 = longList67.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray76 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList77 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList77,
            booleanArray76);
        boolean boolean79 = longList67.containsAll((java.util.Collection<java.lang.Boolean>) booleanList77);
        java.lang.Boolean[] booleanArray82 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList83 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList83,
            booleanArray82);
        java.util.Iterator<java.lang.Boolean> booleanItor85 = booleanList83.iterator();
        int int86 = longList67.indexOf((java.lang.Object) booleanList83);
        int int87 = shortList57.indexOf((java.lang.Object) booleanList83);
        java.util.stream.Stream<java.lang.Boolean> booleanStream88 = booleanList83.parallelStream();
        boolean boolean89 = booleanList47.containsAll((java.util.Collection<java.lang.Boolean>) booleanList83);
        boolean boolean91 = booleanList47.add((java.lang.Boolean) false);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF92 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl93 = mCServicesProviderNMF92
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl94 = mCServicesProviderNMF92
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl95 = mCServicesProviderNMF92
            .getParameterService();
        boolean boolean96 = booleanList47.contains((java.lang.Object) parameterProviderServiceImpl95);
        boolean boolean97 = stringList1.containsAll((java.util.Collection<java.lang.Boolean>) booleanList47);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator6);
        org.junit.Assert.assertNotNull(doubleItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]" + "'", str11.equals("[]"));
        org.junit.Assert.assertNotNull(shortSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-15) + "'", int14.equals((-15)));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(shortStream21);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanItor49);
        org.junit.Assert.assertNotNull(booleanStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(shortItor61);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(booleanItor85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(booleanStream88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl93);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl94);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test476");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider20 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF21 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCServicesProviderNMF21
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl23 = mCServicesProviderNMF21
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCServicesProviderNMF21
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl25 = mCServicesProviderNMF21
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF26 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl27 = mCServicesProviderNMF26
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl28 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF26
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF31 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl32 = mCServicesProviderNMF31
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl33 = mCServicesProviderNMF31
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF34 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl35 = mCServicesProviderNMF34
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl36 = mCServicesProviderNMF34
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl37 = mCServicesProviderNMF34
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl38 = mCServicesProviderNMF34
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration39 = new esa.mo.nmf.MCRegistration(cOMServicesProvider20,
            parameterProviderServiceImpl25, aggregationProviderServiceImpl30, alertProviderServiceImpl33,
            actionProviderServiceImpl38);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl40 = mCRegistration39.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl41 = mCRegistration39.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider42 = mCRegistration39.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider43 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF44 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl45 = mCServicesProviderNMF44
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl46 = mCServicesProviderNMF44
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl47 = mCServicesProviderNMF44
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl48 = mCServicesProviderNMF44
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF49 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl50 = mCServicesProviderNMF49
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl51 = mCServicesProviderNMF49
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl52 = mCServicesProviderNMF49
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl53 = mCServicesProviderNMF49
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF54 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl55 = mCServicesProviderNMF54
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl56 = mCServicesProviderNMF54
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF57 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl58 = mCServicesProviderNMF57
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl59 = mCServicesProviderNMF57
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl60 = mCServicesProviderNMF57
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl61 = mCServicesProviderNMF57
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration62 = new esa.mo.nmf.MCRegistration(cOMServicesProvider43,
            parameterProviderServiceImpl48, aggregationProviderServiceImpl53, alertProviderServiceImpl56,
            actionProviderServiceImpl61);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl63 = mCRegistration62.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl64 = mCRegistration62.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl65 = mCRegistration62.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl66 = mCRegistration62.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl67 = mCRegistration62.actionService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode68 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration62.setMode(registrationMode68);
        mCRegistration39.setMode(registrationMode68);
        mCRegistration19.setMode(registrationMode68);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl27);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl32);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl33);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl35);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl36);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl37);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl38);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl40);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl41);
        org.junit.Assert.assertNull(cOMServicesProvider42);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl45);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl46);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl47);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl48);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl50);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl51);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl52);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl53);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl55);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl56);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl58);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl59);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl60);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl61);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl63);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl65);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl66);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl67);
        org.junit.Assert.assertTrue("'" + registrationMode68 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode68.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test477");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        java.util.Iterator<java.lang.Long> longItor24 = longList22.iterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = longList22.getServiceNumber();
        java.lang.Object[] objArray26 = longList22.toArray();
        java.lang.Object[] objArray27 = longList22.toArray();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(longItor24);
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray27);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test478");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
        boolean boolean8 = byteList5.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj9 = byteList5.clone();
        java.util.stream.Stream<java.lang.Byte> byteStream10 = byteList5.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        int int13 = byteList5.indexOf((java.lang.Object) stringList12);
        byte[] byteArray17 = new byte[]{(byte) 0, (byte) 0, (byte) 0};
        org.ccsds.moims.mo.mal.structures.Blob blob18 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray17);
        int int19 = blob18.getLength();
        org.ccsds.moims.mo.mal.structures.Blob blob20 = new org.ccsds.moims.mo.mal.structures.Blob();
        boolean boolean21 = blob18.equals((java.lang.Object) blob20);
        boolean boolean22 = stringList12.remove((java.lang.Object) blob20);
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF23 = new esa.mo.nmf.MCServicesProviderNMF();
        boolean boolean24 = stringList12.equals((java.lang.Object) mCServicesProviderNMF23);
        java.util.ListIterator<java.lang.String> strItor25 = stringList12.listIterator();
        stringList12.ensureCapacity((int) (short) -1);
        java.lang.Short[] shortArray30 = new java.lang.Short[]{(short) 100, (short) -1};
        java.util.ArrayList<java.lang.Short> shortList31 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList31,
            shortArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = shortList31.equals(obj33);
        java.util.Iterator<java.lang.Short> shortItor35 = shortList31.iterator();
        java.lang.Long[] longArray40 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList41 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList41,
            longArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = longList41.contains(obj43);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger46 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean47 = longList41.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[]{false, false};
        java.util.ArrayList<java.lang.Boolean> booleanList51 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList51,
            booleanArray50);
        boolean boolean53 = longList41.containsAll((java.util.Collection<java.lang.Boolean>) booleanList51);
        java.lang.Boolean[] booleanArray56 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList57 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList57,
            booleanArray56);
        java.util.Iterator<java.lang.Boolean> booleanItor59 = booleanList57.iterator();
        int int60 = longList41.indexOf((java.lang.Object) booleanList57);
        int int61 = shortList31.indexOf((java.lang.Object) booleanList57);
        java.lang.Class<?> wildcardClass62 = booleanList57.getClass();
        boolean boolean63 = stringList12.retainAll((java.util.Collection<java.lang.Boolean>) booleanList57);
        try {
            java.lang.String str65 = stringList12.remove(0);
            org.junit.Assert.fail(
                "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(byteStream10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shortItor35);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(booleanItor59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test479");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        java.util.ListIterator<java.lang.Float> floatItor23 = floatList0.listIterator();
        java.lang.Float[] floatArray29 = new java.lang.Float[]{1.0f, 1.0f, 1.0f, 100.0f, 10.0f};
        java.util.ArrayList<java.lang.Float> floatList30 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList30,
            floatArray29);
        java.util.stream.Stream<java.lang.Float> floatStream32 = floatList30.stream();
        java.lang.Double[] doubleArray34 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList35 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList35,
            doubleArray34);
        java.util.Spliterator<java.lang.Double> doubleSpliterator37 = doubleList35.spliterator();
        boolean boolean38 = floatList30.remove((java.lang.Object) doubleList35);
        java.util.Iterator<java.lang.Float> floatItor39 = floatList30.iterator();
        int int40 = floatList0.indexOf((java.lang.Object) floatItor39);
        java.util.Iterator<java.lang.Float> floatItor41 = floatList0.iterator();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(floatItor23);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(floatStream32);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(floatItor39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(floatItor41);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test480");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl22 = mCRegistration19.alertService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = mCRegistration19.comServices;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl22);
        org.junit.Assert.assertNull(cOMServicesProvider23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test481");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl6 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl7 = mCServicesProviderNMF0
            .getActionService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl9 = mCServicesProviderNMF0
            .getParameterService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl6);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl7);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl9);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test482");
        org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI("[10, -1, -1, 10]");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList2 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.Integer int3 = doubleList2.getTypeShortForm();
        boolean boolean4 = uRI1.equals((java.lang.Object) doubleList2);
        java.lang.Long long5 = doubleList2.getShortForm();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList6 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.Element element7 = doubleList6.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = doubleList6.getServiceNumber();
        doubleList6.ensureCapacity(3);
        doubleList6.trimToSize();
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList15,
            booleanArray14);
        boolean boolean18 = booleanList15.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream19 = booleanList15.stream();
        java.lang.Double[] doubleArray21 = new java.lang.Double[]{0.0d};
        java.util.ArrayList<java.lang.Double> doubleList22 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList22,
            doubleArray21);
        java.util.Spliterator<java.lang.Double> doubleSpliterator24 = doubleList22.spliterator();
        java.util.Iterator<java.lang.Double> doubleItor25 = doubleList22.iterator();
        boolean boolean26 = booleanList15.contains((java.lang.Object) doubleItor25);
        boolean boolean27 = doubleList6.removeAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        boolean boolean28 = doubleList2.removeAll((java.util.Collection<java.lang.Boolean>) booleanList15);
        boolean boolean30 = doubleList2.add((java.lang.Double) 1.0d);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider31 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF32 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl34 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl35 = mCServicesProviderNMF32
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF37 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl38 = mCServicesProviderNMF37
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl39 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl40 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl41 = mCServicesProviderNMF37
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF42 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl43 = mCServicesProviderNMF42
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl44 = mCServicesProviderNMF42
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF45 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl46 = mCServicesProviderNMF45
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl47 = mCServicesProviderNMF45
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl48 = mCServicesProviderNMF45
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl49 = mCServicesProviderNMF45
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration50 = new esa.mo.nmf.MCRegistration(cOMServicesProvider31,
            parameterProviderServiceImpl36, aggregationProviderServiceImpl41, alertProviderServiceImpl44,
            actionProviderServiceImpl49);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl51 = mCRegistration50.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode52 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration50.setMode(registrationMode52);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider54 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF55 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl56 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl57 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl58 = mCServicesProviderNMF55
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl59 = mCServicesProviderNMF55
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF60 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl61 = mCServicesProviderNMF60
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl62 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl63 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl64 = mCServicesProviderNMF60
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF65 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl66 = mCServicesProviderNMF65
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl67 = mCServicesProviderNMF65
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF68 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl69 = mCServicesProviderNMF68
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl70 = mCServicesProviderNMF68
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl71 = mCServicesProviderNMF68
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl72 = mCServicesProviderNMF68
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration73 = new esa.mo.nmf.MCRegistration(cOMServicesProvider54,
            parameterProviderServiceImpl59, aggregationProviderServiceImpl64, alertProviderServiceImpl67,
            actionProviderServiceImpl72);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl74 = mCRegistration73.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl75 = mCRegistration73.aggregationService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode76 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration73.setMode(registrationMode76);
        mCRegistration50.setMode(registrationMode76);
        boolean boolean79 = doubleList2.contains((java.lang.Object) mCRegistration50);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl80 = mCRegistration50.actionService;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-5) + "'", int3.equals((-5)));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265083L + "'", long5.equals(281475010265083L));
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanStream19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(doubleSpliterator24);
        org.junit.Assert.assertNotNull(doubleItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl34);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl35);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl38);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl39);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl40);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl41);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl43);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl44);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl46);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl47);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl48);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl49);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl51);
        org.junit.Assert.assertTrue("'" + registrationMode52 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode52.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl56);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl57);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl58);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl59);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl61);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl62);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl63);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl64);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl66);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl67);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl69);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl70);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl71);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl72);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl74);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl75);
        org.junit.Assert.assertTrue("'" + registrationMode76 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode76.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl80);
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test483");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl21 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl22 = mCRegistration19.parameterService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl23 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCRegistration19.actionService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode25 = esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS;
        mCRegistration19.setMode(registrationMode25);
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl27 = mCRegistration19.aggregationService;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl28 = mCRegistration19.actionService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl21);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl22);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertTrue("'" + registrationMode25 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS + "'", registrationMode25.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl27);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl28);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test484");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl1 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl2 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl4 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl5 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl6 = mCServicesProviderNMF0
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl7 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl8 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl9 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl1);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl4);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl6);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl7);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl8);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl9);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test485");
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF0 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl1 = mCServicesProviderNMF0
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl2 = mCServicesProviderNMF0
            .getAlertService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl3 = mCServicesProviderNMF0
            .getAlertService();
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl1);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl2);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl3);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test486");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.Time time24 = new org.ccsds.moims.mo.mal.structures.Time();
        org.ccsds.moims.mo.mal.structures.Element element25 = time24.createElement();
        boolean boolean26 = longList22.equals((java.lang.Object) time24);
        java.lang.String[] strArray28 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29,
            strArray28);
        boolean boolean32 = strList29.add("hi!");
        java.lang.Object obj33 = null;
        boolean boolean34 = strList29.equals(obj33);
        java.util.ListIterator<java.lang.String> strItor35 = strList29.listIterator();
        int int36 = longList22.indexOf((java.lang.Object) strList29);
        java.util.Iterator<java.lang.String> strItor37 = strList29.iterator();
        org.ccsds.moims.mo.mal.structures.URIList uRIList39 = new org.ccsds.moims.mo.mal.structures.URIList(17);
        org.ccsds.moims.mo.mal.structures.UShort uShort40 = uRIList39.getAreaNumber();
        java.lang.Integer int41 = uRIList39.getTypeShortForm();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator42 = uRIList39.spliterator();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator43 = uRIList39.spliterator();
        org.ccsds.moims.mo.mal.structures.StringList stringList45 = new org.ccsds.moims.mo.mal.structures.StringList(
            100);
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = stringList45.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList48 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long49 = integerList48.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList51 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        org.ccsds.moims.mo.mal.structures.IntegerList integerList53 = new org.ccsds.moims.mo.mal.structures.IntegerList(
            (int) '4');
        java.lang.Long long54 = integerList53.getShortForm();
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray55 = new org.ccsds.moims.mo.mal.structures.IntegerList[]{integerList48,
                                                                                                                                 integerList51,
                                                                                                                                 integerList53};
        org.ccsds.moims.mo.mal.structures.IntegerList[] integerListArray56 = stringList45.toArray(integerListArray55);
        org.ccsds.moims.mo.mal.structures.UShort uShort57 = stringList45.getAreaNumber();
        java.lang.Integer[] intArray71 = new java.lang.Integer[]{4, 12, 1, 4, 10, 65535, 5, 0, 5, 0, 14, 13, (-1)};
        java.util.ArrayList<java.lang.Integer> intList72 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList72,
            intArray71);
        org.ccsds.moims.mo.mal.structures.Identifier identifier74 = new org.ccsds.moims.mo.mal.structures.Identifier();
        boolean boolean75 = intList72.contains((java.lang.Object) identifier74);
        java.lang.Integer int76 = identifier74.getTypeShortForm();
        boolean boolean77 = stringList45.equals((java.lang.Object) identifier74);
        int int78 = uRIList39.lastIndexOf((java.lang.Object) identifier74);
        uRIList39.clear();
        uRIList39.ensureCapacity((int) (short) 10);
        int int82 = strList29.lastIndexOf((java.lang.Object) uRIList39);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertNotNull(uShort40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-18) + "'", int41.equals((-18)));
        org.junit.Assert.assertNotNull(uRISpliterator42);
        org.junit.Assert.assertNotNull(uRISpliterator43);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 281475010265077L + "'", long49.equals(281475010265077L));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 281475010265077L + "'", long54.equals(281475010265077L));
        org.junit.Assert.assertNotNull(integerListArray55);
        org.junit.Assert.assertNotNull(integerListArray56);
        org.junit.Assert.assertNotNull(uShort57);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 6 + "'", int76.equals(6));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test487");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.Element element22 = floatList0.createElement();
        floatList0.clear();
        org.ccsds.moims.mo.mal.structures.LongList longList25 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 10);
        boolean boolean26 = floatList0.remove((java.lang.Object) (byte) 10);
        floatList0.trimToSize();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test488");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
            (int) (byte) 100);
        longList1.clear();
        java.util.stream.Stream<java.lang.Long> longStream3 = longList1.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList4 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj5 = uShortList4.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream6 = uShortList4.parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor7 = uShortList4.iterator();
        uShortList4.ensureCapacity((int) (byte) -1);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor10 = uShortList4.iterator();
        org.ccsds.moims.mo.mal.structures.Element element11 = uShortList4.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList12 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element13 = booleanList12.createElement();
        java.lang.Long long14 = booleanList12.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = booleanList12.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = booleanList12.getAreaVersion();
        boolean boolean17 = uShortList4.removeAll((java.util.Collection<java.lang.Boolean>) booleanList12);
        org.ccsds.moims.mo.mal.structures.ShortList shortList18 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.String[] strArray20 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21,
            strArray20);
        int int23 = strList21.size();
        java.lang.Boolean[] booleanArray26 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList27 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList27,
            booleanArray26);
        boolean boolean30 = booleanList27.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream31 = booleanList27.stream();
        boolean boolean32 = strList21.containsAll((java.util.Collection<java.lang.Boolean>) booleanList27);
        boolean boolean33 = shortList18.containsAll((java.util.Collection<java.lang.Boolean>) booleanList27);
        java.util.stream.Stream<java.lang.Short> shortStream34 = shortList18.parallelStream();
        org.ccsds.moims.mo.mal.structures.Element element35 = shortList18.createElement();
        esa.mo.nmf.NMFException nMFException37 = new esa.mo.nmf.NMFException("false");
        java.lang.Throwable[] throwableArray38 = nMFException37.getSuppressed();
        int int39 = shortList18.indexOf((java.lang.Object) throwableArray38);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList40 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        java.lang.String str41 = doubleList40.toString();
        java.lang.Boolean[] booleanArray43 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList44 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList44,
            booleanArray43);
        java.util.ListIterator<java.lang.Boolean> booleanItor47 = booleanList44.listIterator((int) (short) 1);
        boolean boolean48 = doubleList40.containsAll((java.util.Collection<java.lang.Boolean>) booleanList44);
        java.lang.Byte[] byteArray51 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList52 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList52,
            byteArray51);
        boolean boolean54 = byteList52.isEmpty();
        int int55 = byteList52.size();
        int int56 = booleanList44.indexOf((java.lang.Object) byteList52);
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList60 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList60,
            booleanArray59);
        java.util.Iterator<java.lang.Boolean> booleanItor62 = booleanList60.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream63 = booleanList60.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor64 = booleanList60.iterator();
        boolean boolean65 = byteList52.removeAll((java.util.Collection<java.lang.Boolean>) booleanList60);
        boolean boolean66 = shortList18.removeAll((java.util.Collection<java.lang.Boolean>) booleanList60);
        org.ccsds.moims.mo.mal.structures.Element element67 = shortList18.createElement();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList68 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        java.lang.Integer int69 = booleanList68.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element70 = booleanList68.createElement();
        boolean boolean71 = shortList18.containsAll((java.util.Collection<java.lang.Boolean>) booleanList68);
        org.ccsds.moims.mo.mal.structures.UShort uShort72 = booleanList68.getAreaNumber();
        boolean boolean73 = booleanList12.removeAll((java.util.Collection<java.lang.Boolean>) booleanList68);
        boolean boolean74 = longList1.containsAll((java.util.Collection<java.lang.Boolean>) booleanList68);
        org.junit.Assert.assertNotNull(longStream3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(uShortStream6);
        org.junit.Assert.assertNotNull(uShortItor7);
        org.junit.Assert.assertNotNull(uShortItor10);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 281475010265086L + "'", long14.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uOctet15);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shortStream34);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "[]" + "'", str41.equals("[]"));
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanItor47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(booleanItor62);
        org.junit.Assert.assertNotNull(booleanStream63);
        org.junit.Assert.assertNotNull(booleanItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(element67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-2) + "'", int69.equals((-2)));
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(uShort72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test489");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.Time time24 = new org.ccsds.moims.mo.mal.structures.Time();
        org.ccsds.moims.mo.mal.structures.Element element25 = time24.createElement();
        boolean boolean26 = longList22.equals((java.lang.Object) time24);
        java.lang.String[] strArray28 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29,
            strArray28);
        boolean boolean32 = strList29.add("hi!");
        java.lang.Object obj33 = null;
        boolean boolean34 = strList29.equals(obj33);
        java.util.ListIterator<java.lang.String> strItor35 = strList29.listIterator();
        int int36 = longList22.indexOf((java.lang.Object) strList29);
        org.ccsds.moims.mo.mal.structures.Element element37 = longList22.createElement();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList38 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int39 = uShortList38.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor40 = uShortList38.iterator();
        java.lang.Object[] objArray41 = uShortList38.toArray();
        uShortList38.clear();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream43 = uShortList38.stream();
        java.lang.String str44 = uShortList38.toString();
        org.ccsds.moims.mo.mal.structures.FloatList floatList45 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long46 = floatList45.getShortForm();
        floatList45.trimToSize();
        java.lang.String str48 = floatList45.toString();
        java.util.Spliterator<java.lang.Float> floatSpliterator49 = floatList45.spliterator();
        java.lang.Byte[] byteArray52 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList53 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList53,
            byteArray52);
        boolean boolean55 = byteList53.isEmpty();
        int int57 = byteList53.indexOf((java.lang.Object) 'a');
        int int59 = byteList53.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList62 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList62,
            booleanArray61);
        java.util.ListIterator<java.lang.Boolean> booleanItor65 = booleanList62.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream66 = booleanList62.parallelStream();
        boolean boolean68 = booleanList62.add((java.lang.Boolean) false);
        boolean boolean69 = byteList53.retainAll((java.util.Collection<java.lang.Boolean>) booleanList62);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList70 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj71 = uShortList70.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream72 = uShortList70
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor73 = uShortList70.iterator();
        boolean boolean74 = byteList53.equals((java.lang.Object) uShortItor73);
        org.ccsds.moims.mo.mal.structures.ShortList shortList75 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj76 = shortList75.clone();
        boolean boolean77 = byteList53.equals((java.lang.Object) shortList75);
        esa.mo.nmf.NMFException nMFException79 = new esa.mo.nmf.NMFException("-1");
        boolean boolean80 = byteList53.equals((java.lang.Object) nMFException79);
        byteList53.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList82 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element83 = booleanList82.createElement();
        java.lang.Long long84 = booleanList82.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort85 = booleanList82.getAreaNumber();
        java.lang.Integer int86 = booleanList82.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray87 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList82};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray88 = byteList53.toArray(booleanListArray87);
        boolean boolean89 = floatList45.remove((java.lang.Object) booleanListArray87);
        java.util.ArrayList<java.lang.Boolean>[] booleanListArray90 = uShortList38.toArray(
            (java.util.ArrayList<java.lang.Boolean>[]) booleanListArray87);
        java.util.AbstractCollection<java.lang.Boolean>[] booleanCollectionArray91 = longList22.toArray(
            (java.util.AbstractCollection<java.lang.Boolean>[]) booleanListArray90);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet92 = longList22.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort93 = longList22.getAreaNumber();
        java.util.stream.Stream<java.lang.Long> longStream94 = longList22.stream();
        java.lang.Object[] objArray95 = longList22.toArray();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-10) + "'", int39.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(uShortStream43);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "[]" + "'", str44.equals("[]"));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 281475010265084L + "'", long46.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "[]" + "'", str48.equals("[]"));
        org.junit.Assert.assertNotNull(floatSpliterator49);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(booleanItor65);
        org.junit.Assert.assertNotNull(booleanStream66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(uShortStream72);
        org.junit.Assert.assertNotNull(uShortItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(element83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 281475010265086L + "'", long84.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-2) + "'", int86.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray87);
        org.junit.Assert.assertNotNull(booleanListArray88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(booleanListArray90);
        org.junit.Assert.assertNotNull(booleanCollectionArray91);
        org.junit.Assert.assertNotNull(uOctet92);
        org.junit.Assert.assertNotNull(uShort93);
        org.junit.Assert.assertNotNull(longStream94);
        org.junit.Assert.assertNotNull(objArray95);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test490");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList();
        int int23 = floatList0.lastIndexOf((java.lang.Object) longList22);
        org.ccsds.moims.mo.mal.structures.Element element24 = longList22.createElement();
        java.util.Spliterator<java.lang.Long> longSpliterator25 = longList22.spliterator();
        java.lang.Long[] longArray30 = new java.lang.Long[]{10L, (-1L), (-1L), 10L};
        java.util.ArrayList<java.lang.Long> longList31 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList31,
            longArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = longList31.contains(obj33);
        org.ccsds.moims.mo.mal.structures.UInteger uInteger36 = new org.ccsds.moims.mo.mal.structures.UInteger(
            (long) (byte) 100);
        boolean boolean37 = longList31.contains((java.lang.Object) (byte) 100);
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList41 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList41,
            booleanArray40);
        java.util.Iterator<java.lang.Boolean> booleanItor43 = booleanList41.iterator();
        java.util.stream.Stream<java.lang.Boolean> booleanStream44 = booleanList41.stream();
        java.util.Iterator<java.lang.Boolean> booleanItor45 = booleanList41.iterator();
        boolean boolean46 = longList31.containsAll((java.util.Collection<java.lang.Boolean>) booleanList41);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList47 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int48 = uShortList47.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor49 = uShortList47.iterator();
        java.lang.Object[] objArray50 = uShortList47.toArray();
        uShortList47.clear();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet52 = uShortList47.getAreaVersion();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor54 = uShortList47.listIterator(0);
        org.ccsds.moims.mo.mal.structures.UShort uShort55 = uShortList47.getAreaNumber();
        boolean boolean56 = longList31.remove((java.lang.Object) uShortList47);
        java.lang.Double[] doubleArray60 = new java.lang.Double[]{1.0d, 0.0d, 10.0d};
        java.util.ArrayList<java.lang.Double> doubleList61 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList61,
            doubleArray60);
        java.lang.Boolean[] booleanArray65 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList66 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList66,
            booleanArray65);
        boolean boolean69 = booleanList66.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream70 = booleanList66.stream();
        int int71 = doubleList61.lastIndexOf((java.lang.Object) booleanStream70);
        int int73 = doubleList61.lastIndexOf((java.lang.Object) 10.0d);
        java.lang.Byte[] byteArray78 = new java.lang.Byte[]{(byte) -1, (byte) -1, (byte) 1, (byte) 1};
        java.util.ArrayList<java.lang.Byte> byteList79 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList79,
            byteArray78);
        boolean boolean82 = byteList79.add((java.lang.Byte) (byte) 10);
        java.lang.Object obj83 = byteList79.clone();
        int int84 = doubleList61.lastIndexOf(obj83);
        java.util.stream.Stream<java.lang.Double> doubleStream85 = doubleList61.stream();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList86 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element87 = booleanList86.createElement();
        java.lang.Long long88 = booleanList86.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet89 = booleanList86.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet90 = booleanList86.getAreaVersion();
        int int91 = doubleList61.indexOf((java.lang.Object) booleanList86);
        boolean boolean92 = longList31.retainAll((java.util.Collection<java.lang.Boolean>) booleanList86);
        boolean boolean93 = longList22.retainAll((java.util.Collection<java.lang.Boolean>) booleanList86);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(longSpliterator25);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanItor43);
        org.junit.Assert.assertNotNull(booleanStream44);
        org.junit.Assert.assertNotNull(booleanItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-10) + "'", int48.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(uOctet52);
        org.junit.Assert.assertNotNull(uShortItor54);
        org.junit.Assert.assertNotNull(uShort55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(booleanStream70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(doubleStream85);
        org.junit.Assert.assertNotNull(element87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 281475010265086L + "'", long88.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uOctet89);
        org.junit.Assert.assertNotNull(uOctet90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test491");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        floatList0.trimToSize();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test492");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int1 = uShortList0.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor2 = uShortList0.iterator();
        java.lang.Object[] objArray3 = uShortList0.toArray();
        boolean boolean5 = uShortList0.equals((java.lang.Object) 1);
        int int7 = uShortList0.lastIndexOf((java.lang.Object) 0);
        org.ccsds.moims.mo.mal.structures.ShortList shortList9 = new org.ccsds.moims.mo.mal.structures.ShortList(
            (int) (short) 0);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = shortList9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList11 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj12 = uShortList11.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream13 = uShortList11
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor14 = uShortList11.iterator();
        org.ccsds.moims.mo.mal.structures.FloatList floatList15 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long16 = floatList15.getShortForm();
        java.lang.String[] strArray18 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19,
            strArray18);
        int int21 = strList19.size();
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList25 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList25,
            booleanArray24);
        boolean boolean28 = booleanList25.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream29 = booleanList25.stream();
        boolean boolean30 = strList19.containsAll((java.util.Collection<java.lang.Boolean>) booleanList25);
        boolean boolean31 = floatList15.containsAll((java.util.Collection<java.lang.Boolean>) booleanList25);
        java.util.Spliterator<java.lang.Float> floatSpliterator32 = floatList15.spliterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = floatList15.getAreaNumber();
        java.lang.Object obj34 = null;
        boolean boolean35 = floatList15.equals(obj34);
        int int36 = uShortList11.indexOf(obj34);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream37 = uShortList11
            .parallelStream();
        org.ccsds.moims.mo.mal.structures.FloatList floatList38 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long39 = floatList38.getShortForm();
        floatList38.trimToSize();
        java.lang.String str41 = floatList38.toString();
        java.util.Spliterator<java.lang.Float> floatSpliterator42 = floatList38.spliterator();
        java.lang.Byte[] byteArray45 = new java.lang.Byte[]{(byte) 10, (byte) 100};
        java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList46,
            byteArray45);
        boolean boolean48 = byteList46.isEmpty();
        int int50 = byteList46.indexOf((java.lang.Object) 'a');
        int int52 = byteList46.lastIndexOf((java.lang.Object) "hi!");
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[]{true};
        java.util.ArrayList<java.lang.Boolean> booleanList55 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList55,
            booleanArray54);
        java.util.ListIterator<java.lang.Boolean> booleanItor58 = booleanList55.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.Boolean> booleanStream59 = booleanList55.parallelStream();
        boolean boolean61 = booleanList55.add((java.lang.Boolean) false);
        boolean boolean62 = byteList46.retainAll((java.util.Collection<java.lang.Boolean>) booleanList55);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList63 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Object obj64 = uShortList63.clone();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream65 = uShortList63
            .parallelStream();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor66 = uShortList63.iterator();
        boolean boolean67 = byteList46.equals((java.lang.Object) uShortItor66);
        org.ccsds.moims.mo.mal.structures.ShortList shortList68 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj69 = shortList68.clone();
        boolean boolean70 = byteList46.equals((java.lang.Object) shortList68);
        esa.mo.nmf.NMFException nMFException72 = new esa.mo.nmf.NMFException("-1");
        boolean boolean73 = byteList46.equals((java.lang.Object) nMFException72);
        byteList46.trimToSize();
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList75 = new org.ccsds.moims.mo.mal.structures.BooleanList();
        org.ccsds.moims.mo.mal.structures.Element element76 = booleanList75.createElement();
        java.lang.Long long77 = booleanList75.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort78 = booleanList75.getAreaNumber();
        java.lang.Integer int79 = booleanList75.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray80 = new org.ccsds.moims.mo.mal.structures.BooleanList[]{booleanList75};
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray81 = byteList46.toArray(booleanListArray80);
        boolean boolean82 = floatList38.remove((java.lang.Object) booleanListArray80);
        org.ccsds.moims.mo.mal.structures.BooleanList[] booleanListArray83 = uShortList11.toArray(booleanListArray80);
        java.util.List<java.lang.Boolean>[] booleanListArray84 = shortList9.toArray(
            (java.util.List<java.lang.Boolean>[]) booleanListArray83);
        boolean boolean85 = uShortList0.remove((java.lang.Object) booleanListArray84);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(uShortStream13);
        org.junit.Assert.assertNotNull(uShortItor14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281475010265084L + "'", long16.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanStream29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatSpliterator32);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(uShortStream37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 281475010265084L + "'", long39.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "[]" + "'", str41.equals("[]"));
        org.junit.Assert.assertNotNull(floatSpliterator42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(booleanItor58);
        org.junit.Assert.assertNotNull(booleanStream59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(uShortStream65);
        org.junit.Assert.assertNotNull(uShortItor66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 281475010265086L + "'", long77.equals(281475010265086L));
        org.junit.Assert.assertNotNull(uShort78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-2) + "'", int79.equals((-2)));
        org.junit.Assert.assertNotNull(booleanListArray80);
        org.junit.Assert.assertNotNull(booleanListArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(booleanListArray83);
        org.junit.Assert.assertNotNull(booleanListArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test493");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long1 = floatList0.getShortForm();
        java.lang.String[] strArray3 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        int int6 = strList4.size();
        java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList10,
            booleanArray9);
        boolean boolean13 = booleanList10.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream14 = booleanList10.stream();
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        boolean boolean16 = floatList0.containsAll((java.util.Collection<java.lang.Boolean>) booleanList10);
        java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList0.spliterator();
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray20 = nMFException19.getSuppressed();
        int int21 = floatList0.lastIndexOf((java.lang.Object) throwableArray20);
        java.lang.Integer int22 = floatList0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element23 = floatList0.createElement();
        org.ccsds.moims.mo.mal.structures.Identifier identifier24 = new org.ccsds.moims.mo.mal.structures.Identifier();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = identifier24.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[]{};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean28 = java.util.Collections.addAll(
            (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[]{false, true};
        java.util.ArrayList<java.lang.Boolean> booleanList32 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList32,
            booleanArray31);
        java.util.Iterator<java.lang.Boolean> booleanItor34 = booleanList32.iterator();
        boolean boolean35 = uRIList27.retainAll((java.util.Collection<java.lang.Boolean>) booleanList32);
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList39 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList39,
            booleanArray38);
        boolean boolean42 = booleanList39.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream43 = booleanList39.stream();
        boolean boolean44 = uRIList27.retainAll((java.util.Collection<java.lang.Boolean>) booleanList39);
        uRIList27.ensureCapacity(5);
        boolean boolean47 = identifier24.equals((java.lang.Object) uRIList27);
        int int48 = uRIList27.size();
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList52 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList52,
            booleanArray51);
        boolean boolean55 = booleanList52.add((java.lang.Boolean) true);
        boolean boolean56 = uRIList27.equals((java.lang.Object) booleanList52);
        boolean boolean57 = floatList0.removeAll((java.util.Collection<java.lang.Boolean>) booleanList52);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = floatList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element59 = floatList0.createElement();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265084L + "'", long1.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatSpliterator17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22.equals((-4)));
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(uOctet25);
        org.junit.Assert.assertNotNull(uRIArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(booleanItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(uOctet58);
        org.junit.Assert.assertNotNull(element59);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test494");
        org.ccsds.moims.mo.mal.structures.ShortList shortList0 = new org.ccsds.moims.mo.mal.structures.ShortList();
        java.lang.Object obj1 = shortList0.clone();
        java.util.stream.Stream<java.lang.Short> shortStream2 = shortList0.parallelStream();
        java.lang.String str3 = shortList0.toString();
        java.util.ListIterator<java.lang.Short> shortItor5 = shortList0.listIterator(0);
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider6 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF7 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl8 = mCServicesProviderNMF7
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF7
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF7
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl11 = mCServicesProviderNMF7
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF12 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl13 = mCServicesProviderNMF12
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl14 = mCServicesProviderNMF12
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl15 = mCServicesProviderNMF12
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF12
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF17 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl18 = mCServicesProviderNMF17
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl19 = mCServicesProviderNMF17
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF20 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl21 = mCServicesProviderNMF20
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl22 = mCServicesProviderNMF20
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl23 = mCServicesProviderNMF20
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl24 = mCServicesProviderNMF20
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration25 = new esa.mo.nmf.MCRegistration(cOMServicesProvider6,
            parameterProviderServiceImpl11, aggregationProviderServiceImpl16, alertProviderServiceImpl19,
            actionProviderServiceImpl24);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl26 = mCRegistration25.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl27 = mCRegistration25.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider28 = mCRegistration25.comServices;
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl29 = mCRegistration25.actionService;
        int int30 = shortList0.lastIndexOf((java.lang.Object) mCRegistration25);
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCRegistration25.aggregationService;
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(shortStream2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[]" + "'", str3.equals("[]"));
        org.junit.Assert.assertNotNull(shortItor5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl11);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl13);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl14);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl18);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl19);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl21);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl22);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl23);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl24);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl27);
        org.junit.Assert.assertNull(cOMServicesProvider28);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test495");
        java.lang.Throwable throwable1 = null;
        esa.mo.nmf.NMFException nMFException2 = new esa.mo.nmf.NMFException("281474993487884", throwable1);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test496");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl20 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl21 = mCRegistration19.aggregationService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider22 = mCRegistration19.comServices;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider23 = mCRegistration19.comServices;
        org.ccsds.moims.mo.mal.structures.ElementList elementList24 = null;
        try {
            org.ccsds.moims.mo.com.structures.ObjectIdList objectIdList25 = mCRegistration19.registerConversions(
                elementList24);
            org.junit.Assert.fail(
                "Expected exception of type esa.mo.nmf.NMFException; message: The conversions object cannot be null!");
        } catch (esa.mo.nmf.NMFException e) {
        }
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl20);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl21);
        org.junit.Assert.assertNull(cOMServicesProvider22);
        org.junit.Assert.assertNull(cOMServicesProvider23);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test497");
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider0 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF1 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl2 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl3 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl4 = mCServicesProviderNMF1
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl5 = mCServicesProviderNMF1
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF6 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl7 = mCServicesProviderNMF6
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl8 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl9 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl10 = mCServicesProviderNMF6
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF11 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl12 = mCServicesProviderNMF11
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl13 = mCServicesProviderNMF11
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF14 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl15 = mCServicesProviderNMF14
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl16 = mCServicesProviderNMF14
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl17 = mCServicesProviderNMF14
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl18 = mCServicesProviderNMF14
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration19 = new esa.mo.nmf.MCRegistration(cOMServicesProvider0,
            parameterProviderServiceImpl5, aggregationProviderServiceImpl10, alertProviderServiceImpl13,
            actionProviderServiceImpl18);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl20 = mCRegistration19.parameterService;
        esa.mo.com.impl.util.COMServicesProvider cOMServicesProvider21 = null;
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF22 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl23 = mCServicesProviderNMF22
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl24 = mCServicesProviderNMF22
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl25 = mCServicesProviderNMF22
            .getAggregationService();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl26 = mCServicesProviderNMF22
            .getParameterService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF27 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl28 = mCServicesProviderNMF27
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl29 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl30 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl31 = mCServicesProviderNMF27
            .getAggregationService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF32 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl33 = mCServicesProviderNMF32
            .getParameterService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl34 = mCServicesProviderNMF32
            .getAlertService();
        esa.mo.nmf.MCServicesProviderNMF mCServicesProviderNMF35 = new esa.mo.nmf.MCServicesProviderNMF();
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl36 = mCServicesProviderNMF35
            .getParameterService();
        esa.mo.mc.impl.provider.AggregationProviderServiceImpl aggregationProviderServiceImpl37 = mCServicesProviderNMF35
            .getAggregationService();
        esa.mo.mc.impl.provider.AlertProviderServiceImpl alertProviderServiceImpl38 = mCServicesProviderNMF35
            .getAlertService();
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl39 = mCServicesProviderNMF35
            .getActionService();
        esa.mo.nmf.MCRegistration mCRegistration40 = new esa.mo.nmf.MCRegistration(cOMServicesProvider21,
            parameterProviderServiceImpl26, aggregationProviderServiceImpl31, alertProviderServiceImpl34,
            actionProviderServiceImpl39);
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl41 = mCRegistration40.parameterService;
        esa.mo.nmf.MCRegistration.RegistrationMode registrationMode42 = esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS;
        mCRegistration40.setMode(registrationMode42);
        mCRegistration19.setMode(registrationMode42);
        esa.mo.mc.impl.provider.ActionProviderServiceImpl actionProviderServiceImpl45 = mCRegistration19.actionService;
        esa.mo.mc.impl.provider.ParameterProviderServiceImpl parameterProviderServiceImpl46 = mCRegistration19.parameterService;
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl2);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl3);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl4);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl5);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl7);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl8);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl9);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl10);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl12);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl13);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl15);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl16);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl17);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl18);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl20);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl23);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl24);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl25);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl26);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl28);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl29);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl30);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl31);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl33);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl34);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl36);
        org.junit.Assert.assertNotNull(aggregationProviderServiceImpl37);
        org.junit.Assert.assertNotNull(alertProviderServiceImpl38);
        org.junit.Assert.assertNotNull(actionProviderServiceImpl39);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl41);
        org.junit.Assert.assertTrue("'" + registrationMode42 + "' != '" +
            esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS + "'", registrationMode42.equals(
                esa.mo.nmf.MCRegistration.RegistrationMode.DONT_UPDATE_IF_EXISTS));
        org.junit.Assert.assertNotNull(actionProviderServiceImpl45);
        org.junit.Assert.assertNotNull(parameterProviderServiceImpl46);
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test498");
        esa.mo.nmf.NMFException nMFException0 = new esa.mo.nmf.NMFException();
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException();
        nMFException0.addSuppressed((java.lang.Throwable) nMFException1);
        esa.mo.nmf.NMFException nMFException4 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException7 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray8 = nMFException7.getSuppressed();
        java.lang.Throwable[] throwableArray9 = nMFException7.getSuppressed();
        esa.mo.nmf.NMFException nMFException10 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException7);
        java.lang.String str11 = nMFException7.toString();
        nMFException4.addSuppressed((java.lang.Throwable) nMFException7);
        esa.mo.nmf.NMFException nMFException14 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray15 = nMFException14.getSuppressed();
        java.lang.Throwable[] throwableArray16 = nMFException14.getSuppressed();
        nMFException4.addSuppressed((java.lang.Throwable) nMFException14);
        java.lang.String str18 = nMFException4.toString();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException4);
        esa.mo.nmf.NMFException nMFException22 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray23 = nMFException22.getSuppressed();
        java.lang.Throwable[] throwableArray24 = nMFException22.getSuppressed();
        esa.mo.nmf.NMFException nMFException26 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray27 = nMFException26.getSuppressed();
        nMFException22.addSuppressed((java.lang.Throwable) nMFException26);
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException(
            "[281475010265077, 281474993487884, 281475010265073, 281475010265083, 281475010265084, -1, 281474993487884, 281474993487874, 281475010265070, 281474993487888, 281474993487887, 281474993487886, 100, 281474993487885]",
            (java.lang.Throwable) nMFException22);
        java.lang.String str30 = nMFException22.toString();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList32 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Integer int33 = uShortList32.getTypeShortForm();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor34 = uShortList32.iterator();
        java.lang.Object[] objArray35 = uShortList32.toArray();
        boolean boolean37 = uShortList32.equals((java.lang.Object) 1);
        esa.mo.nmf.NMFException nMFException40 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray41 = nMFException40.getSuppressed();
        java.lang.Throwable[] throwableArray42 = nMFException40.getSuppressed();
        esa.mo.nmf.NMFException nMFException44 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray45 = nMFException44.getSuppressed();
        nMFException40.addSuppressed((java.lang.Throwable) nMFException44);
        java.lang.Throwable[] throwableArray47 = nMFException44.getSuppressed();
        java.lang.Throwable[] throwableArray48 = nMFException44.getSuppressed();
        esa.mo.nmf.NMFException nMFException49 = new esa.mo.nmf.NMFException("[]",
            (java.lang.Throwable) nMFException44);
        int int50 = uShortList32.indexOf((java.lang.Object) nMFException49);
        esa.mo.nmf.NMFException nMFException51 = new esa.mo.nmf.NMFException("false",
            (java.lang.Throwable) nMFException49);
        nMFException22.addSuppressed((java.lang.Throwable) nMFException49);
        nMFException1.addSuppressed((java.lang.Throwable) nMFException22);
        java.lang.String str54 = nMFException1.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str11.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "esa.mo.nmf.NMFException: -1" + "'", str18.equals(
            "esa.mo.nmf.NMFException: -1"));
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str30.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-10) + "'", int33.equals((-10)));
        org.junit.Assert.assertNotNull(uShortItor34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "esa.mo.nmf.NMFException" + "'", str54.equals(
            "esa.mo.nmf.NMFException"));
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test499");
        org.ccsds.moims.mo.mal.structures.Time time1 = new org.ccsds.moims.mo.mal.structures.Time((long) (byte) -1);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = time1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = time1.getServiceNumber();
        java.lang.Integer int4 = time1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element5 = time1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = time1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.FloatList floatList7 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.lang.Long long8 = floatList7.getShortForm();
        java.lang.String[] strArray10 = new java.lang.String[]{"hi!"};
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11,
            strArray10);
        int int13 = strList11.size();
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[]{true, false};
        java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList17,
            booleanArray16);
        boolean boolean20 = booleanList17.add((java.lang.Boolean) true);
        java.util.stream.Stream<java.lang.Boolean> booleanStream21 = booleanList17.stream();
        boolean boolean22 = strList11.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        boolean boolean23 = floatList7.containsAll((java.util.Collection<java.lang.Boolean>) booleanList17);
        java.util.Spliterator<java.lang.Float> floatSpliterator24 = floatList7.spliterator();
        esa.mo.nmf.NMFException nMFException26 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray27 = nMFException26.getSuppressed();
        int int28 = floatList7.lastIndexOf((java.lang.Object) throwableArray27);
        java.lang.Integer int29 = floatList7.getTypeShortForm();
        java.util.ListIterator<java.lang.Float> floatItor30 = floatList7.listIterator();
        boolean boolean31 = time1.equals((java.lang.Object) floatList7);
        java.util.Spliterator<java.lang.Float> floatSpliterator32 = floatList7.spliterator();
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 16 + "'", int4.equals(16));
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265084L + "'", long8.equals(281475010265084L));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatSpliterator24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-4) + "'", int29.equals((-4)));
        org.junit.Assert.assertNotNull(floatItor30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatSpliterator32);
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test500");
        esa.mo.nmf.NMFException nMFException1 = new esa.mo.nmf.NMFException("-1");
        esa.mo.nmf.NMFException nMFException4 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray5 = nMFException4.getSuppressed();
        java.lang.Throwable[] throwableArray6 = nMFException4.getSuppressed();
        esa.mo.nmf.NMFException nMFException7 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException4);
        java.lang.String str8 = nMFException4.toString();
        nMFException1.addSuppressed((java.lang.Throwable) nMFException4);
        esa.mo.nmf.NMFException nMFException12 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray13 = nMFException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = nMFException12.getSuppressed();
        esa.mo.nmf.NMFException nMFException16 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray17 = nMFException16.getSuppressed();
        nMFException12.addSuppressed((java.lang.Throwable) nMFException16);
        esa.mo.nmf.NMFException nMFException19 = new esa.mo.nmf.NMFException("", (java.lang.Throwable) nMFException16);
        java.lang.Throwable[] throwableArray20 = nMFException16.getSuppressed();
        nMFException4.addSuppressed((java.lang.Throwable) nMFException16);
        esa.mo.nmf.NMFException nMFException25 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray26 = nMFException25.getSuppressed();
        java.lang.Throwable[] throwableArray27 = nMFException25.getSuppressed();
        esa.mo.nmf.NMFException nMFException29 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray30 = nMFException29.getSuppressed();
        nMFException25.addSuppressed((java.lang.Throwable) nMFException29);
        java.lang.Throwable[] throwableArray32 = nMFException29.getSuppressed();
        java.lang.Throwable[] throwableArray33 = nMFException29.getSuppressed();
        esa.mo.nmf.NMFException nMFException34 = new esa.mo.nmf.NMFException("[]",
            (java.lang.Throwable) nMFException29);
        esa.mo.nmf.NMFException nMFException37 = new esa.mo.nmf.NMFException("0");
        java.lang.Throwable[] throwableArray38 = nMFException37.getSuppressed();
        java.lang.Throwable[] throwableArray39 = nMFException37.getSuppressed();
        esa.mo.nmf.NMFException nMFException40 = new esa.mo.nmf.NMFException("[hi!, hi!]",
            (java.lang.Throwable) nMFException37);
        nMFException34.addSuppressed((java.lang.Throwable) nMFException37);
        esa.mo.nmf.NMFException nMFException42 = new esa.mo.nmf.NMFException("esa.mo.nmf.NMFException: 0",
            (java.lang.Throwable) nMFException37);
        java.lang.Throwable[] throwableArray43 = nMFException37.getSuppressed();
        java.lang.Throwable[] throwableArray44 = nMFException37.getSuppressed();
        nMFException4.addSuppressed((java.lang.Throwable) nMFException37);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "esa.mo.nmf.NMFException: 0" + "'", str8.equals(
            "esa.mo.nmf.NMFException: 0"));
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray44);
    }
}
